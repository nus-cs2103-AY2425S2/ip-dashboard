[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"         _                   _           _            ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"        (_)                 / |_        (_)           ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":" .---.  __   _ .--.   .--. `| |-\u0027.---.  __   _ .--.   ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"/ /__\\\\[  | [ `.-. | ( (`\\\\] | | / /__\\\\[  | [ `.-. |  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"| \\\\__., | |  | | | |  `\u0027.\u0027. | |,| \\\\__., | |  | | | |  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":" \u0027.__.\u0027[___][___||__][\\\\__) )\\__/ \u0027.__.\u0027[___][___||__]  v1.1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"# üß† Genius Task Management ü§ñ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"Guten tag! Welcome to **Einstein**, your intelligent task management assistant! Einstein is a chatbot designed to help you manage your tasks efficiently. Whether you need to add tasks, mark them as done, or delete them, Einstein is here to make your life easier. With a friendly interface and powerful features, Einstein ensures that you stay organized and productive.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"## üöÄ Features","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"Einstein supports the following commands and features:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"### 1. Add Tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"#### üìù Todo: Add a simple task without a deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"#### ‚è∞ Deadline: Add a task with a deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"deadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"#### üóìÔ∏è Event: Add a task with a start and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"### 2. üìã List Tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"View all your tasks in a neatly formatted list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"### 3. ‚úÖ Mark Tasks as Done","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"Mark a task as completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"### 4. ‚ùå Mark Tasks as Not Done","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"Mark a task as not completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"### 5. üóëÔ∏è Delete Tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"Remove a task from your list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"delete 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"### 6. üîÅ Help","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"qilstiano"},"content":"Display a list of all available commands and their usage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"qilstiano"},"content":"help","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"qilstiano"},"content":"help","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"qilstiano"},"content":"### 7. üö™ Exit","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"qilstiano"},"content":"Exit the chatbot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"qilstiano"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"qilstiano"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"qilstiano"},"content":"## üõ†Ô∏è Getting Started","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"qilstiano"},"content":"### Prerequisites","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"qilstiano"},"content":"- **Java Development Kit (JDK):** Ensure you have JDK installed on your system. You can download it [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"qilstiano"},"content":"- **Command Line Interface (CLI):** Einstein runs in the terminal or command prompt.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"qilstiano"},"content":"### Running Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"qilstiano"},"content":"#### Download the Code:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"qilstiano"},"content":"Clone or download the repository containing the Einstein chatbot code.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"qilstiano"},"content":"#### Navigate to the Directory:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"qilstiano"},"content":"Open your terminal or command prompt and navigate to the directory where the code is located.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"qilstiano"},"content":"#### Compile the Code:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"qilstiano"},"content":"javac Einstein.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"qilstiano"},"content":"#### Run the Chatbot:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"qilstiano"},"content":"java Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"qilstiano"},"content":"#### Interact with Einstein:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"qilstiano"},"content":"Once the chatbot starts, you can begin typing commands to manage your tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"qilstiano"},"content":"## üéØ Example Usage","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"qilstiano"},"content":"### Adding Tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"qilstiano"},"content":"\u003e todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"qilstiano"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"qilstiano"},"content":"  [T][ ] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"qilstiano"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"qilstiano"},"content":"### Listing Tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"qilstiano"},"content":"\u003e list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"qilstiano"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"qilstiano"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"qilstiano"},"content":"### Marking a Task as Done","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"qilstiano"},"content":"\u003e mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"qilstiano"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"qilstiano"},"content":"  [T][X] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"qilstiano"},"content":"### Deleting a Task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"qilstiano"},"content":"\u003e delete 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"qilstiano"},"content":"Noted. I\u0027ve atomized this task:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"qilstiano"},"content":"  [T][X] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"qilstiano"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"qilstiano"},"content":"### Getting Help","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"qilstiano"},"content":"\u003e help","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"qilstiano"},"content":"Here are the commands I understand:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"qilstiano"},"content":"...","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"qilstiano"},"content":"## üö® Error Handling","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"qilstiano"},"content":"Einstein is designed to handle errors gracefully. If you enter an invalid command or task number, Einstein will provide a clear error message to guide you.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"qilstiano"},"content":"### Examples of Error Handling","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"qilstiano"},"content":"#### Invalid Command","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"qilstiano"},"content":"\u003e blah","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"qilstiano"},"content":"ARGH! I do not understand you, which is weird,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"qilstiano"},"content":"because I usually understand most things. Invalid command!","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"qilstiano"},"content":"#### Blank Task Number","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"qilstiano"},"content":"\u003e delete","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"qilstiano"},"content":"Nein! You must provide a task number to delete.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"qilstiano"},"content":"Use: delete \u003ctask number\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"qilstiano"},"content":"#### Invalid Task Number","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"qilstiano"},"content":"\u003e delete 999","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"qilstiano"},"content":"Invalid task number! Please give me something valid!","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"qilstiano"},"content":"## üåü License","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"qilstiano"},"content":"This project is licensed under the **MIT License**. See the LICENSE file for details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"qilstiano"},"content":"## üôè Acknowledgments","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"qilstiano"},"content":"- **DeepSeek:** For providing the gradient text styling and ASCII art as well as for writing this README!","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"qilstiano"},"content":"- **Java:** For making this project possible with its robust and versatile programming language.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"qilstiano"},"content":"Enjoy using Einstein to manage your tasks efficiently! If you have any questions or feedback, feel free to reach out. üöÄ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"qilstiano":271,"-":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"compileJava {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"    mainClass.set(\"einstein.gui.Launcher\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"checkstyle {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    archiveBaseName \u003d \"Einstein\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"qilstiano":26,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"T | 0 | help","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":1}},{"path":"data/einstein.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"T | 1 | change underwear","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"D | 0 | wash underwear | 23/10/2025 1900","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"E | 0 | underwear competition | 2/11/2025 1400 | 2/11/2025 1800","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"qilstiano":3}},{"path":"docs/AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"# AI References - Einstein Chatbot","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"This document outlines how AI was utilized in the development of the Einstein chatbot project.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"For brevity, AI refers to online LLMs such as Deepseek, ChatGPT and Perplexity. ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"## AI-Assisted Contributions","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"AI tools were used selectively to enhance productivity and streamline development while ensuring human oversight and refinement. The specific areas where AI provided assistance include:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"### 1. Documentation Generation","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"- AI was used to generate Javadoc comments for certain methods.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"- The generated documentation was reviewed and edited for accuracy and clarity.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"### 2. README Formatting","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"- AI assisted in formatting the `README.md` file for better readability and structure.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"- The content itself was written and curated manually, with AI helping to refine markdown styling.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"### 3. Debugging Assistance (Last Resort)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"- AI was consulted as a debugging companion only after other troubleshooting methods were exhausted.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"- Solutions suggested by AI were analyzed before implementation to ensure correctness and security.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"### 4. Assertion Writing","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"- AI was used to generate assertions for test cases.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"- Relevant assertions were reviewed, edited, and slotted into the codebase accordingly.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"## Human Oversight and Finalization","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"While AI provided assistance in the areas mentioned above, all outputs were critically reviewed, modified where necessary, and integrated manually to ensure the quality and correctness of the final implementation.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"This document serves as a reference for transparency regarding the use of AI in this project.","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"qilstiano":31}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"         _                   _           _            ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"        (_)                 / |_        (_)           ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":" .---.  __   _ .--.   .--. `| |-\u0027.---.  __   _ .--.   ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"/ /__\\\\[  | [ `.-. | ( (`\\\\] | | / /__\\\\[  | [ `.-. |  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"| \\\\__., | |  | | | |  `\u0027.\u0027. | |,| \\\\__., | |  | | | |  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" \u0027.__.\u0027[___][___||__][\\\\__) )\\__/ \u0027.__.\u0027[___][___||__]  v0.2","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"# üß† Genius Task Management ü§ñ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"Guten tag! Welcome to **Einstein**, your intelligent task management assistant! Einstein is a chatbot designed to help you manage your tasks efficiently. Whether you need to add tasks, mark them as done, or delete them, Einstein is here to make your life easier. With a friendly interface and powerful features, Einstein ensures that you stay organized and productive.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"## üöÄ Features","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"Einstein supports the following commands and features:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"### 1. Add Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"#### üìù Todo: Add a simple task without a deadline.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"todo read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"#### ‚è∞ Deadline: Add a task with a deadline.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"deadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"#### üóìÔ∏è Event: Add a task with a start and end time.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"### 2. üìã List Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"View all your tasks in a neatly formatted list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"### 3. ‚úÖ Mark Tasks as Done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"Mark a task as completed.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"mark 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"### 4. ‚ùå Mark Tasks as Not Done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"Mark a task as not completed.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"unmark 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"### 5. üóëÔ∏è Delete Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"Remove a task from your list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"delete 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"qilstiano"},"content":"### 6. üè∑Ô∏è Tag Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"qilstiano"},"content":"Add a tag to a task for better organization.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"qilstiano"},"content":"tag \u003ctask number\u003e \u003ctag\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"qilstiano"},"content":"tag 1 fun","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"qilstiano"},"content":"### 7. üö´ Untag Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"qilstiano"},"content":"Remove a tag from a task.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"qilstiano"},"content":"untag \u003ctask number\u003e \u003ctag\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"qilstiano"},"content":"untag 1 fun","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"qilstiano"},"content":"### 8. üéØ Set Task Priority","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"qilstiano"},"content":"Assign a priority level (`high`, `medium`, `low`) to a task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"qilstiano"},"content":"priority \u003ctask number\u003e \u003chigh|medium|low\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"qilstiano"},"content":"priority 1 high","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"qilstiano"},"content":"### 9. üîÅ Help","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"qilstiano"},"content":"Display a list of all available commands and their usage.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"qilstiano"},"content":"help","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"qilstiano"},"content":"help","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"qilstiano"},"content":"### 10. üö™ Exit","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"qilstiano"},"content":"Exit the chatbot.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"qilstiano"},"content":"**Syntax:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"qilstiano"},"content":"bye","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"qilstiano"},"content":"**Example:**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"qilstiano"},"content":"bye","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"qilstiano"},"content":"## üñºÔ∏è User Interface","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"qilstiano"},"content":"Here‚Äôs a screenshot of Einstein in action:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"qilstiano"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"qilstiano"},"content":"## üõ†Ô∏è Getting Started","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"qilstiano"},"content":"### Prerequisites","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"qilstiano"},"content":"- **Java Development Kit (JDK):** Ensure you have JDK installed on your system. You can download it [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"qilstiano"},"content":"- **Command Line Interface (CLI):** Einstein runs in the terminal or command prompt.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"qilstiano"},"content":"### Running Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"qilstiano"},"content":"#### Download the Code:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"qilstiano"},"content":"Clone or download the repository containing the Einstein chatbot code.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"qilstiano"},"content":"#### Navigate to the Directory:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"qilstiano"},"content":"Open your terminal or command prompt and navigate to the directory where the code is located.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"qilstiano"},"content":"#### Compile the Code:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"qilstiano"},"content":"javac Einstein.java","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"qilstiano"},"content":"#### Run the Chatbot:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"qilstiano"},"content":"java Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"qilstiano"},"content":"#### Interact with Einstein:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"qilstiano"},"content":"Once the chatbot starts, you can begin typing commands to manage your tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"qilstiano"},"content":"## üéØ Example Usage","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"qilstiano"},"content":"### Adding Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"qilstiano"},"content":"\u003e todo read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"qilstiano"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"qilstiano"},"content":"  [T][ ] read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"qilstiano"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"qilstiano"},"content":"### Listing Tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"qilstiano"},"content":"\u003e list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"qilstiano"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"qilstiano"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"qilstiano"},"content":"### Marking a Task as Done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"qilstiano"},"content":"\u003e mark 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"qilstiano"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"qilstiano"},"content":"  [T][X] read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"qilstiano"},"content":"### Deleting a Task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"qilstiano"},"content":"\u003e delete 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"qilstiano"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"qilstiano"},"content":"  [T][X] read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"qilstiano"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"qilstiano"},"content":"### Tagging a Task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"qilstiano"},"content":"\u003e tag 1 fun","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"qilstiano"},"content":"Tag added: fun to task [T][X] read book #fun","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"qilstiano"},"content":"### Setting Task Priority","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"qilstiano"},"content":"\u003e priority 1 high","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"qilstiano"},"content":"Priority set to HIGH for task: [T][X] read book #fun [Priority: HIGH]","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"qilstiano"},"content":"### Getting Help","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"qilstiano"},"content":"\u003e help","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"qilstiano"},"content":"Here are the commands I understand:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"qilstiano"},"content":"...","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"qilstiano"},"content":"## üö® Error Handling","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"qilstiano"},"content":"Einstein is designed to handle errors gracefully. If you enter an invalid command or task number, Einstein will provide a clear error message to guide you.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"qilstiano"},"content":"### Examples of Error Handling","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"qilstiano"},"content":"#### Invalid Command","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"qilstiano"},"content":"\u003e blah","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"qilstiano"},"content":"ARGH! I do not understand you, which is weird,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"qilstiano"},"content":"because I usually understand most things. Invalid command!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"qilstiano"},"content":"#### Blank Task Number","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"qilstiano"},"content":"\u003e delete","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"qilstiano"},"content":"Nein! You must provide a task number to delete.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"qilstiano"},"content":"Use: delete \u003ctask number\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"qilstiano"},"content":"#### Invalid Task Number","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"qilstiano"},"content":"```bash","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"qilstiano"},"content":"\u003e delete 999","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"qilstiano"},"content":"Einstein","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"qilstiano"},"content":"Invalid task number! Please give me something valid!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"qilstiano"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"qilstiano"},"content":"## üåü License","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"qilstiano"},"content":"This project is licensed under the **MIT License**. See the LICENSE file for details.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"qilstiano"},"content":"## üôè Acknowledgments","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"qilstiano"},"content":"- **DeepSeek:** For providing the gradient text styling and ASCII art as well as for writing this README!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"qilstiano"},"content":"- **Java:** For making this project possible with its robust and versatile programming language.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"qilstiano"},"content":"Enjoy using Einstein to manage your tasks efficiently! If you have any questions or feedback, feel free to reach out. üöÄ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"qilstiano"},"content":"---","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"qilstiano":325,"-":26}},{"path":"src/main/java/einstein/Einstein.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.command.Command;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.parser.Parser;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" * The main class for the Einstein task management application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"public class Einstein {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    private boolean welcomeShown \u003d false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new Einstein instance.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    public Einstein(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        } catch (EinsteinException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"     * Runs the main loop of the Einstein chatbot.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"     * Continuously reads user input, executes commands, and displays results until exit.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"    public void run() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        if (!welcomeShown) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"            welcomeShown \u003d true;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"            ui.showWelcome();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"            try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"                assert fullCommand !\u003d null \u0026\u0026 !fullCommand.isEmpty() : \"Command should not be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"                String result \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"                assert result !\u003d null : \"Command execution result should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"            } catch (EinsteinException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"        assert input !\u003d null \u0026\u0026 !input.isEmpty() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"            assert response !\u003d null : \"Response should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"            return response;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"        } catch (EinsteinException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"        new Einstein(\"data/einstein.txt\").run();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":87}},{"path":"src/main/java/einstein/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"// Imports for Date and Time","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":" * Represents a command to add a deadline task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    private String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new AddDeadlineCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the command format is invalid or the date/time is improperly formatted.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    public AddDeadlineCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"deadline\") : \"Command should start with \u0027deadline\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        String[] parts \u003d parseCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"        validateParts(parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        initializeFields(parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    private String[] parseCommand(String fullCommand) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        return fullCommand.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    private void validateParts(String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        if (isInvalidFormat(parts)) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid deadline format! Use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    private boolean isInvalidFormat(String[] parts) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        return parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"    private void initializeFields(String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        this.by \u003d parseDateTime(parts[1].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        assert this.description !\u003d null \u0026\u0026 !this.description.isEmpty() : \"Description should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     * Parses the date and time string into a LocalDateTime object.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"     * @param dateTimeStr The date and time string to parse.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the date/time format is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"        assert dateTimeStr !\u003d null \u0026\u0026 !dateTimeStr.isEmpty() : \"Date/time string should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"            return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid date/time format! Use: dd/MM/yyyy HHmm (e.g., 2/12/2019 1800)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"     * Executes the add deadline command, adding a new deadline task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"     * @return A string confirming the addition of the new deadline task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in adding the task or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"        int originalTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTaskCount() \u003d\u003d originalTaskCount + 1 : \"Task count should increase by 1\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTaskAdded(task, tasks.getTaskCount());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null \u0026\u0026 !result.isEmpty() : \"Result string should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"     * @return false, as adding a deadline task does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":107}},{"path":"src/main/java/einstein/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"// Imports for Date and Time","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":" * Represents a command to add an event task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    private String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new AddEventCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the command format is invalid or the date/time is improperly formatted.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    public AddEventCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"event\") : \"Command should start with \u0027event\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"        String[] parts \u003d parseCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        validateParts(parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"        initializeFields(parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"    private String[] parseCommand(String fullCommand) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        return fullCommand.substring(6).split(\"/from|/to\", 3);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    private void validateParts(String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        if (isInvalidFormat(parts)) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid event format! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"    private boolean isInvalidFormat(String[] parts) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        return parts.length \u003c 3","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"                || parts[0].trim().isEmpty()","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"                || parts[1].trim().isEmpty()","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"                || parts[2].trim().isEmpty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    private void initializeFields(String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        this.from \u003d parseDateTime(parts[1].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"        this.to \u003d parseDateTime(parts[2].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        assert this.description !\u003d null \u0026\u0026 !this.description.isEmpty() : \"Description should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        assert this.from !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        assert this.to !\u003d null : \"End time should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        assert !this.to.isBefore(this.from) : \"End time should not be before start time\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"     * Parses the date and time string into a LocalDateTime object.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"     * @param dateTimeStr The date and time string to parse.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the date/time format is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"            assert parsedDateTime !\u003d null : \"Parsed date/time should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"            return parsedDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid date/time format! Use: dd/MM/yyyy HHmm (e.g., 2/12/2019 1800)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"     * Executes the add event command, adding a new event task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"     * @return A string confirming the addition of the new event task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in adding the task or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"        assert task !\u003d null : \"Created task should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"        int originalTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTaskCount() \u003d\u003d originalTaskCount + 1 : \"Task count should increase by 1\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTaskAdded(task, tasks.getTaskCount());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null \u0026\u0026 !result.isEmpty() : \"Result string should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"qilstiano"},"content":"     * @return false, as adding an event task does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":117}},{"path":"src/main/java/einstein/command/AddMultipleTodosCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Todo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" * Represents a command to add multiple to-do tasks in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"public class AddMultipleTodosCommand implements Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    private String[] descriptions;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new AddMultipleTodosCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param descriptions An array of task descriptions.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    public AddMultipleTodosCommand(String... descriptions) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        assert descriptions !\u003d null : \"Descriptions array cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        assert descriptions.length \u003e 0 : \"At least one description must be provided\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        this.descriptions \u003d descriptions;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        for (String description : descriptions) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"            assert description !\u003d null : \"Individual description cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"            assert !description.trim().isEmpty() : \"Description cannot be empty after trimming\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Executes the add multiple todos command, adding new to-do tasks to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     * @return A string confirming the addition of the new to-do tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in adding the tasks or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        int initialTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        for (String description : descriptions) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"            Task task \u003d new Todo(description.trim());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"            assert task !\u003d null : \"Created task should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"            int beforeAddCount \u003d tasks.getTaskCount();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"            tasks.addTask(task);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"            assert tasks.getTaskCount() \u003d\u003d beforeAddCount + 1 : \"Task count should increase by 1 for each added task\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"            String addedMessage \u003d ui.showTaskAdded(task, tasks.getTaskCount());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"            assert addedMessage !\u003d null \u0026\u0026 !addedMessage.isEmpty() : \"Task added message should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"            result.append(addedMessage).append(\"\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTaskCount() \u003d\u003d initialTaskCount + descriptions.length","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"                : \"Final task count should match initial count plus number of added tasks\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        String finalResult \u003d result.append(\"\\n\").toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"        assert !finalResult.isEmpty() : \"Final result string should not be empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"        return finalResult;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"qilstiano":72}},{"path":"src/main/java/einstein/command/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to add a tag to a task.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class AddTagCommand implements Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"    private String tag;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     * Constructs an AddTagCommand with the specified task index and tag.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string containing the task index and tag.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the command is invalid.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    public AddTagCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        assert !fullCommand.trim().isEmpty() : \"Full command cannot be empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        String[] parts \u003d fullCommand.split(\" \", 3);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert parts.length \u003e\u003d 1 : \"Command parts cannot be empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid tag command. Usage: tag \u003ctask_index\u003e \u003ctag\u003e\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"            this.taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"            assert this.taskIndex \u003e\u003d 0 : \"Task index must be non-negative after subtracting 1\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"            this.tag \u003d parts[2];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"            assert this.tag !\u003d null \u0026\u0026 !this.tag.trim().isEmpty() : \"Tag cannot be null or empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task index. Please provide a valid number.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTaskCount()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task index. Please provide a valid task number.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTasks() !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTasks().get(taskIndex) !\u003d null : \"Task at given index cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        tasks.getTasks().get(taskIndex).addTag(tag);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTagAdded(tasks.getTasks().get(taskIndex), tag);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"qilstiano":68}},{"path":"src/main/java/einstein/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Todo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" * Represents a command to add a to-do task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"public class AddTodoCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    private String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new AddTodoCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the to-do description is empty.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    public AddTodoCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        this.description \u003d fullCommand.substring(5).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"            assert fullCommand.startsWith(\"todo\") : \"Command should start with \u0027todo\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Nein! You have to give a description to your todo.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        assert !description.isEmpty() : \"Description should not be empty after trimming\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     * Executes the add to-do command, adding a new to-do task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @return A string confirming the addition of the new to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in adding the task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"     *                           or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        assert task !\u003d null : \"Created task should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        int originalTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTaskCount() \u003d\u003d originalTaskCount + 1 : \"Task count should increase by 1\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTaskAdded(task, tasks.getTaskCount());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null \u0026\u0026 !result.isEmpty() : \"Result string should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":62}},{"path":"src/main/java/einstein/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" * All concrete Command classes should implement this interface.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"public interface Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @return A string containing the result of the command execution.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error during command execution.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"     * @return true if the command should exit the application, false otherwise.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    boolean isExit();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":31}},{"path":"src/main/java/einstein/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to delete a task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new DeleteCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the task number in the command is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    public DeleteCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"delete\") : \"Command should start with \u0027delete\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"            this.taskIndex \u003d Integer.parseInt(fullCommand.substring(7).trim()) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"            assert this.taskIndex \u003e\u003d 0 : \"Task index must be non-negative\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task number! Please give me something valid!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Executes the delete command, removing the specified task from the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     * @return A string representation of the updated task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in deleting the task or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert taskIndex \u003c tasks.getTaskCount() : \"Task index out of bounds\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        int originalTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTaskCount() \u003d\u003d originalTaskCount - 1 : \"Task count should decrease by 1\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        String result \u003d \"Got it. Deleted!\\n\" + ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null \u0026\u0026 !result.isEmpty() : \"Result string should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     * @return false, as deleting a task does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":64}},{"path":"src/main/java/einstein/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" * Represents a command to exit the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * Executes the exit command, displaying a farewell message and closing the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The current list of tasks (not used in this command).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for tasks (not used in this command).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @return A string containing the farewell message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in generating or displaying the farewell message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        String farewellMessage \u003d ui.showFarewell();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        assert farewellMessage !\u003d null \u0026\u0026 !farewellMessage.isEmpty() : \"Farewell message should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        // Schedule the application to exit","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"        return farewellMessage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"     * @return true, as this command is specifically for exiting the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        return true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":48}},{"path":"src/main/java/einstein/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":" * Represents a command to search for tasks containing a specific keyword.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    private String keyword;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * Constructs a FindCommand with the given user input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full user command string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the keyword is missing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    public FindCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"find\") : \"Command should start with \u0027find\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        String trimmedCommand \u003d fullCommand.substring(5).trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        if (trimmedCommand.isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Please provide a keyword to search!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        this.keyword \u003d trimmedCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        assert !this.keyword.isEmpty() : \"Keyword should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * Executes the search operation by finding tasks that contain the keyword.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The TaskList to search in.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The UI instance to display results.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage handler (not used in search operation).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"            assert task !\u003d null : \"Task in TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        String result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"            result \u003d ui.showError(\"No matching tasks found!\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"            result \u003d ui.showTaskList(matchingTasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null \u0026\u0026 !result.isEmpty() : \"Result string should not be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"     * @return false, since searching does not terminate the program.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"qilstiano":73}},{"path":"src/main/java/einstein/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to display help information in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"     * Executes the help command, displaying a list of all available commands and their usage.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The current list of tasks (not used in this command).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for tasks (not used in this command).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @return A string containing the help information for all available commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in generating or displaying the help information.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    @SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        // Default help prompt listed below","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        output.append(\"Ja, here are the commands I understand:\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        output.append(\"1. todo \u003cdescription\u003e - Add a todo task.\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: todo read book\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        output.append(\"2. deadline \u003cdescription\u003e /by \u003cdate\u003e - Add a deadline task.\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: deadline return book /by 2/12/2019 1800\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        output.append(\"3. event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e - Add an event task.\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: event project meeting /from 2/12/2019 1400 /to 2/12/2019 1600\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"        output.append(\"4. list - List all tasks.\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: list\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        output.append(\"5. list \u003cdate\u003e - List tasks occurring on a specific date (format: yyyy-MM-dd).\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: list 2019-12-02\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"        output.append(\"6. find \u003ctask name\u003e - List tasks matching the searched name\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: list read books\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        output.append(\"7. mark \u003ctask number\u003e - Mark a task as done.\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: mark 1\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        output.append(\"8. unmark \u003ctask number\u003e - Mark a task as not done.\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: unmark 1\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        output.append(\"9. delete \u003ctask number\u003e - Delete a task.\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: delete 1\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        output.append(\"10. tag \u003ctask number\u003e \u003ctag\u003e - Add a tag to a task.\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: tag 1 fun\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        output.append(\"11. untag \u003ctask number\u003e \u003ctag\u003e - Remove a tag from a task.\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: untag 1 fun\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        output.append(\"12. priority \u003ctask number\u003e \u003cuber_high|high|medium|low\u003e \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"                + \"\\nSet a priority to a task.\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: priority 1 low\\n\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        output.append(\"13. help - Display this help message.\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: help\\n\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        output.append(\"14. bye - Exit the program.\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"        output.append(\"   Example: bye\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        return output.toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"     * @return false, as displaying help information does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":72}},{"path":"src/main/java/einstein/command/ListByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":" * Represents a command to list tasks for a specific date in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"public class ListByDateCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    private LocalDate date;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new ListByDateCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the date format in the command is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    public ListByDateCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"list\") : \"Command should start with \u0027list\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        String dateString \u003d fullCommand.substring(5).trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        assert !dateString.isEmpty() : \"Date string should not be empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"            this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid date format! Use: list yyyy-MM-dd\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        assert this.date !\u003d null : \"Parsed date should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"     * Executes the list by date command, displaying tasks for the specified date.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for tasks (not used in this command).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     * @return A string representation of the tasks occurring on the specified date.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in retrieving or displaying the tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTasksByDate(tasks.getTasks(), date);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        assert !result.isEmpty() : \"Result string should not be empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"     * @return false, as listing tasks by date does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":71}},{"path":"src/main/java/einstein/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to list all tasks in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"     * Executes the list command, displaying all tasks in the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for tasks (not used in this command).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @return A string representation of the current task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in retrieving or displaying the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        assert !result.isEmpty() : \"Result string should not be empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @return false, as listing tasks does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":44}},{"path":"src/main/java/einstein/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to mark a task as done in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new MarkCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the task number in the command is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    public MarkCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"mark\") : \"Command should start with \u0027mark\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"            this.taskIndex \u003d Integer.parseInt(fullCommand.substring(5).trim()) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"            assert this.taskIndex \u003e\u003d 0 : \"Task index must be non-negative\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task number! Please give me something valid!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Executes the mark command, marking the specified task as done.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     * @return A string representation of the updated task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in marking the task or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert taskIndex \u003c tasks.getTaskCount() : \"Task index out of bounds\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        assert !result.isEmpty() : \"Result string should not be empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     * @return false, as marking a task does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":63}},{"path":"src/main/java/einstein/command/RemoveTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to remove a tag from a task.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class RemoveTagCommand implements Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"    private String tag;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     * Constructs a RemoveTagCommand with the specified task index and tag.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string containing the task index and tag.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the command is invalid.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    public RemoveTagCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        assert !fullCommand.trim().isEmpty() : \"Full command cannot be empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        String[] parts \u003d fullCommand.split(\" \", 3);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert parts.length \u003e\u003d 1 : \"Command parts cannot be empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid untag command. Usage: untag \u003ctask_index\u003e \u003ctag\u003e\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"            this.taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"            assert this.taskIndex \u003e\u003d 0 : \"Task index must be non-negative after subtracting 1\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"            this.tag \u003d parts[2];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"            assert this.tag !\u003d null \u0026\u0026 !this.tag.trim().isEmpty() : \"Tag cannot be null or empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task index. Please provide a valid number.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTaskCount()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task index. Please provide a valid task number.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTasks() !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTasks().get(taskIndex) !\u003d null : \"Task at given index cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        tasks.getTasks().get(taskIndex).removeTag(tag);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTagRemoved(tasks.getTasks().get(taskIndex), tag);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"qilstiano":68}},{"path":"src/main/java/einstein/command/SetPriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Priority;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" * Represents a command to set the priority of a task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"public class SetPriorityCommand implements Command {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    private Priority priority;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * Constructs a SetPriorityCommand with the specified task index and priority.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string containing the task index and priority.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the command is invalid.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    public SetPriorityCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        assert !fullCommand.trim().isEmpty() : \"Full command cannot be empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        String[] parts \u003d fullCommand.split(\" \", 3);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        assert parts.length \u003e\u003d 1 : \"Command parts cannot be empty\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid priority command. Usage: priority \u003ctask_index\u003e \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"                    + \"\u003cuber_high|high|medium|low\u003e\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"            this.taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"            assert this.taskIndex \u003e\u003d 0 : \"Task index must be non-negative after subtracting 1\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"            this.priority \u003d Priority.valueOf(parts[2].toUpperCase());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"            assert this.priority !\u003d null : \"Priority cannot be null after parsing\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task index. Please provide a valid number.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid priority. Please use \u0027uber_high\u0027, \u0027high\u0027, \u0027medium\u0027, or \u0027low\u0027.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTaskCount()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task index. Please provide a valid task number.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTasks() !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"        assert tasks.getTasks().get(taskIndex) !\u003d null : \"Task at given index cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        tasks.getTasks().get(taskIndex).setPriority(priority);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showPrioritySet(tasks.getTasks().get(taskIndex), priority);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"qilstiano":72}},{"path":"src/main/java/einstein/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.storage.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a command to mark a task as not done in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new UnmarkCommand.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string from the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the task number in the command is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    public UnmarkCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"unmark\") : \"Command should start with \u0027unmark\u0027\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"            this.taskIndex \u003d Integer.parseInt(fullCommand.substring(7).trim()) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"            assert this.taskIndex \u003e\u003d 0 : \"Task index must be non-negative\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task number! Please give me something valid!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Executes the unmark command, marking the specified task as not done.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     * @return A string representation of the updated task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error in unmarking the task or saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EinsteinException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        assert taskIndex \u003c tasks.getTaskCount() : \"Task index out of bounds\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        tasks.markTaskAsNotDone(taskIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        String result \u003d ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        assert result !\u003d null : \"Result string should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        assert !result.isEmpty() : \"Result string should not be empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     * Checks if this command should exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     * @return false, as unmarking a task does not exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":63}},{"path":"src/main/java/einstein/exception/EinsteinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":" * Represents a custom exception for the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":" * This exception is used to handle specific errors that may occur during","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":" * the execution of the Einstein application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"public class EinsteinException extends Exception {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new EinsteinException with the specified error message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    public EinsteinException(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"        super(message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":18}},{"path":"src/main/java/einstein/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.gui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        displayPicture.setFitWidth(65);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"        displayPicture.setFitHeight(65);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    private void flip() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    public static DialogBox getEinsteinDialog(String text, Image img) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        db.flip();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        return db;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"qilstiano":64}},{"path":"src/main/java/einstein/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.gui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":" * A launcher class for the Einstein task management system GUI.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":" * This class serves as a workaround for classpath issues when launching JavaFX applications.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"public class Launcher {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"     * The main entry point for the Einstein GUI application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"     * This method launches the JavaFX application by calling the Main class.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * @param args Command-line arguments passed to the application (not used).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"qilstiano":20}},{"path":"src/main/java/einstein/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.gui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.Einstein;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    private Einstein einstein \u003d new Einstein(\"data/einstein.txt\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEinstein(einstein);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"            stage.show();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"            // stage.setMaxWidth(417); // Add this if you didn\u0027t automatically resize elements","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEinstein(einstein);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"            stage.setTitle(\"Einstein - Genius Task Manager\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"            stage.show();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"qilstiano":40}},{"path":"src/main/java/einstein/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.gui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.Einstein;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.ui.Ui;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"    private Einstein einstein;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    private Image einsteinImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaEinstein.png\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    private Ui ui \u003d new Ui(); // Create a Ui instance to access the welcome message","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * Initialise MainWindow.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        showWelcomeMessage(); // Display the welcome message when the UI loads","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    /** Injects the Einstein instance */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    public void setEinstein(Einstein e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        einstein \u003d e;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"     * Displays the welcome message in the dialog container.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"                DialogBox.getEinsteinDialog(ui.showWelcome(), einsteinImage)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        );","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Einstein\u0027s reply","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"        String response \u003d einstein.getResponse(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"                DialogBox.getEinsteinDialog(response, einsteinImage)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"        );","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"qilstiano":71}},{"path":"src/main/java/einstein/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import einstein.command.AddDeadlineCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import einstein.command.AddEventCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.command.AddMultipleTodosCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.command.AddTagCommand;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import einstein.command.Command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.command.DeleteCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.command.ExitCommand;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.command.FindCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import einstein.command.HelpCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import einstein.command.ListByDateCommand;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"import einstein.command.ListCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"import einstein.command.MarkCommand;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"import einstein.command.RemoveTagCommand;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"import einstein.command.SetPriorityCommand;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"import einstein.command.UnmarkCommand;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":" * Parses user input and returns the corresponding command object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":" * This class is responsible for interpreting commands entered by the user","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":" * and mapping them to their respective execution logic.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"     * Parses the user input command and returns the appropriate {@code Command} object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"     * The method matches the input with predefined commands and creates an instance of","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"     * the respective command class.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     * @return A {@code Command} object corresponding to the user input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the input command is invalid or not recognized.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    public static Command parse(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        assert !fullCommand.trim().isEmpty() : \"Full command cannot be empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        Command command;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"        if (fullCommand.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"list \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"            command \u003d new ListByDateCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"mark \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"            command \u003d new MarkCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"unmark \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"            command \u003d new UnmarkCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"todo \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"            command \u003d parseTodoCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"deadline \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"            command \u003d new AddDeadlineCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"event \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"            command \u003d new AddEventCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"delete \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"            command \u003d new DeleteCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"            command \u003d new HelpCommand();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"find \")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"            command \u003d new FindCommand(fullCommand);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"tag \")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"            command \u003d new AddTagCommand(fullCommand);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"untag \")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"            command \u003d new RemoveTagCommand(fullCommand);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"        } else if (fullCommand.startsWith(\"priority \")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"            command \u003d new SetPriorityCommand(fullCommand);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"ARGH! I do not understand you, which is weird, \"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"                    + \"\\nbecause I usually understand most things. Invalid command!\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"        assert command !\u003d null : \"Parsed command should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"        return command;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"     * Parses the to-do command for multiple todos.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"     * @return A {@code Command} object corresponding to the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the input command is invalid or not recognized.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"    private static Command parseTodoCommand(String fullCommand) throws EinsteinException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand !\u003d null : \"Full command cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"        assert fullCommand.startsWith(\"todo \") : \"Command should start with \u0027todo \u0027\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"        String args \u003d fullCommand.substring(5).trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"        assert !args.isEmpty() : \"Todo command should have arguments\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"        // Handle multiple todos","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"        String[] todos \u003d args.split(\",\"); // Split by commas","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"        if (todos.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Nein! You must provide at least one task description.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"        return new AddMultipleTodosCommand(todos);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":100}},{"path":"src/main/java/einstein/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import java.util.List;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Todo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":" * Manages the storage of tasks in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":" * This class handles loading tasks from and saving tasks to a file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"public class Storage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    private String filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error reading from the file, parsing the data,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"     *                           or if corrupted data is found.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    public ArrayList\u003cTask\u003e load() throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"        if (!fileExists()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"            return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"            List\u003cString\u003e lines \u003d readLinesFromFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"                assert line !\u003d null \u0026\u0026 !line.isEmpty() : \"Line cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"        return tasks;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    private boolean fileExists() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        return Files.exists(Paths.get(filePath));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    private List\u003cString\u003e readLinesFromFile() throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"        return Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"    private Task parseTask(String line) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"        validateParts(parts, line);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d createTask(type, description, parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"        return task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"    private void validateParts(String[] parts, String line) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Corrupted data found in file. Skipping line: \" + line);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"    private Task createTask(String type, String description, String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"        switch (type) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"        case \"T\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"            return new Todo(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"        case \"D\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"            return createDeadline(description, parts);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"        case \"E\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"            return createEvent(description, parts);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"        default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Unknown task type found. Skipping line: \" + String.join(\" | \", parts));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"    private Task createDeadline(String description, String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"        validateDeadlineParts(parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"        LocalDateTime by \u003d parseDateTime(parts[3].trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"    private Task createEvent(String description, String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"qilstiano"},"content":"        validateEventParts(parts);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"qilstiano"},"content":"        LocalDateTime from \u003d parseDateTime(parts[3].trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"qilstiano"},"content":"        LocalDateTime to \u003d parseDateTime(parts[4].trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"qilstiano"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"qilstiano"},"content":"    private void validateDeadlineParts(String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"qilstiano"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Corrupted deadline data found. Skipping line: \" + String.join(\" | \", parts));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"qilstiano"},"content":"    private void validateEventParts(String[] parts) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"qilstiano"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Corrupted event data found. Skipping line: \" + String.join(\" | \", parts));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws EinsteinException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"qilstiano"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"qilstiano"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"qilstiano"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid date/time format: \" + dateTimeString);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"qilstiano"},"content":"     * Saves the given list of tasks to the file specified in the constructor.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If there\u0027s an error writing to the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"qilstiano"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"qilstiano"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"qilstiano"},"content":"            createDataDirectory();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"qilstiano"},"content":"            String data \u003d buildTaskData(tasks);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"qilstiano"},"content":"            writeDataToFile(data);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"qilstiano"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"qilstiano"},"content":"    private void createDataDirectory() throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"qilstiano"},"content":"        Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"qilstiano"},"content":"    private String buildTaskData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"qilstiano"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"qilstiano"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"qilstiano"},"content":"            assert task !\u003d null : \"Task in the list cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"qilstiano"},"content":"            data.append(formatTask(task));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"qilstiano"},"content":"        return data.toString();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"qilstiano"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"qilstiano"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"qilstiano"},"content":"            return formatTodo((Todo) task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"qilstiano"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"qilstiano"},"content":"            return formatDeadline((Deadline) task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"qilstiano"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"qilstiano"},"content":"            return formatEvent((Event) task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"qilstiano"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"qilstiano"},"content":"            return \"\"; // Handle unknown task types","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"qilstiano"},"content":"    private String formatTodo(Todo todo) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"qilstiano"},"content":"        return String.format(\"T | %s | %s\\n\", todo.getIsDone() ? \"1\" : \"0\", todo.getDescription());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"qilstiano"},"content":"    private String formatDeadline(Deadline deadline) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"qilstiano"},"content":"        return String.format(\"D | %s | %s | %s\\n\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"qilstiano"},"content":"                deadline.getIsDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"qilstiano"},"content":"                deadline.getDescription(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"qilstiano"},"content":"                formatDateTime(deadline.getBy()));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"qilstiano"},"content":"    private String formatEvent(Event event) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"qilstiano"},"content":"        return String.format(\"E | %s | %s | %s | %s\\n\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"qilstiano"},"content":"                event.getIsDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"qilstiano"},"content":"                event.getDescription(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"qilstiano"},"content":"                formatDateTime(event.getFrom()),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"qilstiano"},"content":"                formatDateTime(event.getTo()));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"qilstiano"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"qilstiano"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"qilstiano"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"qilstiano"},"content":"    private void writeDataToFile(String data) throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"qilstiano"},"content":"        Files.write(Paths.get(filePath), data.getBytes());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":204}},{"path":"src/main/java/einstein/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Manages a list of tasks. This class provides methods to add, delete, and modify tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"     * Creates an empty task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     * Creates a task list initialized with the given tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The list of tasks to initialize with.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"     * Deletes a task from the task list by its index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"     * @param index The index of the task to delete (zero-based).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the index is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    public void deleteTask(int index) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task number! Please give me something valid!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"     * Marks a task as done by its index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     * @param index The index of the task to mark as done (zero-based).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the index is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"    public void markTaskAsDone(int index) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task number! Please give me something valid!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"     * Marks a task as not done by its index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"     * @param index The index of the task to mark as not done (zero-based).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException If the index is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"    public void markTaskAsNotDone(int index) throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Invalid task number! Please give me something valid!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing all tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"     * Retrieves the number of tasks in the list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":95}},{"path":"src/main/java/einstein/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":" * Represents a deadline task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":" * A deadline task is a task that needs to be completed by a specific date and time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"     * The date and time by which the task needs to be completed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new Deadline task with the given description and due date/time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @param by          The date and time by which the task needs to be completed.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"                : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert by !\u003d null : \"Deadline date/time cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        assert !by.isBefore(LocalDateTime.now()) : \"Deadline should not be in the past\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Gets the date and time by which the task needs to be completed.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @return The LocalDateTime object representing the deadline.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        assert by !\u003d null : \"Deadline date/time should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        return by;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"     * Sets the date and time by which the task needs to be completed.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"     * @param by The new LocalDateTime object representing the deadline.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"    public void setBy(LocalDateTime by) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"        assert by !\u003d null : \"New deadline date/time cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        assert !by.isBefore(LocalDateTime.now())","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"                : \"New deadline should not be in the past\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     * @return A string that represents the Deadline task, its description, status and due date/time.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        assert by !\u003d null : \"Deadline date/time should not be null when converting to string\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":64}},{"path":"src/main/java/einstein/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":" * Represents an event task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":" * An event task is a task that occurs during a specific time period.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        assert !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        assert from !\u003d null : \"Start date/time cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert to !\u003d null : \"End date/time cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        assert !to.isBefore(from) : \"End date/time cannot be before start date/time\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     * Gets the start date and time of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @return The LocalDateTime object representing the start of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        assert from !\u003d null : \"Start date/time should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        return from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     * Sets the start date and time of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"     * @param from The new LocalDateTime object representing the start of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    public void setFrom(LocalDateTime from) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        assert from !\u003d null : \"New start date/time cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        assert !to.isBefore(from) : \"New start date/time cannot be after end date/time\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"     * Gets the end date and time of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     * @return The LocalDateTime object representing the end of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"        assert to !\u003d null : \"End date/time should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"        return to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"     * Sets the end date and time of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"     * @param to The new LocalDateTime object representing the end of the event.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"    public void setTo(LocalDateTime to) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"        assert to !\u003d null : \"New end date/time cannot be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"        assert !to.isBefore(from) : \"New end date/time cannot be before start date/time\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"     * @return A string that represents the Event task, including its description,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"     *         status (done or not done), and the start and end date/time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"        assert from !\u003d null \u0026\u0026 to !\u003d null : \"Start and end date/time should not be null when converting to string\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":86}},{"path":"src/main/java/einstein/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":" * Represents the priority levels for tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"public enum Priority {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"    UBER_HIGH,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"    HIGH,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"    MEDIUM,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"    LOW","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"qilstiano":11}},{"path":"src/main/java/einstein/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.util.Set;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":" * Represents a generic task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":" * A Task object corresponds to a task with a description, a status","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":" * indicating whether the task is done or not, and a set of tags.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"public class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    private String description;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"    private Set\u003cString\u003e tags;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    private Priority priority;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * Constructs a Task object with a description. The task is initially marked as not done.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        return description;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     * Sets the description of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"New description cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"     * Checks if the task is done.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"        return isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"     * Sets the done status of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"     * @param done The new done status of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"     * Returns the status icon for the task. The icon is \"X\" if the task is done, and a space (\" \") if it is not done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"     * @return A string representing the task\u0027s status icon.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"     * Marks the task as done by setting the status to true.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"     * Marks the task as not done by setting the status to false.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"     * Adds a tag to the task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"     * @param tag The tag to add.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"        assert tag !\u003d null \u0026\u0026 !tag.trim().isEmpty() : \"Tag cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"        tags.add(tag);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"     * Removes a tag from the task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"     * @param tag The tag to remove.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"qilstiano"},"content":"    public void removeTag(String tag) throws EinsteinException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"qilstiano"},"content":"        assert tag !\u003d null \u0026\u0026 !tag.trim().isEmpty() : \"Tag cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"qilstiano"},"content":"        if (!tags.contains(tag)) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"qilstiano"},"content":"            throw new EinsteinException(\"Tag does not exist!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"qilstiano"},"content":"        tags.remove(tag);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"qilstiano"},"content":"     * Gets the tags associated with the task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"qilstiano"},"content":"     * @return A set of tags.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"qilstiano"},"content":"    public Set\u003cString\u003e getTags() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"qilstiano"},"content":"        return tags;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"qilstiano"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"qilstiano"},"content":"     * @param priority The priority to set.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"qilstiano"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"qilstiano"},"content":"        assert priority !\u003d null : \"Priority cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"qilstiano"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"qilstiano"},"content":"     * Gets the priority of the task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"qilstiano"},"content":"     * @return The priority of the task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"qilstiano"},"content":"    public Priority getPriority() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"qilstiano"},"content":"        return priority;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"qilstiano"},"content":"     * Returns a string representation of the task, formatted as \"[status_icon] description #tags [Priority: priority]\".","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"qilstiano"},"content":"     * The status icon represents whether the task is done or not.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"qilstiano"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"qilstiano"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"qilstiano"},"content":"        StringBuilder tagsString \u003d new StringBuilder();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"qilstiano"},"content":"        for (String tag : tags) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"qilstiano"},"content":"            tagsString.append(\" #\").append(tag);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"qilstiano"},"content":"        String priorityString \u003d (priority !\u003d null) ? \" [Priority: \" + priority + \"]\" : \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"qilstiano"},"content":"        assert priorityString !\u003d null : \"Priority String cannot be null!\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"qilstiano"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description + tagsString + priorityString;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":160}},{"path":"src/main/java/einstein/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":" * Represents a to-do task in the Einstein task management system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":" * A to-do task is a simple task with a description and no specific deadline or time frame.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"     * Constructs a new To-do task with the given description.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"        assert !description.trim().isEmpty() : \"Todo description cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * Gets the description of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     * @return The description of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        String description \u003d super.getDescription();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Todo description should not be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"        return description;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Sets the description of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @param description The new description of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"New todo description cannot be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        super.setDescription(description);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     * Sets the done status of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"     * @param done The new done status of the to-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        super.setDone(done);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        assert getIsDone() \u003d\u003d done : \"Todo done status should be correctly set\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"     * Returns a string representation of the To-do task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     * @return A string that represents the To-do task, including its type identifier [T],","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     *         status (done or not done), and description.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"        String result \u003d \"[T]\" + super.toString();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        assert result.startsWith(\"[T]\") : \"Todo string representation should start with [T]\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"        assert result.length() \u003e 3 : \"Todo string representation should include more than just the [T] prefix\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":66}},{"path":"src/main/java/einstein/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Priority;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":" * Represents the user interface for interacting with the Einstein task manager.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":" * The \u003ccode\u003eUi\u003c/code\u003e class provides methods to display information and read user input in a console-based environment.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     * Displays the welcome message when the user enters.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    public String showWelcome() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        return \"Guten tag! I\u0027m Einstein, how can I help you today? \\n\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"                + \"Hint: If you need help type \u0027help\u0027!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"     * Displays the farewell message when the user exits.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    public String showFarewell() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        return \"Bye, hope to see you again soon!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"     * Displays an error message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"    public String showError(String message) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"        assert message !\u003d null \u0026\u0026 !message.isEmpty() : \"Error message should not be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        return message;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        System.out.print(\"User\\n\u003e \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        return new Scanner(System.in).nextLine().trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"qilstiano"},"content":"     * @param task      The task that was added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"qilstiano"},"content":"     * @param taskCount The total number of tasks in the list after adding the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"qilstiano"},"content":"    public String showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"qilstiano"},"content":"        assert task !\u003d null : \"Added task should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"qilstiano"},"content":"        assert taskCount \u003e 0 : \"Task count should be positive after adding a task\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"qilstiano"},"content":"        return \"Got it. I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"qilstiano"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"qilstiano"},"content":"                + \"Now you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"qilstiano"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"qilstiano"},"content":"    public String showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"qilstiano"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"qilstiano"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"qilstiano"},"content":"            output.append(\"Hmmm, didn\u0027t find any tasks. Add some tasks!\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"qilstiano"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"qilstiano"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"qilstiano"},"content":"                assert tasks.get(i) !\u003d null : \"Task in the list should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"qilstiano"},"content":"                output.append((i + 1)).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"qilstiano"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"qilstiano"},"content":"        String result \u003d output.toString();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"qilstiano"},"content":"        assert !result.isEmpty() : \"Task list output should not be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"qilstiano"},"content":"     * Displays the tasks occurring on a specific date.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"qilstiano"},"content":"     * @param tasks The list of tasks to be checked for the specified date.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"qilstiano"},"content":"     * @param date  The date to filter the tasks by.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"qilstiano"},"content":"    public String showTasksByDate(ArrayList\u003cTask\u003e tasks, LocalDate date) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"qilstiano"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"qilstiano"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"qilstiano"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks occurring on \"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"qilstiano"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"qilstiano"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"qilstiano"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"qilstiano"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"qilstiano"},"content":"            assert task !\u003d null : \"Task in the list should not be null\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"qilstiano"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"qilstiano"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"qilstiano"},"content":"                LocalDateTime time \u003d deadline.getBy();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"qilstiano"},"content":"                if (time.toLocalDate().equals(date)) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"qilstiano"},"content":"                    output.append((i + 1)).append(\".\").append(deadline).append(\"\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"qilstiano"},"content":"                    found \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"qilstiano"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"qilstiano"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"qilstiano"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"qilstiano"},"content":"                LocalDateTime from \u003d event.getFrom();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"qilstiano"},"content":"                LocalDateTime to \u003d event.getTo();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"qilstiano"},"content":"                if (from.toLocalDate().equals(date) || to.toLocalDate().equals(date)) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"qilstiano"},"content":"                    output.append((i + 1)).append(\".\").append(event).append(\"\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"qilstiano"},"content":"                    found \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"qilstiano"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"qilstiano"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"qilstiano"},"content":"        if (!found) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"qilstiano"},"content":"            output.append(\"No tasks found for this date.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"qilstiano"},"content":"        String result \u003d output.toString();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"qilstiano"},"content":"        assert !result.isEmpty() : \"Tasks by date output should not be null or empty\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"qilstiano"},"content":"        return result;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"qilstiano"},"content":"     * Displays a message when a tag is added to a task.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"qilstiano"},"content":"     * @param task The task to which the tag was added.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"qilstiano"},"content":"     * @param tag  The tag that was added.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"qilstiano"},"content":"     * @return A string containing the message.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"qilstiano"},"content":"    public String showTagAdded(Task task, String tag) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"qilstiano"},"content":"        return \"Tag added: \" + tag + \" to task \" + task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"qilstiano"},"content":"     * Displays a message when a tag is removed from a task.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"qilstiano"},"content":"     * @param task The task from which the tag was removed.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"qilstiano"},"content":"     * @param tag  The tag that was removed.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"qilstiano"},"content":"     * @return A string containing the message.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"qilstiano"},"content":"    public String showTagRemoved(Task task, String tag) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"qilstiano"},"content":"        return \"Tag removed: \" + tag + \" from task \" + task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"qilstiano"},"content":"     * Displays a message when the priority of a task is set.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"qilstiano"},"content":"     * @param task The task whose priority was set.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"qilstiano"},"content":"     * @param priority The new priority.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"qilstiano"},"content":"     * @return A string containing the message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"qilstiano"},"content":"    public String showPrioritySet(Task task, Priority priority) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"qilstiano"},"content":"        return \"Priority set to \" + priority + \" for task: \" + task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":162}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"qilstiano":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"einstein.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"qilstiano":19}},{"path":"src/test/java/einstein/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.command.AddDeadlineCommand;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.command.AddTodoCommand;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.command.Command;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":" * Test class for the Parser class.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":" * This class contains unit tests to verify the correct parsing of various command types.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"class ParserTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * Tests that parsing a to-do command returns an instance of AddTodoCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException if there\u0027s an error parsing the command","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"    void parse_todoCommand_returnsAddTodoCommand() throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        Command command \u003d Parser.parse(\"todo Read book\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        assertTrue(command instanceof AddTodoCommand);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"     * Tests that parsing a deadline command returns an instance of AddDeadlineCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException if there\u0027s an error parsing the command","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    void parse_deadlineCommand_returnsAddDeadlineCommand() throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        Command command \u003d Parser.parse(\"deadline Submit report /by 2/12/2023 1800\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        assertTrue(command instanceof AddDeadlineCommand);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"     * Tests that parsing an invalid command throws an EinsteinException.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    void parse_invalidCommand_throwsEinsteinException() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        assertThrows(EinsteinException.class, () -\u003e Parser.parse(\"invalid command\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":48}},{"path":"src/test/java/einstein/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":" * Test class for the Storage class.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":" * This class contains unit tests to verify the correct saving and loading of tasks.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"class StorageTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"     * Tests the save and load functionality of the Storage class.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"     * This test creates a temporary file, saves tasks to it, loads the tasks back,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"     * and verifies that the loaded tasks match the original tasks.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException if there\u0027s an error in saving or loading tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"     * @throws IOException if there\u0027s an error in file operations","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"    void saveAndLoadTasks_validTasks_tasksSavedAndLoadedSuccessfully() throws EinsteinException, IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"        // Create a temporary file for testing","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"        String testFilePath \u003d \"data/test_tasks.txt\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"        Files.deleteIfExists(Paths.get(testFilePath));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"        // Create a TaskList with some tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        tasks.add(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        tasks.add(new Todo(\"Write code\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"        // Save tasks to the file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        Storage storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"        // Load tasks from the file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"        // Verify that the loaded tasks match the original tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"        assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"            assertEquals(tasks.get(i).toString(), loadedTasks.get(i).toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        // Clean up the temporary file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"        Files.deleteIfExists(Paths.get(testFilePath));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":57}},{"path":"src/test/java/einstein/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"package einstein.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"qilstiano"},"content":"import einstein.exception.EinsteinException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"qilstiano"},"content":"import einstein.task.Todo;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"qilstiano"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"qilstiano"},"content":" * Test class for the TaskList class.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"qilstiano"},"content":" * This class contains unit tests to verify the correct functionality of adding and deleting tasks.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"qilstiano"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"qilstiano"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"qilstiano"},"content":"     * Tests that a valid task can be added to the TaskList successfully.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"qilstiano"},"content":"     * Verifies that the task count increases by one after adding a task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"    void addTask_validTask_taskAddedSuccessfully() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"qilstiano"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"qilstiano"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"qilstiano"},"content":"        assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"qilstiano"},"content":"     * Tests that a task can be deleted from the TaskList successfully using a valid index.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"qilstiano"},"content":"     * Verifies that the task count decreases by one after deleting a task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"qilstiano"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"qilstiano"},"content":"     * @throws EinsteinException if there\u0027s an error deleting the task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"qilstiano"},"content":"    void deleteTask_validIndex_taskDeletedSuccessfully() throws EinsteinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"qilstiano"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"qilstiano"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"qilstiano"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"qilstiano"},"content":"        assertEquals(0, taskList.getTaskCount());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"qilstiano"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"qilstiano"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"qilstiano"},"content":"     * Tests that attempting to delete a task with an invalid index throws an EinsteinException.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"qilstiano"},"content":"     * Verifies that an exception is thrown when trying to delete a task at an index that doesn\u0027t exist.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"qilstiano"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"qilstiano"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"qilstiano"},"content":"    void deleteTask_invalidIndex_throwsEinsteinException() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"qilstiano"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"qilstiano"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"qilstiano"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"qilstiano"},"content":"        assertThrows(EinsteinException.class, () -\u003e taskList.deleteTask(1));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"qilstiano"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"qilstiano"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"qilstiano":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qilstiano"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"qilstiano"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"qilstiano"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"qilstiano"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"qilstiano"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"qilstiano"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"qilstiano":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"qilstiano"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"qilstiano"},"content":"java -classpath ..\\bin Einstein \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"qilstiano":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"qilstiano"},"content":"java -classpath ../bin Einstein \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"qilstiano":1,"-":37}}]
