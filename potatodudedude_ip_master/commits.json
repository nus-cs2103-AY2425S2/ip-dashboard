{"authorDailyContributionsMap":{"potatodudedude":[{"date":"2025-01-24T00:00:00","commitResults":[{"hash":"a2c90a5986424b2beda8c690315d4920df70b095","isMergeCommit":false,"messageTitle":"Removed Duke Added Dodo","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"39d4ba82e1be95034a86222ba16cadd961d34fec","isMergeCommit":false,"messageTitle":"Added copycat and bye function","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"9892dc071993d6dd90e2678cf021745fae87bb4c","isMergeCommit":false,"messageTitle":"Added new class for tasks Added list function","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":5}}},{"hash":"b7b623438e4449dfb88bd9462710448da1ad852b","isMergeCommit":false,"messageTitle":"Changed how to read user input to accomodate more commands Added methods in Task class for changing isDone boolean","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":5}}},{"hash":"0684301a4cb87098dafb243a697a0d37f3c6cf37","isMergeCommit":false,"messageTitle":"Implemented marking and unmarking tasks","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":1}}},{"hash":"eb6578678d368dfaf47b080b8b640ded119b9177","isMergeCommit":false,"messageTitle":"Added subclasses Todo, Event, Deadline of Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":5}}},{"hash":"3d062dd85342731c0ec26618e153ec16a2e1e515","isMergeCommit":false,"messageTitle":"Implemented todo, event and deadline commands","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":5}}},{"hash":"c19a72689426dae4a9ae2a6b5cef974214ed4478","isMergeCommit":false,"messageTitle":"Added in automated testing for: All basic functions Catching some edge cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":24,"deletions":0},"java":{"insertions":0,"deletions":6},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"506864a73d9d4f62eaded08d03330ad0fee0edec","isMergeCommit":false,"messageTitle":"Added exceptions to handle array out of bounds after splitting command strings Added help function Added exceptions for invalid commands","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":11},"java":{"insertions":137,"deletions":58}}},{"hash":"572f82e846caf79088f419d544fc3c336fd12a95","isMergeCommit":false,"messageTitle":"added delete command","messageBody":"","tags":["Level-6","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":35,"deletions":4}}}]},{"date":"2025-02-04T00:00:00","commitResults":[{"hash":"85478b44fbf5b043db5bc2d35edea560b61ec17b","isMergeCommit":false,"messageTitle":"Add data folder and storage.txt and add reading storage.txt on startup","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":269,"deletions":213}}},{"hash":"23736cd333ef714d1a73253bfc1c5db465b8a2c5","isMergeCommit":false,"messageTitle":"Add ability to write to file when adding task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":11}}},{"hash":"e9701e99b679bd4bd8d3d90e64a67c5d270e83af","isMergeCommit":false,"messageTitle":"Add delete from storage when deleting tasks","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":3},"java":{"insertions":47,"deletions":3}}},{"hash":"2f54e8bac118bbd9d3964f1c44a47df553c27a65","isMergeCommit":false,"messageTitle":"Change method of updating storage Add done status to storage","messageBody":"Before, the method of updating storage was to copy the old save file and\ntweak it during delete operations\n\nNow, I added a getStorageString() method to the Task classes so that\nupdating can be done by iterating through the arrayList of tasks and\ncalling their getStorageString().\n\nGiven the old method needed to iterate through every line in the save\nfile anyway, this should not affect performance much whilst simplifying\nthe updating process\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":22}}},{"hash":"f2f0d43920c1c306b058205c542737bb006bffcb","isMergeCommit":false,"messageTitle":"Add handling for incorrect marking storage","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":2},"java":{"insertions":22,"deletions":8},"bat":{"insertions":1,"deletions":1}}},{"hash":"8e02df935367a58dfcd39016fe8ba00e424adff5","isMergeCommit":false,"messageTitle":"Useless commit just to see Sourcetree branch","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1372dd6187e1771565dea76705aa368174f252b5","isMergeCommit":false,"messageTitle":"Tweak for style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"29d12f14e529c69127ae4fb1797a620b65f7d02f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"53c61740b64cd00098a9429d93e812811ff75f15","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"cada43747ad1b012f52b9e38c5ce7b95019acb54","isMergeCommit":false,"messageTitle":"Update all classes to use LocalDateTime instead of a string to store time","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":52,"deletions":26}}},{"hash":"5aad465b15daa44c0114c633754d46d44b2d23c5","isMergeCommit":false,"messageTitle":"Made checks for expired tasks and invalid event timings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":5}}},{"hash":"1d99f3c1806234953ab8392f0b0973b1fd6ac47f","isMergeCommit":false,"messageTitle":"Extract printing list to its own method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}},{"hash":"2184e1ca316a0c53427ab1a6a23507b886f696ce","isMergeCommit":false,"messageTitle":"Add due command which returns list of tasks ending on the input date","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":64,"deletions":9}}},{"hash":"843b57bbe7a9767e4e712d765c628c9a4d2fe268","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"60ff58816c4c8c8ee17b4d7f5523dd3b7c994050","isMergeCommit":false,"messageTitle":"Useless commit to see branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"24eb60bb90aefe0a4843e8ea165bc7479062cd91","isMergeCommit":false,"messageTitle":"Add non-static run command to run the main body instead of running in main","messageBody":"Add TaskList class and update methods accordingly\n","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":34}}},{"hash":"c28f1a96e1708ed83e1692ddfe8300212dc7ce67","isMergeCommit":false,"messageTitle":"Add storage and TimeStringUtility classes to separate methods and extract common methods and constants when dealing with LocalDateTime and LocalDate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":148,"deletions":115}}},{"hash":"6064a370c888aa20f6eb67c6c77ae05e0ce28dc7","isMergeCommit":false,"messageTitle":"Add UI class and move all printed lines apart from ones from errors to it","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":159,"deletions":74},"bat":{"insertions":1,"deletions":1}}},{"hash":"b9fd41385b6a0eafba1f3eb4be2a67fe1ad43716","isMergeCommit":false,"messageTitle":"Add Parse class, moved all appropriate methods there, edited error messages to be outputted from UI class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":102}}},{"hash":"df8832214641bc0e6374f9edd1b1e06c92062b97","isMergeCommit":false,"messageTitle":"Add Command abstract class and subclasses, add DodoCheck class","messageBody":"Before, all the checks for correct input format were in Parse class,\nand parsing was handled in Dodo class itself.\n\nFor the sake of more OOP and clearer class roles, I moved all checks to\na new class DodoCheck.\nParse class is now only responsible for parsing and returning the\nappropriate commands.\nCommand subclasses allow for cleaner code, makes parsing process more\nreadable without lumping everything in one method.\n","fileTypesAndContributionMap":{"java":{"insertions":387,"deletions":247}}},{"hash":"d9658f3006ab0a85e01a8de8e51dec2d3ba3e846","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"fa4c9d9c52353255000ba9a52b5b8c9ad5e702f9","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"f26c0ce4e28c2e2fff7423eab49ecba817d04d4e","isMergeCommit":false,"messageTitle":"Add command, task, utility packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":33}}},{"hash":"69969fe653e32558a3d9825ad308047d35446eed","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"52227bd24bc179021f05ddedbdd24bf6734481f7","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 of https://github.com/potatodudedude/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3052a11e54782bb602c053708c647599ed863aa3","isMergeCommit":false,"messageTitle":"Add checkstyle support and gradle tweaks","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":2}}},{"hash":"fdac238cedf5baa1637d27b4efd760d43f5c620b","isMergeCommit":false,"messageTitle":"Useless commit for branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}}]},{"date":"2025-02-05T00:00:00","commitResults":[{"hash":"0560d1314f783778015f06c1edf0144bef8879be","isMergeCommit":false,"messageTitle":"Add Junit Testing for Parse and TimeStringUtility classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":23},"java":{"insertions":201,"deletions":1},"bat":{"insertions":3,"deletions":3}}},{"hash":"08207cc042717db5a953797de962c6d7668bd43e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Junit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"2bfd260ff05a9be98cfede84de48ddb4e0937453","isMergeCommit":false,"messageTitle":"Add jar file configs for dodo.jar","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"8a719d7f5aba0fd90ce6528699965621b83a277c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"420732a8b0bf9f952e50d84123b5d97a88d6b890","isMergeCommit":false,"messageTitle":"Write JavaDoc for all non-trivial public methods in dodo package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":233,"deletions":4}}},{"hash":"003a590fd4fb8cc19b9c25086d607e7bf1267578","isMergeCommit":false,"messageTitle":"Tweaked coding standard for TimeStringUtility class(excluding JavaDoc)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"65755ec9c0b2b8d9a36564b84858fe4fe9e736ad","isMergeCommit":false,"messageTitle":"Write JavaDoc for all classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":0}}},{"hash":"7c0e138f521747d4685ac7e17388f648696f9346","isMergeCommit":false,"messageTitle":"Change code to match coding standard(minus JavaDoc)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":60}}},{"hash":"d6e545edc3ccb6baff8308d8e72b24a9b2a24ee2","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"568d38796fd8e46ae76b1d5c87330bb5a377e953","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/dodo/task/Deadline.java\n#\tsrc/main/java/dodo/task/Event.java\n#\tsrc/main/java/dodo/task/Todo.java\n#\tsrc/main/java/dodo/utilities/DodoCheck.java\n#\tsrc/main/java/dodo/utilities/DodoException.java\n#\tsrc/main/java/dodo/utilities/TimeStringUtility.java\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"0aca69f2bd16e9b5e71d58839b3f6df1e49df706","isMergeCommit":false,"messageTitle":"Add find command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":0}}},{"hash":"e0e0378d1d9f5f8fc33493b894960e02beecb958","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"Fixed conflicts\nStandardised the parsing segment for the add command to match the rest.\nRemoved a redundant check for valid parsing format.\nUpdated some print outputs.\n","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-19T00:00:00","commitResults":[{"hash":"6ddb5df390443a6382bfebd9124bee9d4b5683f8","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"1ab6d65cd6d097d28fdecf05a65e9559ec4bf350","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"4f80720d65bd830492943c603299278d5bd4161d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"Checkstyle was already implemented a while back with gradle, so\nthis branch is just for show.\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"80d5e9f8e5eff98888dd48f191f9b6cddaa9a6a9","isMergeCommit":false,"messageTitle":"Add javafx tutorial template","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":41,"deletions":0},"java":{"insertions":171,"deletions":0}}},{"hash":"579b429c5358bd7d3ebe6ba1ca9cfe2348f55ebf","isMergeCommit":false,"messageTitle":"Integrate GUI into existing commands","messageBody":"All commands now work with GUI except for exit command.\nrenamed UI methods to be more in line with coding format\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":3},"java":{"insertions":126,"deletions":140}}},{"hash":"5cf0e6db47a2cbe54d97a5b85eed9ba427e366f0","isMergeCommit":false,"messageTitle":"Fix stored tasks not persisting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"d485f6c21dc554c25f2779ce751daac7fa015dfc","isMergeCommit":false,"messageTitle":"Add intro message to GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"4df5499e5ee33a1b3587536ce97b6260cd44e141","isMergeCommit":false,"messageTitle":"Integrate bye command into GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"12e05e42609ba5e7f6d0a1be0e3ee3dc2b041442","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"1455ece45e33d0e813613ca5d296bebb8c3ec488","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-20T00:00:00","commitResults":[{"hash":"0f438bb1987e17a19524efdb4d21517aa6e9d283","isMergeCommit":false,"messageTitle":"Add assertions for commands that use type","messageBody":"Add, invalid and mark commands use an integer type for certain\nfunctions.\n\nThese integers have a set range of values. Falling outside of these\nranges will cause issues.\n\nLet\u0027s add assertions to check ensure they always fall within\ntheir values.\n\nThese variables are not influenced directly by the user, so any invalid\ninput is indicative of a program bug, not user error.\n\nSo, using an assertion to handle it seems appropriate, as opposed to\nusing it to check something like command typos, where we want the user\nto be able to correct their command instead of closing down the program.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"e4ba5a9d37830c57630f0e206f81753c42f207dd","isMergeCommit":false,"messageTitle":"AddCommand: Change variable name and extract addTask method FindCommand: Fix find list not showing","messageBody":"AddCommand has some code in its execute method that was shared across\nall Task cases.\n\nThis causes code duplication.\n\nLet\u0027s pull out the AddCommand code that was common across cases.\n\nThis allows the execute method to be shorter and more readable\n\nLet\u0027s also fix a small bug that causes the Find command to not show\nthe result list properly\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":34}}},{"hash":"75b9dc48a747fe5e4bd0bdf46490340d1370b8bc","isMergeCommit":false,"messageTitle":"AddCommand: Extract out task adding from execute method","messageBody":"AddCommand\u0027s execute method has all the code for determining time\nvalidity and parsing taskDescriptions.\n\nThis makes execute command rather long and not readable.\n\nLet\u0027s extract out everything under each case into a separate method.\n\nThis makes execute command shorter and more understandable, and allows\nme to more easily find which segment is responsible for which task type.\n","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":35}}},{"hash":"323849c44da4db7173308063b354dc2517ee0b84","isMergeCommit":false,"messageTitle":"Rename methods and variables to fit coding standard in command classes","messageBody":"Some command class variables and method names were quite vague/not\nappropriate.\n\nLet\u0027s change that so it fits the standard.\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":56,"deletions":81}}},{"hash":"31b3111283870a2ffeb0de3df55eae776bb2a6ed","isMergeCommit":false,"messageTitle":"DodoCheck: Update method names to fit coding standard DueCommand: Make due command return event if date falls on event\u0027s entire time range, not just the end date","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":35,"deletions":31}}},{"hash":"ba8ef24a4e124f1e859ebf56e2d9a31183f795f9","isMergeCommit":false,"messageTitle":"Change update method in Storage to have name more in line with coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"72e55ed9485f34eec9a8ced428ecde83eb3c840a","isMergeCommit":true,"messageTitle":"Merge pull request #2 from potatodudedude/branch-A-Assertions","messageBody":"Add assertions for commands that use type","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"dd802888e9b154c973a643d01ee3558a8b78dd3c","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"# Conflicts:\n#\tsrc/main/java/dodo/command/InvalidCommand.java\n#\tsrc/main/java/dodo/command/MarkCommand.java\n","fileTypesAndContributionMap":{}},{"hash":"74298fde487e51346a0004e8b333f4d20ff7a7cd","isMergeCommit":false,"messageTitle":"DueCommand: Rename contents variable to to fit coding standard FindCommand: Rename contents variable to fit coding standard Space out certain chunks in some longer methods for better readability Update the name change of the updateTaskListFromStorage method","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":25,"deletions":14}}},{"hash":"4e8fa70cc50431672f1748f561b9158be3e1d26a","isMergeCommit":true,"messageTitle":"Merge pull request #3 from potatodudedude/branch-A-CodeQuality","messageBody":"Branch a code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-21T00:00:00","commitResults":[{"hash":"6fd9e575a276b3f65c2ad3de72bfd19a37b691ae","isMergeCommit":false,"messageTitle":"Add reminder function","messageBody":"The user has to manually enter today\u0027s date to find tasks due today.\n\nThis might be a hassle since checking tasks due that day may be a\ncommonly repeated action.\n\nLet\u0027s add an automatic reminder that tells the user tasks due today on\nstartup.\n\nThis allows the user to be more aware of their deadlines without\nfurther input from them.\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":13}}},{"hash":"eae386cb65c48fbd3a79ac3bb860269ba14343a6","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"67a7fd7ac92dda5dd42330807045826c653d5ccf","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-BCD-Extension\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}},{"hash":"22635f6be5ee96706b751a6ed0cff78a675efa0b","isMergeCommit":false,"messageTitle":"Make send button anchored when resizing","messageBody":"Send button stays at its location when window is resized.\n\nThis leads to awkward looking UI as the button floats in the middle.\n\nLet\u0027s make it so the button stays at the bottom right corner.\n\nThis allows it to be easy to find without being intrusive after resizes.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"7c210d63ed058b743d4c1dd530c8e3f94e0eba01","isMergeCommit":false,"messageTitle":"Set scroll pane to stretch with resizing Set minimum width and height for resizing","messageBody":"Scroll pane does not resize with window.\nWindow can be shrunk as small as possible.\n\nThis makes resizing look awkward when scroll pane doesn\u0027t follow the\nwindow.\nWindow shrinking too small makes the text impossible to see and the app\nunusable.\n\nLet\u0027s make the scroll pane stretch with the window.\nLet\u0027s limit the minimum shrinking of the window.\n\nThis allows the scroll pane to look good when resizing.\nThis prevents the window size from causing visual issues.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":2,"deletions":0}}},{"hash":"69af129b5aeea7443f02b9aebf5454bea9268d9a","isMergeCommit":false,"messageTitle":"Add in css support for GUI","messageBody":"GUI is rather bland.\n\nThis makes it look boring and may reduce user satisfaction.\n\nLet\u0027s add css support for the GUI.\n\nThis allows us to more easily beautify the GUI in the future.\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":9}}},{"hash":"a849566f1108d1b162d312fd50fca99b4eb41629","isMergeCommit":false,"messageTitle":"Tweak GUI textboxes","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":11,"deletions":1},"java":{"insertions":1,"deletions":0}}},{"hash":"028676f453d8eb45566791a0d97f1b0e4ac39e96","isMergeCommit":false,"messageTitle":"Make user and dodo text boxes different colour Make dodo text colour change based on certain commands","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":13,"deletions":5},"java":{"insertions":70,"deletions":12}}},{"hash":"e33a2c00a77b8bd9734e1f22d561dda63fa04188","isMergeCommit":false,"messageTitle":"Change GUI background, text font, icons to be more aesthetic","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":7,"deletions":2}}},{"hash":"874c15cabd44c33e6b756552f8b3f827f5915970","isMergeCommit":false,"messageTitle":"Add TextColourPair utility class and changed message colouring","messageBody":"Dodo messages only change colour based on command type.\nThis is due to colour information being passed through a private String\nin each command class object.\n\nEven if there is an error message, the colour is still based on the\ncommand type. This is not very flexible.\nImplementation also leads to a lot of redundant coding for commands\nthat don\u0027t need a colour change.\n\nLet\u0027s use the UI class to return a TextColourPair class instead to pass\nboth a text String and a colour String.\n\nThis allows the text colour and contents to be centralised into one\nclass, and also lets the changing of individual messages colour under\nmore flexible circumstances.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":157,"deletions":161}}},{"hash":"2fcfd9f9af04196535dc0d8f965db518edb8f875","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-BetterGui\u0027","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{}},{"hash":"bb95569b434140bb24c60ec81e95e924dd43b014","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"Personality already done in previous commits.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"05f61e7a3ddc0dfb22d0dbf5ad2fdc591521569b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Personality\u0027","messageBody":"","tags":["A-Personality"],"fileTypesAndContributionMap":{}},{"hash":"3bc29f800829989773e1eba67d6e3823a1dc9f35","isMergeCommit":false,"messageTitle":"Useless commit to show branching","messageBody":"Suggested error handling already implemented in earlier commits.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"5bc066a376af1375968961bb48dc2700a5c94fe3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreErrorHandling\u0027","messageBody":"","tags":["A-MoreErrorHandling"],"fileTypesAndContributionMap":{}},{"hash":"3de64527725dc6b98355600c3ed848bc54553af9","isMergeCommit":false,"messageTitle":"Unabstract basic dodoheadCount operation in UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":11}}}]},{"date":"2025-02-22T00:00:00","commitResults":[{"hash":"7b5a6ddd24f15b8c677c3263b024506b44aa4973","isMergeCommit":false,"messageTitle":"Update Ui.png and write README","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":5,"deletions":8},"md":{"insertions":113,"deletions":14}}},{"hash":"ae4dd443875510ca44772909646ad6ae0a422bd8","isMergeCommit":false,"messageTitle":"Update Ui.png and user guide","messageBody":"","tags":["Release-v0.1"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":4},"md":{"insertions":12,"deletions":4}}}]},{"date":"2025-02-23T00:00:00","commitResults":[{"hash":"cb812da058d2d0d3cc106012b020a0a1dded56ff","isMergeCommit":false,"messageTitle":"Change find command to be case insensitive","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"8457ab01ad19cae7c6168988f32478009c2fb023","isMergeCommit":false,"messageTitle":"Update help command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":11}}},{"hash":"0672a01d3bc0f0cfbcbbec3556ffcc890e18353b","isMergeCommit":false,"messageTitle":"Fix bug with find command not handling invalid inputs","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8930811ea46cc370c90d4fbf0ce20c3246e520fb","isMergeCommit":false,"messageTitle":"Update README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"potatodudedude":{"java":1966,"md":115,"fxml":53,"sh":1,"bat":3,"gradle":23,"txt":11}},"authorContributionVariance":{"potatodudedude":161536.12},"authorDisplayNameMap":{"potatodudedude":"CS2103T-F10-4 SUN ..ELIX"}}
