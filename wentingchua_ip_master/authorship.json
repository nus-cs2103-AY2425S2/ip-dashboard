[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wentingchua"},"content":"# Dusty project template","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wentingchua"},"content":"1. After that, locate the `src/main/java/Dusty.java` file, right-click it, and choose `Run Dusty.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"wentingchua":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wentingchua"},"content":"# Dusty User Guide","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"wentingchua":1,"-":29}},{"path":"src/main/java/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wentingchua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wentingchua"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wentingchua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wentingchua"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wentingchua"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wentingchua"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wentingchua"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wentingchua"},"content":"    public static LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wentingchua"},"content":"        return LocalDateTime.parse(input, INPUT_FORMAT);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wentingchua"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wentingchua"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wentingchua"},"content":"        return dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wentingchua"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wentingchua"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"wentingchua":17}},{"path":"src/main/java/Dusty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wentingchua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wentingchua"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wentingchua"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wentingchua"},"content":"public class Dusty {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wentingchua"},"content":"        ArrayList\u003cString\u003e store \u003d new ArrayList\u003c\u003e(); // Store tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wentingchua"},"content":"        ArrayList\u003cString\u003e check \u003d new ArrayList\u003c\u003e(); // Store checkboxes","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wentingchua"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();  // Store task types","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wentingchua"},"content":"        ArrayList\u003cLocalDateTime\u003e deadlines \u003d new ArrayList\u003c\u003e(); // Store deadlines for Type D","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wentingchua"},"content":"        ArrayList\u003cLocalDateTime\u003e eventStarts \u003d new ArrayList\u003c\u003e(); // Stores event start times for Type E","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wentingchua"},"content":"        ArrayList\u003cLocalDateTime\u003e eventEnds \u003d new ArrayList\u003c\u003e(); // Stores event end times for Type E","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wentingchua"},"content":"        Scanner scan \u003d new Scanner(System.in);       // Create scanner object","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wentingchua"},"content":"        TaskStorage.loadTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wentingchua"},"content":"        System.out.println(\"Hello! I\u0027m Dusty\\nHow can I help you?\\n_______________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wentingchua"},"content":"        while (true) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wentingchua"},"content":"            String input \u003d scan.nextLine();          // Read user input","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wentingchua"},"content":"            String[] parts \u003d input.split(\" \", 2);    // Split based on spaces","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wentingchua"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"Bye! See you next time!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wentingchua"},"content":"                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wentingchua"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wentingchua"},"content":"                for (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wentingchua"},"content":"                    String formattedDate \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wentingchua"},"content":"                    if (type.get(i).equals(\"[D]\") \u0026\u0026 i \u003c deadlines.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wentingchua"},"content":"                        formattedDate \u003d \" (by \" + DateTimeParser.formatDateTime(deadlines.get(i)) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wentingchua"},"content":"                    } else if (type.get(i).equals(\"[E]\") \u0026\u0026 i \u003c eventStarts.size() \u0026\u0026 i \u003c eventEnds.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wentingchua"},"content":"                        formattedDate \u003d \" (from \" + DateTimeParser.formatDateTime(eventStarts.get(i)) +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wentingchua"},"content":"                                \" to \" + DateTimeParser.formatDateTime(eventEnds.get(i)) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wentingchua"},"content":"                    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wentingchua"},"content":"                    System.out.println((i + 1) + \".\" + type.get(i) + check.get(i) + store.get(i) + formattedDate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wentingchua"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wentingchua"},"content":"            } else if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wentingchua"},"content":"                int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wentingchua"},"content":"                check.set(index, \"[X]\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"  \" + type.get(index) + check.get(index) + store.get(index));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wentingchua"},"content":"                TaskStorage.saveTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wentingchua"},"content":"            } else if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wentingchua"},"content":"                int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wentingchua"},"content":"                check.set(index, \"[ ]\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"  \" + type.get(index) + check.get(index) + store.get(index));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wentingchua"},"content":"                TaskStorage.saveTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wentingchua"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wentingchua"},"content":"                int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"Okay. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"  \" + type.get(index) + check.get(index) + store.get(index));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wentingchua"},"content":"                store.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wentingchua"},"content":"                check.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wentingchua"},"content":"                type.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wentingchua"},"content":"                if (index \u003c deadlines.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wentingchua"},"content":"                    deadlines.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wentingchua"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wentingchua"},"content":"                if (index \u003c eventStarts.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wentingchua"},"content":"                    eventStarts.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wentingchua"},"content":"                    eventEnds.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wentingchua"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wentingchua"},"content":"                TaskStorage.saveTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wentingchua"},"content":"            } else if (parts[0].equals(\"todo\") || parts[0].equals(\"deadline\") || parts[0].equals(\"event\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wentingchua"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wentingchua"},"content":"                    System.out.println(\"OOPS!!! The description of a \" + parts[0] + \" cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wentingchua"},"content":"                } else if (parts[0].equals(\"deadline\") \u0026\u0026 !parts[1].contains(\"/by\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wentingchua"},"content":"                    System.out.println(\"OOPS!!! Please follow this format: deadline task /by date\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wentingchua"},"content":"                } else if (parts[0].equals(\"event\") \u0026\u0026 (!parts[1].contains(\"/from\") || !parts[1].contains(\"/to\"))) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wentingchua"},"content":"                    System.out.println(\"OOPS!!! Please follow this format: event task /from time /to time\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wentingchua"},"content":"                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wentingchua"},"content":"                    check.add(\"[ ]\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wentingchua"},"content":"                    if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wentingchua"},"content":"                        type.add(\"[T]\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wentingchua"},"content":"                        store.add(parts[1]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wentingchua"},"content":"                        TaskStorage.saveTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wentingchua"},"content":"                    } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wentingchua"},"content":"                        type.add(\"[D]\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wentingchua"},"content":"                        int slashIndex \u003d parts[1].indexOf(\"/by\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wentingchua"},"content":"                        String task \u003d parts[1].substring(0, slashIndex - 1);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wentingchua"},"content":"                        String by \u003d parts[1].substring(slashIndex + 4).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wentingchua"},"content":"                        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wentingchua"},"content":"                            LocalDateTime deadline \u003d DateTimeParser.parseDateTime(by);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wentingchua"},"content":"                            deadlines.add(deadline);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wentingchua"},"content":"                            store.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wentingchua"},"content":"                            System.out.println(\"Got it. I\u0027ve added this deadline:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wentingchua"},"content":"                            System.out.println(\"  \" + \"[D]\" + \"[ ]\" + task + \" (by \" + DateTimeParser.formatDateTime(deadline) + \")\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wentingchua"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wentingchua"},"content":"                            System.out.println(\"Invalid date format! Please use dd/mm/yyyy HHmm (24 hr).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wentingchua"},"content":"                            continue;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wentingchua"},"content":"                        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wentingchua"},"content":"                        TaskStorage.saveTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wentingchua"},"content":"                    } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wentingchua"},"content":"                        type.add(\"[E]\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wentingchua"},"content":"                        int slashFrom \u003d parts[1].indexOf(\"/from\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wentingchua"},"content":"                        int slashTo \u003d parts[1].indexOf(\"/to\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wentingchua"},"content":"                        String task \u003d parts[1].substring(0, slashFrom - 1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wentingchua"},"content":"                        String from \u003d parts[1].substring(slashFrom + 6, slashTo - 1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wentingchua"},"content":"                        String to \u003d parts[1].substring(slashTo + 4);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wentingchua"},"content":"                        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wentingchua"},"content":"                            LocalDateTime start \u003d DateTimeParser.parseDateTime(from);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wentingchua"},"content":"                            LocalDateTime end \u003d DateTimeParser.parseDateTime(to);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wentingchua"},"content":"                            eventStarts.add(start);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wentingchua"},"content":"                            eventEnds.add(end);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wentingchua"},"content":"                            store.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wentingchua"},"content":"                            System.out.println(\"Got it. I\u0027ve added this event:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wentingchua"},"content":"                            System.out.println(\"  [E][ ] \" + task + \" (from \" + DateTimeParser.formatDateTime(start) +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wentingchua"},"content":"                                    \" to \" + DateTimeParser.formatDateTime(end) + \")\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wentingchua"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wentingchua"},"content":"                            System.out.println(\"Invalid date format! Please use dd/mm/yyyy HHmm (24 hr).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wentingchua"},"content":"                            continue;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wentingchua"},"content":"                        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wentingchua"},"content":"                        TaskStorage.saveTasks(type, check, store);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wentingchua"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wentingchua"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wentingchua"},"content":"                    System.out.println(\"  \" + type.get(type.size() - 1) + check.get(check.size() - 1) + store.get(store.size() - 1));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wentingchua"},"content":"                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wentingchua"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wentingchua"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wentingchua"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wentingchua"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wentingchua"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"wentingchua":122,"-":3}},{"path":"src/main/java/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wentingchua"},"content":"import java.io.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wentingchua"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wentingchua"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wentingchua"},"content":"public class TaskStorage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wentingchua"},"content":"    private static final String FILE_PATH \u003d \"src/main/data/tasks.txt\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wentingchua"},"content":"    public static void saveTasks(List\u003cString\u003e type, List\u003cString\u003e check, List\u003cString\u003e store) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wentingchua"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wentingchua"},"content":"            Files.createDirectories(Paths.get(\"src/main/data\")); // check if /data exists","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wentingchua"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wentingchua"},"content":"            for (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wentingchua"},"content":"                writer.write(type.get(i) +  \" \" + check.get(i) + \" \" + store.get(i));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wentingchua"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wentingchua"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wentingchua"},"content":"            writer.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wentingchua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wentingchua"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wentingchua"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wentingchua"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wentingchua"},"content":"    public static void loadTasks(List\u003cString\u003e type, List\u003cString\u003e check, List\u003cString\u003e store) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wentingchua"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wentingchua"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wentingchua"},"content":"            if (!file.exists()) return;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wentingchua"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wentingchua"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wentingchua"},"content":"            String line;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wentingchua"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wentingchua"},"content":"                String[] parts \u003d line.split(\"\", 3);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wentingchua"},"content":"                if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wentingchua"},"content":"                    type.add(parts[0]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wentingchua"},"content":"                    check.add(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wentingchua"},"content":"                    store.add(parts[2]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wentingchua"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wentingchua"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wentingchua"},"content":"            reader.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wentingchua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wentingchua"},"content":"            System.out.print(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wentingchua"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wentingchua"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wentingchua"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"wentingchua":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wentingchua"},"content":"todo read book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wentingchua"},"content":"deadline submit essay /by Feb 1 2359","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wentingchua"},"content":"event family dinner /from 6pm /to 8pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wentingchua"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wentingchua"},"content":"mark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wentingchua"},"content":"unmark 3","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"wentingchua":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wentingchua"},"content":"java -classpath ..\\bin Dusty \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wentingchua":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wentingchua"},"content":"java -classpath ../bin Dusty \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wentingchua":1,"-":37}}]
