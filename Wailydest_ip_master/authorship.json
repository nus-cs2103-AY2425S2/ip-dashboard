[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    implementation \u0027org.json:json:20231013\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"    mainClass.set(\"sigmabot.ui.Launcher\")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"    archiveBaseName \u003d \"sigmabot\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Wailydest":19}},{"path":"src/main/java/sigmabot/exception/IncorrectDeleteFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the user inputs an incorrect delete format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class IncorrectDeleteFormat extends SigmabotInputException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new IncorrectDeleteFormat object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     * The message is a standard message to inform the user of the correct delete format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"    public IncorrectDeleteFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"        super(\"Incorrect delete format. Use: delete [task number]\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":14}},{"path":"src/main/java/sigmabot/exception/IncorrectFindFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * Represents an exception thrown when the find command is not in the correct format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class IncorrectFindFormat extends SigmabotInputException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs an IncorrectFindFormat object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"    public IncorrectFindFormat(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"        super(\"Incorrect find format: + \" + input + \". Please use \u0027find \u003ckeyword\u003e\u0027\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Wailydest":13}},{"path":"src/main/java/sigmabot/exception/IncorrectMarkFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the user inputs an incorrect mark format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class IncorrectMarkFormat extends SigmabotInputException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new IncorrectMarkFormat object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     * The message is a standard message to inform the user of the correct mark format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     * @param command the command that the user inputted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public IncorrectMarkFormat(String command) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        super(\"Incorrect mark format. Use: \" + command + \" [task number]\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":16}},{"path":"src/main/java/sigmabot/exception/IncorrectTaskFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the user inputs an incorrect task format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class IncorrectTaskFormat extends SigmabotInputException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new IncorrectTaskFormat object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     * The message is a standard message to inform the user of the correct task creation format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     * @param input the input that the user inputted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public IncorrectTaskFormat(String input) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        super(\"Incorrect task creation format: \" + input","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"                + \"\\nThe proper format is: [task type] [task description] [parameters, if any]\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":17}},{"path":"src/main/java/sigmabot/exception/IncorrectTaskNumber.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the user inputs an incorrect task number.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class IncorrectTaskNumber extends SigmabotInputException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new IncorrectTaskNumber object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     * The message is a standard message to inform the user that the task number does not exist.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     * @param number the task number that the user inputted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public IncorrectTaskNumber(int number) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        super(\"Task numbered \" + number + \" does not exist.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":16}},{"path":"src/main/java/sigmabot/exception/MissingParameterInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the user inputs a task type that requires a parameter but does not provide it.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class MissingParameterInputException extends SigmabotInputException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new MissingParameterInputException object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     * The message is a standard message to inform the user that the task type requires a parameter.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     * @param parameter the parameter that the user needs to provide.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public MissingParameterInputException(String parameter) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        super(\"This task type requires parameter /\" + parameter);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Wailydest":16}},{"path":"src/main/java/sigmabot/exception/SigmabotCorruptedDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the data in the file is corrupted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class SigmabotCorruptedDataException extends SigmabotDataException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new SigmabotCorruptedDataException object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     * The message is a standard message to inform the user that the data is corrupted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     * @param message the message specifying the problem.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public SigmabotCorruptedDataException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        super(\"Corrupt data detected: \" + message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Wailydest":16}},{"path":"src/main/java/sigmabot/exception/SigmabotDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * Exceptions of this type are thrown to inform about data-related errors.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class SigmabotDataException extends SigmabotException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new SigmabotDataException object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     * @param message the message specifying the problem.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    public SigmabotDataException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"        super(message);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Wailydest":15}},{"path":"src/main/java/sigmabot/exception/SigmabotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * A superclass for exceptions related to the Sigmabot application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class SigmabotException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    SigmabotException(String message) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"        super(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":10}},{"path":"src/main/java/sigmabot/exception/SigmabotInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * A superclass for exceptions related to input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class SigmabotInputException extends SigmabotException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new SigmabotInputException object. Passes the message forward.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     * @param message the message specifying the problem.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    public SigmabotInputException(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"        super(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Wailydest":15}},{"path":"src/main/java/sigmabot/exception/UnknownCommandInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":" * An exception thrown when the user inputs an unknown command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"public class UnknownCommandInputException extends SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new UnknownCommandInputException object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"     * @param input the input that the user inputted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    public UnknownCommandInputException(String input) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"        super(\"There\u0027s no such command \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"                + input.split(\"\\\\s+\")[0]","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"                + \" :(\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":17}},{"path":"src/main/java/sigmabot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONObject;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotCorruptedDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":" * A class encapsulating a Deadline task. Stores the deadline of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"public final class Deadline extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    private final LocalDateTime dueDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     * Initializes a Deadline object with the given description and deadline.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"     * @param description the description of the Deadline task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"     * @param by          the deadline of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"        this.dueDateTime \u003d by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"    Deadline(JSONObject taskJsonObject) throws SigmabotCorruptedDataException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"        super(taskJsonObject);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"            this.dueDateTime \u003d LocalDateTime.parse(taskJsonObject.getString(\"by\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotCorruptedDataException(\"could not access parameter for this task type \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"                    + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotCorruptedDataException(\"could not parse date time: \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"                    + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"    private Deadline(Deadline t) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        super(t);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"        this.dueDateTime \u003d t.dueDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"    protected Task copy() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"        return new Deadline(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"    public JSONObject toJson() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"        var result \u003d super.toJson();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"        result.put(\"by\", dueDateTime.toString());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"        result.put(\"type\", \"deadline\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"        return result;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"                + \" (by: \" + Task.dateTimeToString(this.dueDateTime) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":65}},{"path":"src/main/java/sigmabot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONObject;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotCorruptedDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":" * A class encapsulating an Event task. Stores the start and end time of the event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"public final class Event extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    private final LocalDateTime from, to;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     * Initializes an Event object with the given description, start time and end time.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"     * @param description the description of the Event task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"     * @param from        the start time of the event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"     * @param to          the end time of the event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    Event(JSONObject taskJsonObject) throws SigmabotCorruptedDataException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        super(taskJsonObject);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"            this.from \u003d LocalDateTime.parse(taskJsonObject.getString(\"from\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"            this.to \u003d LocalDateTime.parse(taskJsonObject.getString(\"to\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotCorruptedDataException(\"could not access parameter for this task type \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"                    + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotCorruptedDataException(\"could not parse date time: \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"                    + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"    private Event(Event t) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"        super(t);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"        this.from \u003d t.from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"        this.to \u003d t.to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"    protected Task copy() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"        return new Event(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"    public JSONObject toJson() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"        var result \u003d super.toJson();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"        result.put(\"from\", from.toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"        result.put(\"to\", to.toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"        result.put(\"type\", \"event\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"        return result;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wailydest"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wailydest"},"content":"                + \" (from: \" + Task.dateTimeToString(this.from)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wailydest"},"content":"                + \" to: \" + Task.dateTimeToString(this.to) + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":70}},{"path":"src/main/java/sigmabot/tasks/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"import java.util.List;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONArray;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotCorruptedDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":" * A class that handles the storage of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"public class Storage {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    private final String dataDirName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"    private final String dataFileName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"     * Initializes the Storage object with the name of the data directory and the name of the data file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"     * @param dataDirName  the name of the directory where the data file is stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"     * @param dataFileName the name of the data file inside the data directory.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    public Storage(String dataDirName, String dataFileName) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        this.dataDirName \u003d dataDirName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        this.dataFileName \u003d dataFileName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"    private Path getDataPath() throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        Path currentDir \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        Path dataDir \u003d currentDir.resolve(this.dataDirName);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"            Files.createDirectories(dataDir);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotDataException(\"Failed to create data directory: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        return dataDir.resolve(this.dataFileName);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"     * Loads the tasks from the data file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"     * If the data is corrupted or does not follow the expected format, the corresponding task will be skipped.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"     * @return an ArrayList list of the tasks loaded from the data file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotDataException if the data file cannot be read.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"    public ArrayList\u003cTask\u003e load() throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"        Path dataFile \u003d this.getDataPath();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"        JSONArray data;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"        if (Files.exists(dataFile)) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"                String content \u003d Files.readString(dataFile, StandardCharsets.UTF_8);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"                data \u003d new JSONArray(content);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"                throw new SigmabotDataException(\"Failed to read data file: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"            data \u003d new JSONArray();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wailydest"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wailydest"},"content":"        for (int i \u003d 0; i \u003c data.length(); ++i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wailydest"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wailydest"},"content":"                taskList.add(Task.jsonToTask(data.getJSONObject(i)));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wailydest"},"content":"            } catch (SigmabotCorruptedDataException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wailydest"},"content":"                System.err.println(\"Failed to load task: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wailydest"},"content":"        return taskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wailydest"},"content":"     * Stores the tasks into the data file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wailydest"},"content":"     * @param tasks the list of tasks to store.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotDataException if the data file cannot be written.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wailydest"},"content":"    public void storeData(List\u003cTask\u003e tasks) throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wailydest"},"content":"        JSONArray data \u003d new JSONArray();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wailydest"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wailydest"},"content":"            data.put(task.toJson());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wailydest"},"content":"        Path dataFile \u003d this.getDataPath();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wailydest"},"content":"            Files.writeString(dataFile,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wailydest"},"content":"                    data.toString(4),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wailydest"},"content":"                    StandardCharsets.UTF_8,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wailydest"},"content":"                    StandardOpenOption.CREATE,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wailydest"},"content":"                    StandardOpenOption.TRUNCATE_EXISTING,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wailydest"},"content":"                    StandardOpenOption.SYNC);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wailydest"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotDataException(\"unable to store data: \" + e);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Wailydest":100}},{"path":"src/main/java/sigmabot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONObject;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotCorruptedDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":" * A class encapsulating a task concept.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":" * Each task instance is supposed to be immutable.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    private final String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    private boolean isMarked;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"    public Task(String description, boolean isMarked) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    protected Task(JSONObject taskJsonObject) throws SigmabotCorruptedDataException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"            this.description \u003d taskJsonObject.getString(\"description\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"            this.isMarked \u003d taskJsonObject.getBoolean(\"isMarked\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotCorruptedDataException(\"could not access parameter: \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"                    + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    protected Task(Task t) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"        this.description \u003d t.description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"        this.isMarked \u003d t.isMarked;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"     * Converts a JSON object to a Task object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"     * The format is supposed to be the same as the one produced by the toJson method.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"     * @param taskJsonObject the JSON object to convert.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"     * @return the Task object represented by the JSON object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotCorruptedDataException if the JSON object cannot be transformed into a task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"    public static Task jsonToTask(JSONObject taskJsonObject) throws SigmabotCorruptedDataException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"        String type;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"            type \u003d taskJsonObject.getString(\"type\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotCorruptedDataException(\"unable to identify the task type: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"            return new ToDo(taskJsonObject);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"            return new Event(taskJsonObject);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"            return new Deadline(taskJsonObject);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wailydest"},"content":"        throw new SigmabotCorruptedDataException(\"type \" + type + \" could not be processed\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wailydest"},"content":"    protected static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wailydest"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wailydest"},"content":"    protected abstract Task copy();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wailydest"},"content":"     * Converts the task to a JSON object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wailydest"},"content":"     * @return the JSON object representing the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wailydest"},"content":"    public JSONObject toJson() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wailydest"},"content":"        var result \u003d new JSONObject();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wailydest"},"content":"        result.put(\"description\", description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wailydest"},"content":"        result.put(\"isMarked\", isMarked);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wailydest"},"content":"        return result;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wailydest"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wailydest"},"content":"     * @return a copy of the task with the isMarked field set to true.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wailydest"},"content":"    public Task mark() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wailydest"},"content":"        Task copy \u003d this.copy();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wailydest"},"content":"        copy.isMarked \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wailydest"},"content":"        return copy;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wailydest"},"content":"     * Unmarks the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wailydest"},"content":"     * @return a copy of the task with the isMarked field set to false.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wailydest"},"content":"    public Task unmark() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wailydest"},"content":"        Task copy \u003d this.copy();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wailydest"},"content":"        copy.isMarked \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wailydest"},"content":"        return copy;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wailydest"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wailydest"},"content":"        return isMarked;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wailydest"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wailydest"},"content":"        return \"[\" + (this.getIsMarked() ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":117}},{"path":"src/main/java/sigmabot/tasks/TaskContainer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import java.util.List;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":" * A class that maintains a list of tasks and synchronizes it with a storage.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":" * Every change done to the task will be reflected in the storage.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":" * Thus expects the storage directory to be writable.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"public class TaskContainer {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     * Initializes the TaskContainer object with the name of the data directory and the name of the data file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"     * @param dataDirName  the name of the directory where the data file is stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"     * @param dataFileName the name of the data file inside the data directory.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotDataException if the data file cannot be read.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    public TaskContainer(String dataDirName, String dataFileName) throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"        this.storage \u003d new Storage(dataDirName, dataFileName);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        this.taskList \u003d storage.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"     * @param task the task to add.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotDataException if the data is failed to be stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"    public void add(Task task) throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        storage.storeData(List.copyOf(taskList));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"     * Edits a task in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"     * @param i    index (0-indexed) of the task to edit","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"     * @param task the new task to replace the old task","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotDataException if the data is failed to be stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"    public void editTask(int i, Task task) throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"        taskList.set(i, task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"        this.storage.storeData(List.copyOf(taskList));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"     * Retrieves a task from the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"     * @param i index (0-indexed) of the task to retrieve.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"        return taskList.get(i);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"     * @param i index (0-indexed) of the task to remove.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotDataException if the data is failed to be stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wailydest"},"content":"    public void remove(int i) throws SigmabotDataException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wailydest"},"content":"        taskList.remove(i);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wailydest"},"content":"        this.storage.storeData(List.copyOf(taskList));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wailydest"},"content":"     * Returns the task count.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wailydest"},"content":"     * @return the number of tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wailydest"},"content":"    public int taskCount() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wailydest"},"content":"        return taskList.size();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wailydest"},"content":"    public String toString() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wailydest"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wailydest"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wailydest"},"content":"            sb.append((i + 1)).append(\": \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wailydest"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":90}},{"path":"src/main/java/sigmabot/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONObject;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotCorruptedDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":" * A class encapsulating a ToDo task. Doesn\u0027t have any additional fields.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"public final class ToDo extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"     * Initializes a ToDo object with the given description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"     * @param description the description of the ToDo task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"    ToDo(JSONObject taskJsonObject) throws SigmabotCorruptedDataException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        super(taskJsonObject);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    ToDo(ToDo t) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"        super(t);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"    protected Task copy() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"        return new ToDo(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"    public JSONObject toJson() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        var result \u003d super.toJson();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        result.put(\"type\", \"todo\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        return result;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":44}},{"path":"src/main/java/sigmabot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    private void flip() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"    public static DialogBox getSigmabotDialog(String s, Image i) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"        db.flip();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"        return db;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":56}},{"path":"src/main/java/sigmabot/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"public class Launcher {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":12}},{"path":"src/main/java/sigmabot/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    private Sigmabot sigmabot \u003d new Sigmabot();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSigmabot(sigmabot);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"            stage.show();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":33}},{"path":"src/main/java/sigmabot/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    private Sigmabot sigmabot;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    private Image sigmabotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sigmabot.jpeg\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"    public void setSigmabot(Sigmabot s) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"        sigmabot \u003d s;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"                DialogBox.getSigmabotDialog(sigmabot.getGreeting(), sigmabotImage)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        );","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"        String response \u003d sigmabot.getResponse(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"                DialogBox.getSigmabotDialog(response, sigmabotImage)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"        );","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":53}},{"path":"src/main/java/sigmabot/ui/Sigmabot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import sigmabot.ui.commands.Command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import sigmabot.ui.commands.ExitCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":" * Main class for the SigmaBot application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"public class Sigmabot {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"     * The name of the directory where the data file is stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    private final static String DATA_DIR_NAME \u003d \"data\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"     * The name of the data file inside the data directory.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"    private final static String DATA_FILE_NAME \u003d \"data.json\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    private TaskContainer tasks;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"    public Sigmabot() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            this.tasks \u003d new TaskContainer(DATA_DIR_NAME, DATA_FILE_NAME);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"            System.err.println(\"[!] Fatal exception: \" + e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"            System.exit(1);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"     * Pass input to Sigmabot and get reponse.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"            Command cmd \u003d Command.parse(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"            if (cmd instanceof ExitCommand) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"                System.exit(0);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"            return cmd.executeOn(this.tasks);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotInputException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"            return \"[!] \" + e.getMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"            return \"[!] Fatal exception: \" + e.getMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"     * Accept one line of user console input and execute the corresponding command,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"     * printing to output back to the command line","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"    public void cmdInteraction() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"        System.out.println(getGreeting());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"        while (true) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"            System.out.println(getResponse(input));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"        return \"hi! i\u0027m your sigma bot. what\u0027s on your list?\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":67}},{"path":"src/main/java/sigmabot/ui/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":" * Class for the UI interactions between the user and the SigmaBot application.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"final public class Util {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"     * Parses a date time string into a LocalDateTime object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"     * @param dateTime the date time string to parse.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"     * @return the LocalDateTime object representing the date time string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotInputException if the date time string is in an incorrect format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws SigmabotInputException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"            throw new SigmabotInputException(\"Incorrect date format: \" + dateTime","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"                    + \". Format for date should be yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":28}},{"path":"src/main/java/sigmabot/ui/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.IncorrectTaskFormat;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.MissingParameterInputException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.UnknownCommandInputException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.Deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.Event;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.ToDo;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"import sigmabot.ui.Util;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":" * Command to add a task to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"public final class AddTaskCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    private final Task task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new AddTaskCommand object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"     * @param input the user input that represents the task to add.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"     *              Assumes the first word of the input command is a valid task type.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotInputException if the user input is in an incorrect format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    public AddTaskCommand(String input) throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        String descriptionRegex \u003d \"^[a-z]+\\\\s([^/]+)\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        var matcher \u003d Pattern.compile(descriptionRegex).matcher(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"        if (!matcher.find()) throw new IncorrectTaskFormat(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"        String description \u003d matcher.group(1).trim();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"            var deadlineMatcherBy \u003d Pattern.compile(\"/by([^/]*)\").matcher(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"            if (!deadlineMatcherBy.find()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"                throw new MissingParameterInputException(\"by\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"            this.task \u003d new Deadline(description,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"                    Util.parseDateTime(deadlineMatcherBy.group(1).trim()));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"            var matcherFrom \u003d Pattern.compile(\"/from([^/]*)\").matcher(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"            var matcherTo \u003d Pattern.compile(\"/to([^/]*)\").matcher(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"            if (!matcherFrom.find()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"                throw new MissingParameterInputException(\"from\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"            if (!matcherTo.find()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"                throw new MissingParameterInputException(\"to\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"            this.task \u003d new Event(description,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"                    Util.parseDateTime(matcherFrom.group(1).trim()),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"                    Util.parseDateTime(matcherTo.group(1).trim()));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"            this.task \u003d new ToDo(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"            throw new UnknownCommandInputException(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"    public String executeOn(TaskContainer tasks) throws SigmabotDataException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wailydest"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wailydest"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wailydest"},"content":"                + \"\\nNow you have \" + tasks.taskCount() + \" tasks in the list.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wailydest"},"content":"    public Task getTask() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wailydest"},"content":"        return task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":71}},{"path":"src/main/java/sigmabot/ui/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.UnknownCommandInputException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":" * Abstract class for the commands that can be executed by the SigmaBot application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"     * A factory method that parses a user input string into a Command object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"     * @param input the user input string to parse.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"     * @return an appropriate command subclass object that corresponds to the user input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotInputException if the user input is in an incorrect/unknown format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    public static Command parse(String input) throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"        if (input.equals(\"bye\")) return new ExitCommand();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        if (input.equals(\"list\")) return new ListCommand();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) return new MarkingCommand(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        if (input.startsWith(\"delete\")) return new DeleteCommand(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"        if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"            return new AddTaskCommand(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"        if (input.startsWith(\"find\")) return new FindCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        throw new UnknownCommandInputException(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"     * An abstract method that executes the command on the given TaskContainer object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"     * @param tasks the TaskContainer object to execute the command on.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"     *              For some commands the contents of the TaskContainer object may be modified.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotException if an error occurs while executing the command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"    public abstract String executeOn(TaskContainer tasks) throws SigmabotException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":38}},{"path":"src/main/java/sigmabot/ui/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.IncorrectDeleteFormat;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.IncorrectTaskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"public final class DeleteCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new DeleteCommand object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     * @param input the user input that represents the task to delete.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"     * @throws SigmabotInputException if the user input doesn\u0027t follow the delete command standard.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    public DeleteCommand(String input) throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        String[] inputParts \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        if (inputParts.length !\u003d 2) throw new IncorrectDeleteFormat();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"            this.taskNumber \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            throw new IncorrectDeleteFormat();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"    public String executeOn(TaskContainer tasks) throws SigmabotException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.taskCount()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"            throw new IncorrectTaskNumber(taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        String output \u003d \"removed task \" + (taskNumber + 1) + \": \" + tasks.getTask(taskNumber);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        output +\u003d \"you\u0027ve got \" + tasks.taskCount() + \" tasks so far\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"        return output;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        return taskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":45}},{"path":"src/main/java/sigmabot/ui/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":" * Command to exit the SigmaBot application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"    public String executeOn(TaskContainer tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"        System.exit(0);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"        return \"\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":14}},{"path":"src/main/java/sigmabot/ui/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.IncorrectFindFormat;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":" * Represents a command to find tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"     * @param input The input string. Assumes the input first word is \"find\".","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"    public FindCommand(String input) throws IncorrectFindFormat {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"            throw new IncorrectFindFormat(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        this.keyword \u003d parts[1];","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"     * Executes the command to find tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"     * @param tasks The task container to find tasks in.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"    public String executeOn(TaskContainer tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"        for (int i \u003d 0; i \u003c tasks.taskCount(); i++) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"            if (tasks.getTask(i).toString().contains(keyword)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"                output.append((i + 1)).append(\": \").append(tasks.getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        return output.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Wailydest":40}},{"path":"src/main/java/sigmabot/ui/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":" * Command to list all tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"    public String executeOn(TaskContainer tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"        return \"here\u0027s your task list:\\n\" + tasks.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":13}},{"path":"src/main/java/sigmabot/ui/commands/MarkingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.IncorrectMarkFormat;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.IncorrectTaskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.TaskContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":" * Command to mark or unmark a task in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"public final class MarkingCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    final private int taskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    final private boolean isMarkingTask;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"     * Constructs a new MarkingCommand object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"     * @param input the user input that represents the task to mark or unmark.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"     *              Assumes the first word of the input is either mark or unmark","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"     * @throws IncorrectMarkFormat if the user input doesn\u0027t follow the mark/unmark command standard.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"    public MarkingCommand(String input) throws SigmabotInputException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"        String[] inputParts \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"        if (inputParts.length !\u003d 2) throw new IncorrectMarkFormat(inputParts[0]);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            this.taskNumber \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"            throw new IncorrectMarkFormat(inputParts[0]);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"        this.isMarkingTask \u003d inputParts[0].equals(\"mark\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"    public String executeOn(TaskContainer tasks) throws SigmabotException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        if (this.taskNumber \u003c 0 || this.taskNumber \u003e\u003d tasks.taskCount()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"            throw new IncorrectTaskNumber(this.taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"        if (this.isMarkingTask) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"            tasks.editTask(this.taskNumber, tasks.getTask(this.taskNumber).mark());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"            tasks.editTask(this.taskNumber, tasks.getTask(this.taskNumber).unmark());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"        return (this.isMarkingTask ? \"marked\" : \"unmarked\") + \" task \"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"                + (this.taskNumber + 1) + \": \" + tasks.getTask(this.taskNumber);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"        return this.taskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"    public boolean getIsMarkingTask() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"        return this.isMarkingTask;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sigmabot.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"enter your message here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Wailydest":19}},{"path":"src/test/java/sigmabot/tasks/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    public void storageStoreAndLoadTasksTest() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"        Util.clearTestFile();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Util.generateTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"        Storage storage \u003d new Storage(Util.DATA_DIR_NAME, Util.DATA_FILE_NAME);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"            storage.storeData(tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotDataException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"            fail();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"                assertEquals(tasks.get(i).toString(), loadedTasks.get(i).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotDataException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"            fail();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":32}},{"path":"src/test/java/sigmabot/tasks/TaskContainerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"public class TaskContainerTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    public void taskContainerStoreAndModifyTasksTest() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"        Util.clearTestFile();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"            TaskContainer taskContainer \u003d new TaskContainer(Util.DATA_DIR_NAME, Util.DATA_FILE_NAME);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"            ArrayList\u003cTask\u003e tasks \u003d Util.generateTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"            for (int i \u003d 0; i \u003c tasks.size() - 1; ++i) taskContainer.add(tasks.get(i));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"            assertEquals(taskContainer.taskCount(), tasks.size() - 1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"            for (int i \u003d 0; i \u003c tasks.size() - 1; ++i) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"                Task task \u003d taskContainer.getTask(i);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"                assertEquals(task.toString(), tasks.get(i).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"            taskContainer.editTask(2, tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"            assertEquals(taskContainer.getTask(2).toString(), tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"            taskContainer.remove(2);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"            for (int i \u003d 0; i \u003c 2; ++i) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"                Task task \u003d taskContainer.getTask(i);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"                assertEquals(task.toString(), tasks.get(i).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"            for (int i \u003d 3; i \u003c tasks.size() - 1; ++i) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"                Task task \u003d taskContainer.getTask(i - 1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"                assertEquals(task.toString(), tasks.get(i).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotDataException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"            fail();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"    public void taskContainerLoadTasksFromFileTest() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        Util.clearTestFile();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Util.generateTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"        Storage storage \u003d new Storage(Util.DATA_DIR_NAME, Util.DATA_FILE_NAME);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"            storage.storeData(tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotDataException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"            fail();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"            TaskContainer taskContainer \u003d new TaskContainer(Util.DATA_DIR_NAME, Util.DATA_FILE_NAME);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"            assertEquals(taskContainer.taskCount(), tasks.size());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"                Task task \u003d taskContainer.getTask(i);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"                assertEquals(task.toString(), tasks.get(i).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"        } catch (SigmabotDataException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"            fail();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":62}},{"path":"src/test/java/sigmabot/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import org.json.JSONObject;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotCorruptedDataException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"public class TaskTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"    public void taskMarkAndUnmarkTest() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"        Task task \u003d new Event(\"test event\", LocalDateTime.parse(\"2021-08-24T10:15\"), LocalDateTime.parse(\"2021-08-24T11:15\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"        assertEquals(\"[E][ ] test event (from: Aug 24 2021 10:15am to: Aug 24 2021 11:15am)\", task.toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"        task \u003d task.mark();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"        assertEquals(\"[E][X] test event (from: Aug 24 2021 10:15am to: Aug 24 2021 11:15am)\", task.toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"        task \u003d task.unmark();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        assertEquals(\"[E][ ] test event (from: Aug 24 2021 10:15am to: Aug 24 2021 11:15am)\", task.toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        task \u003d new Event(\"test event\", LocalDateTime.parse(\"2021-08-24T13:15\"), LocalDateTime.parse(\"2021-08-24T14:15\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        assertEquals(\"[E][ ] test event (from: Aug 24 2021 1:15pm to: Aug 24 2021 2:15pm)\", task.toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"    public void taskConvertToJsonAndBack() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        for (Task task : Util.generateTasks()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"            try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"                JSONObject taskJsonObject \u003d task.toJson();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"                assertEquals(task.toString(), Task.jsonToTask(taskJsonObject).toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"            } catch (SigmabotCorruptedDataException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"                fail();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":37}},{"path":"src/test/java/sigmabot/tasks/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"public class Util {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"    public static final String DATA_DIR_NAME \u003d \"testDataDir\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"    public static final String DATA_FILE_NAME \u003d \"testDataFile.json\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public static void clearTestFile() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"            Files.delete(java.nio.file.Paths.get(DATA_DIR_NAME, DATA_FILE_NAME));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"            fail(\"Failed to delete test file: \" + e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"    public static ArrayList\u003cTask\u003e generateTasks() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"        tasks.add(new Event(\"event 1\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-24T10:15\"),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-24T11:15\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        tasks.add(new Deadline(\"deadline 1\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-24T12:00\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        tasks.add(new ToDo(\"todo 1\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"        tasks.add(new Event(\"event 2\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-25T10:15\"),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-25T11:15\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"        tasks.add((new Deadline(\"deadline marked\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-25T12:00\"))).mark());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"        tasks.add(new ToDo(\"todo marked\").mark());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        tasks.add((new Event(\"event marked\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-26T10:15\"),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"                LocalDateTime.parse(\"2021-08-26T11:15\"))).mark());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"        return tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":40}},{"path":"src/test/java/sigmabot/ui/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"package sigmabot.ui.commands;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.SigmabotInputException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"import sigmabot.exception.UnknownCommandInputException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"import sigmabot.tasks.ToDo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"public class CommandTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldReturnExitCommandForByeInput() throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"        Command command \u003d Command.parse(\"bye\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldReturnListCommandForListInput() throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"        Command command \u003d Command.parse(\"list\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldReturnMarkingCommandForMarkInput() throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wailydest"},"content":"        Command command \u003d Command.parse(\"mark 1\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wailydest"},"content":"        assertInstanceOf(MarkingCommand.class, command);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wailydest"},"content":"        assertTrue(((MarkingCommand) command).getIsMarkingTask());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wailydest"},"content":"        assertEquals(0, ((MarkingCommand) command).getTaskNumber());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldReturnMarkingCommandForUnmarkInput() throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wailydest"},"content":"        Command command \u003d Command.parse(\"unmark 2\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wailydest"},"content":"        assertInstanceOf(MarkingCommand.class, command);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wailydest"},"content":"        assertFalse(((MarkingCommand) command).getIsMarkingTask());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wailydest"},"content":"        assertEquals(1, ((MarkingCommand) command).getTaskNumber());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldReturnDeleteCommandForDeleteInput() throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wailydest"},"content":"        Command command \u003d Command.parse(\"delete 1\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wailydest"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wailydest"},"content":"        assertEquals(0, ((DeleteCommand) command).getTaskNumber());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldReturnAddTaskCommandForOtherInput() throws SigmabotInputException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wailydest"},"content":"        Command command \u003d Command.parse(\"todo read book\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wailydest"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wailydest"},"content":"        assertEquals((new ToDo(\"read book\")).toString(),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wailydest"},"content":"                ((AddTaskCommand) command).getTask().toString());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wailydest"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wailydest"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wailydest"},"content":"    public void parseShouldThrowExceptionForEmptyInput() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wailydest"},"content":"        assertThrows(UnknownCommandInputException.class, () -\u003e Command.parse(\"\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wailydest"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wailydest"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Wailydest":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wailydest"},"content":"todo borrow book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wailydest"},"content":"deadline return book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wailydest"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wailydest"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wailydest"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wailydest"},"content":"mark 3","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wailydest"},"content":"mark 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wailydest"},"content":"mark 10","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wailydest"},"content":"unmark notanumber","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wailydest"},"content":"unmark 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wailydest"},"content":"unmark 3","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wailydest"},"content":"delete -1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wailydest"},"content":"delete 123","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wailydest"},"content":"delete 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wailydest"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Wailydest":22}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wailydest"},"content":"java -classpath ../bin Sigmabot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"Wailydest":1}}]
