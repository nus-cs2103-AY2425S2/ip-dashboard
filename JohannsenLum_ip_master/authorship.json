[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"# erel.erel project template","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"1. After that, locate the `src/main/java/erel.erel.java` file, right-click it, and choose `Run erel.erel.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"    mainClass.set(\"erel.gui.Launcher\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"    archiveBaseName \u003d \"erel\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":24,"-":39}},{"path":"data/erel.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"T | 1 | read iLoveJavaBook","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"D | 0 | return x | 2016-12-02 16:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | hello word","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"D | 0 | cally x | 2025-01-27 10:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | hello","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"D | 0 | return book | 2000-05-29 15:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"D | 0 | return watch | 2030-05-28 18:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | hello","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"D | 0 | deadline hexacube | 2000-05-27 18:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"E | 0 | event ragandflag | 2012-05-02 18:00 | 2015-05-20 20:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | read book","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"T | 1 | read iLoveJavaBooko","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"D | 0 | ip | 2019-05-05 18:00","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | ip","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"E | 0 | doip | 2025-02-02 18:00 | 2025-02-03 18:00","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"E | 0 | helloip | 2025-02-02 18:00 | 2025-01-01 18:00","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"T | 0 | eat breakfast","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"# erel.erel User Guide","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":1,"-":29}},{"path":"src/main/java/erel/command/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action that can be executed in the Erel bot. Actions are commands that perform specific operations on","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" * the task list, such as adding, deleting, or marking tasks as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"public interface Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action using the provided task list, user interface, and storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list on which the action will be performed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving or loading tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":23}},{"path":"src/main/java/erel/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * Represents the different commands supported by the Erel bot. Each command corresponds to a specific action that the","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" * user can perform, such as adding a task, marking a task as done, or listing all tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"public enum Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"     * Converts a string input into the corresponding `Command` enum value.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The string input representing the command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"     * @return The corresponding `Command` enum value.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IllegalArgumentException If the input does not match any valid command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    public static Command fromString(String input) throws IllegalArgumentException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"        return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":20}},{"path":"src/main/java/erel/command/DeadlineAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to add a deadline task to the task list. This action creates a new `Deadline` task with a","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":" * description and a due date, adds it to the task list, and saves the updated list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"public class DeadlineAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    private final String description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    public DeadlineAction(String description, LocalDateTime by) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"        assert by !\u003d null : \"Deadline date (by) cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to add a deadline task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * This method creates a new {@code Deadline} task, adds it to the task list, displays a confirmation message,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * and saves the updated task list to storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list to which the deadline task will be added. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage system for saving the updated task list. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     * @return A confirmation message after successfully adding the deadline task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printInsert(deadline, tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":48}},{"path":"src/main/java/erel/command/DeleteAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to delete a task from the task list. This action removes the specified task from the task list,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":" * displays a confirmation message, and saves the updated list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"public class DeleteAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    public DeleteAction(int taskNumber) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"        assert taskNumber \u003e\u003d 0 : \"Task number must be non-negative\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to delete a task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     * Retrieves the task to be deleted, removes it from the task list, displays a confirmation message,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     * and saves the updated task list to storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list from which the task will be deleted. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * @return A confirmation message after successfully deleting the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is null","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action (e.g., invalid task number).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        Task t \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        tasks.deleteTask(taskNumber);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printDelete(t, tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":45}},{"path":"src/main/java/erel/command/EventAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to add an event task to the task list. This action creates a new `Event` task with a","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":" * description, start time, and end time, adds it to the task list, and saves the updated list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"public class EventAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    private final String description;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs an EventAction with the given description, start time, and end time.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     * @param description The description of the event. Cannot be null or empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     * @param from        The start time of the event. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     * @param to          The end time of the event. Cannot be null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is invalid.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"    public EventAction(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"        assert from !\u003d null : \"Start time (from) cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"        assert to !\u003d null : \"End time (to) cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to add an event task. Creates a new `Event` task, adds it to the task list, displays a","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"     * confirmation message, and saves the updated task list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list to which the event task will be added.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printInsert(event, tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":60}},{"path":"src/main/java/erel/command/ExitAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to save the latest task list into storage to get ready","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":" * and exit.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"public class ExitAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     * Displays a goodbye message, and saves the updated task list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list to which will be saved","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"        Platform.exit();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"        return ui.exit();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":33}},{"path":"src/main/java/erel/command/FindAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to find a task in the task list. This action finds a task in the task list with the given","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":" * keyword","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"public class FindAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs a FindAction with the specified keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     * @param keyword The keyword used to search for tasks. Cannot be null or empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if the keyword is null or empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    public FindAction(String keyword) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : \"Keyword cannot be null or empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to find matching tasks in the task list displays a list of tasks or a task not found","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * message.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list that to find the tasks from","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui    The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":46}},{"path":"src/main/java/erel/command/MarkAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to mark a task in the task list. This action marks an existing task with an x,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" * and updates it to the task list, and saves the updated list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"public class MarkAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    private int taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    public MarkAction(int taskNumber) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"        assert taskNumber \u003e\u003d 0 : \"Task number must be non-negative\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to mark a task in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     * displays a confirmation message, and saves the updated task list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list to which a task will be marked","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError if any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        if(tasks.getTask(taskNumber).isDone()){","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"            return ui.printMarkError(tasks, taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        tasks.getTask(taskNumber).setDone(true);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printMark(tasks, taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":46}},{"path":"src/main/java/erel/command/PrintListAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action that prints the entire task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"public class PrintListAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"     * Prints the entire task lists","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list that will be printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printList(tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":25}},{"path":"src/main/java/erel/command/TodoAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Todo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to add an todo task to the task list. This action creates a new `todo` task with a","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":" * description and adds it to the task list, and saves the updated list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"public class TodoAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    private final String description;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs a TodoAction with the specified description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * @param description The description of the todo task. Cannot be null or empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError If description is null or empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    public TodoAction(String description){","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description must not be null or empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to add a todo task. Creates a new `todo` task, adds it to the task list, displays a","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * confirmation message, and saves the updated task list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list to which the event task will be added.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError If any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printInsert(todo, tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":48}},{"path":"src/main/java/erel/command/UnmarkAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * Represents an action to unmark a task in the task list. This action unmarks an existing task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" * and updates it to the task list, and saves the updated list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"public class UnmarkAction implements Action {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs an UnmarkAction for the specified task number.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     * @param taskNumber The index of the task to unmark. Must be a valid task number.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError If taskNumber is invalid (negative or out of bounds).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    public UnmarkAction(int taskNumber) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"        assert taskNumber \u003e\u003d 0 : \"Task number must be non-negative\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * Executes the action to unmark a task in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * displays a confirmation message, and saves the updated task list to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks   The task list to which a task will be unmarked","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * @param ui      The user interface for displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @throws AssertionError If any parameter is null.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     * @throws Exception If an error occurs during the execution of the action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        if(!tasks.getTask(taskNumber).isDone()){","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"            return ui.printUnMarkError(tasks, taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"        tasks.getTask(taskNumber).setDone(false);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"        return ui.printUnmark(tasks, taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":53}},{"path":"src/main/java/erel/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.exception;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * Thrown when an operation is attempted on an empty task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" * This exception is used to indicate that the list must contain items","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":" * before performing certain actions that require tasks to be present.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"public class EmptyListException extends ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    public EmptyListException() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"        super(\"List is empty, please insert items before\\ndoing anything else!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":12}},{"path":"src/main/java/erel/exception/ErelException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.exception;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * A general exception class for errors in the Erel application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" * This class serves as the base class for all exceptions specific to the Erel bot,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":" * allowing for centralized exception handling.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"public class ErelException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    public ErelException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":12}},{"path":"src/main/java/erel/exception/IndexOutOfBoundsListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.exception;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * Exception thrown when an index provided for a task list operation is out of bounds.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"public class IndexOutOfBoundsListException extends ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"    public IndexOutOfBoundsListException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"        super(String.format(\"%s is an invalid number! Please try again\",message));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":10}},{"path":"src/main/java/erel/exception/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.exception;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * Exception thrown when the description of a task or command is invalid, such as when it is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"public class InvalidDescriptionException extends ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"    public InvalidDescriptionException(String command) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", command));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":11}},{"path":"src/main/java/erel/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.gui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * Loads the FXML file to set up the UI elements for the dialog box.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @param img The image representing the speaker.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"    private void flip() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"     * Creates a dialog box for the user with the specified text and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"     * @param text The text to be displayed in the user dialog box.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"     * @param img The image representing the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"     * @return A new DialogBox for the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"     * Creates a dialog box for Duke with the specified text and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"     * This dialog box is flipped so that the image appears on the left and the text on the right.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JohannsenLum"},"content":"     * @param text The text to be displayed in the Duke dialog box.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JohannsenLum"},"content":"     * @param img The image representing Duke.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JohannsenLum"},"content":"     * @return A new flipped DialogBox for Erel.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JohannsenLum"},"content":"    public static DialogBox getErelDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JohannsenLum"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JohannsenLum"},"content":"        db.flip();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JohannsenLum"},"content":"        return db;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":82}},{"path":"src/main/java/erel/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.gui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":" * Launches the Main class, which starts the JavaFX application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"public class Launcher {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":12}},{"path":"src/main/java/erel/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.gui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Erel;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" * The main entry point for the Erel JavaFX application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    private Erel erel \u003d new Erel();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     * Starts the JavaFX application by loading the FXML layout for the main window.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     * It injects an instance of Erel into the controller and sets the scene for the application window.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     * @param stage The primary stage for the application, which represents the main window.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setErel(erel);  // inject the Duke instance","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"            stage.show();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":38}},{"path":"src/main/java/erel/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.gui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.ui.Erel;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    private Erel erel;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"    /** Injects the Erel instance */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"    public void setErel(Erel e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        erel \u003d e;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"                DialogBox.getErelDialog(erel.greet(), dukeImage)  // Show greeting on startup","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"        String response \u003d erel.getResponse(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"                DialogBox.getErelDialog(response, dukeImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":56}},{"path":"src/main/java/erel/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.Action;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.Command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.DeadlineAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.DeleteAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.EventAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.ExitAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.FindAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.MarkAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.PrintListAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.TodoAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.UnmarkAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"import erel.exception.EmptyListException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"import erel.exception.ErelException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"import erel.exception.IndexOutOfBoundsListException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"import erel.exception.InvalidDescriptionException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":" * The `Parser` class is responsible for parsing user input into executable commands. It handles the validation of input","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":" * and the creation of corresponding `Action` objects.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"public class Parser {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * Parses a date-time string into a `LocalDateTime` object. The expected format is \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The date-time string to parse.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     * @return The parsed `LocalDateTime` object.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"     * @throws DateTimeParseException If the input string does not match the expected format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    public static LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"     * Parses a user input string into an `Action` object. Validates the input and creates the appropriate command based","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"     * on the input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list to validate task numbers against.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"     * @return An `Action` object corresponding to the user\u0027s command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"     * @throws ErelException If the input is invalid or cannot be parsed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"    public static Action parseCommand(String input, TaskList tasks) throws ErelException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"        String action \u003d parts[0];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"        switch (Command.fromString(action)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"        case MARK:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"            checkValidMarkUnmark(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"            return new MarkAction(Integer.parseInt(details) - 1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"        case UNMARK:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"            checkValidMarkUnmark(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"            return new UnmarkAction(Integer.parseInt(details) - 1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"        case DELETE:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"            checkValidDelete(Integer.parseInt(details), tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"            return new DeleteAction(Integer.parseInt(details) - 1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"        case TODO:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"            checkValidDescription(input.split(\" \", 2));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"            return new TodoAction(input.substring(5));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"        case DEADLINE:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"            checkValidDeadline(input);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"            String[] deadlineParts \u003d input.split(\" /by \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"            LocalDateTime by \u003d parseDateTime(deadlineParts[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"            return new DeadlineAction(deadlineParts[0].substring(9), by);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JohannsenLum"},"content":"        case EVENT:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JohannsenLum"},"content":"            checkValidEvent(input);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JohannsenLum"},"content":"            String[] eventParts \u003d input.split(\" /from | /to \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JohannsenLum"},"content":"            LocalDateTime from \u003d parseDateTime(eventParts[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JohannsenLum"},"content":"            LocalDateTime to \u003d parseDateTime(eventParts[2]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JohannsenLum"},"content":"            return new EventAction(eventParts[0].substring(6), from, to);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JohannsenLum"},"content":"        case LIST:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JohannsenLum"},"content":"            return new PrintListAction();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JohannsenLum"},"content":"        case BYE:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JohannsenLum"},"content":"            return new ExitAction();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JohannsenLum"},"content":"        case FIND:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JohannsenLum"},"content":"            checkValidDescription(input.split(\" \", 2));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JohannsenLum"},"content":"            return new FindAction(details);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JohannsenLum"},"content":"        default:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\"Unknown command: \" + action);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JohannsenLum"},"content":"     * Validates the input for mark/unmark commands. Ensures the task number is valid and the task list is not empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list to validate against.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JohannsenLum"},"content":"     * @throws InvalidDescriptionException   If the input is missing a task number.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IndexOutOfBoundsListException If the task number is out of bounds.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JohannsenLum"},"content":"     * @throws EmptyListException            If the task list is empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidMarkUnmark(String input, TaskList tasks) throws InvalidDescriptionException,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JohannsenLum"},"content":"            IndexOutOfBoundsListException, EmptyListException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JohannsenLum"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JohannsenLum"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JohannsenLum"},"content":"            throw new EmptyListException();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c 2 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JohannsenLum"},"content":"            throw new InvalidDescriptionException(inputArr[0]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JohannsenLum"},"content":"        int taskNumber \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JohannsenLum"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JohannsenLum"},"content":"            throw new IndexOutOfBoundsListException(inputArr[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JohannsenLum"},"content":"     * Validates the input for the delete command. Ensures the task number is valid and the task list is not empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JohannsenLum"},"content":"     * @param taskNumber The task number to delete.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks      The task list to validate against.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IndexOutOfBoundsListException If the task number is out of bounds.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JohannsenLum"},"content":"     * @throws EmptyListException            If the task list is empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidDelete(int taskNumber, TaskList tasks) throws IndexOutOfBoundsListException,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JohannsenLum"},"content":"            EmptyListException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JohannsenLum"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JohannsenLum"},"content":"            throw new EmptyListException();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JohannsenLum"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JohannsenLum"},"content":"            throw new IndexOutOfBoundsListException(Integer.toString(taskNumber));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JohannsenLum"},"content":"     * Validates the input for commands requiring a description (e.g., todo, deadline, event). Ensures the description","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JohannsenLum"},"content":"     * is not empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JohannsenLum"},"content":"     * @param inputArr The input string split into parts.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JohannsenLum"},"content":"     * @throws InvalidDescriptionException If the description is missing or empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidDescription(String[] inputArr) throws InvalidDescriptionException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c\u003d 1 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JohannsenLum"},"content":"            throw new InvalidDescriptionException(inputArr[0]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JohannsenLum"},"content":"     * Validates the input for the deadline command. Ensures the input includes a description and a valid date-time","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JohannsenLum"},"content":"     * format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JohannsenLum"},"content":"     * @throws ErelException If the input is missing a description, \"/by\", or has an invalid date-time format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidDeadline(String input) throws ErelException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JohannsenLum"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JohannsenLum"},"content":"        String[] deadlineParts \u003d input.split(\" /by \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c\u003d 1 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JohannsenLum"},"content":"            throw new InvalidDescriptionException(inputArr[0]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JohannsenLum"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\" A deadline must include \u0027/by\u0027 followed by a time.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JohannsenLum"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JohannsenLum"},"content":"            LocalDateTime by \u003d parseDateTime(deadlineParts[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JohannsenLum"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\"Invalid date format. Please use \\n\u0027yyyy-MM-dd HH:mm\u0027 (e.g. 2019-12-02 18:00).\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JohannsenLum"},"content":"     * Validates the input for the event command. Ensures the input includes a description, \"/from\", and \"/to\" with","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JohannsenLum"},"content":"     * valid date-time formats.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JohannsenLum"},"content":"     * @throws ErelException If the input is missing a description, \"/from\", \"/to\", or has an invalid date-time format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidEvent(String input) throws ErelException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JohannsenLum"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JohannsenLum"},"content":"        String[] eventParts \u003d input.split(\" /from | /to \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c\u003d 1 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JohannsenLum"},"content":"            throw new InvalidDescriptionException(inputArr[0]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JohannsenLum"},"content":"        if (eventParts.length \u003c 3 || eventParts[1].trim().isEmpty() || eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\" An event must include \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JohannsenLum"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JohannsenLum"},"content":"            LocalDateTime to \u003d parseDateTime(eventParts[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JohannsenLum"},"content":"            LocalDateTime from \u003d parseDateTime(eventParts[2]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JohannsenLum"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\"Invalid date format. Please use \\n\u0027yyyy-MM-dd HH:mm\u0027 (e.g. 2019-12-02 18:00).\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":194}},{"path":"src/main/java/erel/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"import java.util.List;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":" * The `Storage` class handles reading from and writing to a file to persist task data. It ensures that tasks are saved","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":" * to a file and can be loaded back into the application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * Saves the llist of tasks to the file","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The list of tasks to save","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"    public void saveTasksToFile(TaskList tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"            folder.mkdir();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"            for (Task task : tasks.getAllTasks()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\"Error saving tasks to file\" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"     * Loads the list of tasks from the file. If the file does not exist, returns an empty list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"    public List\u003cTask\u003e loadTasksFromFile() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"            return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"            String line;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"                Task task \u003d Task.fromFileFormat(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"            throw new IOException(e);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":74}},{"path":"src/main/java/erel/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":" * Represents a deadline task with a specific due date and time. Extends the `Task` class and adds functionality for","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * handling deadlines.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs a `Deadline` task with the specified name and due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     * @param name The name or description of the deadline task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     * @param by   The due date and time of the deadline task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     * Creates a `Deadline` task from a file-friendly format string. Parses the string to extract the task\u0027s status,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * name, and due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * @param fileFormat The string in file format representing the deadline task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * @return A `Deadline` task object.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"    public static Deadline fromFileFormat(String fileFormat) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"        String[] lines \u003d fileFormat.split(\" \\\\| \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"        boolean isDone \u003d lines[1].equals(\"1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        String descrption \u003d lines[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(lines[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        Deadline deadline \u003d new Deadline(descrption, by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"            deadline.setDone(true);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        return deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"     * Returns a string representation of the deadline task. Includes the task type, status, name, and due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy, HH:mm a\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"     * Converts the deadline task to a file-friendly format for storage. Includes the task type, status, name, and due","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"     * date in a standardized format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string in file format representing the deadline task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + super.getName() + \" | \" + by.format(formatter);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":66}},{"path":"src/main/java/erel/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":" * Represents an event task with a specific start and end time. Extends the `Task` class and adds functionality for","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * handling events.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs an `Event` task with the specified name, start time, and end time.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"     * @param name The name or description of the event task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     * @param to   The end date and time of the event.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * Creates an `Event` task from a file-friendly format string. Parses the string to extract the task\u0027s status, name,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     * start time, and end time.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     * @param fileFormat The string in file format representing the event task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * @return An `Event` task object.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"    public static Event fromFileFormat(String fileFormat) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        String[] lines \u003d fileFormat.split(\" \\\\| \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        boolean isDone \u003d lines[1].equals(\"1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        String description \u003d lines[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(lines[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(lines[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"            event.setDone(true);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"        return event;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"     * Returns a string representation of the event task. Includes the task type, status, name, start time, and end","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"     * time.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy, HH:mm a\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"     * Converts the event task to a file-friendly format for storage. Includes the task type, status, name, start time,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"     * and end time in a standardized format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string in file format representing the event task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + super.getName() + \" | \" + from.format(","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"                formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":72}},{"path":"src/main/java/erel/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * Represents a generic task with a name and a completion status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" * This class serves as the base class for specific task types like `Todo`, `Deadline`, and `Event`.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"    private final String name;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    private Boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs a `Task` with the specified name.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     * Creates a `Task` object from a file-friendly format string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     * Determines the task type and delegates the creation to the appropriate subclass.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * @param line The string in file format representing the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     * @return A `Task` object of the appropriate type (`Todo`, `Deadline`, or `Event`).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IllegalArgumentException If the task type in the file format is invalid.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"        if (line \u003d\u003d null || line.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"            return null;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        char taskType \u003d line.charAt(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        return switch (taskType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"            case \u0027T\u0027 -\u003e Todo.fromFileFormat(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"            case \u0027D\u0027 -\u003e Deadline.fromFileFormat(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"            case \u0027E\u0027 -\u003e Event.fromFileFormat(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"            default -\u003e throw new IllegalArgumentException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"    public Boolean isDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"    public void setDone(Boolean isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + this.name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"    public String getName() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"        return this.name;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"        return \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":69}},{"path":"src/main/java/erel/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":" * Represents a list of tasks. Provides methods to add, remove, retrieve,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":" * and search for tasks within the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"public class TaskList {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    public int size() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"        return tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"     * Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"     * @return A list of tasks containing the keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"                result.add(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"        return result;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":60}},{"path":"src/main/java/erel/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":" * Represents a todo task, which is a simple task with no specific deadline or event time.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":" * Extends the `Task` class and provides functionality specific to todo tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs a `Todo` task with the specified name.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"     * @param name The name or description of the todo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"    public Todo(String name){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"     * Includes the task type and the formatted string from the parent class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"     * @return A formatted string representing the todo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    public String toString(){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"        return  \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"     * Converts the todo task to a file-friendly format for storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"     * Includes the task type, status, and name in a standardized format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string in file format representing the todo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + super.getName();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"     * Creates a `Todo` task from a file-friendly format string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"     * Parses the string to extract the task\u0027s status and name.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"     * @param line The string in file format representing the todo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"     * @return A `Todo` task object.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"    public static Todo fromFileFormat(String line) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"            todo.setDone(true);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"        return todo;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":58}},{"path":"src/main/java/erel/ui/Erel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.Action;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.command.ExitAction;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import erel.exception.ErelException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import erel.parser.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import erel.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" * The main class for the Erel Bot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":" * Erel is a task management bot that allows users to manage","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":" * tasks through a command-line interface","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"public class Erel {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    private static Storage storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    private static TaskList tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    private static Ui ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     * Constructs an Erel object with the specified file path for storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     * Initializes the user interface, storage, and task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"    public Erel(String filePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"            ui.printLoadingError();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"    public Erel() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"        this(\"./data/erel.txt\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"     * The entry point of the Erel bot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"     * @param args Command-line arguments (not used)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"            Action action \u003d Parser.parseCommand(input, tasks);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"            return action.execute(tasks, ui, storage);  // Ensure execute() returns a String","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"        } catch (ErelException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"            return ui.printErelError(e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"            return ui.printExceptionError(e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"    public String greet() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"        return ui.greet();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"     * Runs the Erel bot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"     * Displays a greeting message and continuously reads user input,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"     * processes commands, and executes actions until the user exits.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"    public void run() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JohannsenLum"},"content":"        ui.greet();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JohannsenLum"},"content":"        while (true) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JohannsenLum"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JohannsenLum"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JohannsenLum"},"content":"                Action action \u003d Parser.parseCommand(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JohannsenLum"},"content":"                action.execute(tasks, ui, storage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JohannsenLum"},"content":"                if (action instanceof ExitAction) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JohannsenLum"},"content":"                    return;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JohannsenLum"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JohannsenLum"},"content":"            } catch (ErelException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JohannsenLum"},"content":"                ui.printErelError(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JohannsenLum"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JohannsenLum"},"content":"                ui.printExceptionError(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JohannsenLum"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":91}},{"path":"src/main/java/erel/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import erel.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":" * The `Ui` class is responsible for handling interactions with the user. It takes input from the user and outputs information","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":" * in a formatted and user-friendly way. It includes methods for greeting, displaying task lists, adding or removing tasks,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":" * and handling errors.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"public class Ui {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    public Ui() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"     * @return The line of input as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a line to format the chat better","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"    public void printLine() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        String lines \u003d \"___________________________________________\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(lines);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a greeting when the bot first comes online.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"     * @return A greeting message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"    public String greet() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Hello! I\u0027m Erel.\\n What can I do for you?\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"        return \" Hello! I\u0027m Erel.\\n What can I do for you?\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a farewell message when the bot shuts down.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"     * @return A farewell message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"    public String exit() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"        return \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"     * Prints the list of tasks currently stored in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"    public String printList(TaskList tasks) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"            return \"Your task list is empty!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JohannsenLum"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JohannsenLum"},"content":"        output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JohannsenLum"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\" \" + (i+1) + \".\" + tasks.getTask(i).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JohannsenLum"},"content":"            output.append(i + 1).append(\". \").append(tasks.getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JohannsenLum"},"content":"        return output.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a message confirming that a task has been added to the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JohannsenLum"},"content":"     * @param task  The task that was added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list after the task has been added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string confirming the task addition.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JohannsenLum"},"content":"    public String printInsert(Task task, TaskList tasks) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\\n\" + \"    \" + task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println( \" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JohannsenLum"},"content":"        return \" Got it. I\u0027ve added this task:\\n\" + \"    \" + task +","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JohannsenLum"},"content":"                \" Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a message confirming that a task has been removed from the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JohannsenLum"},"content":"     * @param task  The task that was removed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list after the task has been removed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string confirming the task removal.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JohannsenLum"},"content":"    public String printDelete(Task task, TaskList tasks) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\\n\" + \"    \" + task.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JohannsenLum"},"content":"        return \" Noted. I\u0027ve removed this task:\\n\" + \"    \" + task.toString() +","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JohannsenLum"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a message confirming that a task has been marked as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list containing the marked task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JohannsenLum"},"content":"     * @param index The index of the task that was marked.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string confirming the task has been marked as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JohannsenLum"},"content":"    public String printMark(TaskList tasks, int index) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + tasks.getTask(index).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JohannsenLum"},"content":"        return \" Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + tasks.getTask(index).toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a message confirming that a task has been marked as not done yet.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The task list containing the unmarked task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JohannsenLum"},"content":"     * @param index The index of the task that was unmarked.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string confirming the task has been marked as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JohannsenLum"},"content":"    public String printUnmark(TaskList tasks, int index) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Ok, I\u0027ve marked this task as not done yet:\\n\" + \"    \" + tasks.getTask(index).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JohannsenLum"},"content":"        return \" Ok, I\u0027ve marked this task as not done yet:\\n\" + \"    \" + tasks.getTask(index).toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JohannsenLum"},"content":"     * Prints an error message when there is an issue loading tasks from a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representing the loading error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JohannsenLum"},"content":"    public String printLoadingError() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\"Error loading tasks from file\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JohannsenLum"},"content":"        return \"Error loading tasks from file\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JohannsenLum"},"content":"     * Prints an error message when trying to mark an already marked task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks     The task list containing the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JohannsenLum"},"content":"     * @param taskNumber The index of the task to mark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representing the mark error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JohannsenLum"},"content":"    public String printMarkError(TaskList tasks, int taskNumber) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Task is already marked:\\n\" + \"    \" + tasks.getTask(taskNumber).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JohannsenLum"},"content":"        return \" Task is already marked:\\n\" + \"    \" + tasks.getTask(taskNumber).toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JohannsenLum"},"content":"     * Prints an error message when trying to unmark an already unmarked task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks     The task list containing the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JohannsenLum"},"content":"     * @param taskNumber The index of the task to unmark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representing the unmark error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JohannsenLum"},"content":"    public String printUnMarkError(TaskList tasks, int taskNumber) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Task is already unmarked:\\n\" + \"    \" + tasks.getTask(taskNumber).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JohannsenLum"},"content":"        return \" Task is already unmarked:\\n\" + \"    \" + tasks.getTask(taskNumber).toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a general error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JohannsenLum"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representing the error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JohannsenLum"},"content":"    public String printErelError(String message) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" OOPS!!! \" + message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JohannsenLum"},"content":"        return \" OOPS!!! \" + message;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a generic exception error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JohannsenLum"},"content":"     * @param message The exception message to be displayed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representing the exception error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JohannsenLum"},"content":"    public String printExceptionError(String message) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" An error occurred: \" + message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JohannsenLum"},"content":"        return \" An error occurred: \" + message;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JohannsenLum"},"content":"     * Displays a list of tasks that match a given search keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JohannsenLum"},"content":"     * @param tasks The list of tasks that match the search keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JohannsenLum"},"content":"     * @return A string representing the list of matching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JohannsenLum"},"content":"    public String printMatchingTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JohannsenLum"},"content":"        if(tasks.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\" No tasks found.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JohannsenLum"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JohannsenLum"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JohannsenLum"},"content":"        output.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JohannsenLum"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\" \" + (i+1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JohannsenLum"},"content":"            output.append(i + 1).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"JohannsenLum"},"content":"        return output.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":250}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"            fx:controller\u003d\"erel.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":44}},{"path":"src/test/java/erel/task/DeadLineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"public class DeadLineTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    public void testToString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2023, 10, 31, 23, 59);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", by);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"        assertEquals(\"[D][ ] Submit report (by: Oct 31, 2023, 23:59 pm)\", deadline.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2023, 10, 31, 23, 59);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", by);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"        deadline.setDone(true);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        assertEquals(\"D | 1 | Submit report | 2023-10-31 23:59\", deadline.toFileFormat());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":24}},{"path":"src/test/java/erel/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"    public void testToString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"        assertEquals(\"Read book\", task.getName());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":12}},{"path":"src/test/java/erel/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"package erel.ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"public class UiTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"    public void testPrintLine() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"        ui.printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"        assertEquals(\"___________________________________________\\n\", outContent.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"    public void testGreet() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"        ui.greet();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"        ___________________________________________","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"         Hello! I\u0027m Erel.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"         What can I do for you?","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"        ___________________________________________","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"        \"\"\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"todo read book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"deadline return book /by 2019-05-04 18:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"event project meeting /from 2025-08-06 14:00 /to 2025-08-06 16:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"todo join sports club","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"mark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"mark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"unmark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"deadline return book /by 2025-01-29 18:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"event project meeting /from 2025-04-28 12:00 /to 2025-04-28 23:59","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"java -classpath ..\\bin erel.erel \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src/main/java -name \"*.java\")","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"java -classpath ../bin Erel \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":2,"-":36}}]
