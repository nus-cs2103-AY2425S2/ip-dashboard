[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"# Erel project template","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"1. After that, locate the `src/main/java/Erel.java` file, right-click it, and choose `Run Erel.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"# Erel User Guide","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":1,"-":29}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public enum Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"    public static Command fromString(String input) throws IllegalArgumentException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"        return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    protected String by;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":13}},{"path":"src/main/java/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class EmptyListException extends ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    public EmptyListException() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"        super(\"List is empty, please insert items before\\ndoing anything else!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":5}},{"path":"src/main/java/Erel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"public class Erel {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"    private static final ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"        greet(); // Prints greeting","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"        while(true) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"                String action \u003d input.split(\" \")[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"                String[] inputArr \u003d input.split(\" /\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"                Command command \u003d Command.fromString(action); // Parse action into enum Commands","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"                switch (command) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"                    case BYE: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"                        exit();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"                        return;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"                    case LIST: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"                        printList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JohannsenLum"},"content":"                    case MARK: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JohannsenLum"},"content":"                        checkValidMarkUnmark(input);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JohannsenLum"},"content":"                        updateMark(input);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JohannsenLum"},"content":"                    case UNMARK: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JohannsenLum"},"content":"                        checkValidMarkUnmark(input);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JohannsenLum"},"content":"                        updateUnmark(input);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JohannsenLum"},"content":"                    case DELETE: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JohannsenLum"},"content":"                        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JohannsenLum"},"content":"                        checkValidDelete(taskNumber);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JohannsenLum"},"content":"                        deleteTask(taskNumber-1);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JohannsenLum"},"content":"                    case TODO: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JohannsenLum"},"content":"                        checkValidDescription(input.split(\" \",2));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JohannsenLum"},"content":"                        insertTodo(inputArr[0].substring(5));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JohannsenLum"},"content":"                    case DEADLINE: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JohannsenLum"},"content":"                        checkValidDescription(input.split(\" \",2));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JohannsenLum"},"content":"                        insertDeadline(inputArr);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JohannsenLum"},"content":"                    case EVENT: {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JohannsenLum"},"content":"                        checkValidDescription(input.split(\" \",2));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JohannsenLum"},"content":"                        insertEvent(inputArr);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JohannsenLum"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JohannsenLum"},"content":"                    default: throw new ErelException(\" Something went wrong. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JohannsenLum"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JohannsenLum"},"content":"            } catch (ErelException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JohannsenLum"},"content":"                printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JohannsenLum"},"content":"                System.out.println(\" OOPS!!! \" + e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JohannsenLum"},"content":"                printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JohannsenLum"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JohannsenLum"},"content":"                printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JohannsenLum"},"content":"                System.out.println(\" An error occurred: \" + e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JohannsenLum"},"content":"                printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JohannsenLum"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a line to format the chat better","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JohannsenLum"},"content":"    private static void printLine() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JohannsenLum"},"content":"        String lines \u003d \"___________________________________________\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(lines);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a customised greeting when the bot first comes online","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JohannsenLum"},"content":"    private static void greet() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Hello! I\u0027m Erel.\\n What can I do for you?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a customised exit when the bot shuts down","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JohannsenLum"},"content":"    private static void exit() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JohannsenLum"},"content":"     * Prints the list of task that is in the Task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JohannsenLum"},"content":"    private static void printList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JohannsenLum"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JohannsenLum"},"content":"        for (Task s : arrList) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\" \" + counter++ + \".\" + s.toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JohannsenLum"},"content":"     * Inserts an Event task into the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JohannsenLum"},"content":"     * @param inputArr Array of strings containing task details, including description,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JohannsenLum"},"content":"     *                 \u0027/from\u0027 time, and \u0027/to\u0027 time.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JohannsenLum"},"content":"     * @throws ErelException if the input is invalid or missing necessary components.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JohannsenLum"},"content":"    private static void insertEvent(String[] inputArr) throws ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c 3 || inputArr[1].length() \u003c\u003d 5 || inputArr[2].length() \u003c\u003d 3) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\" An event must include \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JohannsenLum"},"content":"        arrList.add(new Event(inputArr[0].substring(6), inputArr[1].substring(5), inputArr[2].substring(3)));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JohannsenLum"},"content":"        printInsert();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JohannsenLum"},"content":"     * Inserts a Deadline task into the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JohannsenLum"},"content":"     * @param inputArr Array of strings containing task details, including description,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JohannsenLum"},"content":"     *                 \u0027/by\u0027.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JohannsenLum"},"content":"     * @throws ErelException if the input is invalid or missing necessary components.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JohannsenLum"},"content":"    private static void insertDeadline(String[] inputArr) throws ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c 2 || inputArr[1].length() \u003c\u003d 3) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JohannsenLum"},"content":"            throw new ErelException(\" A deadline must include \u0027/by\u0027 followed by a time.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JohannsenLum"},"content":"        arrList.add(new Deadline(inputArr[0].substring(9), inputArr[1].substring(3)));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JohannsenLum"},"content":"        printInsert();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JohannsenLum"},"content":"     * Inserts a Todo task into the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JohannsenLum"},"content":"     * @param substring A strings containing task details.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JohannsenLum"},"content":"    private static void insertTodo(String substring) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JohannsenLum"},"content":"        arrList.add(new Todo(substring));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JohannsenLum"},"content":"        printInsert();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JohannsenLum"},"content":"     * Prints the successfully inserted item into the TaskList with","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JohannsenLum"},"content":"     * the necessary indentations and lines","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JohannsenLum"},"content":"    private static void printInsert() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\\n\" + \"    \" + arrList.get(arrList.size() - 1));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println( \" Now you have \" + arrList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JohannsenLum"},"content":"     * Deletes a task from the task list based on the given task number.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a confirmation and the updated number of task in the Task list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JohannsenLum"},"content":"     * after deletion.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JohannsenLum"},"content":"     * @param taskNumber The index of the task to be removed from the task list (0-based index).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JohannsenLum"},"content":"    private static void deleteTask(int taskNumber) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JohannsenLum"},"content":"        Task t \u003d arrList.get(taskNumber);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JohannsenLum"},"content":"        arrList.remove(taskNumber);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\\n\" + \"    \" + t.toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Now you have \" + arrList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JohannsenLum"},"content":"     * Checks whether a task can be deleted from the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JohannsenLum"},"content":"     * Throws an exception if the task list is empty or if the task number is invalid.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JohannsenLum"},"content":"     * @param taskNumber The index of the task to be validated for deletion (1-based index).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JohannsenLum"},"content":"     * @throws EmptyListException If the task list is empty.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IndexOutOfBoundsListException If the task number is less than 1 or greater than the size of the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidDelete(int taskNumber) throws IndexOutOfBoundsListException, EmptyListException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JohannsenLum"},"content":"        if(arrList.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JohannsenLum"},"content":"            throw new EmptyListException();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JohannsenLum"},"content":"        if(taskNumber \u003c\u003d 0 || taskNumber \u003e arrList.size()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JohannsenLum"},"content":"            throw new IndexOutOfBoundsListException(Integer.toString(taskNumber));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JohannsenLum"},"content":"     * Checks the description of a task to ensure it is not empty.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JohannsenLum"},"content":"     * Throws an exception if the description is missing or only contains whitespace.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JohannsenLum"},"content":"     * @param inputArr An array of strings where the first element is the command and","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JohannsenLum"},"content":"     *                 the second element is the task description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JohannsenLum"},"content":"     * @throws InvalidDescriptionException If the description is missing or blank.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidDescription(String[] inputArr) throws InvalidDescriptionException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JohannsenLum"},"content":"        if (inputArr.length \u003c\u003d 1 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JohannsenLum"},"content":"            throw new InvalidDescriptionException(inputArr[0]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JohannsenLum"},"content":"     * Checks whether a task can be marked or unmarked.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JohannsenLum"},"content":"     * Ensures the task list is not empty, the input contains a valid task number,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JohannsenLum"},"content":"     * and the task number is within the bounds of the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JohannsenLum"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The user input string containing the mark/unmark command and the task number.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JohannsenLum"},"content":"     * @throws EmptyListException If the task list is empty.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JohannsenLum"},"content":"     * @throws InvalidDescriptionException If the task number is missing or blank in the input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JohannsenLum"},"content":"     * @throws IndexOutOfBoundsListException If the task number is less than 1 or greater than the size of the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JohannsenLum"},"content":"    private static void checkValidMarkUnmark(String input) throws InvalidDescriptionException, IndexOutOfBoundsListException, EmptyListException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JohannsenLum"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JohannsenLum"},"content":"        if(arrList.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JohannsenLum"},"content":"            throw new EmptyListException();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JohannsenLum"},"content":"        if(inputArr.length \u003c 2 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JohannsenLum"},"content":"            throw new InvalidDescriptionException(inputArr[0]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JohannsenLum"},"content":"        int taskNumber \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JohannsenLum"},"content":"        if(taskNumber \u003c\u003d 0 || taskNumber \u003e arrList.size()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JohannsenLum"},"content":"            throw new IndexOutOfBoundsListException(inputArr[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JohannsenLum"},"content":"     * Marks a task from the task list based on the given task number and","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JohannsenLum"},"content":"     * if the task is unmarked.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a confirmation and the updated marked task","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JohannsenLum"},"content":"     * Prints an error confirmation if the task is already marked","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The String index of the task to be marked in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"JohannsenLum"},"content":"    private static void updateMark(String input) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JohannsenLum"},"content":"        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]) - 1; //(0-based index)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JohannsenLum"},"content":"        if(arrList.get(taskNumber).isDone()){","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"JohannsenLum"},"content":"            printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\" Task is already marked:\\n\" + \"    \" + arrList.get(taskNumber).toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"JohannsenLum"},"content":"            printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"JohannsenLum"},"content":"            return;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"JohannsenLum"},"content":"        arrList.get(taskNumber).setDone(true);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + arrList.get(taskNumber).toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"JohannsenLum"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"JohannsenLum"},"content":"     * Unmarks a task from the task list based on the given task number and","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"JohannsenLum"},"content":"     * if the task is marked.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"JohannsenLum"},"content":"     * Prints a confirmation and the updated unmarked task","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"JohannsenLum"},"content":"     * Prints an error confirmation if the task is already unmarked","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"JohannsenLum"},"content":"     * @param input The String index of the task to be marked in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"JohannsenLum"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"JohannsenLum"},"content":"    private static void updateUnmark(String input) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"JohannsenLum"},"content":"        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"JohannsenLum"},"content":"        if(!arrList.get(taskNumber).isDone()){","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"JohannsenLum"},"content":"            printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println(\" Task is already unmarked:\\n\" + \"    \" + arrList.get(taskNumber).toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"JohannsenLum"},"content":"            printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"JohannsenLum"},"content":"            System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"JohannsenLum"},"content":"            return;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"JohannsenLum"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"JohannsenLum"},"content":"        arrList.get(taskNumber).setDone(false);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println(\" Ok, I\u0027ve marked this task as not done yet:\\n\" + \"    \" + arrList.get(taskNumber).toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"JohannsenLum"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"JohannsenLum"},"content":"        System.out.println();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":286}},{"path":"src/main/java/ErelException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class ErelException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    public ErelException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    protected String from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"    protected String to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":16}},{"path":"src/main/java/IndexOutOfBoundsListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class IndexOutOfBoundsListException extends ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    public IndexOutOfBoundsListException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"        super(String.format(\"%s is an invalid number! Please try again\",message));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":5}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class InvalidDescriptionException extends ErelException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    public InvalidDescriptionException(String command) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", command));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"    private String name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"    private Boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"    public Boolean isDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JohannsenLum"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JohannsenLum"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"    public void setDone(Boolean isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JohannsenLum"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JohannsenLum"},"content":"        return (isDone? \"[X] \": \"[ ] \") + this.name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"    public Todo(String name){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"    public String toString(){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"        return  \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JohannsenLum"},"content":"todo read book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JohannsenLum"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JohannsenLum"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JohannsenLum"},"content":"todo join sports club","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JohannsenLum"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JohannsenLum"},"content":"mark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JohannsenLum"},"content":"mark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JohannsenLum"},"content":"unmark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JohannsenLum"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JohannsenLum"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JohannsenLum"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JohannsenLum"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JohannsenLum"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JohannsenLum"},"content":"java -classpath ..\\bin Erel \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JohannsenLum"},"content":"java -classpath ../bin Erel \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JohannsenLum":1,"-":37}}]
