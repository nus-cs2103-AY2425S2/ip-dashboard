[{"path":"src/main/java/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KarKuen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KarKuen"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KarKuen"},"content":"import java.util.List;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KarKuen"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KarKuen"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KarKuen"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KarKuen"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KarKuen"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KarKuen"},"content":"import tasks.TodoTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KarKuen"},"content":"public class Friday {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KarKuen"},"content":"    //relative filepath","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KarKuen"},"content":"    static String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KarKuen"},"content":"    static java.nio.file.Path filePath \u003d java.nio.file.Paths.get(home, \"Desktop\", \"TaskList\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KarKuen"},"content":"    //TaskList that stores all tasks","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KarKuen"},"content":"    static ArrayList allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KarKuen"},"content":"    //list of allowable text inputs","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KarKuen"},"content":"    static List\u003cString\u003e availableActions \u003d Arrays.asList(\"list\", \"mark\", \"unmark\", \"bye\", \"todo\", \"deadline\", \"event\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KarKuen"},"content":"    static List\u003cString\u003e actionsWithDescription \u003d Arrays.asList(\"mark\", \"unmark\", \"todo\", \"deadline\", \"event\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KarKuen"},"content":"    public static void main(String[] args) throws DukeException, FileNotFoundException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KarKuen"},"content":"        //I/O readers","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KarKuen"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KarKuen"},"content":"        PrintWriter out \u003d new PrintWriter(System.out);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KarKuen"},"content":"        greet();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KarKuen"},"content":"        //creates TaskList file at the FILE_PATH if it doesn\u0027t exist","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KarKuen"},"content":"        retriveFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KarKuen"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KarKuen"},"content":"            String input \u003d in.nextLine(); //new task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KarKuen"},"content":"            String action \u003d input.split(\" \")[0];","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KarKuen"},"content":"            //continuously receive user input until user types \"bye\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KarKuen"},"content":"            if (action.compareTo(\"bye\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KarKuen"},"content":"                try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KarKuen"},"content":"                    //save allTasks into TaskList file","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KarKuen"},"content":"                    farewell();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KarKuen"},"content":"                } catch (IOException e){","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KarKuen"},"content":"                    //unable to save allTasks into TaskList file","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KarKuen"},"content":"                    System.out.println(\"Error saving TaskList\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KarKuen"},"content":"                } finally {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KarKuen"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KarKuen"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KarKuen"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KarKuen"},"content":"            //check input for valid actions","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KarKuen"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KarKuen"},"content":"                checkInput(input);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KarKuen"},"content":"            } catch(DukeException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KarKuen"},"content":"                System.out.println(returnMessage(\"Unknown action. Please input a Todo/Deadline/Event action\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KarKuen"},"content":"            } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KarKuen"},"content":"                System.out.println(returnMessage(\"Please provide more details for the \"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KarKuen"},"content":"                        + input.split(\" \")[0] + \" action.\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KarKuen"},"content":"                continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KarKuen"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KarKuen"},"content":"            if (action.compareTo(\"list\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KarKuen"},"content":"                returnList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KarKuen"},"content":"            } else if (action.compareTo(\"unmark\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KarKuen"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KarKuen"},"content":"                unmark(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KarKuen"},"content":"            } else if (action.compareTo(\"mark\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KarKuen"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KarKuen"},"content":"                mark(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KarKuen"},"content":"            } else if (action.compareTo(\"todo\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KarKuen"},"content":"                String[] texts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KarKuen"},"content":"                addToList(new TodoTask(texts[1]));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KarKuen"},"content":"            } else if (action.compareTo(\"deadline\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KarKuen"},"content":"                //separated input into 1)action and 2)description+/by+date+time","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KarKuen"},"content":"                String[] texts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KarKuen"},"content":"                //separates text into 1)description and 2)date+time","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KarKuen"},"content":"                String[] dates \u003d texts[1].split(\"/by \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KarKuen"},"content":"                try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KarKuen"},"content":"                    //checks if the user input date follows a valid format, and add it into allTasks if it is valid","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KarKuen"},"content":"                    LocalDateTime date \u003d DeadlineTask.createDateFormatted(dates[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KarKuen"},"content":"                    addToList(new DeadlineTask(dates[0], date));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KarKuen"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KarKuen"},"content":"                    //if the user input date has an invalid format, do not add it into allTasks","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KarKuen"},"content":"                    System.out.println(\"please input a valid date\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KarKuen"},"content":"                    continue;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KarKuen"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KarKuen"},"content":"            } else if (action.compareTo(\"event\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KarKuen"},"content":"                String[] texts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KarKuen"},"content":"                String[] activity \u003d texts[1].split(\"/from\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KarKuen"},"content":"                String[] period \u003d activity[1].split(\"/to\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KarKuen"},"content":"                addToList(new EventTask(activity[0], period[0], period[1]));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KarKuen"},"content":"            } else if (action.compareTo(\"delete\") \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KarKuen"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KarKuen"},"content":"                delete(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KarKuen"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KarKuen"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KarKuen"},"content":"        out.close();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KarKuen"},"content":"     * Returns a String with padding above and below.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KarKuen"},"content":"     * @param message String to be padded.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KarKuen"},"content":"     * @return Padded String.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KarKuen"},"content":"    public static String returnMessage(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KarKuen"},"content":"        return (\"____________________________________\\n\" + message + \"\\n____________________________________\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KarKuen"},"content":"     * Returns a greeting.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KarKuen"},"content":"    public static void greet() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KarKuen"},"content":"        System.out.print(returnMessage(\"Hello ! I\u0027m Friday\\n\" + \"What can I do for you?\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KarKuen"},"content":"     * Adds every String in allTasks into the TaskList file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KarKuen"},"content":"     * @throws IOException If TaskList file is not found.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KarKuen"},"content":"    public static void farewell() throws IOException{","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KarKuen"},"content":"        System.out.println(returnMessage(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KarKuen"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(filePath));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KarKuen"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KarKuen"},"content":"            fw.write(allTasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KarKuen"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KarKuen"},"content":"        fw.close();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"KarKuen"},"content":"     * Prints out every item in allTasks with paddings above and below.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KarKuen"},"content":"    public static void returnList() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KarKuen"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"KarKuen"},"content":"        System.out.println(\"____________________________________\\n\" + \"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"KarKuen"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"KarKuen"},"content":"            System.out.println(counter + \".\" + allTasks.get(i).toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"KarKuen"},"content":"            counter++;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"KarKuen"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"KarKuen"},"content":"        System.out.println(\"____________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"KarKuen"},"content":"     * Adds a task into allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"KarKuen"},"content":"     * @param task Task to be added into allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"KarKuen"},"content":"    public static void addToList(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"KarKuen"},"content":"        allTasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"KarKuen"},"content":"        System.out.print(returnMessage(\"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\" + getTaskCount()));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"KarKuen"},"content":"     * Returns a String indicating the number of tasks in allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"KarKuen"},"content":"     * @return String with the number of tasks in allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"KarKuen"},"content":"    public static String getTaskCount() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"KarKuen"},"content":"        return (\"Now you have \" + allTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"KarKuen"},"content":"     * Unmarks the checkbox of a task in allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"KarKuen"},"content":"     * @param index Index of the checkbox index to be unmarked.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"KarKuen"},"content":"    public static void unmark(int index) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"KarKuen"},"content":"        Task task \u003d (Task) allTasks.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"KarKuen"},"content":"        task.setTaskStatus(false);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"KarKuen"},"content":"        System.out.print(returnMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"KarKuen"},"content":"     * Marks the checkbox of a task in allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"KarKuen"},"content":"     * @param index Index of the checkbox index to be marked.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"KarKuen"},"content":"    public static void mark(int index) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"KarKuen"},"content":"        Task task \u003d (Task) allTasks.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"KarKuen"},"content":"        task.setTaskStatus(true);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"KarKuen"},"content":"        System.out.print(returnMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"KarKuen"},"content":"     * Deletes a task in allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"KarKuen"},"content":"     * @param index Index of the task to be deleted in allTasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"KarKuen"},"content":"    public static void delete(int index) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"KarKuen"},"content":"        Task task \u003d (Task) allTasks.get(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"KarKuen"},"content":"        allTasks.remove(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"KarKuen"},"content":"        System.out.print(returnMessage(\"Noted. I\u0027ve removed this task:\\n\" + task.toString() + \"\\n\" + getTaskCount()));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"KarKuen"},"content":"     * Creates new TaskList file if it does not exist.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"KarKuen"},"content":"    public static void retriveFile() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"KarKuen"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"KarKuen"},"content":"            File f \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"KarKuen"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"KarKuen"},"content":"                System.out.print(returnMessage(\"creating new TaskList file\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"KarKuen"},"content":"            } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"KarKuen"},"content":"                System.out.print(returnMessage(\"accessing TaskList file\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"KarKuen"},"content":"                Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"KarKuen"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"KarKuen"},"content":"                    allTasks.add(s.nextLine());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"KarKuen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"KarKuen"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"KarKuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"KarKuen"},"content":"            System.out.println(\"an error occured\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"KarKuen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"KarKuen"},"content":"     * Checks if the user input is a valid action within availableActions and actionsWithDescription.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"KarKuen"},"content":"     * @param input The user input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"KarKuen"},"content":"     * @throws DukeException If the user input is not an action within availableActions.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"KarKuen"},"content":"    public static void checkInput(String input) throws DukeException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"KarKuen"},"content":"        if(input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"KarKuen"},"content":"            String action \u003d input.split(\" \")[0];","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"KarKuen"},"content":"            if(!availableActions.contains(action)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"KarKuen"},"content":"                throw new DukeException(\"please input a valid action\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"KarKuen"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"KarKuen"},"content":"                //check if there exist a description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"KarKuen"},"content":"                if ((input.split(\" \").length \u003c\u003d 1) \u0026\u0026","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"KarKuen"},"content":"                        //check if the action requires a description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"KarKuen"},"content":"                        (actionsWithDescription.contains(input.split(\" \")[0]))) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"KarKuen"},"content":"                    throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"KarKuen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"KarKuen"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"KarKuen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"KarKuen"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"KarKuen":237}},{"path":"src/main/java/dukeexceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"package dukeexceptions;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"        super(message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"KarKuen":7}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"package tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KarKuen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KarKuen"},"content":"//a deadline task with a deadline, indicated by the \"by\" variable.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KarKuen"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KarKuen"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KarKuen"},"content":"    public DeadlineTask(String description, LocalDateTime by) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KarKuen"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KarKuen"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KarKuen"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KarKuen"},"content":"     * @param date The date to check against.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KarKuen"},"content":"     * @return Return the date as a LocalDateTime if it is in a valid format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KarKuen"},"content":"     * @throws DukeException If the date has an invalid format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KarKuen"},"content":"    public static LocalDateTime createDateFormatted(String date) throws DukeException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KarKuen"},"content":"        DateTimeFormatter dateFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KarKuen"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KarKuen"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KarKuen"},"content":"                .toFormatter();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KarKuen"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KarKuen"},"content":"            LocalDateTime checkDate \u003d LocalDateTime.parse(date, dateFormatter);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KarKuen"},"content":"            return checkDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KarKuen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KarKuen"},"content":"            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KarKuen"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KarKuen"},"content":"     * Returns a formatted date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KarKuen"},"content":"     * @return The deadline date following the pattern of MMM dd yyyy ha.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KarKuen"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KarKuen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KarKuen"},"content":"        return (\"[D]\" + super.toString() + \" (by:\" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\")) + \")\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KarKuen"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"KarKuen":47}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"package tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"//an event task with a start and end date, indicated by the \"from\" and \"to\" variables.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"    protected String from;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"    protected String to;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KarKuen"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KarKuen"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KarKuen"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KarKuen"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KarKuen"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KarKuen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KarKuen"},"content":"        return (\"[E]\" + super.toString() + \" (from:\" + from + \"to:\" + to + \")\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KarKuen"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"KarKuen":18}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"package tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"//an abstract task class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"    protected String description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KarKuen"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KarKuen"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KarKuen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KarKuen"},"content":"     * Returns a string indicating if the task is completed or not.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KarKuen"},"content":"     * @return The String \"X\" or \" \".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KarKuen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KarKuen"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KarKuen"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KarKuen"},"content":"     * Changes the task status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KarKuen"},"content":"     * @param status The boolean value to change the task\u0027s isDone variable to.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KarKuen"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KarKuen"},"content":"    public void setTaskStatus(Boolean status) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KarKuen"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KarKuen"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KarKuen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KarKuen"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KarKuen"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"KarKuen":33}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"package tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"//a todo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KarKuen"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KarKuen"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KarKuen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KarKuen"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KarKuen"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KarKuen"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"KarKuen":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KarKuen"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KarKuen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KarKuen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KarKuen"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KarKuen"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KarKuen"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KarKuen"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KarKuen":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KarKuen"},"content":"java -classpath ..\\bin Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KarKuen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KarKuen"},"content":"java -classpath ../bin Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KarKuen":1,"-":37}}]
