[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"    archiveBaseName \u003d \"eunAI-jar\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"    archiveFileName \u003d \"eunAI.jar\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"repositories {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"    mavenCentral()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"dependencies {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Eun777":31,"-":39}},{"path":"data/eunAI.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"D | 1 | return book | 2019-12-02T00:00","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"E | 0 | workshop | 2025-02-01T00:00:00 | 2025-02-03T00:00:00","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"D | 0 | return book2 | 2019-10-15T00:00","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"T | 0 | wash clothes","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Eun777":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"# EunAI User Guide ✨✨✨","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"Welcome EunAI - your all in one task manager. EunAI isn’t just another reminders app or notebook but a powerful task manager so you can focus on what you enjoy without stressing over your to-do list. ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"With a simple and easy to use chatbot interface, EunAI is suitable for users ages 12 and over. Here’s a quick guide to get started!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"EunAI supports 3 different types of tasks: ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"- To do","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"- Deadline","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"- Event","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"## Adding To Dos, Deadlines and Events","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"### Adding To Dos","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"todo revise for cs2103 exam","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"This adds \"revise for cs2103 exam\" as a new To Do in your list!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"### Adding Deadlines","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"deadline submit cs2103 ip /by 21/02/2025 2359","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"This adds \"submit cs2103 ip\" as a new task with deadline of 21 February 2025.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"### Adding Events","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"event watch movie with friends! /from 19/02/2025 1720 /to 19/02/2025 2000","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"This adds \"watch movie with friends\" as a new event from 5:20pm to 8.00pm on 19 February 2025.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"## Managing Tasks (List, Mark, Unmark, Delete)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"### View list of tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"Displays the list of tasks with its index based on the chronological order it was added","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"### Mark a task as done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"mark 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"Marks the task at index 1 as done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"### Unmark a task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"unmark 2","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"Unmark the task at index 2 as done ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"### Delete a task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"delete 3","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"Delete the task at index 3","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"## Find","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"find book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"Finds all tasks with \"book\" in the description (E.g. read book)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"find \u003ctodo\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"Finds all To Dos","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"find \u003cdeadline\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"Finds all Deadlines","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"find \u003cevent\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"Finds all Events","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"## Supported Date Formats","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"EunAI supports multiple date formats! For example,  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"\"2 December 2019\" can be written as:  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"**📅 Slash Formats:**  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"- `02/12/2019`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"- `02/12/2019 1800`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"- `2/12/2019`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"- `2/12/2019 1800`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"- `02/12/19 1800`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"**🗓️ Month Name Formats:**  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"- `Dec 02 2019`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"- `Dec 02 2019 1800`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"**📆 ISO Formats:**  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"- `2019-12-02`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"- `2019-12-02 18:00`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"- `2019-12-02T18:00`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"- `2025-02-01T00:00:00`  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"Thats the features that EunAI has to offer FOR NOW! Look out for future updates where new features could be added 👀","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"Eun777":77,"-":20}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":" * Represents a chat bubble for user and EunAI responses.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":" * Each dialog box consists of a {@link Label} for text and an {@link ImageView} for the speaker.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"     * Constructs a DialogBox with the given text and image.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"     * @param text The message text.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"     * @param img The speaker\u0027s image.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"            throw new RuntimeException(\"Error loading DialogBox FXML\", e);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"        displayPicture.setFitWidth(50);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"        displayPicture.setFitHeight(50);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"        Circle clip \u003d new Circle(25, 25, 25); // (centerX, centerY, radius)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"     * Flips the dialog box so that the image appears on the left and text on the right.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"     * This is used for EunAI\u0027s responses.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"    private void flip() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"        ObservableList\u003cNode\u003e children \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"        Collections.reverse(children);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"        getChildren().setAll(children);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"     * Creates a dialog box for the user (image on the right).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"     * @param text The user\u0027s message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"     * @param img The user\u0027s profile image.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"     * @return A new DialogBox instance.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"     * Creates a dialog box for EunAI (image on the left).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"     * @param text The EunAI\u0027s response.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"     * @param img The EunAI\u0027s profile image.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"     * @return A new DialogBox instance with flipped alignment.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"    public static DialogBox getEunAiDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"        db.flip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"        return db;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":85}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"public class Launcher {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import eunai.EunAi;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    private EunAi eunAI \u003d new EunAi(\"data/eunai.txt\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEunAI(eunAI);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"            stage.show();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import eunai.EunAi;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    private EunAi eunAI;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"    private Image eunAiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaEunAI.png\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"    /** Injects the EunAI instance */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"    public void setEunAI(EunAi e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"        eunAI \u003d e;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"        showWelcomeMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing EunAI\u0027s reply and then appends them to","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        String response \u003d eunAI.processUserInput(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"                DialogBox.getEunAiDialog(response, eunAiImage) // Renamed from getDukeDialog","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"        String welcomeMessage \u003d \"Hellooo, I\u0027m EunAI! ✨\\nWhat\u0027s up? Need some help or just here to vibe lol\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"        dialogContainer.getChildren().add(DialogBox.getEunAiDialog(welcomeMessage, eunAiImage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":59}},{"path":"src/main/java/eunAI/EunAI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import eunai.command.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import eunai.command.CommandParser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":" * Represents the main chatbot application for managing tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":" * This class initializes the user interface, storage system, and task list,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":" * while also handling user input and executing commands.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"public class EunAi {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"     * Constructs an instance of the EunAi chatbot with the specified file path for task storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     * @param filePath The file path where tasks are stored and loaded from.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    public EunAi(String filePath) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"filePath should not be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"        taskList \u003d new TaskList(storage.loadSavedTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     * Processes user input and returns a response as a String.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     * Used for GUI interaction.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"     * @param input The user\u0027s command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"     * @return Response generated based on the command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"    public String processUserInput(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        assert input !\u003d null : \"User input should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"            return Command.execute(input, taskList, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"            return \"Oopsies! Something went wrong: \" + e.getMessage();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"     * Starts the chatbot in command-line interface (CLI) mode.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"     * Continuously reads and processes user input until the exit command is issued.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    public void run() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"        while (true) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"            System.out.println(processUserInput(input));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"            if (CommandParser.parseCommand(input) \u003d\u003d CommandParser.Command.BYE) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"                break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":62}},{"path":"src/main/java/eunai/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":" * Represents a utility class used for parsing and formatting date strings.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":" * Supports multiple date formats for flexible input handling.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"public class DateParser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    private static final List\u003cString\u003e DATE_FORMATS \u003d List.of(","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"            \"yyyy-MM-dd\", // 2019-12-02","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"            \"yyyy-MM-dd\u0027T\u0027HH:mm\", // 2019-12-02T18:00 (ISO format)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"            \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\", // 2025-02-01T00:00:00","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"            \"dd/MM/yy HHmm\", // 02/12/19 1800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"            \"d/M/yyyy HHmm\", // 2/12/2019 1800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"            \"d/M/yyyy\", // 2/12/2019","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"            \"MMM dd yyyy HHmm\", // Dec 02 2019 1800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"            \"MMM dd yyyy\", // Dec 02 2019","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"            \"dd/MM/yyyy HHmm\", // 02/12/2019 1800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"            \"dd/MM/yyyy\" // 02/12/2019","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"    );","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     * @param dateInput The date string to be parsed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     * @return The parsed date and time as a LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"    public static LocalDateTime parseDate(String dateInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"            try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"                if (format.contains(\"HHmm\") || format.contains(\"HH:mm\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"                    return LocalDateTime.parse(dateInput, formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"                    return LocalDate.parse(dateInput, formatter).atStartOfDay();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"                // Try the next format","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"        throw new IllegalArgumentException(\"Invalid date format: \" + dateInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"     * Formats a LocalDateTime object into a String with the required format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"     * The output format is \"MMM dd yyyy HH:mm\"}, e.g. \"Dec 02 2019 18:00\".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"     * @return A formatted date-time String.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"    public static String formatDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"            throw new IllegalArgumentException(\"Cannot format null date.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy hh:mm a\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"        return dateTime.format(displayFormatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Eun777":64}},{"path":"src/main/java/eunai/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import java.io.File;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"import eunai.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"import eunai.task.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"import eunai.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"import eunai.task.ToDo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":" * Represents the storage component responsible for reading from and writing tasks to a file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"    private String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"     * @param filePath The path of the file to save/load task data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     * Saves the given list of tasks to the file specified by {@code filePath}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"     * @throws IOException If an I/O error occurs during writing.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"    public boolean saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"            writeTasksToFile(writer, taskList);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"            return true; // Saving successful","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"Error saving tasks. Your changes might not be saved.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"            return false; // Saving failed","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    // Extracted helper method","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"    private void writeTasksToFile(FileWriter writer, ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"            writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"     * Loads previously saved tasks from the file specified by {@code filePath}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"     * If the file does not exist, an empty task list is returned.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"     * @return An {@code ArrayList} of tasks loaded from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"    public ArrayList\u003cTask\u003e loadSavedTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"        ArrayList\u003cTask\u003e prevTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"        File savedFile \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"        if (!savedFile.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"You have not saved any information previously. Starting a new list...\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"            return prevTaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(savedFile))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"            String currLine;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"            while ((currLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"                Task task \u003d parseTask(currLine);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"                if (task !\u003d null) { // Only add valid tasks","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"                    prevTaskList.add(task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eun777"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"Error loading tasks. Starting a new list...\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"        return prevTaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eun777"},"content":"     * Parses a line from the saved file into a {@code Task} object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"     * @param line The line from the file representing a task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"     * @return The corresponding {@code Task} object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eun777"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"        String[] splitParts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"        if (splitParts.length \u003c 3) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"Skipping invalid task format: \" + line);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"            return null; // Skip bad lines instead of crashing","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eun777"},"content":"        String taskType \u003d splitParts[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eun777"},"content":"        boolean taskIsDone \u003d splitParts[1].equals(\"1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eun777"},"content":"        String taskDescription \u003d splitParts[2];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eun777"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eun777"},"content":"            case \"T\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eun777"},"content":"                return new ToDo(taskDescription, taskIsDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eun777"},"content":"            case \"D\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eun777"},"content":"                if (splitParts.length \u003c 4) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eun777"},"content":"                    throw new IllegalArgumentException();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eun777"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eun777"},"content":"                return new Deadline(taskDescription, taskIsDone, splitParts[3]);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eun777"},"content":"            case \"E\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eun777"},"content":"                if (splitParts.length \u003c 5) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eun777"},"content":"                    throw new IllegalArgumentException();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eun777"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eun777"},"content":"                return new Event(taskDescription, taskIsDone, splitParts[3], splitParts[4]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eun777"},"content":"            default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eun777"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eun777"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"Error parsing task: \" + line);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eun777"},"content":"            return null;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Eun777":124}},{"path":"src/main/java/eunai/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":" * Provides methods to add, delete, search, and modify tasks in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"     * This is typically used when starting a new task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"     * Constructs a {@code TaskList} initialized with a given list of stored tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"     * @param storedTasks The list of tasks to initialize the task list with.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"    public TaskList(ArrayList\u003cTask\u003e storedTasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"        this.taskList \u003d storedTasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"        this.taskList.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"        this.taskList.get(index).markTask();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"     * Unmarks the task at the specified index (marks it as not done).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"        this.taskList.get(index).unmarkTask();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"     * Returns the entire list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"        return this.taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"        return taskList.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eun777"},"content":"     * Retrieves the last task in the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eun777"},"content":"     * @return The last task in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eun777"},"content":"    public Task getLastTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eun777"},"content":"        return taskList.get(getSize() - 1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eun777"},"content":"     * Searches for tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eun777"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eun777"},"content":"     * @return A {@code TaskList} containing tasks that match the search keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eun777"},"content":"    public TaskList findTask(String keyword) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eun777"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eun777"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eun777"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eun777"},"content":"                foundTasks.addTask(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eun777"},"content":"        return foundTasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eun777"},"content":"    public String getListString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eun777"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eun777"},"content":"            return \"Your task list is empty.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eun777"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Here are your tasks:\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eun777"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eun777"},"content":"            listString.append(i + 1).append(\". \").append(taskList.get(i).getTaskString()).append(\"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eun777"},"content":"        return listString.toString().trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eun777"},"content":"     * Filters tasks by type.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eun777"},"content":"     * @param type The task type to filter by (\u0027T\u0027 for ToDo, \u0027D\u0027 for Deadline, \u0027E\u0027 for Event).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eun777"},"content":"     * @return A {@code TaskList} containing only tasks of the specified type.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eun777"},"content":"    public TaskList filterByType(String type) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eun777"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eun777"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eun777"},"content":"            if (task.getTaskType().equals(type)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eun777"},"content":"                filteredTasks.addTask(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eun777"},"content":"        return filteredTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Eun777":149}},{"path":"src/main/java/eunai/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import eunai.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import eunai.exception.EmptyTaskException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import eunai.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"import eunai.task.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"import eunai.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"import eunai.task.ToDo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"import eunai.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"// JavaDocs for eunai.command package generated by ChatGPT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":" * Handles the execution of user commands.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":" * This class processes different types of commands (e.g., add, delete, mark, unmark)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":" * and interacts with {@link TaskList}, {@link Ui}, and {@link Storage} to perform the appropriate actions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"public class Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"     * Executes the user command based on the parsed command type.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"     * This method routes the input to the correct handler method depending on the command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command as a string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     * @param tasks The {@link TaskList} that stores the current tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"     * @param ui The {@link Ui} object to interact with the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"     * @param storage The {@link Storage} object to handle task persistence.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"    public static String execute(String input, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        assert tasks !\u003d null : \"tasks should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"        if (input.contains(\",\")) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"            return handleMassOps(input, tasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        CommandParser.Command commandType \u003d CommandParser.parseCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"        switch (commandType) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"        case TODO:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"            return handleTodo(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"            return handleDeadline(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"        case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"            return handleEvent(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"        case LIST:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"            return handleList(tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"        case MARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"            return handleMark(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"            return handleUnmark(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"        case FIND:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"            return handleFind(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"        case DELETE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"            return handleDelete(input, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"        case BYE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"            return handleExit(tasks, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"        default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"            return \"Hmm, I don\u0027t understand what this means.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"     * Handles mass operations for marking, unmarking, and deleting multiple tasks at once.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"     * This method processes commands where multiple task indices are provided, separated by commas.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"     * @param input The user\u0027s command string (e.g., {@code \"delete 1, 2, 3\"}).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"     * @param tasks The {@link TaskList} that stores the current tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"     * @return A formatted string describing the outcome of the operation.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"    public static String handleMassOps(String input, TaskList tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"        CommandParser.Command commandType \u003d CommandParser.parseCommand(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"        String[] taskIndices \u003d extractTaskIndices(input, commandType);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"        for (String indexStr : taskIndices) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eun777"},"content":"            processMassOperation(commandType, indexStr.trim(), tasks, result);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"        return finalizeMassOpsResult(commandType, tasks, result);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"    private static String[] extractTaskIndices(String input, CommandParser.Command commandType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"        int prefixLength \u003d getCommandPrefixLength(commandType);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"        return input.substring(prefixLength).trim().split(\"\\\\s*,\\\\s*\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"    private static int getCommandPrefixLength(CommandParser.Command commandType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eun777"},"content":"        switch (commandType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eun777"},"content":"        case MARK:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eun777"},"content":"            return 5;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eun777"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eun777"},"content":"            return 7;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eun777"},"content":"        case DELETE:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eun777"},"content":"            return 7;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eun777"},"content":"        default: throw new IllegalArgumentException(\"Invalid mass operation command.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eun777"},"content":"    private static void processMassOperation(CommandParser.Command commandType, String indexStr,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eun777"},"content":"                                             TaskList tasks, StringBuilder result) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eun777"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eun777"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eun777"},"content":"            switch (commandType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eun777"},"content":"            case MARK:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eun777"},"content":"                task.markTask();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eun777"},"content":"                result.append(\"Marked task as done:\\n\").append(task.getTaskString()).append(\"\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eun777"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eun777"},"content":"            case UNMARK:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eun777"},"content":"                task.unmarkTask();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eun777"},"content":"                result.append(\"Unmarked task:\\n\").append(task.getTaskString()).append(\"\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eun777"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eun777"},"content":"            case DELETE:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eun777"},"content":"                tasks.deleteTask(index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eun777"},"content":"                result.append(\"Deleted task:\\n\").append(task.getTaskString()).append(\"\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eun777"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eun777"},"content":"            default:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eun777"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eun777"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eun777"},"content":"            result.append(\"Skipped invalid task number: \").append(indexStr).append(\"\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eun777"},"content":"    private static String finalizeMassOpsResult(CommandParser.Command commandType,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eun777"},"content":"                                                TaskList tasks, StringBuilder result) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eun777"},"content":"        if (commandType \u003d\u003d CommandParser.Command.DELETE) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eun777"},"content":"            result.append(\"Now you have \").append(tasks.getSize()).append(\" tasks in the list.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eun777"},"content":"        return result.toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eun777"},"content":"     * Handles the addition of a {@link ToDo} task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command containing the to-do description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list to add the to-do task to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eun777"},"content":"    private static String handleTodo(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eun777"},"content":"            String description \u003d extractTodoDescription(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eun777"},"content":"            Task newTask \u003d new ToDo(description, false);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eun777"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eun777"},"content":"            return getTaskAddedMessage(newTask, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eun777"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eun777"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eun777"},"content":"    private static String extractTodoDescription(String input) throws EmptyTaskException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eun777"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eun777"},"content":"            throw new EmptyTaskException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Eun777"},"content":"        return input.substring(5).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Eun777"},"content":"     * Handles the addition of a {@link Deadline} task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command containing the deadline description and date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list to add the deadline task to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Eun777"},"content":"    private static String handleDeadline(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Eun777"},"content":"            String[] parts \u003d extractDeadlineDetails(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Eun777"},"content":"            Task newTask \u003d new Deadline(parts[0], false, parts[1]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Eun777"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Eun777"},"content":"            return getTaskAddedMessage(newTask, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Eun777"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Eun777"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Eun777"},"content":"    private static String[] extractDeadlineDetails(String input) throws EmptyTaskException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Eun777"},"content":"        String[] parts \u003d input.substring(9).trim().split(\" /by \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Eun777"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Eun777"},"content":"            throw new EmptyTaskException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Eun777"},"content":"        return parts;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Eun777"},"content":"     * Handles the addition of an {@link Event} task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command containing the event description, start date, and end date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list to add the event task to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Eun777"},"content":"    private static String handleEvent(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Eun777"},"content":"            String[] parts \u003d input.substring(6).trim().split(\" /from | /to \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Eun777"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Eun777"},"content":"                throw new EmptyTaskException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Eun777"},"content":"            Task newTask \u003d new Event(parts[0], false, parts[1], parts[2]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Eun777"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Eun777"},"content":"            return getTaskAddedMessage(newTask, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Eun777"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Eun777"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Eun777"},"content":"     * Displays the current list of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Eun777"},"content":"    private static String handleList(TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Eun777"},"content":"        return (tasks.getSize() \u003d\u003d 0) ? \"Your task list is empty.\" : tasks.getListString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Eun777"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command specifying the task index to mark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list containing the task to mark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Eun777"},"content":"    private static String handleMark(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Eun777"},"content":"            Task task \u003d getTaskFromInput(input, tasks, 5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Eun777"},"content":"            task.markTask();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Eun777"},"content":"            return \"Good job!! I am so proud of you and I\u0027ve marked this task as done:\\n\" + task.getTaskString();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Eun777"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Eun777"},"content":"            return \"Sorryz but could you please enter a valid task number after \u0027mark\u0027.\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Eun777"},"content":"    private static Task getTaskFromInput(String input, TaskList tasks, int prefixLength) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Eun777"},"content":"        int index \u003d getTaskIndex(input, prefixLength);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Eun777"},"content":"        return tasks.getTask(index);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Eun777"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command specifying the task index to unmark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list containing the task to unmark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Eun777"},"content":"    private static String handleUnmark(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Eun777"},"content":"            Task task \u003d getTaskFromInput(input, tasks, 7);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Eun777"},"content":"            task.unmarkTask();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Eun777"},"content":"            return \"Oh gosh, you didn\u0027t actually finish it... I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Eun777"},"content":"                    + task.getTaskString();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Eun777"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Eun777"},"content":"            return \"Please enter a valid task number after \u0027unmark\u0027.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Eun777"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command specifying the task index to delete.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list containing the task to delete.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Eun777"},"content":"    private static String handleDelete(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Eun777"},"content":"            Task task \u003d getTaskFromInput(input, tasks, 7);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Eun777"},"content":"            tasks.deleteTask(getTaskIndex(input, 7)); // Still need index to delete","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Eun777"},"content":"            return \"Oki! I\u0027ve removed this task:\\n\" + task.getTaskString()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Eun777"},"content":"                    + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Eun777"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Eun777"},"content":"            return \"Please enter a valid task number to delete.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Eun777"},"content":"     * Finds and displays tasks that match the given keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Eun777"},"content":"     * @param input The user input command containing the search keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Eun777"},"content":"     * @param tasks The task list to search within.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Eun777"},"content":"    private static String handleFind(String input, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Eun777"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Eun777"},"content":"            String keyword \u003d extractFindKeyword(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Eun777"},"content":"            TaskList foundTasks \u003d filterTasksByKeyword(tasks, keyword);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Eun777"},"content":"            if (foundTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Eun777"},"content":"                return \"Hmm, no tasks match that search. Try again!\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Eun777"},"content":"            return \"Found \" + foundTasks.getSize() + \" matching task(s):\\n\" + foundTasks.getListString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Eun777"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Eun777"},"content":"            return \"Invalid search. Please provide a keyword or task type after \u0027find\u0027.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Eun777"},"content":"    private static String extractFindKeyword(String input) throws EmptyTaskException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Eun777"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Eun777"},"content":"            throw new EmptyTaskException(\"Oopsies! The keyword for find cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Eun777"},"content":"        return input.substring(5).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Eun777"},"content":"    private static TaskList filterTasksByKeyword(TaskList tasks, String keyword) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Eun777"},"content":"        switch (keyword.toLowerCase()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Eun777"},"content":"        case \"\u003ctodo\u003e\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Eun777"},"content":"            return tasks.filterByType(\"T\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Eun777"},"content":"        case \"\u003cdeadline\u003e\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Eun777"},"content":"            return tasks.filterByType(\"D\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Eun777"},"content":"        case \"\u003cevent\u003e\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Eun777"},"content":"            return tasks.filterByType(\"E\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Eun777"},"content":"        default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Eun777"},"content":"            return tasks.findTask(keyword);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Eun777"},"content":"    private static String handleExit(TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Eun777"},"content":"        boolean isSaved \u003d storage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Eun777"},"content":"        if (!isSaved) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Eun777"},"content":"            return \"Oopsies! I couldn\u0027t save your tasks. Something went wrong! Sorry manz.\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Eun777"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Eun777"},"content":"        delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Eun777"},"content":"        delay.play();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Eun777"},"content":"        return \"Byeee! I saved your tasks! Keep working on them, I\u0027ll see you next time!\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Eun777"},"content":"    private static int getTaskIndex(String input, int prefixLength) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Eun777"},"content":"        assert input.length() \u003e prefixLength : \"input should be long enough to contain a task number\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Eun777"},"content":"        int index \u003d Integer.parseInt(input.substring(prefixLength).trim()) - 1;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Eun777"},"content":"        assert index \u003e\u003d 0 : \"task index should not be negative\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Eun777"},"content":"        return index;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Eun777"},"content":"    private static String getTaskAddedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Eun777"},"content":"        return \"Doneee! I\u0027ve added this new task:\\n\" + task.getTaskString()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Eun777"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Eun777":348}},{"path":"src/main/java/eunai/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":" * Parses user input and identifies the corresponding command type.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":" * Provides functionality to map raw input strings to predefined command types.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"public class CommandParser {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"     * Represents the list of supported commands in the application.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"    public enum Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"        TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND, BYE, INVALID","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"     * Parses the user\u0027s input string and returns the corresponding {@link Command} type.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"     * If the input does not match any known command, {@code Command.INVALID} is returned.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"     * @return The corresponding {@link Command} type based on the input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"        input \u003d input.trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"            return Command.TODO;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"            return Command.EVENT;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"            return Command.LIST;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"            return Command.MARK;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"            return Command.UNMARK;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"            return Command.DELETE;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"            return Command.FIND;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"            return Command.BYE;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"            return Command.INVALID;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"Eun777":50}},{"path":"src/main/java/eunai/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.exception;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":" * Represents an exception that is thrown when a task is created without a description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":" * Inherits from {@link EunAiException} to handle task-specific input errors.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"public class EmptyTaskException extends EunAiException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"     * Constructs an {@code EmptyTaskException} with the specified detail message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    public EmptyTaskException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Eun777":17}},{"path":"src/main/java/eunai/exception/EunAiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.exception;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"// JavaDocs for eunai.exception package generated by ChatGPT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":" * Represents a custom exception specific to the {@code eunai} application.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":" * Serves as the base class for all application-specific exceptions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"public class EunAiException extends Exception {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"     * Constructs an {@code EunAIException} with the specified detail message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    public EunAiException(String message) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Eun777":18}},{"path":"src/main/java/eunai/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.DateParser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":" * Inherits from the {@link Task} class and includes a due date for completion.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"    /** The date and time by which the task should be completed. */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    protected LocalDateTime byDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"     * Constructs a {@code Deadline} task with the specified description, completion status, and due date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"     * @param isDone Indicates whether the task is marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     * @param date The due date of the task in string format, which will be parsed into a {@code LocalDateTime}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    public Deadline(String description, boolean isDone, String date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"        this.byDate \u003d DateParser.parseDate(date);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"     * Prints the deadline task details to the console.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"     * The format is {@code [D][status] description (by: due date)}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"    public void printTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"[D][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"                + \" (by: \" + DateParser.formatDate(this.byDate) + \")\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the deadline task for display purposes.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the deadline task in the format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"     *         {@code [D][status] description (by: due date)}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"                + \" (by: \" + DateParser.formatDate(this.byDate) + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the deadline task formatted for file storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the deadline task in the format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"     *         {@code D | 1/0 | description | due date}, where {@code 1} indicates a completed task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"     *         and {@code 0} indicates an incomplete task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.byDate;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"        return \"D\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Eun777":66}},{"path":"src/main/java/eunai/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import eunai.DateParser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":" * Represents an event task that occurs within a specific time period.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":" * Inherits from the {@link Task} class and includes start and end dates for the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    /** The start date and time of the event. */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    /** The end date and time of the event. */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     * Constructs an {@code Event} task with the specified description, completion status, start date, and end date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"     * @param isDone Indicates whether the event task is marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"     * @param startDate The start date of the event in string format, which will be parsed into a {@code LocalDateTime}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"     * @param endDate The end date of the event in string format, which will be parsed into a {@code LocalDateTime}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"    public Event(String description, boolean isDone, String startDate, String endDate) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        this.startDate \u003d DateParser.parseDate(startDate);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"        this.endDate \u003d DateParser.parseDate(endDate);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"     * Prints the event task details to the console.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"     * The format is {@code [E][status] description (from: start date to: end date)}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"    public void printTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"[E][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"                + \" (from: \" + DateParser.formatDate(this.startDate)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"                + \" to: \" + DateParser.formatDate(this.endDate) + \")\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the event task for display purposes.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the event task in the format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"     *         {@code [E][status] description (from: start date to: end date)}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"                + \" (from: \" + DateParser.formatDate(this.startDate)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"                + \" to: \" + DateParser.formatDate(this.endDate) + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the event task formatted for file storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the event task in the format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"     *         {@code E | 1/0 | description | start date | end date}, where {@code 1} indicates a completed task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"     *         and {@code 0} indicates an incomplete task. The dates are stored in ISO format.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"                + startDate.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) + \" | \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"                + endDate.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"        return \"E\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Eun777":76}},{"path":"src/main/java/eunai/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"// JavaDocs for eunai.task package generated by ChatGPT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":" * Provides common functionalities for all types of tasks such as marking, unmarking, and displaying task information.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":" * Subclasses must implement the {@link #toFileFormat()} method for file storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"    /** The description of the task. */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    /** The completion status of the task. {@code true} if the task is done, {@code false} otherwise. */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"     * Constructs a {@code Task} with the specified description and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"     * @param isDone Indicates whether the task is marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     * {@code \"X\"} if the task is done, otherwise a blank space {@code \" \"}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"     * @return The status icon representing whether the task is completed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"     * Prints the task details to the console.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"     * The format is {@code [status] description}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"    public void printTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the task for display purposes.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the task in the format {@code [status] description}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"    public boolean taskStatus() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the task formatted for file storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"     * This method must be implemented by subclasses.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the task in a format suitable for file storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eun777"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"        return this.description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eun777"},"content":"     * Returns the task type identifier.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the task type (\"T\" for ToDo, \"D\" for Deadline, \"E\" for Event).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eun777"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eun777"},"content":"        return \"default\"; // Default, should be overridden in subclasses","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Eun777":106}},{"path":"src/main/java/eunai/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":" * Represents a simple to-do task without any specific date or time.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":" * Inherits from the {@link Task} class and provides methods to display and store the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"     * Constructs a {@code ToDo} task with the specified description and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"     * @param isDone Indicates whether the to-do task is marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"     * Prints the to-do task details to the console.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     * The format is {@code [T][status] description}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"    public void printTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"[T][\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the to-do task for display purposes.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the to-do task in the format {@code [T][status] description}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"     * Returns the string representation of the to-do task formatted for file storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"     * @return A string representing the to-do task in the format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"     *         {@code T | 1/0 | description}, where {@code 1} indicates a completed task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"     *         and {@code 0} indicates an incomplete task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"        return \"T\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Eun777":54}},{"path":"src/main/java/eunai/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"package eunai.ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import eunai.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"// JavaDocs for eunai.ui package generated by ChatGPT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":" * Handles all interactions with the user for CLI.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":" * Displays messages to the user and reads user input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    /** Scanner object to read user input from the console. */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"     * Constructs a {@code Ui} object and initializes the input scanner.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"    public Ui() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    Hello! I\u0027m eunai\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"     * Reads the next command input from the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"    public void showErrorMessage(String errorMessage) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    oopsies! \" + errorMessage);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"     * @param totalTasks The total number of tasks after the addition.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    Added the task! Remember to do it!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    \" + task.getTaskString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    You have \" + totalTasks + \" scheduled tasks and events.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eun777"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eun777"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eun777"},"content":"     * @param totalTasks The total number of tasks after the deletion.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    Oki! I\u0027ve deleted this task since you said so...\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    \" + task.getTaskString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    You have \" + totalTasks + \" scheduled tasks and events.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eun777"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"     * @param totalTasks The total number of remaining tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eun777"},"content":"    public void showTaskMarked(Task task, int totalTasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    You\u0027ve completed a task? Good job! I have marked it as done.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    \" + task.getTaskString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    You have \" + totalTasks + \" scheduled tasks and events left. You got this!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eun777"},"content":"     * Displays a message confirming that a task has been unmarked.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eun777"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eun777"},"content":"     * @param totalTasks The total number of tasks after unmarking.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eun777"},"content":"    public void showTaskUnmarked(Task task, int totalTasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    You didn\u0027t complete the task? Please do it and stop procrastinating please...\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    \" + task.getTaskString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    You now have \" + totalTasks + \" scheduled tasks and events.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eun777"},"content":"     * Displays the list of all tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eun777"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eun777"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eun777"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"    You have no tasks left. GOOD JOB!!!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eun777"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"    You still have some uncompleted tasks or future events:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eun777"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eun777"},"content":"                System.out.println(\"    \" + (i + 1) + \". \" + taskList.getTask(i).getTaskString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eun777"},"content":"     * Displays tasks that match the user\u0027s search keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eun777"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eun777"},"content":"     * @param taskList The list of tasks that match the search criteria.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eun777"},"content":"    public void showFoundTasks(TaskList taskList) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eun777"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"    No tasks with this keyword found...\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eun777"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eun777"},"content":"            System.out.println(\"    Tasks found:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eun777"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eun777"},"content":"                System.out.println(\"    \" + (i + 1) + \". \" + taskList.getTask(i).getTaskString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eun777"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eun777"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eun777"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eun777"},"content":"     * Displays a separator line to improve the readability of console outputs.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eun777"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eun777"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eun777"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Eun777":163}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../main.css\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Eun777":19}},{"path":"src/test/java/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.command.CommandParser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"public class CommandParserTest {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"    public void testParseCommand() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.TODO, CommandParser.parseCommand(\"todo read book\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.DEADLINE, CommandParser.parseCommand(\"deadline return book /by 2024-06-01\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.EVENT, CommandParser.parseCommand(\"event meeting /from Monday /to Tuesday\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.LIST, CommandParser.parseCommand(\"list\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.INVALID, CommandParser.parseCommand(\"random text\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"    public void testParseCommandEdgeCases() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.INVALID, CommandParser.parseCommand(\"\")); // empty string","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.INVALID, CommandParser.parseCommand(\"   \")); // spaces only","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.TODO, CommandParser.parseCommand(\"todo\")); // no description","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"        assertEquals(CommandParser.Command.LIST, CommandParser.parseCommand(\"list \")); // trailing space","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Eun777":27}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"    public void testGetTaskStringNotDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", false, \"2024-06-01 18:00\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"        String expected \u003d \"[D][ ] submit assignment (by: Jun 1, 2024 06:00 pm)\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"        assertEquals(expected, deadline.getTaskString());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"    public void testGetTaskStringDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", true, \"2024-06-01 18:00\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"        String expected \u003d \"[D][X] submit assignment (by: Jun 1, 2024 06:00 pm)\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"        assertEquals(expected, deadline.getTaskString());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"    public void testToFileFormatNotDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", false, \"2024-06-01 18:00\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        String expected \u003d \"D | 0 | submit assignment | 2024-06-01T18:00\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"        assertEquals(expected, deadline.toFileFormat());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"    public void testToFileFormatDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", true, \"2024-06-01 18:00\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"        String expected \u003d \"D | 1 | submit assignment | 2024-06-01T18:00\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eun777"},"content":"        assertEquals(expected, deadline.toFileFormat());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Eun777":41}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"import eunai.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import eunai.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"import eunai.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import eunai.task.ToDo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eun777"},"content":"        Task todo \u003d new ToDo(\"read book\", false);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eun777"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eun777"},"content":"        assertEquals(\"read book\", taskList.getLastTask().getDescription());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    @Test","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eun777"},"content":"    public void testFindTask() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eun777"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eun777"},"content":"        taskList.addTask(new ToDo(\"read book\", false));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eun777"},"content":"        taskList.addTask(new Deadline(\"return book\", false, \"2024-06-01\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eun777"},"content":"        TaskList results \u003d taskList.findTask(\"book\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eun777"},"content":"        assertEquals(2, results.getSize());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eun777"},"content":"        results \u003d taskList.findTask(\"return\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eun777"},"content":"        assertEquals(1, results.getSize());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eun777"},"content":"        assertEquals(\"return book\", results.getTask(0).getDescription());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eun777"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eun777"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Eun777":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eun777"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eun777"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eun777"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eun777"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eun777"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Eun777":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"java -classpath ../bin EunAI \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Eun777":1,"-":37}}]
