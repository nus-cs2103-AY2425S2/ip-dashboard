[{"path":"src/main/java/DateAndOptionalTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"import java.util.Optional;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"public class DateAndOptionalTime {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"    private final Optional\u003cLocalTime\u003e time;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"    public DateAndOptionalTime(ArrayList\u003cString\u003e tokens) throws WrongFormatException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"        if (tokens.size() !\u003d 1 \u0026\u0026 tokens.size() !\u003d 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"            throw new WrongFormatException(\"Date \u0026 time must contain one or two tokens.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"            this.date \u003d LocalDate.parse(tokens.get(0));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"            throw new WrongFormatException(\"Date cannot be parsed as yyyy-MM-dd.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"        if (tokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"            this.time \u003d Optional.empty();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuto1115"},"content":"                this.time \u003d Optional.of(LocalTime.parse(tokens.get(1)));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuto1115"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuto1115"},"content":"                throw new WrongFormatException(\"Time cannot be parsed as hh:mm or hh:mm:ss.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuto1115"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuto1115"},"content":"        String res \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuto1115"},"content":"        res +\u003d time.map(t -\u003e \", \" + t).orElse(\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuto1115"},"content":"        return res;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuto1115"},"content":"    public String getOriginalString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuto1115"},"content":"        String res \u003d date.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuto1115"},"content":"        res +\u003d time.map(t -\u003e \" \" + t).orElse(\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuto1115"},"content":"        return res;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"yuto1115":44}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"    private final DateAndOptionalTime by;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"    public Deadline(String str, DateAndOptionalTime by) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"        super(str);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"    public String taskType() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"        return \"D\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"    public ArrayList\u003cString\u003e getTaskRecord() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e taskRecord \u003d super.getTaskRecord();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"        taskRecord.add(this.by.getOriginalString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"        return taskRecord;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuto1115"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.by.toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"yuto1115":27}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"    private final DateAndOptionalTime from, to;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"    public Event(String str, DateAndOptionalTime from, DateAndOptionalTime to) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"        super(str);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"    public String taskType() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"        return \"E\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"    public ArrayList\u003cString\u003e getTaskRecord() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e taskRecord \u003d super.getTaskRecord();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"        taskRecord.add(this.from.getOriginalString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"        taskRecord.add(this.to.getOriginalString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"        return taskRecord;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuto1115"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuto1115"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(), this.from.toString(), this.to.toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"yuto1115":29}},{"path":"src/main/java/Odin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"public class Odin {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"    private static final String SEPARATOR \u003d \"_________________________________________________________________________________________________________\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"    private static final String RECORD_FILE_NAME \u003d \"./src/data/records.txt\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cTask\u003e tasks \u003d loadTaskList(RECORD_FILE_NAME);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"        speak(\"I am Odin, god of wisdom.\", \"What knowledge do you seek?\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"        boolean done \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"        while (!done) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"            ArrayList\u003cString\u003e tokens \u003d listen();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"                done \u003d handleCommand(tasks, tokens);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"            } catch (OdinException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"                speak(e.getMessageList());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuto1115"},"content":"        saveTaskList(RECORD_FILE_NAME, tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuto1115"},"content":"     * Processes the given tokens and updates the task list accordingly.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuto1115"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuto1115"},"content":"     * @param tasks  The task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuto1115"},"content":"     * @param tokens Tokens from the user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuto1115"},"content":"     * @return True if the conversation is finished, false otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuto1115"},"content":"     * @throws OdinException If the given tokens do not follow correct formats.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuto1115"},"content":"    private static boolean handleCommand(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e tokens) throws OdinException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuto1115"},"content":"        switch (tokens.get(0).toLowerCase()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuto1115"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuto1115"},"content":"            speak(\"Bye. We shall meet again.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuto1115"},"content":"            return true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuto1115"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuto1115"},"content":"                if (tokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"TASK cannot be empty.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuto1115"},"content":"                tasks.add(new Todo(concatBySpace(tokens, 1, tokens.size())));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuto1115"},"content":"                speak(\"This task has been added to the list.\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuto1115"},"content":"                        \"  \" + tasks.get(tasks.size() - 1),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuto1115"},"content":"                        String.format(\"Now, %d tasks stand before you. Choose wisely, for time is ever fleeting.\", tasks.size()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuto1115"},"content":"            } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuto1115"},"content":"                e.addCorrectFormat(\"todo TASK\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuto1115"},"content":"                throw e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuto1115"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuto1115"},"content":"                int by_idx \u003d tokens.indexOf(\"/by\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuto1115"},"content":"                if (by_idx \u003d\u003d -1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"\u0027/by not found.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuto1115"},"content":"                } else if (by_idx \u003d\u003d 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"TASK cannot be empty.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuto1115"},"content":"                } else if (by_idx \u003d\u003d tokens.size() - 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"DATE cannot be empty.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuto1115"},"content":"                DateAndOptionalTime by \u003d new DateAndOptionalTime(new ArrayList\u003c\u003e(tokens.subList(by_idx + 1, tokens.size())));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuto1115"},"content":"                tasks.add(new Deadline(concatBySpace(tokens, 1, by_idx), by));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuto1115"},"content":"                speak(\"This task has been added to the list.\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuto1115"},"content":"                        \"  \" + tasks.get(tasks.size() - 1),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuto1115"},"content":"                        String.format(\"Now, %d tasks stand before you. Choose wisely, for time is ever fleeting.\", tasks.size()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuto1115"},"content":"            } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuto1115"},"content":"                e.addCorrectFormat(\"deadline TASK /by DATE [TIME]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuto1115"},"content":"                throw e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuto1115"},"content":"        case \"event\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuto1115"},"content":"                int from_idx \u003d tokens.indexOf(\"/from\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuto1115"},"content":"                int to_idx \u003d tokens.indexOf(\"/to\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuto1115"},"content":"                if (from_idx \u003d\u003d -1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"\u0027/from not found.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuto1115"},"content":"                } else if (to_idx \u003d\u003d -1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"\u0027/to not found.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuto1115"},"content":"                } else if (from_idx \u003e to_idx) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"/from must come before /to.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuto1115"},"content":"                } else if (from_idx \u003d\u003d 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"TASK cannot be empty.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuto1115"},"content":"                } else if (from_idx + 1 \u003d\u003d to_idx || to_idx \u003d\u003d tokens.size() - 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"DATE cannot be empty.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuto1115"},"content":"                DateAndOptionalTime from \u003d new DateAndOptionalTime(new ArrayList\u003c\u003e(tokens.subList(from_idx + 1, to_idx)));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuto1115"},"content":"                DateAndOptionalTime to \u003d new DateAndOptionalTime(new ArrayList\u003c\u003e(tokens.subList(to_idx + 1, tokens.size())));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuto1115"},"content":"                tasks.add(new Event(concatBySpace(tokens, 1, from_idx), from, to));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuto1115"},"content":"                speak(\"This task has been added to the list.\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuto1115"},"content":"                        \"  \" + tasks.get(tasks.size() - 1),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuto1115"},"content":"                        String.format(\"Now, %d tasks stand before you. Choose wisely, for time is ever fleeting.\", tasks.size()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuto1115"},"content":"            } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuto1115"},"content":"                e.addCorrectFormat(\"event TASK /from DATE [TIME] /to DATE [TIME]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuto1115"},"content":"                throw e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuto1115"},"content":"        case \"list\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuto1115"},"content":"            ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuto1115"},"content":"            messages.add(\"These are the tasks upon the list.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuto1115"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuto1115"},"content":"                messages.add(String.format(\"%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuto1115"},"content":"            speak(messages);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuto1115"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuto1115"},"content":"                if (tokens.size() !\u003d 2 || !isInteger(tokens.get(1))) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"\u0027mark\u0027 command must be followed by an integer.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuto1115"},"content":"                int idx \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuto1115"},"content":"                if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuto1115"},"content":"                    throw new OdinException(String.format(\"The task index you speak of is incorrect. There are tasks numbered 1 through %d.\", tasks.size()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuto1115"},"content":"                tasks.get(idx - 1).markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuto1115"},"content":"                speak(String.format(\"Task %d has been marked as completed. May the next task be approached with equal diligence.\", idx), tasks.get(idx - 1).toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuto1115"},"content":"            } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuto1115"},"content":"                e.addCorrectFormat(\"mark TASK_INDEX\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuto1115"},"content":"                throw e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuto1115"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuto1115"},"content":"                if (tokens.size() !\u003d 2 || !isInteger(tokens.get(1))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"\u0027unmark\u0027 command must be followed by an integer.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuto1115"},"content":"                int idx \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuto1115"},"content":"                if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuto1115"},"content":"                    throw new OdinException(String.format(\"The task index you speak of is incorrect. There are tasks numbered 1 through %d.\", tasks.size()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuto1115"},"content":"                tasks.get(idx - 1).markAsNotDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuto1115"},"content":"                speak(String.format(\"Task %d remains unfinished. Let it be revisited with renewed focus and determination.\", idx), tasks.get(idx - 1).toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuto1115"},"content":"            } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuto1115"},"content":"                e.addCorrectFormat(\"unmark TASK_INDEX\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuto1115"},"content":"                throw e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yuto1115"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yuto1115"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yuto1115"},"content":"                if (tokens.size() !\u003d 2 || !isInteger(tokens.get(1))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yuto1115"},"content":"                    throw new WrongFormatException(\"\u0027delete\u0027 command must be followed by an integer.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yuto1115"},"content":"                int idx \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yuto1115"},"content":"                if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yuto1115"},"content":"                    throw new OdinException(String.format(\"The task index you speak of is incorrect. There are tasks numbered 1 through %d.\", tasks.size()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yuto1115"},"content":"                speak(\"This task has been removed from the list.\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yuto1115"},"content":"                        \"  \" + tasks.get(idx - 1),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yuto1115"},"content":"                        String.format(\"Now, %d tasks stand before you. Choose wisely, for time is ever fleeting.\", tasks.size() - 1));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yuto1115"},"content":"                tasks.remove(idx - 1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yuto1115"},"content":"            } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yuto1115"},"content":"                e.addCorrectFormat(\"delete TASK_INDEX\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yuto1115"},"content":"                throw e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yuto1115"},"content":"        default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yuto1115"},"content":"            throw new OdinException(String.format(\"The command \u0027%s\u0027 is not supported. Seek the correct path, and your request shall be honored.\", tokens.get(0)));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yuto1115"},"content":"        return false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yuto1115"},"content":"     * Prints messages to the standard output in a specific format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yuto1115"},"content":"    private static void speak(String... messages) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yuto1115"},"content":"        for (int i \u003d 0; i \u003c messages.length; i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yuto1115"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yuto1115"},"content":"                System.out.println(\"Odin: \" + messages[i]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yuto1115"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yuto1115"},"content":"                System.out.println(\"      \" + messages[i]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yuto1115"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yuto1115"},"content":"     * Overloaded version of speak(String...).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yuto1115"},"content":"    private static void speak(ArrayList\u003cString\u003e messages) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yuto1115"},"content":"        for (int i \u003d 0; i \u003c messages.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yuto1115"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yuto1115"},"content":"                System.out.println(\"Odin: \" + messages.get(i));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yuto1115"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yuto1115"},"content":"                System.out.println(\"      \" + messages.get(i));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yuto1115"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yuto1115"},"content":"     * Reads input from the user, and splits it into tokens by spaces.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yuto1115"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yuto1115"},"content":"     * @return The list of tokens the user inputted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yuto1115"},"content":"    private static ArrayList\u003cString\u003e listen() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yuto1115"},"content":"        while (tokens.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yuto1115"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yuto1115"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yuto1115"},"content":"            for (String token : input.split(\" \")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yuto1115"},"content":"                if (!token.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yuto1115"},"content":"                    tokens.add(token);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yuto1115"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yuto1115"},"content":"        return tokens;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yuto1115"},"content":"     * Check if the given string represents a (positive) integer.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yuto1115"},"content":"    private static boolean isInteger(String str) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"yuto1115"},"content":"        return str.matches(\"\\\\d+\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yuto1115"},"content":"     * Concatenates by spaces the words in the specific range of a list of tokens.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yuto1115"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yuto1115"},"content":"     * @param tokens List of tokens.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yuto1115"},"content":"     * @param l      Start index of the range (inclusive).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yuto1115"},"content":"     * @param r      End index of the range (exclusive).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yuto1115"},"content":"     * @return String obtained by concatenating the tokens with spaces in between.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yuto1115"},"content":"    private static String concatBySpace(ArrayList\u003cString\u003e tokens, int l, int r) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yuto1115"},"content":"        if (!(0 \u003c\u003d l \u0026\u0026 l \u003c r \u0026\u0026 r \u003c\u003d tokens.size())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yuto1115"},"content":"            throw new RuntimeException(\"concatBySpace called with invalid range.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yuto1115"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yuto1115"},"content":"        for (int i \u003d l; i \u003c r; i++) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yuto1115"},"content":"            if (i \u003e l) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yuto1115"},"content":"                sb.append(\" \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yuto1115"},"content":"            sb.append(tokens.get(i));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yuto1115"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yuto1115"},"content":"    private static ArrayList\u003cTask\u003e loadTaskList(String fileName) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e currentRecord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yuto1115"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"yuto1115"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yuto1115"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yuto1115"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yuto1115"},"content":"                if (line.equals(SEPARATOR)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yuto1115"},"content":"                    tasks.add(Task.restoreFromTaskRecord(currentRecord));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yuto1115"},"content":"                    currentRecord.clear();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"yuto1115"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yuto1115"},"content":"                    currentRecord.add(line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"yuto1115"},"content":"            if (!currentRecord.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"yuto1115"},"content":"                throw new WrongFormatException(\"Task record must end with a separator line.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"yuto1115"},"content":"            fileScanner.close();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yuto1115"},"content":"            System.out.println(String.format(\"(system) Successfully restored the task list from record file %s.\", fileName));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"yuto1115"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"yuto1115"},"content":"            System.out.println(\"(system) Record file not found. Initialising with an empty task list.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"yuto1115"},"content":"        } catch (WrongFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"yuto1115"},"content":"            System.out.println(\"(system) \" + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yuto1115"},"content":"            System.out.println(\"(system) Task record is broken. Initialising with an empty task list.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"yuto1115"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"yuto1115"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"yuto1115"},"content":"    private static void saveTaskList(String fileName, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"yuto1115"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"yuto1115"},"content":"        if (file.getParentFile() !\u003d null \u0026\u0026 !file.getParentFile().exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yuto1115"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"yuto1115"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file, false)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"yuto1115"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"yuto1115"},"content":"                ArrayList\u003cString\u003e record \u003d task.getTaskRecord();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"yuto1115"},"content":"                for (String s : record) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"yuto1115"},"content":"                    fileWriter.write(s + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"yuto1115"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"yuto1115"},"content":"                fileWriter.write(SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"yuto1115"},"content":"            fileWriter.close();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"yuto1115"},"content":"            System.out.println(String.format(\"(system) Successfully saved the task list to record file %s.\", fileName));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"yuto1115"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"yuto1115"},"content":"            System.out.println(\"(system) An error occurred while saving the task list.\\n\" + e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"yuto1115":293}},{"path":"src/main/java/OdinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"public class OdinException extends Exception {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"    OdinException(String message) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"        super(message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"    public ArrayList\u003cString\u003e getMessageList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"        messages.add(this.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"        return messages;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"};","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"yuto1115":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"import java.util.List;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"    final String name;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"    boolean done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"        this.done \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"    public abstract String taskType();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuto1115"},"content":"     * Returns a list of strings to be saved in record.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuto1115"},"content":"    public ArrayList\u003cString\u003e getTaskRecord() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e taskRecord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuto1115"},"content":"        taskRecord.add(this.taskType());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuto1115"},"content":"        taskRecord.add(this.name);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuto1115"},"content":"        taskRecord.add(this.done ? \"1\" : \"0\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuto1115"},"content":"        return taskRecord;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuto1115"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuto1115"},"content":"     * Restores a task object from a list of strings saved in a record.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuto1115"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuto1115"},"content":"     * @throws WrongFormatException If the record does not follow the correct format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuto1115"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuto1115"},"content":"    public static Task restoreFromTaskRecord(ArrayList\u003cString\u003e taskRecord) throws WrongFormatException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuto1115"},"content":"        int len \u003d taskRecord.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuto1115"},"content":"        if (len \u003c 3) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuto1115"},"content":"            throw new WrongFormatException(\"Number of tokens in a task record must be at least three.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuto1115"},"content":"        String type \u003d taskRecord.get(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuto1115"},"content":"        String name \u003d taskRecord.get(1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuto1115"},"content":"        String isDone \u003d taskRecord.get(2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuto1115"},"content":"        Task task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuto1115"},"content":"        switch (type) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuto1115"},"content":"        case \"T\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuto1115"},"content":"            if (len !\u003d 3) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuto1115"},"content":"                throw new WrongFormatException(\"Number of tokens in a task record of todo must be three.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuto1115"},"content":"            task \u003d new Todo(name);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuto1115"},"content":"        case \"D\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuto1115"},"content":"            if (len !\u003d 4) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuto1115"},"content":"                throw new WrongFormatException(\"Number of tokens in a task record of deadline must be four.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuto1115"},"content":"            DateAndOptionalTime by \u003d new DateAndOptionalTime(new ArrayList\u003c\u003e(List.of(taskRecord.get(3).split(\" \"))));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuto1115"},"content":"            task \u003d new Deadline(name, by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuto1115"},"content":"        case \"E\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuto1115"},"content":"            if (len !\u003d 5) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuto1115"},"content":"                throw new WrongFormatException(\"Number of tokens in a task record of event must be five.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuto1115"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuto1115"},"content":"            DateAndOptionalTime from \u003d new DateAndOptionalTime(new ArrayList\u003c\u003e(List.of(taskRecord.get(3).split(\" \"))));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuto1115"},"content":"            DateAndOptionalTime to \u003d new DateAndOptionalTime(new ArrayList\u003c\u003e(List.of(taskRecord.get(4).split(\" \"))));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuto1115"},"content":"            task \u003d new Event(name, from, to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuto1115"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuto1115"},"content":"        default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuto1115"},"content":"            throw new WrongFormatException(\"Unknown task type in a task record.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuto1115"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuto1115"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuto1115"},"content":"        return task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuto1115"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuto1115"},"content":"        String res \u003d String.format(\"[%s][\", this.taskType());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuto1115"},"content":"        if (this.done) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuto1115"},"content":"            res +\u003d \"X\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuto1115"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuto1115"},"content":"            res +\u003d \" \";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuto1115"},"content":"        res +\u003d \"] \" + name;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuto1115"},"content":"        return res;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"yuto1115":95}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"    public Todo(String str) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"        super(str);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"    public String taskType() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"        return \"T\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"yuto1115":10}},{"path":"src/main/java/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"import java.util.Optional;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"public class WrongFormatException extends OdinException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"    private Optional\u003cString\u003e correctFormat;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"    public WrongFormatException(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"        super(message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"        this.correctFormat \u003d Optional.empty();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"    public void addCorrectFormat(String correctFormat) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"        this.correctFormat \u003d Optional.of(correctFormat);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"    public ArrayList\u003cString\u003e getMessageList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"        ArrayList\u003cString\u003e messages \u003d super.getMessageList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"        if (this.correctFormat.isPresent()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"            messages.add(String.format(\"Your format is flawed. The correct method is to utter \u0027%s\u0027.\", this.correctFormat.orElse(\"\")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"        return messages;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"yuto1115":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuto1115"},"content":"todo borrow book","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuto1115"},"content":"todo","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuto1115"},"content":"deadline return book","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuto1115"},"content":"deadline /by 2025-03-11","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuto1115"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuto1115"},"content":"deadline return book /by 2025-03-11","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuto1115"},"content":"deadline return book /by 2025-03-11 8pm","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuto1115"},"content":"deadline return book /by 2025-03-11 21:00","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuto1115"},"content":"event project /to /from 4pm","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuto1115"},"content":"event project /to 4pm","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuto1115"},"content":"event project meeting /from 2025-03-11 17:00 /to 2025-03-11 19:00","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuto1115"},"content":"event project meeting /to 2025-03-11 19:00 /from 2025-03-11 17:00","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuto1115"},"content":"event holiday /from 2025-12-30 /to 2026-01-04 00:00","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuto1115"},"content":"List","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"delete 0","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"delete 2","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"delete 3","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"mark 0","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"mark 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"mark 3","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuto1115"},"content":"mark 4","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuto1115"},"content":"unmark 0","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuto1115"},"content":"unmark 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuto1115"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuto1115"},"content":"unmark 3","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuto1115"},"content":"unmark 4","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuto1115"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuto1115"},"content":"unknown_command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuto1115"},"content":"bye","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"yuto1115":29}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuto1115"},"content":"# delete record from previous run","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuto1115"},"content":"if [ -e \"./src/data/records.txt\" ]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuto1115"},"content":"then","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuto1115"},"content":"    rm ./src/data/records.txt","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuto1115"},"content":"fi","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuto1115"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuto1115"},"content":"java -classpath ../bin Odin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"yuto1115":7,"-":37}}]
