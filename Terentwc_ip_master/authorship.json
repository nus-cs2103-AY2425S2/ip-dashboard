[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"    mainClass.set(\"Krunch.Krunch\")","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"    archiveBaseName \u003d \"krunch\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"    manifest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"        attributes \u0027Main-Class\u0027: \"Krunch.Krunch\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"checkstyle {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Terentwc":11}},{"path":"src/main/java/Krunch/Krunch.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.exceptions.IllegalException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":" * The Krunch class is the main entry point for the program.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":" * It initializes the TaskManager, UI, and Parser classes and handles the main loop for executing user commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"public class Krunch {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"    private final UI ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"     * Constructs a new Krunch instance by initializing the TaskManager, UI, and Parser.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"     * It also loads the existing tasks from storage.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if there is an error while loading tasks","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"    public Krunch() throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"        taskManager \u003d new TaskManager(TaskLoader.loadTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"    // Main","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"     * The main method that starts the Krunch program.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"     * It creates an instance of Krunch and calls the run method to begin handling user input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"     * @param args the command-line arguments (not used in this program)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if there is an error while initializing or running the program","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"    public static void main(String[] args) throws IllegalException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"        new Krunch().run();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"     * Runs the Krunch program. This method greets the user, enters an infinite loop to process user input,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"     * and handles the commands using the TaskManager, Parser, and UI classes.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"     * It continues to run until the program is closed.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if there is an error during task processing","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"    public void run() throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"        ui.greet();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"        while (true) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"                // get user input and parse it","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"                String UserInput \u003d ui.nextCommand();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"                String[] parsedInput \u003d parser.parsedInfo(UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"                // if parsed input is empty, continue to the next iteration","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"                if (parsedInput.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"                    continue;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"                // executes task based on parsed input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"                taskManager.doTask(parsedInput, UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Terentwc"},"content":"            } catch (IllegalException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Terentwc"},"content":"                // If an error occurs, displays the error message","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Terentwc"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"Terentwc":68}},{"path":"src/main/java/Krunch/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.exceptions.IllegalException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":" * The Parser class is responsible for parsing and validating user input commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":" * It processes commands related to tasks such as marking, unmarking, deleting,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":" * adding, and finding tasks. It ensures that user input is correctly formatted","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":" * and returns the appropriate response or throws exceptions if the input is invalid.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"public class Parser {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"     * Parses the user input and determines the appropriate command to execute.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"     * It validates the input and returns the parsed information or throws an exception","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"     * if the input is invalid.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"     * @return an array of strings containing parsed command details","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the user input is invalid or improperly formatted","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"    public String[] parsedInfo(String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"        String[] words \u003d UserInput.split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"        if (words[0].startsWith(\"bye\")) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"            byeMessage(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"            return new String[0]; // will never execute but needed","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"list\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"            return listMessage(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"            return parseMark(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"            return parseMark(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"            return parseToDo(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"            return parseDeadline(words, UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"            return parseEvent(words, UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"            return parseDelete(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"            return parseFind(words);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"        } else if (words[0].isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"W-wha?... h-hey! Don\u0027t give me the silent treatment!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"            return new String[0];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"        } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"            return new String[0];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"     * Displays a goodbye message based on the user\u0027s input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"     * If the user just types \"bye\", a formal farewell is shown before exiting.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"     * Otherwise, a cheeky message is displayed if there are extra words.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"     * @param words the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"    private void byeMessage(String[] words) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Terentwc"},"content":"        if (words.length \u003d\u003d 1 \u0026\u0026 words[0].equals(\"bye\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"Oh, I see how it is. No need to pretend you\u0027ll miss me. Go on, then. Goodbye.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"_____________________________________________________________________________\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Terentwc"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Terentwc"},"content":"        } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"Goodbye...\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"You can\u0027t get rid of me that easily! \u003e:)\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"list\" command. If the command is not correctly formatted,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Terentwc"},"content":"     * an exception is thrown.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Terentwc"},"content":"     * @param words the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the command is invalid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Terentwc"},"content":"    private String[] listMessage(String[] words) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Terentwc"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Terentwc"},"content":"            // return \"list\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Terentwc"},"content":"            return words;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Terentwc"},"content":"        } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Printing list now!...\\n\" + \"Oh wait! Wrong command!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"mark\" and \"unmark\" commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Terentwc"},"content":"     * Checks that a valid task number is provided.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Terentwc"},"content":"     * @param words the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the command is invalid or the task number is missing/incorrect","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Terentwc"},"content":"    private String[] parseMark(String[] words) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Terentwc"},"content":"        String word \u003d words[0];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Terentwc"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Alright. It is\" + word + \"ed... What did you want to \" + word + \" exactly?\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Terentwc"},"content":"                    + \"Come on, do it like this. \" + word + \" (task number). It\u0027s just that easy\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Terentwc"},"content":"        } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Terentwc"},"content":"            // calls to edit list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Terentwc"},"content":"            try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Terentwc"},"content":"                // test if words[1] is an integer","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Terentwc"},"content":"                Integer.parseInt(words[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Terentwc"},"content":"                return words;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Terentwc"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Terentwc"},"content":"                throw new IllegalException(\"Ah... It has to be a number. (E.g. \" + word + \" 1)\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"todo\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Terentwc"},"content":"     * Ensures that a description is provided for the \"ToDo\" task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Terentwc"},"content":"     * @param words the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the command is missing a description","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Terentwc"},"content":"    private String[] parseToDo(String[] words) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Terentwc"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Hey hey, tli man... Give me something to work with.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Terentwc"},"content":"        return words;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"deadline\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Terentwc"},"content":"     * Ensures that a description and deadline date are provided.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Terentwc"},"content":"     * The deadline should be specified with the \"/by\" flag.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Terentwc"},"content":"     * @param words     the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the command is missing components or is improperly formatted","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Terentwc"},"content":"    private String[] parseDeadline(String[] words, String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Terentwc"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Yes...? You seem to be missing... a description.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Terentwc"},"content":"                    + \" And a /by along with a date. But you are smart, you probably did this to test me... Right?\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Terentwc"},"content":"        if (!UserInput.contains(\"/by\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Getting somewhere... but not there yet. Try again.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Terentwc"},"content":"                    + \"Hint: Remember to use /by but you didn\u0027t hear this hint from me.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Terentwc"},"content":"        String[] parts \u003d UserInput.split(\"/by\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Terentwc"},"content":"        if (parts.length \u003c\u003d 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Nicely done! You remembered the /by but not there yet.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Terentwc"},"content":"                    + \"Hint hint: You have to type something after the /by\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Terentwc"},"content":"        String description \u003d parts[0].substring(words[0].length()).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Terentwc"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Okay. I think something is missing?...\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Terentwc"},"content":"                    + \"I can\u0027t really put a DESCRIPTION on what\u0027s missing.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Terentwc"},"content":"        return words;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"event\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Terentwc"},"content":"     * Ensures that the event has a description, a \"/from\" time, and a \"/to\" time.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Terentwc"},"content":"     * @param words     the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the event details are incomplete or improperly formatted","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Terentwc"},"content":"    private String[] parseEvent(String[] words, String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Terentwc"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Hey hey, tli man... Give me something to work with.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Terentwc"},"content":"        if ((!UserInput.contains(\"/from\")) || (!UserInput.contains(\"/to\"))) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"event needs to be followed with a description\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Terentwc"},"content":"                    + \"then with /from (time) /to (time)\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Terentwc"},"content":"        if (UserInput.indexOf(\"/from\") \u003e UserInput.indexOf(\"/to\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Ah... wise guy. I caught you. \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Terentwc"},"content":"                    + \"It is /from and then /to.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Terentwc"},"content":"        String[] parts \u003d UserInput.split(\"/from\"); // first split parts","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Terentwc"},"content":"        // event description","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Terentwc"},"content":"        String description \u003d parts[0].substring(words[0].length()).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Terentwc"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Hey smarty pants... Where\u0027s the description?\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Terentwc"},"content":"        //timeframe from","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Terentwc"},"content":"        String[] parts2 \u003d parts[1].split(\"/to\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Terentwc"},"content":"        String from \u003d parts2[0].trim(); //from","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Terentwc"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"When is it?! WHEN IS IT?!!!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Terentwc"},"content":"        //timeframe to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Terentwc"},"content":"        if (parts2.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"I mean... I also procrastinate \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Terentwc"},"content":"                    + \"but... no... just no...\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Terentwc"},"content":"        return words;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"delete\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Terentwc"},"content":"     * Ensures that a task number is provided to delete a task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Terentwc"},"content":"     * @param words the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the command is missing the task number or the task number is invalid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Terentwc"},"content":"    public String[] parseDelete(String[] words) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Terentwc"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Alright. What task do you want to delete?\\n\" +","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Terentwc"},"content":"                    \"Come on, do it like this. delete (task number). It\u0027s just that easy\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Terentwc"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Terentwc"},"content":"            Integer.parseInt(words[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Terentwc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Deleting~ Oh wait... Which task do i delete?\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Terentwc"},"content":"        return words;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Terentwc"},"content":"     * Validates the \"find\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Terentwc"},"content":"     * Ensures that a keyword is provided to search for tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Terentwc"},"content":"     * @param words the parsed input words from the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Terentwc"},"content":"     * @return the input words if the command is valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the command is missing a keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Terentwc"},"content":"    public String[] parseFind(String[] words) throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Terentwc"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Well... I\u0027m not a mind reader you know?\\n\" +","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Terentwc"},"content":"                    \" You gotta tell me what you want me to find. Try again.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Terentwc"},"content":"        return words;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Terentwc":241}},{"path":"src/main/java/Krunch/TaskAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"public enum TaskAction {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"    TODO,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"    EVENT,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"    LIST,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"    MARK,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"    UNMARK,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"    DELETE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"    BYE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"    INVALID,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"    BLANK","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Terentwc":14}},{"path":"src/main/java/Krunch/TaskLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.exceptions.IllegalException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Deadline;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Event;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.ToDo;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":" * The TaskLoader class is responsible for loading tasks from a file (tasks.txt) and","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":" * restoring them into task objects. It parses the file, reads each line, and creates","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":" * the appropriate task object (ToDo, Deadline, or Event) based on the data format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"public class TaskLoader {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"     * Loads tasks from the \"tasks.txt\" file and returns a list of Task objects.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"     * The file format should contain task data in the following structure:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"     * - T | \u003cdone-status\u003e | \u003ctask-name\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"     * - D | \u003cdone-status\u003e | \u003ctask-name\u003e | \u003cdeadline-date\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"     * - E | \u003cdone-status\u003e | \u003ctask-name\u003e | \u003cfrom-date\u003e | \u003cto-date\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"     * The method will create the corresponding task objects and restore their","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"     * completion status from the file data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"     * @return a list of tasks loaded from the file","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if an error occurs while parsing the file or creating tasks","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(\"tasks.txt\"))) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"            String line;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"                String[] parts \u003d line.split(\" \\\\| \"); // Split by \" | \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"                String taskName \u003d parts[2];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"                Task task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"                    task \u003d new ToDo(taskName);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"                    task \u003d new Deadline(taskName, parts[3]);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"                    task \u003d new Event(taskName, parts[3], parts[4]);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"                } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"                    continue; // Skip invalid lines","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"                }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"                // Restore task completion status","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"                    task.toggleDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"                }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Terentwc"},"content":"            return tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Terentwc"},"content":"        return tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Terentwc":66}},{"path":"src/main/java/Krunch/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.exceptions.IllegalException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Event;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.ToDo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":" * This class manages the tasks given to the chatbot.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":" * It allows users to add, mark, unmark, list, delete, and find tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":" * Tasks are stored in an ArrayList and can be saved using the TaskSaver.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"public class TaskManager {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"    TaskSaver taskSaver \u003d new TaskSaver();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"     * Constructor for TaskManager.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"     * Initializes the TaskManager with a list of tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"     * @param tasks the list of tasks to manage","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"     * Execute a task based on user input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"     * The input is parsed and the appropriate action is performed.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"     * @param words     the split command words from the user input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if an error occurs due to invalid input or task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"    public void doTask(String[] words, String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"        switch (words[0]) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"        case \"list\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"            getList();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"            editMark(words[1], true);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"            editMark(words[1], false);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"            String description \u003d UserInput.substring(words[0].length()).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"            addToDo(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"            addDeadline(words, UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"        case \"event\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"            addEvent(words, UserInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Terentwc"},"content":"            deleteTask(words);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Terentwc"},"content":"        case \"find\":","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Terentwc"},"content":"            findTask(words, UserInput);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Terentwc"},"content":"            break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Terentwc"},"content":"        taskSaver.saveTasks(tasks);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Terentwc"},"content":"     * Lists all tasks in the task manager.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Terentwc"},"content":"     * Throws an exception if there are no tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if there are no tasks to list","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Terentwc"},"content":"    public void getList() throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Terentwc"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"No tasks. Good job\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Terentwc"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Terentwc"},"content":"            // 1.[] blah","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Terentwc"},"content":"     * Marks or unmarks a task based on the provided task number.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Terentwc"},"content":"     * @param stringNumber the task number to mark/unmark","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Terentwc"},"content":"     * @param shouldMark   true if the task should be marked, false if it should be unmarked","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the task number is invalid or other errors occur","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Terentwc"},"content":"    public void editMark(String stringNumber, boolean shouldMark) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Terentwc"},"content":"        int listNumber \u003d Integer.parseInt(stringNumber);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Terentwc"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Oh you ain\u0027t getting me this time!\\n\" +","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Terentwc"},"content":"                    \"Psst! Make a task first! Don\u0027t tell anyone I told you this!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Terentwc"},"content":"        if (listNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Terentwc"},"content":"            if (shouldMark) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Terentwc"},"content":"                throw new IllegalException(\"Marking imaginary task as done! Aren\u0027t I sooo... helpful?\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Terentwc"},"content":"            } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Terentwc"},"content":"                throw new IllegalException(\"You couldn\u0027t even do an imaginary task? Quickly! Start on it!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Terentwc"},"content":"        // checking if it is not done","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Terentwc"},"content":"        if (!tasks.get(listNumber).isDone()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Terentwc"},"content":"            if (!shouldMark) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Terentwc"},"content":"                throw new IllegalException(\"So... when are you going to start exactly?\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Terentwc"},"content":"            } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Terentwc"},"content":"                ui.showMessage(\"Yes yes... very well done.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Terentwc"},"content":"        } else { //changing to unmarked","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"Hm... alright. It is unmarked.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Terentwc"},"content":"            tasks.get(listNumber).toggleDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Terentwc"},"content":"        // printing status","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Terentwc"},"content":"        ui.showMessage(tasks.get(listNumber).toString());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Terentwc"},"content":"     * Adds a new \"To Do\" task to the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Terentwc"},"content":"     * @param description the description of the \"To Do\" task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Terentwc"},"content":"    private void addToDo(String description) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Terentwc"},"content":"        Task addend \u003d new ToDo(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Terentwc"},"content":"        tasks.add(addend);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Terentwc"},"content":"        ui.addedAcknowledgement(addend, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Terentwc"},"content":"     * Adds a new \"Deadline\" task to the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Terentwc"},"content":"     * @param words     the split command words from the user input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string containing the deadline details","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the input is invalid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Terentwc"},"content":"    private void addDeadline(String[] words, String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Terentwc"},"content":"        String[] parts \u003d UserInput.split(\"/by\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Terentwc"},"content":"        String description \u003d parts[0].substring(words[0].length()).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Terentwc"},"content":"        String timeframe \u003d parts[1].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Terentwc"},"content":"        Task addend \u003d new Deadline(description, timeframe);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Terentwc"},"content":"        tasks.add(addend);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Terentwc"},"content":"        ui.addedAcknowledgement(addend, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Terentwc"},"content":"     * Adds a new \"Event\" task to the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Terentwc"},"content":"     * @param words     the split command words from the user input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string containing the event details","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the input is invalid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Terentwc"},"content":"    private void addEvent(String[] words, String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Terentwc"},"content":"        String[] parts \u003d UserInput.split(\"/from\"); // first split parts","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Terentwc"},"content":"        // event description","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Terentwc"},"content":"        String description \u003d parts[0].substring(words[0].length()).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Terentwc"},"content":"        //timeframe from","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Terentwc"},"content":"        String[] parts2 \u003d parts[1].split(\"/to\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Terentwc"},"content":"        String from \u003d parts2[0].trim(); //from","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Terentwc"},"content":"        //timeframe to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Terentwc"},"content":"        String to \u003d parts2[1].trim(); //to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Terentwc"},"content":"        Task addend \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Terentwc"},"content":"        tasks.add(addend);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Terentwc"},"content":"        ui.addedAcknowledgement(addend, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Terentwc"},"content":"     * Deletes a task based on the task number provided by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Terentwc"},"content":"     * @param words the split command words from the user input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the task number is invalid or there are no tasks to delete","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Terentwc"},"content":"    private void deleteTask(String[] words) throws IllegalException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Terentwc"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Oh... And what do you want to delete? My memory is empty.\\n\" +","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Terentwc"},"content":"                    \"Psst! Make a task first! Don\u0027t tell anyone I told you this!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Terentwc"},"content":"        int num \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Terentwc"},"content":"        if (num \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Deleting!... Deleted!! What did I delete? The imaginary task of course!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Terentwc"},"content":"        // Deleting the task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Terentwc"},"content":"        Task removedTask \u003d tasks.remove(num);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Terentwc"},"content":"        ui.showMessage(\"Task deleted: \" + removedTask);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Terentwc"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"You now have 0 tasks left.\\n\" +","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Terentwc"},"content":"                    \"Thank you for deleting parts of my memory. It sure feels nice to remember nothing.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Terentwc"},"content":"        } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"You now have \" + tasks.size() + \" tasks left.\\n\" +","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Terentwc"},"content":"                    \"Thank you for deleting parts of my memory. It sure feels nice to remember lesser things.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Terentwc"},"content":"     * Finds tasks that contain a specific keyword in their description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Terentwc"},"content":"     * @param words     the split command words from the user input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Terentwc"},"content":"     * @param UserInput the full user input string containing the keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if there are no tasks or no matching tasks","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Terentwc"},"content":"    public void findTask(String[] words, String UserInput) throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Terentwc"},"content":"        String keyword \u003d UserInput.substring(words[0].length()).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Terentwc"},"content":"        ArrayList\u003cTask\u003e matchingtasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Terentwc"},"content":"        ui.showMessage(\"Please wait as I find the tasks...\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Terentwc"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Oh... I found nothing... because there are no tasks!!\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Terentwc"},"content":"        for (Task matching : tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Terentwc"},"content":"            if (matching.getTask().contains(keyword)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Terentwc"},"content":"                matchingtasks.add(matching);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Terentwc"},"content":"        if (matchingtasks.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"Hey there, just checked my mind. There are no tasks with \" + keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Terentwc"},"content":"                    + \".\\nThanks for waiting while I checked.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Terentwc"},"content":"        for (int i \u003d 1; i \u003c\u003d matchingtasks.size(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Terentwc"},"content":"            // 1.[] blah","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(i + \". \" + matchingtasks.get(i - 1));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Terentwc":236}},{"path":"src/main/java/Krunch/TaskSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Deadline;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Event;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.ToDo;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":" * The TaskSaver class is responsible for saving tasks to a file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":" * It converts task objects into a specific string format and writes them to a file for persistent storage.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"public class TaskSaver {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"    private static final String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"     * Converts a task object into a string representation that can be saved to a file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"     * The format depends on the type of task (ToDo, Deadline, or Event).","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"     * @param task the task to be converted into a string","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"     * @return the string representation of the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    public static String taskToString(Task task) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"            // converts ToDo task to string format","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getTask();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"            // converts Deadline task to string format","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getTask()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"                    + \" | \" + ((Deadline) task).getBy();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"            // converts Event task to string format","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getTask()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"                    + \" | \" + ((Event) task).getFrom() + \" | \" + ((Event) task).getTo();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"        return \"\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"     * Saves the list of tasks to a file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"     * Each task is written to the file in a specific format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"     * @param tasks the list of tasks to be saved","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_NAME))) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"                writer.write(taskToString(task));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"            ui.showMessage(\"Error saving tasks\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Terentwc":61}},{"path":"src/main/java/Krunch/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"public class UI {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"     * Greets the user and introduces the program.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"     * Displays initial messages about the program\u0027s functionality and requirements.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"    public void greet() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"____________________________________________________________________________________________\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"Oh, what a treat. Finally, you\u0027ve graced me with your presence.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"Name\u0027s Krunch. In case you didn\u0027t already figure that out.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"So, what mighty task are we tackling today? Just don\u0027t expect me to do everything for you...\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"                + \"\\nBut I guess I can help, if I have to.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"____________________________________________________________________________________________\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"     * Reads the next command entered by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"     * @return the command entered by the user as a String","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    public String nextCommand() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"     * @param message the message to be displayed to the user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"     * Acknowledges that a task has been added to the list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"     * Displays the added task and the current number of tasks in the list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"     * @param added the task that was added","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"     * @param size  the total number of tasks in the list","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"    public void addedAcknowledgement(Task added, int size) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"It is added... anything else?\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"        System.out.println(added);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"        System.out.println(\"In case you wanted to know, you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Terentwc":53}},{"path":"src/main/java/Krunch/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"Terentwc":5}},{"path":"src/main/java/Krunch/exceptions/IllegalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch.exceptions;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":" * Custom exception class to handle illegal or invalid operations in the Krunch application.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":" * This class extends the built-in `Exception` class and allows for custom error messages","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":" * to be thrown when an illegal operation occurs.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"public class IllegalException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"     * Constructs a new IllegalException with the specified detail message.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"     * The message provides information about the illegal operation that occurred.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"     * @param e the detail message explaining the cause of the exception","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"    public IllegalException(String e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"        super(e);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Terentwc":19}},{"path":"src/main/java/Krunch/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":" * Represents a deadline with a description and a due date.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":" * The Deadline class extends the Task class and includes additional functionality","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":" * to store and format a due date for the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"     * Constructs a Deadline with the given description and due date.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"     * The due date must be in the format \"yyyy-mm-dd\".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"     * If the date format is incorrect, the program will terminate with an error message.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"     * @param task the description of the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"     * @param by   the due date of the task in \"yyyy-mm-dd\" format","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"    public Deadline(String task, String by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"        super(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"            System.out.println(\"Deadline this!\\n\" + \"I warned you!!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"            System.exit(1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"     * The format includes the deadline\u0027s completion status, description, and its due date.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"     * @return a string representing the deadline\u0027s status, description, and due date","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"     * Returns the due date of the deadline.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"     * @return the due date of the deadline","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"        return this.by;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Terentwc":53}},{"path":"src/main/java/Krunch/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.exceptions.IllegalException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":" * Represents an event with a description and a time range (from and to dates).","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":" * The Event class extends the Task class and includes additional functionality","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":" * to store and format event dates.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"     * Constructs an Event with the given description, start date, and end date.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"     * The start and end dates must be in the format \"yyyy-mm-dd\".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"     * If the date format is incorrect, an IllegalException will be thrown.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"     * @param task the description of the event","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"     * @param from the start date of the event in \"yyyy-mm-dd\" format","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"     * @param to   the end date of the event in \"yyyy-mm-dd\" format","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"     * @throws IllegalException if the date format is incorrect","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    public Event(String task, String from, String to) throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"        super(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"            throw new IllegalException(\"Wrong format bro... it\u0027s this format -\u003e yyyymmdd\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"     * The format includes the event\u0027s completion status, description, and its time range (from and to dates).","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"     * @return a string representing the event\u0027s status, description, and time range","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"        // formatted for displaying dates","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"     * @return the start date of the event","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"        return this.from;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Terentwc"},"content":"     * @return the end date of the event","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Terentwc"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Terentwc"},"content":"        return this.to;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Terentwc":68}},{"path":"src/main/java/Krunch/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":" * Represents a generic task. The Task class serves as a base class for different types of tasks","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":" * like ToDo, Deadline, and Event. Each task has a description and a status indicating whether it is completed.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"public class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"    protected String task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"     * The task is initially set to not done.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"     * @param task the description of the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"    public Task(String task) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"        this.isDone \u003d false; // initialise task as not done","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"     * Returns the string representation of the completion status.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"     * If the task is completed, returns \"X\", otherwise returns a space \" \".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"     * @return the string representing the completion status (\"X\" if done, \" \" if not done)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    public String stringDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"     * Toggles the task\u0027s completion status.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"     * If the task is done, it will be marked as not done, and vice versa.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"    public void toggleDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Terentwc"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Terentwc"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Terentwc"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Terentwc"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Terentwc"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Terentwc"},"content":"     * @return the description of the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Terentwc"},"content":"    public String getTask() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Terentwc"},"content":"        return this.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Terentwc"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Terentwc"},"content":"     * The format includes the task\u0027s completion status (e.g., \"[ ] Task description\")","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Terentwc"},"content":"     * and its description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Terentwc"},"content":"     * @return a string representing the task\u0027s status and description","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Terentwc"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Terentwc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Terentwc"},"content":"        return \"[\" + stringDone() + \"] \" + getTask();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"Terentwc":69}},{"path":"src/main/java/Krunch/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package Krunch.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":" * Represents a ToDo task, which is a type of task that the user needs to complete.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":" * This class extends the abstract Task class and adds specific behavior for ToDo tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"     * Constructs a new ToDo task with the given description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"     * @param task the description of the ToDo task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"    public ToDo(String task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"        super(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"     * This format includes the task type identifier \"[T]\" followed by the string representation of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"     * @return a string representing the ToDo task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"        // appends [T] to the string representation of the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Terentwc":29}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.exceptions.IllegalException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.Event;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"class EventTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"    void testEventCreation() throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"        Event event \u003d new Event(\"Project meeting\", \"2024-02-10\", \"2024-02-12\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"        assertEquals(\"Project meeting\", event.getTask()); // Assuming Task has getDescription()","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"        assertEquals(LocalDate.of(2024, 2, 10), event.getFrom());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"        assertEquals(LocalDate.of(2024, 2, 12), event.getTo());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"    void testToString() throws IllegalException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"        Event event \u003d new Event(\"Concert\", \"2025-06-15\", \"2025-06-16\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Terentwc"},"content":"        String expectedOutput \u003d \"[E][ ] Concert (from: Jun 15 2025 to: Jun 16 2025)\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Terentwc"},"content":"        assertEquals(expectedOutput, event.toString());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Terentwc"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Terentwc"},"content":"    void testInvalidDate() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Terentwc"},"content":"        Exception exception \u003d assertThrows(IllegalException.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Terentwc"},"content":"            new Event(\"Invalid event\", \"wrong-date\", \"2025-06-16\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Terentwc"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Terentwc"},"content":"        assertEquals(\"Wrong format bro... it\u0027s this format -\u003e yyyymmdd\", exception.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Terentwc":40}},{"path":"src/test/java/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"package task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"import Krunch.task.ToDo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"class ToDoTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Terentwc"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Terentwc"},"content":"    void testToDoCreation() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Terentwc"},"content":"        ToDo todo \u003d new ToDo(\"Finish homework\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Terentwc"},"content":"        assertEquals(\"Finish homework\", todo.getTask()); // Assuming Task has getDescription()","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Terentwc"},"content":"        assertFalse(todo.isDone()); // Assuming Task has isDone()","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Terentwc"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Terentwc"},"content":"    void testToString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"        ToDo todo \u003d new ToDo(\"Buy milk\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Terentwc"},"content":"        String expectedOutput \u003d \"[T][ ] Buy milk\"; // Assuming Task\u0027s toString() includes completion status","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Terentwc"},"content":"        assertEquals(expectedOutput, todo.toString());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Terentwc"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Terentwc"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Terentwc":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Terentwc"},"content":"todo Buy Groceries","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Terentwc"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"mark 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"unmark 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Terentwc"},"content":"deadline Sell Groceries /by idk what time yet","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Terentwc"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Terentwc"},"content":"event Scam Con artists /from Sunesday 1am /to 5pm","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Terentwc"},"content":"mark 3","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Terentwc"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Terentwc"},"content":"bye","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Terentwc":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Terentwc"},"content":"REM Set command prompt to use UTF-8","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Terentwc"},"content":"chcp 65001","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Terentwc"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Terentwc"},"content":"java -classpath ..\\bin Krunch \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Terentwc":4}}]
