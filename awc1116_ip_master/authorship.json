[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    mainClass.set(\"Doopies\")","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"    archiveBaseName \u003d \"doopies\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"awc1116":2,"-":39}},{"path":"data/doopies.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"D | 0 | return book | 31/1/2025 2359","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"D | 0 | return book | 3/1/2025 2359","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":2}},{"path":"data/test_doopies.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"T | 0 | read book","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":2}},{"path":"data/test_storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"T | 0 | read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"E | 0 | meeting | Jan 24 2025, 02:00 pm | Jan 24 2025, 04:00 pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"D | 0 | return book | Jan 31 2025, 11:59 pm","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":3}},{"path":"src/main/java/Doopies.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"import doopies.command.Command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.util.Parser;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * Represents the main entry point for the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * Handles the initialization of the application, execution of commands, and user interaction.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Doopies {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    /** File path for storing tasks. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    private static final String FILE_PATH \u003d \"./data/doopies.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    /** Storage for saving and loading tasks from a file. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    /** User interface for interacting with the user. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    /** Notebook to manage tasks in memory. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    private Notebook notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     * Constructs a new Doopies application instance with the specific file path for task storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"     * @param filePath Path to the file for storing and loading tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    public Doopies(String filePath) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"            this.notebook \u003d storage.load();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"            this.ui.showMessage(\"Failed to load tasks. Starting with an empty notebook.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"            this.notebook \u003d new Notebook();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     * Continuously reads user commands, processes them, and updates the task list until the exit command is issued.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    public void run() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"                String line \u003d ui.readCommand();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"                Command cmd \u003d Parser.parseCommand(line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"                this.notebook \u003d cmd.execute(this.notebook, this.ui, this.storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"                if (cmd.isExit()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"            } catch (NoSuchElementException ignored) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"                this.ui.showMessage(\"Please enter a command.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     * The main method that start the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"        new Doopies(FILE_PATH).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"awc1116":58,"-":13}},{"path":"src/main/java/Doopies/Exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"awc1116":1,"-":6}},{"path":"src/main/java/Doopies/Exception/IndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class IndexOutOfBoundException extends Exception {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public IndexOutOfBoundException(String message) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"awc1116":1,"-":6}},{"path":"src/main/java/Doopies/Exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"public class InvalidTaskTypeException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"    public InvalidTaskTypeException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":7}},{"path":"src/main/java/Doopies/Exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"awc1116":1,"-":6}},{"path":"src/main/java/Doopies/command/ClearStorageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * Represents a command to clear the storage file while keeping the in-memory tasks intact.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"public class ClearStorageCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"     *     This implementation clears all tasks stored in the storage file on the hard disk.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"     *     It does not modify the in-memory task list. Upon successful clearing of the storage,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"     *     a message is displayed to the user. If an error occurs during the clearing process,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"     *     the error message is displayed to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks (remains unchanged).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to display messages to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to clear the stored tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * @return The unmodified notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"            storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"Hard-disk storage have been cleared.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":38}},{"path":"src/main/java/Doopies/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * Represent an abstract command in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" *     Each command performs a specific action and may modify the notebook, interact with the user interface, or access storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    /** Indicates whether this command signals the application to exit. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    private final boolean exit;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"     * Constructs a command that does not signal the application to exit.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    protected Command() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        this.exit \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * Constructs a command with the specific exit behavior.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     * @param exit {@code true} if this command signals the application to terminate; {@code false} otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    protected Command(boolean exit) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * Checks whether this command signals the application to terminate.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     * @return {@code true} if the command signals the application to terminate; {@code false} otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        return this.exit;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"     * Executes the command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     *     This method performs the action associated with the command. It may update the in-memory notebook,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     *     display messages to the user through the user interface, or interact with the storage system.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to interact with the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist or retrieve tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook after the command execution.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"    public abstract Notebook execute(Notebook notebook, Ui ui, Storage storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":55}},{"path":"src/main/java/Doopies/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.EmptyDescriptionException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * Represents a command to add a deadline task to the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" *     The command parses the task description and due date, creates a new {@link Deadline} task, adds it to the notebook,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" *     and saves the updated notebook storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    /** The parsed input line containing the task description and due date. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    private final String[] line;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * Constructs a DeadlineCommand with the specified parsed input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * @param line The parsed input line containing the task description and due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    public DeadlineCommand(String[] line) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        this.line \u003d line;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * Translates a portion of the parsed input line into a single string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     The translation joins all elements of the input array after the first element into a single string,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     *     preserving spaces between words.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param cmd The array of input tokens to translate.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @return The translated string containing all elements after the first token.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    private String translate(String[] cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        return String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     *     This implementation adds a {@link Deadline} task to the notebook using the task description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     *     and due date provided by the user. If successful, the updated notebook is saved to storage,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     *     and a confirmation message is displayed to the user. If the input is incomplete or invalid,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     *     an error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to interact with the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist or retrieve tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook containing the new deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"     * @throws ArrayIndexOutOfBoundsException If the input format is incorrect (e.g., missing `/by`).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"            String description \u003d translate(this.line[0].split(\" \"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"            String dueDate \u003d translate(this.line[1].split(\" \"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"                throw new EmptyDescriptionException(\"OOPS!!! \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"                        \"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"            Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"            notebook \u003d notebook.add(deadline);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"            storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"            String message \u003d String.format(\"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"                            Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"                            \\t%s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"                            Now you have %d tasks in the list.\"\"\", deadline, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"        } catch (EmptyDescriptionException","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"                 | IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"Incorrect format for deadline.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":90}},{"path":"src/main/java/Doopies/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.IndexOutOfBoundException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * Represents a command to delete a task from the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" *     The command removes a task at a specified index from the notebook, saves the updated notebook to storage,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" *     and displays a confirmation message to the user. If the index is invalid or out of bounds, an error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    /** The parsed input command containing the delete action and the task index. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    private final String[] cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"     * Constructs a DeleteCommand with the specified parsed input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * @param cmd The parsed input command containing the delete action and the task index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    public DeleteCommand(String[] cmd) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     This implementation deletes a task from the notebook at the specified index. If successful, the updated","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     notebook is saved to storage, and a confirmation message is displayed. If the index is invalid or not an","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     *     integer, an appropriate error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to interact with the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist the updated notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook after removing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while saving the notebook to storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"            int idx \u003d Integer.parseInt(this.cmd[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"            if (idx \u003e notebook.size() || idx \u003c 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"                throw new IndexOutOfBoundException(idx + \" is not in your list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"            Task task \u003d notebook.getTask(idx);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"            notebook \u003d notebook.delete(idx);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"            storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"            String message \u003d String.format(\"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"                            Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"                            \\t%s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"                            Now you have %d tasks in the list.\"\"\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"                    task, notebook.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"        } catch (IndexOutOfBoundException","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"                 | IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"The input is not a valid integer.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":74}},{"path":"src/main/java/Doopies/command/EndCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * Represents a command to terminate the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * This command signals the application to exit by displaying a farewell message to the user and closing the user interface.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * The in-memory notebook remains unchanged, and no modifications are made to the storage system.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"public class EndCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"     * Constructs an EndCommand that signals the application to terminate.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    public EndCommand() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        super(true);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     *     This implementation displays a farewell message to the user, closes the user interface,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     *     and leaves the in-memory notebook unchanged. The storage system is not modified.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks (remains unchanged).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to display the farewell message and close resources.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system (not used in this command).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * @return The unmodified notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        ui.showEnding();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        ui.closeUi();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":41}},{"path":"src/main/java/Doopies/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.EmptyDescriptionException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Event;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * Represents a command to add an event task to the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" *     The command parses the task description, start time, and end time, creates a new {@link Event} task,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" *     adds it to the notebook, and saves the updated notebook to storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    /** The parsed input line containing the task description, start time, and end time. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    private final String[] line;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * Constructs an EventCommand with the specified parsed input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * @param line The parsed input line containing the task description, start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    public EventCommand(String[] line) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        this.line \u003d line;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * Translates a portion of the parsed input line into a single string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     The translation joins all elements of the input array after the first element into a single string,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     *     preserving spaces between words.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param cmd The array of input tokens to translate.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @return The translated string containing all elements after the first token.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    private String translate(String[] cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        return String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     *     This implementation adds an {@link Event} task to the notebook using the task description,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     *     start time, and end time provided by the user. If successful, the updated notebook is saved to storage,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     *     and a confirmation message is displayed. If the input is incomplete or invalid, an error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to interact with the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist the updated notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook containing the new event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while saving the notebook to storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"            String description \u003d translate(this.line[0].split(\" \"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"            String from \u003d translate(this.line[1].split(\" \"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"            String to \u003d translate(this.line[2].split(\" \"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"                throw new EmptyDescriptionException(\"OOPS!!! \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"                        \"The description of an event cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"            Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"            notebook \u003d notebook.add(event);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"            storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"            String message \u003d String.format(\"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"                            Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"                            \\t%s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"                            Now you have %d tasks in the list.\"\"\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"                    event, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"        } catch (EmptyDescriptionException","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"                 | IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"Incorrect format for event.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":92}},{"path":"src/main/java/Doopies/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.util.List;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * Represents a command to find tasks in the notebook that match a given keyword.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" *     The {@code FindCommand} searches for tasks whose descriptions contain the specified keyword,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" *     displays the results to the user, and leaves the notebook unchanged.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    /** The keyword used to search for matching tasks. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"     * Constructs a {@code FindCommand} with the specified parsed input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * @param cmd The parsed input command containing the find action and the keyword to search for.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    public FindCommand(String[] cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        this.keyword \u003d translate(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * Translates the parsed input command into a single keyword.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     This method joins all elements of the input array after the first element into a single string,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     preserving spaces between words.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * @param cmd The array of input tokens to translate.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @return The translated keyword for searching tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    private String translate(String[] cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        return String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     *     This implementation searches for tasks in the notebook whose descriptions contain the specified keyword.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     *     The matching tasks are displayed to the user in a formatted list. The notebook and storage are not modified.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to display the matching tasks to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system (not used in this command).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"     * @return The unmodified notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e tasks \u003d notebook.find(this.keyword);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"            String temp \u003d String.format(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"            str.append(temp);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"        String res \u003d String.format(\"Here are the matching tasks in your list:\\n%s\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"                str.toString().stripTrailing());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"        ui.showMessage(res);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":73}},{"path":"src/main/java/Doopies/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * Represents a command to display all tasks currently in the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" *     This command retrieves the list of tasks from the notebook and displays them to the user","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" *     through the user interface. The notebook and storage are not modified by this command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    public ListCommand() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     *     This implementation retrieves all tasks from the notebook and displays them to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     *     If the notebook is empty, an appropriate message is shown. The command does not modify","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     *     the notebook or storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to display the list of tasks to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system (not used in this command).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * @return The unmodified notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        ui.showMessage(notebook.toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":41}},{"path":"src/main/java/Doopies/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.IndexOutOfBoundException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * Represents a command to mark a task in the notebook as completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" *     This command updates the status of a specific task in the notebook to \"done\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" *     saves the updated notebook to storage, and displays a confirmation message to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    /** The parsed input command containing the mark action and the task index. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    private final String[] cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"     * Constructs a MarkCommand with the specified parsed input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * @param cmd The parsed input command containing the mark action and the task index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    public MarkCommand(String[] cmd) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     *     This implementation marks the specified task in the notebook as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     If the index is valid, the updated notebook is saved to storage, and a confirmation message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     If the index is invalid or not an integer, an appropriate error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to interact with the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist the updated notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook with the specified task marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while saving the notebook to storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"            int idx \u003d Integer.parseInt(this.cmd[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"            if (idx \u003e notebook.size() || idx \u003c 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"                throw new IndexOutOfBoundException(idx + \" is not in your list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"            notebook \u003d notebook.mark(idx);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"            storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"            String message \u003d String.format(\"Alright! I\u0027ve marked this task as done:\\n\\t%s\",","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"                    notebook.getTask(idx));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"        } catch (IndexOutOfBoundException","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"                 | IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"The input is not a valid integer.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":69}},{"path":"src/main/java/Doopies/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.EmptyDescriptionException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * Represents a command to add a todo task to the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" * The command parses the task description, creates a new {@link ToDo} task,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" * adds it to the notebook, and saves the updated notebook to storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    /** The parsed input command containing the todo action and task description. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    private final String[] cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * Constructs a ToDoCommand with the specified parsed input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * @param cmd The parsed input command containing the todo action and task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    public ToDoCommand(String[] cmd) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * Translates the parsed input command into a single string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     * The translation joins all elements of the input array after the first element into a single string,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     * preserving spaces between words.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param cmd The array of input tokens to translate.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @return The translated string containing the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    private String translate(String[] cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        return String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     *     This implementation adds a {@link ToDo} task to the notebook using the task description provided by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     *     If successful, the updated notebook is saved to storage, and a confirmation message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     *     If the description is missing or invalid, an appropriate error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to interact with the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist the updated notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook containing the new todo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while saving the notebook to storage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"            String description \u003d translate(this.cmd);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"                throw new EmptyDescriptionException(\"OOPS!!! \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"                        \"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"            ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"            notebook \u003d notebook.add(todo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"            storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"            String message \u003d String.format(\"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"                            Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"                            \\t%s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"                            Now you have %d tasks in the list.\"\"\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"                    todo, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"        } catch (EmptyDescriptionException","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"                 | IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":90}},{"path":"src/main/java/Doopies/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.UnknownCommandException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" * Represents a command for handling unrecognized or invalid user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * This command displays an error message to the user indicating that the input is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * The notebook and storage remain unchanged.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"     * Constructs an UnknownCommand.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    public UnknownCommand() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     *     This implementation throws and catches an {@link UnknownCommandException}, displaying an error message","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     *     to inform the user that the input is unrecognized. The notebook and storage are not modified.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks (remains unchanged).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to display the error message to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system (not used in this command).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * @return The unmodified notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"            throw new UnknownCommandException(\"OOPS!!! I\u0027m sorry, \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"                    \"but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":46}},{"path":"src/main/java/Doopies/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.IndexOutOfBoundException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * Represents a command to unmark a task as not done in the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" *     The {@code UnmarkCommand} removes the completion status of a specified task in the notebook,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" *     saves the updated notebook to storage, and notifies the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    /** The parsed command arguments, including the task index to be unmarked. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    private final String[] cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"     * Constructs an {@code UnmarkCommand} with the specified command arguments.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * @param cmd The parsed command arguments containing the unmark action and the task index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    public UnmarkCommand(String[] cmd) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        super();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     *     This implementation unmarks the specified task in the notebook, saves the updated notebook to storage,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     and displays a confirmation message to the user. If the index is invalid or storage cannot be saved,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     an error message is displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * @param notebook The current in-memory notebook containing the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param ui       The user interface used to display messages to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @param storage  The storage system used to persist changes to the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     * @return The updated notebook with the specified task unmarked.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    public Notebook execute(Notebook notebook, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"            int idx \u003d Integer.parseInt(this.cmd[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"            if (idx \u003e notebook.size() || idx \u003c 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"                throw new IndexOutOfBoundException(idx + \" is not in your list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"            notebook \u003d notebook.unmark(idx);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"            storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"            String message \u003d String.format(\"Alright! I\u0027ve unmarked this task as done:\\n\\t%s\",","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"                    notebook.getTask(idx));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"        } catch (IndexOutOfBoundException","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"                 | IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"            ui.showMessage(\"The input is not a valid integer.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"        return notebook;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":68}},{"path":"src/main/java/Doopies/notebook/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.util.DateFormat;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.util.Parser;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * Represents a deadline task in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" *     A deadline task contains a description and a due date. It can be marked as done or not done and supports","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" *     a string representation that includes its due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    /** The raw string representation of the deadline date provided by the user. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String deadline;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    /** The parsed due date as a {@link LocalDateTime}, if successfully parsed. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    private final Optional\u003cLocalDateTime\u003e dueDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * Constructs a new deadline task with the specified description and deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * @param task     The description of the deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     * @param deadline The due date of the task, in string format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(task);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        this.dueDate \u003d Parser.parseMyDate(deadline);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     * Constructs a new deadline task with the specified description, completion status, and deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     * @param task     The description of the deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * @param done     The completion status of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @param deadline The due date of the task, in string format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    public Deadline(String task, boolean done, String deadline) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(task, done);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"        this.dueDate \u003d Parser.parseMyDate(deadline);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     * Retrieves the formatted deadline date as a string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     *     If the date cannot be parsed, this method returns the raw string provided by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     * @return The formatted deadline date, or the raw string if the date is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"        return this.dueDate.map(date -\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"                        date.format(DateFormat.OUTPUT_FORMAT.getFormatter()))","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"                .orElse(this.deadline);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     * Retrieves the due date of the deadline task as a {@link LocalDateTime}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"     *     If the date cannot be parsed, this method returns {@link LocalDateTime#MAX}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"     * @return The due date of the task, or {@link LocalDateTime#MAX} if the date is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"    public LocalDateTime getDeadlineDateTime() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        return this.dueDate.orElse(LocalDateTime.MAX);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"     *     This implementation creates and returns a new instance of the deadline task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"     *     with its completion status set to done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Deadline mark() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"        return new Deadline(this.getTask(), true, this.deadline);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"     *     This implementation creates and returns a new instance of the deadline task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"     *     with its completion status set to not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Deadline unmark() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awc1116"},"content":"        return new Deadline(this.getTask(), false, this.deadline);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awc1116"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awc1116"},"content":"     * The string representation includes the prefix \"[D]\", followed by the task\u0027s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awc1116"},"content":"     * completion status, description, and formatted due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awc1116"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awc1116"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getDeadline());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"awc1116":85,"-":26}},{"path":"src/main/java/Doopies/notebook/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.util.DateFormat;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.util.Parser;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * Represents an event task in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" *     An event task contains a description, a start time, and an end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" *     It can be marked as done or not done and supports a string representation","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" *     that includes its time range.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    /** The raw string representation of the start time provided by the user. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String start;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    /** The raw string representation of the end time provided by the user. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String end;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    /** The parsed start time as a {@link LocalDateTime}, if successfully parsed. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    private final Optional\u003cLocalDateTime\u003e startDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    /** The parsed end time as a {@link LocalDateTime}, if successfully parsed. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    private final Optional\u003cLocalDateTime\u003e endDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     * Constructs a new event task with the specified description, start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * @param task  The description of the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * @param start The start time of the event, in string format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     * @param end   The end time of the event, in string format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Event(String task, String start, String end) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(task);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        this.startDate \u003d Parser.parseMyDate(start);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        this.endDate \u003d Parser.parseMyDate(end);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     * Constructs a new event task with the specified description, completion status, start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * @param task  The description of the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     * @param done  The completion status of the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     * @param start The start time of the event, in string format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     * @param end   The end time of the event, in string format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"    public Event(String task, boolean done, String start, String end) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(task, done);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"        this.startDate \u003d Parser.parseMyDate(start);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"        this.endDate \u003d Parser.parseMyDate(end);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"     * Retrieves the formatted start time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     *     If the start time cannot be parsed, this method returns the raw string provided by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"     * @return The formatted start time, or the raw string if the date is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"    public String getStart() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"        return this.startDate.map(date -\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"                        date.format(DateFormat.OUTPUT_FORMAT.getFormatter()))","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"                .orElse(this.start);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"     * Retrieves the formatted end time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"     *     If the end time cannot be parsed, this method returns the raw string provided by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"     * @return The formatted end time, or the raw string if the date is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"    public String getEnd() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"        return this.endDate.map(date -\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"                        date.format(DateFormat.OUTPUT_FORMAT.getFormatter()))","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"                .orElse(this.end);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"     * Retrieves the start time of the event as a {@link LocalDateTime}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"     *     If the start time cannot be parsed, this method returns {@link LocalDateTime#MAX}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awc1116"},"content":"     * @return The start time of the event, or {@link LocalDateTime#MAX} if the date is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awc1116"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awc1116"},"content":"        return this.startDate.orElse(LocalDateTime.MAX);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awc1116"},"content":"     *     This implementation creates and returns a new instance of the event task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awc1116"},"content":"     *     with its completion status set to done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Event mark() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awc1116"},"content":"        return new Event(this.getTask(), true, this.start, this.end);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awc1116"},"content":"     *     This implementation creates and returns a new instance of the event task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awc1116"},"content":"     *     with its completion status set to not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Event unmark() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awc1116"},"content":"        return new Event(this.getTask(), false, this.start, this.end);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awc1116"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awc1116"},"content":"     *     The string representation includes the prefix \"[E]\", followed by the task\u0027s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awc1116"},"content":"     *     completion status, description, formatted start time, and formatted end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awc1116"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awc1116"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.getStart(), this.getEnd());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"awc1116":109,"-":29}},{"path":"src/main/java/Doopies/notebook/Notebook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import java.util.List;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":" * Represents a notebook that stores a list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" *     This class provides immutable operations to add, mark, unmark, or delete tasks,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" *     and to retrieve tasks from the notebook. Each operation creates a new notebook instance,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" *     ensuring immutability.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Notebook {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    /** The list of tasks stored in the notebook. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"     * Constructs an empty notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Notebook() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        this.list \u003d List.of();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     * Constructs a notebook with the specified list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     * @param list The list of tasks to initialize the notebook with.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    public Notebook(List\u003cTask\u003e list) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     * Adds a new task to the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     * @param task The task to be added to the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     * @return A new notebook containing the added task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Notebook add(Task task) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        newList.add(task);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new Notebook(newList.stream().toList());","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     * @param idx The index of the task to mark as done (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     * @return A new notebook with the specified task marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Notebook mark(int idx) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        idx -\u003d 1;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        newList.set(idx, this.list.get(idx).mark());","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Notebook(newList.stream().toList());","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     * Unmarks a task at the specified index as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"     * @param idx The index of the task to unmark (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     * @return A new notebook with the specified task unmarked.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Notebook unmark(int idx) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        idx -\u003d 1;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        newList.set(idx, this.list.get(idx).unmark());","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Notebook(newList.stream().toList());","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"     * @param idx The index of the task to delete (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"     * @return A new notebook with the specified task removed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Notebook delete(int idx) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        idx -\u003d 1;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        newList.remove(idx);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Notebook(newList.stream().toList());","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"     * Returns the number of tasks in the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"     * @return The total number of tasks in the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"    public int size() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"        return this.list.size();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awc1116"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awc1116"},"content":"     * @param idx The index of the task to retrieve (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awc1116"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        idx -\u003d 1;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this.list.get(idx);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awc1116"},"content":"     * Retrieves all tasks in the notebook as an immutable list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awc1116"},"content":"     * @return A list of all tasks in the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awc1116"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awc1116"},"content":"        return this.list;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awc1116"},"content":"     * Finds all tasks in the notebook that contain the specified keyword in their description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awc1116"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awc1116"},"content":"     * @return A list of tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awc1116"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awc1116"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awc1116"},"content":"            if (task.getTask().contains(keyword)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awc1116"},"content":"                newList.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awc1116"},"content":"        return newList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awc1116"},"content":"     * Returns a string representation of the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awc1116"},"content":"     *     The string representation contains the list of tasks, numbered sequentially.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awc1116"},"content":"     * @return A formatted string representing the notebook.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String temp \u003d String.format(\"%d. %s\\n\", i + 1, this.list.get(i));","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            str.append(temp);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"awc1116"},"content":"        return String.format(\"Here are the tasks in your list:\\n%s\", str.toString().stripTrailing());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"awc1116":97,"-":51}},{"path":"src/main/java/Doopies/notebook/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":" * Represents an abstract task in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":" * A task contains a description and a completion status. Subclasses of {@code Task} must provide","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":" * implementations for marking and unmarking the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"    /** The description of the task. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"    private final String task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    /** Indicates whether the task is marked as done. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean done;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"     * Constructs a new task with the specified description and an initial status of not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"     * @param task The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Task(String task) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"     * Constructs a new task with the specified description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"     * @param task The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    Task(String task, boolean done) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * Checks whether the task is marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * @return {@code true} if the task is marked as done; {@code false} otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        return this.done;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"    public String getTask() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"        return this.task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"     *     Subclasses must provide an implementation that creates and returns a new instance","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     *     of the task with its completion status set to done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     * @return A new instance of the task marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    abstract Task mark();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"     *     Subclasses must provide an implementation that creates and returns a new instance","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"     *     of the task with its completion status set to not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"     * @return A new instance of the task marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    abstract Task unmark();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"     *     The string representation includes the completion status (marked with an \"X\" if done)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"     *     and the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                this.done ? \"X\" : \" \",","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                this.task);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"awc1116":68,"-":25}},{"path":"src/main/java/Doopies/notebook/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":" * Represents a todo task in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":" * A todo task is a simple task with no specific date or time attached.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":" * It can be marked as done or not done and supports a string representation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"     * Constructs a new todo task with the specified description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public ToDo(String task) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(task);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"     * Constructs a new todo task with the specified description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"     * @param done The completion status of the todo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    public ToDo(String task, boolean done) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(task, done);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     *     This implementation creates and returns a new instance of the todo task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     with its completion status set to done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ToDo mark() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        return new ToDo(this.getTask(), true);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     *     This implementation creates and returns a new instance of the todo task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     *     with its completion status set to not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ToDo unmark() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"        return new ToDo(this.getTask(), false);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"     *     The string representation includes the prefix \"[T]\", followed by the task\u0027s","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"     *     completion status (marked as \"X\" if done, or \" \" if not done), and the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"     * @return A formatted string representing the todo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"awc1116":46,"-":22}},{"path":"src/main/java/Doopies/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.exception.InvalidTaskTypeException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Event;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import doopies.util.TaskComparator;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"import java.util.List;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":" * Handles storage operations for saving and loading tasks to and from a file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":" *     The {@code Storage} class provides methods to save tasks from a {@link Notebook} to disk,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":" *     load tasks from disk into a {@link Notebook}, and clear the stored tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"public class Storage {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    /** The path to the file used for storing tasks. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    private final Path filePath;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"     * Constructs a new {@code Storage} instance with the specified file path.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * Loads tasks from the storage file into a {@link Notebook}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     *     If the file does not exist, it is created along with any necessary directories. Invalid","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     *     task lines in the file are skipped, and a warning is logged to the console.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     * @return A {@link Notebook} containing the tasks loaded from the file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while reading from or creating the file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"    public Notebook load() throws IOException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"        if (Files.notExists(this.filePath)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"            Files.createDirectories(this.filePath.getParent());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"            Files.createFile(this.filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"                tasks.add(parseTask(line));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"            } catch (InvalidTaskTypeException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"                System.err.println(\"Skipped invalid line: \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"        return new Notebook(tasks);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"     * Parses a line from the storage file into a {@link Task}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"     * @param line The line to parse.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"     * @return The task represented by the line.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"     * @throws InvalidTaskTypeException If the line does not represent a valid task type.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"    private Task parseTask(String line) throws InvalidTaskTypeException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"            case \"T\" -\u003e new ToDo(description, isDone);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"            case \"D\" -\u003e new Deadline(description, isDone, parts[3]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"            case \"E\" -\u003e new Event(description, isDone, parts[3], parts[4]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"            default -\u003e throw new InvalidTaskTypeException(\"Invalid task type\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"        };","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"     * Saves tasks from a {@link Notebook} to the storage file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"     *     The tasks are saved in a sorted order defined by the {@link TaskComparator}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awc1116"},"content":"     * @param notebook The notebook containing the tasks to save.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awc1116"},"content":"    public void save(Notebook notebook) throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awc1116"},"content":"        Files.write(this.filePath, new ArrayList\u003cString\u003e());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(notebook.getAllTasks());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awc1116"},"content":"        tasks.sort(new TaskComparator());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awc1116"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awc1116"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awc1116"},"content":"            lines.add(serializeTask(task));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awc1116"},"content":"        Files.write(this.filePath, lines);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awc1116"},"content":"     * Converts a {@link Task} into a line suitable for storage in the file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awc1116"},"content":"     * @param task The task to serialize.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awc1116"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awc1116"},"content":"    private String serializeTask(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awc1116"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awc1116"},"content":"            return String.format(\"T | %d | %s\", task.isDone() ? 1 : 0, task.getTask());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awc1116"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awc1116"},"content":"            return String.format(\"D | %d | %s | %s\", task.isDone() ? 1 : 0, task.getTask(),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awc1116"},"content":"                    ((Deadline) task).getDeadline());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awc1116"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awc1116"},"content":"            return String.format(\"E | %d | %s | %s | %s\", task.isDone() ? 1 : 0, task.getTask(),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awc1116"},"content":"                    ((Event) task).getStart(), ((Event) task).getEnd());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awc1116"},"content":"        return \"\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awc1116"},"content":"     * Clears all tasks from the storage file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awc1116"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awc1116"},"content":"    public void clear() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awc1116"},"content":"        Files.write(this.filePath, new ArrayList\u003cString\u003e());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"awc1116":138}},{"path":"src/main/java/Doopies/userInterface/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.userinterface;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":" * Handles user interactions in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" *     The {@code Ui} class provides methods to display messages, read user input,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" *     and manage the lifecycle of the user interface.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"public class Ui {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"    /** The line separator used for formatting output messages. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    private static final String LINE \u003d \"_\".repeat(60);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    /** The welcome message displayed when the application starts. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    private static final String INTRO \u003d String.format(\"\"\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"                %s","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"                Hello! I\u0027m Doopies","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"                What can I do for you?","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"                %s","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"                \"\"\",","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"            LINE,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"            LINE);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    /** The goodbye message displayed when the application exits. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    private static final String END \u003d String.format(\"\"\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"                %s","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"                Bye. Hope to see you soon!","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"                %s","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"                \"\"\",","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"            LINE,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"            LINE);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"    /** The scanner for reading user input from the console. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * Constructs a new {@code Ui} instance and initializes the input scanner.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"    public Ui() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"        System.out.println(INTRO);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"    public void showEnding() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"        System.out.println(END);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"     * Displays a formatted message to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"     *     The message is enclosed within two horizontal lines for readability.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"        System.out.println(LINE + \"\\n\" + message + \"\\n\" + LINE);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"     *     This method waits for input from the console and returns the entered command as a string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"     * Closes the user interface.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"     *     This method closes the scanner and releases any associated system resources.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"     *     It should be called when the application is shutting down.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"    public void closeUi() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"        this.sc.close();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":93}},{"path":"src/main/java/Doopies/util/DateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.util;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":" * Represents various date and time formats used in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":" * This enum defines both input formats (for parsing user-provided dates)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":" * and an output format (for displaying dates to the user).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":" * Each constant wraps a {@link DateTimeFormatter} with a specific pattern.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"public enum DateFormat {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"yyyy-MM-dd HHmm\" (e.g., \"2025-01-31 2359\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_1(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"dd/MM/yyyy HHmm\" (e.g., \"31/01/2025 2359\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_2(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"dd/MM/yyyy HH:mm\" (e.g., \"31/01/2025 23:59\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_3(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"MMM dd yyyy HH:mm\" (e.g., \"Jan 31 2025 23:59\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_4(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"MMM dd yyyy HHa\" (e.g., \"Jan 31 2025 11PM\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_5(\"MMM dd yyyy HHa\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"d/MM/yyyy HHmm\" (e.g., \"1/01/2025 2359\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_6(\"d/MM/yyyy HHmm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"d/M/yyyy HHmm\" (e.g., \"1/1/2025 2359\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_7(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"    /** Input format: \"dd/M/yyyy HHmm\" (e.g., \"31/1/2025 2359\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    INPUT_FORMAT_8(\"dd/M/yyyy HHmm\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    /** Output format: \"MMM dd yyyy, hh:mm a\" (e.g., \"Jan 31 2025, 11:59 PM\"). */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"    OUTPUT_FORMAT(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"    /** The {@link DateTimeFormatter} associated with the date format pattern. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    private final DateTimeFormatter formatter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     * Constructs a {@code DateFormat} constant with the specified date pattern.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     * @param pattern The pattern used to create the {@link DateTimeFormatter}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"    DateFormat(String pattern) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"     * Retrieves the {@link DateTimeFormatter} associated with this date format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"     * @return The {@link DateTimeFormatter} for this date format.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"    public DateTimeFormatter getFormatter() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"        return this.formatter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":61}},{"path":"src/main/java/Doopies/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.util;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.command.ClearStorageCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.command.Command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.command.DeadlineCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.command.DeleteCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.command.EndCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import doopies.command.EventCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import doopies.command.FindCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import doopies.command.ListCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import doopies.command.MarkCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import doopies.command.ToDoCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import doopies.command.UnknownCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"import doopies.command.UnmarkCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":" * Handles the parsing of user input into commands and dates.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":" *     The {@code Parser} class provides methods to:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":" *     \u003cli\u003eConvert user input into {@link Command} objects that the application can execute.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":" *     \u003cli\u003eParse date strings into {@link LocalDateTime} objects using predefined formats in {@link DateFormat}.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"public class Parser {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * Parses the user input into a {@link Command} object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     This method analyzes the input string, determines the command type, and constructs the appropriate {@link Command}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     object. If the command is unrecognized, an {@link UnknownCommand} is returned.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     * @param command The user input string to parse.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     * @return A {@link Command} object representing the parsed command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    public static Command parseCommand(String command) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        String[] line \u003d command.split(\" /\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        String[] cmd \u003d line[0].split(\" \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        return switch (cmd[0].toLowerCase()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"            case \"bye\" -\u003e new EndCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"            case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"            case \"mark\" -\u003e new MarkCommand(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"            case \"unmark\" -\u003e new UnmarkCommand(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"            case \"delete\" -\u003e new DeleteCommand(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"            case \"clear\" -\u003e new ClearStorageCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"            case \"find\" -\u003e new FindCommand(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"            case \"todo\" -\u003e new ToDoCommand(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"            case \"deadline\" -\u003e new DeadlineCommand(line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"            case \"event\" -\u003e new EventCommand(line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"            default -\u003e new UnknownCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"        };","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"     * Parses a date string into a {@link LocalDateTime} object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"     *     This method attempts to parse the input string using all date formats defined in {@link DateFormat}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"     *     If the string cannot be parsed using any of the formats, an empty {@link Optional} is returned.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"     * @param dateStr The date string to parse.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"     * @return An {@link Optional} containing the parsed {@link LocalDateTime} if successful, or an empty {@link Optional}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"     * if the string cannot be parsed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"    public static Optional\u003cLocalDateTime\u003e parseMyDate(String dateStr) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"        for (DateFormat format : DateFormat.values()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"            try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"                return Optional.of(LocalDateTime.parse(dateStr, format.getFormatter()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"        return Optional.empty();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":81}},{"path":"src/main/java/Doopies/util/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.util;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Event;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":" * A comparator for sorting tasks in the Doopies application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":" * The {@code TaskComparator} sorts tasks based on their type and specific criteria:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":" *     \u003cli\u003e{@link ToDo} tasks are sorted alphabetically by their description.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":" *     \u003cli\u003e{@link Deadline} tasks are sorted by their due date.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":" *     \u003cli\u003e{@link Event} tasks are sorted by their start date.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":" *     \u003cli\u003eTasks of different types are sorted in the following order:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":" *         \u003col\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":" *             \u003cli\u003e{@link ToDo}\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":" *             \u003cli\u003e{@link Deadline}\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":" *             \u003cli\u003e{@link Event}\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":" *         \u003c/ol\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"     * Compares two {@link Task} objects for order.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"     * The comparison rules are:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"     *     \u003cli\u003eIf both tasks are {@link ToDo}, they are compared alphabetically by description.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"     *     \u003cli\u003eIf one task is a {@link ToDo}, it is considered smaller than a {@link Deadline} or {@link Event}.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"     *     \u003cli\u003eIf both tasks are {@link Deadline}, they are compared by their due dates.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"     *     \u003cli\u003eIf both tasks are {@link Event}, they are compared by their start dates.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"     *     \u003cli\u003eIf one task is a {@link Deadline} and the other is an {@link Event}, they are compared","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"     *     by the deadline\u0027s due date and the event\u0027s start date.\u003c/li\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"     * If none of the above rules apply, tasks are compared alphabetically by description as a fallback.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"     * @param t1 The first task to compare.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"     * @param t2 The second task to compare.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"     * @return A negative integer, zero, or a positive integer as {@code t1} is less than, equal to,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"     * or greater than {@code t2}.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"        if (t1 instanceof ToDo \u0026\u0026 t2 instanceof ToDo) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"            return t1.getTask().compareToIgnoreCase(t2.getTask());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        } else if (t1 instanceof ToDo) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"            return -1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"        } else if (t2 instanceof ToDo) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"            return 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"        } else if (t1 instanceof Deadline \u0026\u0026 t2 instanceof Deadline) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"            return ((Deadline) t1).getDeadlineDateTime()","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"                    .compareTo(((Deadline) t2).getDeadlineDateTime());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"        } else if (t1 instanceof Event \u0026\u0026 t2 instanceof Event) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"            return ((Event) t1).getStartDateTime()","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"                    .compareTo(((Event) t2).getStartDateTime());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"        } else if (t1 instanceof Deadline \u0026\u0026 t2 instanceof Event) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"            return ((Deadline) t1).getDeadlineDateTime()","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"                    .compareTo(((Event) t2).getStartDateTime());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"        } else if (t1 instanceof Event \u0026\u0026 t2 instanceof Deadline) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"            return ((Event) t1).getStartDateTime()","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"                    .compareTo(((Deadline) t2).getDeadlineDateTime());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        return t1.getTask().compareToIgnoreCase(t2.getTask());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":73}},{"path":"src/test/java/DoopiesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"class DoopiesTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    private final String testFilePath \u003d \"./data/test_doopies.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    void setUp() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        System.setIn(new ByteArrayInputStream(\"\".getBytes()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        Path path \u003d Paths.get(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"            try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"                Files.delete(path);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    private void simulateInput(String input) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    private void assertOutputContains(String expectedOutput) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        assertTrue(outputStream.toString().contains(expectedOutput),","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"                \"Expected output to contain:\\n\" + expectedOutput","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"                        + \"\\nBut current output is:\\n\" + outputStream);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    void testTodoCommandValid() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"todo read book\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Got it. I\u0027ve added this task:\\n\\t[T][ ] read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"    void testTodoCommandEmptyDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"todo\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"    void testMarkCommandValid() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"list\\ntodo read book\\nmark 1\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Alright! I\u0027ve marked this task as done:\\n\\t[T][X] read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"    void testListCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"todo read book\\nlist\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Here are the tasks in your list:\\n1. [T][ ] read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"    void testMultipleTasksMarkCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"todo read book\\ntodo join sports club\\nmark 2\\nlist\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Alright! I\u0027ve marked this task as done:\\n\\t[T][X] join sports club\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"1. [T][ ] read book\\n2. [T][X] join sports club\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"    void testUnmarkCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"todo read book\\nmark 1\\nunmark 1\\nlist\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Alright! I\u0027ve unmarked this task as done:\\n\\t[T][ ] read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Here are the tasks in your list:\\n1. [T][ ] read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awc1116"},"content":"    void testDeadlineCommandValid() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"deadline return book /by 31/1/2025 2359\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Got it. I\u0027ve added this task:\\n\\t[D][ ] return book (by: Jan 31 2025, 11:59 pm)\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awc1116"},"content":"    void testDeadlineCommandEmptyDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"deadline /by 31/1/2025 2359\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awc1116"},"content":"    void testDeadlineCommandIncorrectFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"deadline return book\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Incorrect format for deadline.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awc1116"},"content":"    void testEventCommandValid() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"event meeting /from 24/1/2025 1400 /to 24/1/2025 1600\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Got it. I\u0027ve added this task:\\n\\t[E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awc1116"},"content":"    void testEventCommandEmptyDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"event /from 24/1/2025 1400 /to 24/1/2025 1600\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awc1116"},"content":"    void testEventCommandIncorrectFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"event meeting\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Incorrect format for event.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"awc1116"},"content":"    void testUnknownCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"blah\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"awc1116"},"content":"    void loadingStorage() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"awc1116"},"content":"            todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"awc1116"},"content":"            deadline return book /by 31/1/2025 2359","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"awc1116"},"content":"            event meeting /from 24/1/2025 1400 /to 24/1/2025 1600","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"awc1116"},"content":"            bye","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"awc1116"},"content":"            \"\"\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"awc1116"},"content":"        simulateInput(\"list\\nbye\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"awc1116"},"content":"        new Doopies(testFilePath).run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"awc1116"},"content":"        assertOutputContains(\"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"awc1116"},"content":"            Here are the tasks in your list:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"awc1116"},"content":"            1. [T][ ] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"awc1116"},"content":"            2. [E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"awc1116"},"content":"            3. [D][ ] return book (by: Jan 31 2025, 11:59 pm)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"awc1116"},"content":"            \"\"\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"awc1116"},"content":"    void testFindCommandIntegration() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"awc1116"},"content":"        String input \u003d \"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"awc1116"},"content":"                todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"awc1116"},"content":"                todo write book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"awc1116"},"content":"                todo play football","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"awc1116"},"content":"                find book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"awc1116"},"content":"                bye","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"awc1116"},"content":"                \"\"\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"awc1116"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"awc1116"},"content":"        Doopies doopies \u003d new Doopies(\"./data/test_storage.txt\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"awc1116"},"content":"        doopies.run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"awc1116"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"[T][ ] read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"[T][ ] write book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":190}},{"path":"src/test/java/doopies/command/ClearStorageCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"public class ClearStorageCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    private final String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    void testExecuteClear() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new doopies.notebook.ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        ClearStorageCommand command \u003d new ClearStorageCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        notebook \u003d storage.load();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, Files.readAllLines(Path.of(testFilePath)).size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":43}},{"path":"src/test/java/doopies/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    void testExecuteValidDeadline() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        DeadlineCommand command \u003d new DeadlineCommand(new String[]{\"deadline return book\", \"/by 31/1/2025 2359\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        assertEquals(1, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 31 2025, 11:59 pm)\", notebook.getTask(1).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    void testExecuteMissingDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        DeadlineCommand command \u003d new DeadlineCommand(new String[]{\"deadline\", \"/by 31/1/2025 2359\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":47}},{"path":"src/test/java/doopies/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    void testExecuteDelete() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        DeleteCommand command \u003d new DeleteCommand(new String[]{\"delete\", \"1\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":39}},{"path":"src/test/java/doopies/command/EndCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"public class EndCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    void testExecuteEnd() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        EndCommand command \u003d new EndCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        Notebook result \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        assertEquals(notebook, result);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":35}},{"path":"src/test/java/doopies/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"public class EventCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    void testExecuteValidEvent() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        EventCommand command \u003d new EventCommand(new String[]{\"event meeting\", \"/from 24/1/2025 1400\", \"/to 24/1/2025 1600\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        assertEquals(1, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\", notebook.getTask(1).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    void testExecuteMissingDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        EventCommand command \u003d new EventCommand(new String[]{\"event\", \"/from 24/1/2025 1400\", \"/to 24/1/2025 1600\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":46}},{"path":"src/test/java/doopies/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"public class FindCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    void setUp() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        // Redirect System.out for testing output","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    void testExecuteFindCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"write book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"play football\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        FindCommand command \u003d new FindCommand(new String[]{\"find\", \"book\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"                ____________________________________________________________","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"                Here are the matching tasks in your list:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"                1. [T][ ] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"                2. [T][ ] write book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"                ____________________________________________________________","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"                \"\"\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"        assertEquals(expectedOutput.strip(), outputStream.toString().strip());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":51}},{"path":"src/test/java/doopies/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Event;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"public class ListCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        // Redirect System.out to capture command output","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    void testExecuteListWithTasks() throws Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new Deadline(\"return book\", \"31/1/2025 2359\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"[T][ ] read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"[D][ ] return book (by: Jan 31 2025, 11:59 pm)\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"[E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":52}},{"path":"src/test/java/doopies/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    private final String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    void testExecuteMark() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        MarkCommand command \u003d new MarkCommand(new String[]{\"mark\", \"1\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        assertTrue(notebook.getTask(1).isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":39}},{"path":"src/test/java/doopies/command/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    void testExecuteValidToDo() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        ToDoCommand command \u003d new ToDoCommand(new String[]{\"todo\", \"read book\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        assertEquals(1, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] read book\", notebook.getTask(1).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    void testExecuteMissingDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        ToDoCommand command \u003d new ToDoCommand(new String[]{\"todo\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":46}},{"path":"src/test/java/doopies/command/UnknownCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"public class UnknownCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"    void testExecuteUnknownCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        UnknownCommand command \u003d new UnknownCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        assertTrue(output.contains(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":41}},{"path":"src/test/java/doopies/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.storage.Storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.userinterface.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    void testExecuteUnmark() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.mark(1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(new String[]{\"unmark\", \"1\"});","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        notebook \u003d command.execute(notebook, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        assertFalse(notebook.getTask(1).isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":40}},{"path":"src/test/java/doopies/notebook/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"    void testDeadlineCreation() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 31 2025, 11:59 pm)\", deadline.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    void testMarkDeadline() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        Deadline markedDeadline \u003d deadline.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        assertNotSame(deadline, markedDeadline);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        assertTrue(markedDeadline.isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[D][X] return book (by: Jan 31 2025, 11:59 pm)\", markedDeadline.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    void testUnmarkDeadline() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        Deadline markedDeadline \u003d deadline.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        Deadline unmarkedDeadline \u003d markedDeadline.unmark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        assertNotSame(markedDeadline, unmarkedDeadline);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        assertFalse(unmarkedDeadline.isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 31 2025, 11:59 pm)\", unmarkedDeadline.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    void testInvalidDateFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"invalid date\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[D][ ] return book (by: invalid date)\", deadline.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":45}},{"path":"src/test/java/doopies/notebook/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"public class EventTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"    void testEventCreation() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"        Event event \u003d new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\", event.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    void testMarkEvent() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        Event event \u003d new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        Event markedEvent \u003d event.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        assertNotSame(event, markedEvent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        assertTrue(markedEvent.isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[E][X] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\", markedEvent.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    void testUnmarkEvent() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        Event event \u003d new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        Event markedEvent \u003d event.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        Event unmarkedEvent \u003d markedEvent.unmark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        assertNotSame(markedEvent, unmarkedEvent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        assertFalse(unmarkedEvent.isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\", unmarkedEvent.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    void testInvalidDateFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        Event event \u003d new Event(\"meeting\", \"invalid start\", \"invalid end\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[E][ ] meeting (from: invalid start to: invalid end)\", event.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":45}},{"path":"src/test/java/doopies/notebook/NotebookTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import java.util.List;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"public class NotebookTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    void testAddTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"        assertEquals(1, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] read book\", notebook.getTask(1).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    void testMarkTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.mark(1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        assertTrue(notebook.getTask(1).isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    void testUnmarkTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.mark(1).unmark(1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        assertFalse(notebook.getTask(1).isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"    void testDeleteTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"        assertEquals(1, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.delete(1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, notebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"    void testListTasks() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new Deadline(\"return book\", \"31/1/2025 2359\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"                Here are the tasks in your list:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"                1. [T][ ] read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"                2. [D][ ] return book (by: Jan 31 2025, 11:59 pm)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"                3. [E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"                \"\"\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"        assertEquals(expected.strip(), notebook.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"    void testFindTasks() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"write book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"play football\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e result \u003d notebook.find(\"book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awc1116"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] read book\", result.get(0).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] write book\", result.get(1).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awc1116"},"content":"    void testFindNoMatch() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"write book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awc1116"},"content":"        List\u003cTask\u003e result \u003d notebook.find(\"football\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":91}},{"path":"src/test/java/doopies/notebook/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"public class ToDoTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"    void testToDoCreation() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    void testMarkToDo() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"        ToDo markedToDo \u003d todo.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        assertNotSame(todo, markedToDo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        assertTrue(markedToDo.isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][X] read book\", markedToDo.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    void testUnmarkToDo() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        ToDo markedToDo \u003d todo.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        ToDo unmarkedToDo \u003d markedToDo.unmark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        assertNotSame(markedToDo, unmarkedToDo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        assertFalse(unmarkedToDo.isDone());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] read book\", unmarkedToDo.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":39}},{"path":"src/test/java/doopies/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Event;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Notebook;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        String testFilePath \u003d \"./data/test_storage.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        Path path \u003d Paths.get(testFilePath);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"            Files.delete(path);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"    void testSaveAndLoad() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new Deadline(\"return book\", \"31/1/2025 2359\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        Notebook loadedNotebook \u003d storage.load();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        assertEquals(3, loadedNotebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[T][ ] read book\", loadedNotebook.getTask(1).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[E][ ] meeting (from: Jan 24 2025, 02:00 pm to: Jan 24 2025, 04:00 pm)\", loadedNotebook.getTask(2).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 31 2025, 11:59 pm)\", loadedNotebook.getTask(3).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    void testClearStorage() throws IOException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"        Notebook notebook \u003d new Notebook();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"        notebook \u003d notebook.add(new ToDo(\"read book\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        storage.save(notebook);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"        storage.clear();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"        Notebook loadedNotebook \u003d storage.load();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"        assertEquals(0, loadedNotebook.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":62}},{"path":"src/test/java/doopies/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.util;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.command.ClearStorageCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.command.Command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.command.DeadlineCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.command.EndCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"import doopies.command.EventCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import doopies.command.ListCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"import doopies.command.ToDoCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import doopies.command.UnknownCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    void testParseCommandValid() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"        Command command \u003d Parser.parseCommand(\"todo read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(ToDoCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        command \u003d Parser.parseCommand(\"deadline return book /by 31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(DeadlineCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        command \u003d Parser.parseCommand(\"event meeting /from 24/1/2025 1400 /to 24/1/2025 1600\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(EventCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"        command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"        command \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(EndCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        command \u003d Parser.parseCommand(\"clear\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(ClearStorageCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"    void testParseCommandInvalid() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"        Command command \u003d Parser.parseCommand(\"blah blah blah\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(UnknownCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awc1116"},"content":"    void testParseMyDate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awc1116"},"content":"        // Test valid dates","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awc1116"},"content":"        Optional\u003cLocalDateTime\u003e date \u003d Parser.parseMyDate(\"31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awc1116"},"content":"        assertTrue(date.isPresent());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"Jan 31 2025, 11:59 pm\", date.get().format(DateFormat.OUTPUT_FORMAT.getFormatter()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awc1116"},"content":"        date \u003d Parser.parseMyDate(\"24/1/2025 1400\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awc1116"},"content":"        assertTrue(date.isPresent());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awc1116"},"content":"        assertEquals(\"Jan 24 2025, 02:00 pm\", date.get().format(DateFormat.OUTPUT_FORMAT.getFormatter()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awc1116"},"content":"        // Test invalid date","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awc1116"},"content":"        date \u003d Parser.parseMyDate(\"invalid date\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awc1116"},"content":"        assertTrue(date.isEmpty());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awc1116"},"content":"    void testParseIncompleteCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awc1116"},"content":"        Command command \u003d Parser.parseCommand(\"todo\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(ToDoCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awc1116"},"content":"        command \u003d Parser.parseCommand(\"deadline\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awc1116"},"content":"        assertInstanceOf(DeadlineCommand.class, command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":75}},{"path":"src/test/java/doopies/util/TaskComparatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"package doopies.util;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Event;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"import doopies.notebook.ToDo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"public class TaskComparatorTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"    void testCompareDifferentTypes() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"        TaskComparator comparator \u003d new TaskComparator();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"        Task todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"        Task deadline \u003d new Deadline(\"return book\", \"31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"        Task event \u003d new Event(\"meeting\", \"24/1/2025 1400\", \"24/1/2025 1600\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"        assertTrue(comparator.compare(todo, deadline) \u003c 0);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"        assertTrue(comparator.compare(deadline, event) \u003e 0);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"    void testCompareSameTypeAlphabetical() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"        TaskComparator comparator \u003d new TaskComparator();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"        Task todo1 \u003d new ToDo(\"a book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"        Task todo2 \u003d new ToDo(\"z book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"        assertTrue(comparator.compare(todo1, todo2) \u003c 0);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    void testCompareSameTypeByDate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"        TaskComparator comparator \u003d new TaskComparator();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"        Task deadline1 \u003d new Deadline(\"submit report\", \"30/1/2025 1200\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"        Task deadline2 \u003d new Deadline(\"return book\", \"31/1/2025 2359\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awc1116"},"content":"        assertTrue(comparator.compare(deadline1, deadline2) \u003c 0);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"awc1116":45}},{"path":"text-ui-test/data/doopies.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"E | 0 | meeting | Jan 24 2025, 02:00 pm | Jan 24 2025, 04:00 pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"D | 0 | return book | Jan 31 2025, 11:59 pm","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"awc1116":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awc1116"},"content":"todo read book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awc1116"},"content":"todo","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awc1116"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awc1116"},"content":"todo join sports club","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awc1116"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"unmark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awc1116"},"content":"deadline return book /by 31/1/2025 2359","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"deadline return book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"deadline /by 31/1/2025 2359","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awc1116"},"content":"event meeting /from 24/1/2025 1400 /to 24/1/2025 1600","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awc1116"},"content":"event meeting","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awc1116"},"content":"event /from 24/1/2025 1400 /to 24/1/2025 1600","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awc1116"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awc1116"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awc1116"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"blah","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"delete 5","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"mark 6","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"awc1116":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awc1116"},"content":"REM Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awc1116"},"content":"REM Delete output from previous run","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awc1116"},"content":"if exist diff.txt del diff.txt","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awc1116"},"content":"REM Compile the code into the bin folder","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awc1116"},"content":"echo Compiling Java files...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awc1116"},"content":"REM Run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awc1116"},"content":"echo Running program...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awc1116"},"content":"java -classpath ..\\bin Doopies \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awc1116"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awc1116"},"content":"    echo ********** PROGRAM EXECUTION FAILURE **********","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awc1116"},"content":"    exit /b 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awc1116"},"content":")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awc1116"},"content":"REM Normalize files by trimming whitespace and converting to consistent line endings","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awc1116"},"content":"echo Normalizing files...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awc1116"},"content":"for /f \"tokens\u003d* delims\u003d\" %%a in (ACTUAL.TXT) do echo %%a \u003e\u003e ACTUAL_NORMALIZED.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awc1116"},"content":"for /f \"tokens\u003d* delims\u003d\" %%a in (EXPECTED.TXT) do echo %%a \u003e\u003e EXPECTED_NORMALIZED.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awc1116"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awc1116"},"content":"REM Compare the normalized output","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awc1116"},"content":"echo Comparing output...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awc1116"},"content":"diff ACTUAL_NORMALIZED.TXT EXPECTED_NORMALIZED.TXT \u003e diff.txt","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awc1116"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awc1116"},"content":"    echo ********** TEST FAILURE **********","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awc1116"},"content":"    echo Differences found between ACTUAL.TXT and EXPECTED.TXT:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awc1116"},"content":"    type diff.txt","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awc1116"},"content":"    del diff.txt","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awc1116"},"content":"    del ACTUAL_NORMALIZED.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awc1116"},"content":"    del EXPECTED_NORMALIZED.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awc1116"},"content":"    exit /b 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awc1116"},"content":")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awc1116"},"content":"REM Clean up and success message","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awc1116"},"content":"del diff.txt","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awc1116"},"content":"del ACTUAL_NORMALIZED.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awc1116"},"content":"del EXPECTED_NORMALIZED.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awc1116"},"content":"echo ALL tests passed successfully!","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"awc1116":35,"-":13}}]
