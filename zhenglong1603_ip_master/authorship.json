[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"    mainClass.set(\"zbot.ZBOT\")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"    archiveFileName \u003d \u0027zbot.jar\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":7,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"# ZBOT User Guide","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":1,"-":29}},{"path":"src/main/java/zbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.EmptyTaskListException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.IncorrectInputException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":" * Represents a class that handles input parsing and executes the corresponding logic.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":" * This class is responsible for:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":" *   \u003cli\u003eParsing user input commands or data\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":" *   \u003cli\u003eExecuting the appropriate actions based on the parsed input\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":" *   \u003cli\u003eManaging the flow of operations in response to the input\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":" * The class may interface with other components of the application to perform tasks, such as","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":" * task management, file handling, or displaying results.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"     * This method processes the user\u0027s input and triggers the appropriate actions based on the command.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"     * It interacts with the UI and task list to carry out the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"     * @param input the input string entered by the user, containing the command and related arguments","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"     * @param ui the UI object used to display messages and interact with the user","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"     * @param taskList the list of tasks to be managed and modified based on the input","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"     * @throws IncorrectInputException if the input does not follow the correct format","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"     * @throws InvalidCommandException if the command entered by the user does not exist or is not recognized","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"     * @throws EmptyTaskListException if the task list is empty and a task operation is attempted","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"     * @throws InvalidTaskNumberException if the task number is less than 0 or greater","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"     *      than or equal to the size of the task list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"    public static void parseInput(String input, Ui ui, TaskList taskList)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"            throws IncorrectInputException, InvalidCommandException,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"            EmptyTaskListException, InvalidTaskNumberException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"        final String supportedCommands \u003d","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"                \"- list\\n- mark\\n- unmark\\n- find\\n- delete\\n- todo\\n- deadline\\n- event\\n- bye\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"        case \"list\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"                ui.showContents(taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"                        \"Sorry!! Please ensure your command matches the following example and have nothing else. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"                                + \"(e.g. \\\"list\\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"                        \"Sorry!! Please ensure your command matches the example: \\\"delete 1\\\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"            int deleteIndex \u003d getIndex(parts, taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"            taskList.deleteContent(deleteIndex, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"                        \"Sorry!! Please ensure your command matches the example: \\\"mark 1\\\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"            int markIndex \u003d getIndex(parts, taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"            taskList.markTask(markIndex, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"                        \"Sorry!! Please ensure your command matches the example: \\\"unmark 1\\\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"            int unmarkIndex \u003d getIndex(parts, taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"            taskList.unmarkTask(unmarkIndex, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhenglong1603"},"content":"                taskList.addContent(parts[0], parts[1], ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhenglong1603"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhenglong1603"},"content":"                        \"Sorry!! Please ensure your command matches the following example and \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhenglong1603"},"content":"                                + \"has a description after your command. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhenglong1603"},"content":"                                + \"(e.g. \\\"todo read a book\\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhenglong1603"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhenglong1603"},"content":"                if (parts[1].contains(\"/by\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhenglong1603"},"content":"                    taskList.addContent(parts[0], parts[1], ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhenglong1603"},"content":"                } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhenglong1603"},"content":"                    throw new IncorrectInputException(\"Sorry!! Please ensure your deadline command has \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhenglong1603"},"content":"                            + \"the deadline specified after /by. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhenglong1603"},"content":"                            + \"(e.g. \\\"deadline description /by \\\"deadline_date\\\" \\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhenglong1603"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhenglong1603"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(\"Sorry!! Please ensure your command matches the following example\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhenglong1603"},"content":"                        + \"and has a description and deadline after your command. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhenglong1603"},"content":"                        + \"(e.g. \\\"deadline description /by \\\"deadline_date\\\" \\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhenglong1603"},"content":"        case \"event\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhenglong1603"},"content":"                if (parts[1].contains(\"/from\") \u0026\u0026 parts[1].contains(\"/to\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhenglong1603"},"content":"                    taskList.addContent(parts[0], parts[1], ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhenglong1603"},"content":"                } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhenglong1603"},"content":"                    throw new IncorrectInputException(\"Sorry!! Please ensure your event command \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhenglong1603"},"content":"                            + \"has both a start time (/from) and an end time (/to). \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhenglong1603"},"content":"                            + \"(e.g. \\\"event description /from \\\"start_time\\\" /to \\\"end_time\\\" \\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhenglong1603"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhenglong1603"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(\"Sorry!! Please ensure your command matches \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhenglong1603"},"content":"                        + \"the following example and has a description with the timeline after your command. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhenglong1603"},"content":"                        + \"(e.g. \\\"event description /from \\\"start_time\\\" /to \\\"end_time\\\" \\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhenglong1603"},"content":"        case \"find\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhenglong1603"},"content":"                ui.displayFind(taskList.findTasks(parts[1]));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhenglong1603"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhenglong1603"},"content":"                throw new IncorrectInputException(\"Sorry!! Please ensure your command\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhenglong1603"},"content":"                        + \"matches the following example\" + \" (e.g. \\\"find book\\\")\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhenglong1603"},"content":"        default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhenglong1603"},"content":"            throw new InvalidCommandException(\"Sorry!! I didn\u0027t recognise that request. These are the \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhenglong1603"},"content":"                    + \"following supported commands:\\n\" + supportedCommands);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhenglong1603"},"content":"     * Retrieves the index of a task from the task list based on the input provided by the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhenglong1603"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhenglong1603"},"content":"     * This method attempts to parse the task number from the input string, checks if the task list is empty,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhenglong1603"},"content":"     * and verifies that the task number is within a valid range. If any of these checks fail, an appropriate","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhenglong1603"},"content":"     * exception is thrown. The index is adjusted to be 0-based (i.e., the first task is index 0).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhenglong1603"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zhenglong1603"},"content":"     * @param parts an array of strings representing the command and its arguments. The second element","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zhenglong1603"},"content":"     *              (index 1) is expected to be the task number to mark or unmark.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zhenglong1603"},"content":"     * @param taskList the task list containing tasks. This is used to check the number of tasks and validate","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zhenglong1603"},"content":"     *                 the given task number.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zhenglong1603"},"content":"     * @return the 0-based index of the task in the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zhenglong1603"},"content":"     * @throws IncorrectInputException if the task number is not a valid integer, or if it is missing in","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zhenglong1603"},"content":"     *                                  the command (e.g., \"mark\" without specifying a task number).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zhenglong1603"},"content":"     * @throws EmptyTaskListException if the task list is empty, indicating there are no tasks to mark or unmark.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zhenglong1603"},"content":"     * @throws InvalidTaskNumberException if the task number is less than 1 or greater than or equal to the","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zhenglong1603"},"content":"     *                                     number of tasks in the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zhenglong1603"},"content":"    public static int getIndex(String[] parts, TaskList taskList) throws","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zhenglong1603"},"content":"            IncorrectInputException, EmptyTaskListException, InvalidTaskNumberException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zhenglong1603"},"content":"        int taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zhenglong1603"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zhenglong1603"},"content":"            taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zhenglong1603"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zhenglong1603"},"content":"            throw new IncorrectInputException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zhenglong1603"},"content":"                    \"Sorry!! The task number must be a valid integer (e.g., \\\"mark 1\\\").\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zhenglong1603"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zhenglong1603"},"content":"            throw new EmptyTaskListException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zhenglong1603"},"content":"                    \"Sorry!! The current task list is empty. Please add some tasks first.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zhenglong1603"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zhenglong1603"},"content":"            throw new InvalidTaskNumberException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zhenglong1603"},"content":"                    \"Sorry!! The task number is invalid. Please check the task number again.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zhenglong1603"},"content":"        return taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":169}},{"path":"src/main/java/zbot/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.ZbotFileNotFoundException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.DeadlineTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.EventTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.ToDoTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":" * Represents a class that acts as storage for persisting and managing information.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":" * This class is responsible for:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":" *   \u003cli\u003eStoring data, such as tasks\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":" *   \u003cli\u003eRetrieving stored data for further processing\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":" * The storage class ensures that data is properly stored and can be accessed when needed","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":" * by other components of the application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"class StorageManager {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"    public StorageManager(String filePath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"     * Loads the existing task list from filePath","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"     * This method reads the task data from a file, parses it, and creates a list of tasks based on the file\u0027s contents.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"     * The file format is assumed to have tasks represented by a type identifier","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"     * and task details, with each task on a new line.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"     * If a task is marked as done (indicated by a \"1\" in the file), it is marked as completed when created.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"     * @return a list of tasks loaded from the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"     * @throws ZbotFileNotFoundException if the file cannot be found","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"     * @throws IOException if the file format is invalid or there is an error reading the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"    public List\u003cTask\u003e loadExistingFile() throws ZbotFileNotFoundException, IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"        List\u003cTask\u003e ans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"            throw new ZbotFileNotFoundException(\"The data could not be found\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"                String curr \u003d scanner.nextLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"                String[] parts \u003d curr.split(\" \\\\| \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"                    throw new IOException(\"File format is invalid\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"                Task task \u003d getTask(parts);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"                ans.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"        return ans;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"     * This method gets the task from an input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"     * - \"T\" for ToDoTask","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"     * - \"D\" for DeadlineTask","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"     * - \"E\" for EventTask","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhenglong1603"},"content":"     * The method also checks if the task input is in the correct format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhenglong1603"},"content":"     * @param parts input to be parsed to get th task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhenglong1603"},"content":"     * @throws IOException if the format for the task is invalid","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhenglong1603"},"content":"    private static Task getTask(String[] parts) throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhenglong1603"},"content":"        Task task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhenglong1603"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhenglong1603"},"content":"        case \"T\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhenglong1603"},"content":"            task \u003d new ToDoTask(parts[2]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhenglong1603"},"content":"        case \"D\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhenglong1603"},"content":"                throw new IOException(\"Invalid deadline format\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhenglong1603"},"content":"            task \u003d new DeadlineTask(parts[2], parts[3]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhenglong1603"},"content":"        case \"E\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhenglong1603"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhenglong1603"},"content":"                throw new IOException(\"Invalid event format\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhenglong1603"},"content":"            task \u003d new EventTask(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhenglong1603"},"content":"        default:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhenglong1603"},"content":"            throw new IOException(\"File format is invalid\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhenglong1603"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhenglong1603"},"content":"            task.markDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhenglong1603"},"content":"        return task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhenglong1603"},"content":"     * This method saves all tasks in the given task list to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhenglong1603"},"content":"     * Each task is serialized in a specific format:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhenglong1603"},"content":"     * - \"T\" for ToDoTask","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhenglong1603"},"content":"     * - \"D\" for DeadlineTask","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhenglong1603"},"content":"     * - \"E\" for EventTask","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhenglong1603"},"content":"     * The file will include the task\u0027s done status (1 for done, 0 for not done), description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhenglong1603"},"content":"     * and for specific task types, additional details such as deadline or event dates.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhenglong1603"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhenglong1603"},"content":"     * If the directory where the file is to be stored does not exist, it will be created.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhenglong1603"},"content":"     * @param taskList the task list containing tasks to be saved","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhenglong1603"},"content":"     * @throws IOException if an error occurs while creating directories or writing to the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhenglong1603"},"content":"    public void saveToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhenglong1603"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhenglong1603"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhenglong1603"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhenglong1603"},"content":"            if (!parentDir.mkdirs()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhenglong1603"},"content":"                throw new IOException(\"Sorry !! Failed to create directory: \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhenglong1603"},"content":"                        + parentDir.getAbsolutePath());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhenglong1603"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhenglong1603"},"content":"            StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhenglong1603"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zhenglong1603"},"content":"                s.append(formatTask(task)).append(\"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zhenglong1603"},"content":"            fileWriter.write(s.toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zhenglong1603"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zhenglong1603"},"content":"            throw new IOException(\"Sorry!! Error occurred while writing to the file: \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zhenglong1603"},"content":"                    + exception.getMessage(), exception);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zhenglong1603"},"content":"     * Formats a task into a string representation based on its type.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zhenglong1603"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zhenglong1603"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zhenglong1603"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zhenglong1603"},"content":"        if (task instanceof ToDoTask) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zhenglong1603"},"content":"            taskString.append(\"T | \")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zhenglong1603"},"content":"                    .append(task.getDoneStatus() ? \"1 | \" : \"0 | \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zhenglong1603"},"content":"                    .append(task.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zhenglong1603"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zhenglong1603"},"content":"            taskString.append(\"D | \")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zhenglong1603"},"content":"                    .append(task.getDoneStatus() ? \"1 | \" : \"0 | \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zhenglong1603"},"content":"                    .append(task.getDescription())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zhenglong1603"},"content":"                    .append(\" | \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zhenglong1603"},"content":"                    .append(((DeadlineTask) task).getDeadline());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zhenglong1603"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zhenglong1603"},"content":"            taskString.append(\"E | \")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zhenglong1603"},"content":"                    .append(task.getDoneStatus() ? \"1 | \" : \"0 | \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zhenglong1603"},"content":"                    .append(task.getDescription())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zhenglong1603"},"content":"                    .append(\" | \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zhenglong1603"},"content":"                    .append(((EventTask) task).getFromDate())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zhenglong1603"},"content":"                    .append(\" | \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zhenglong1603"},"content":"                    .append(((EventTask) task).getToDate());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zhenglong1603"},"content":"        return taskString.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":176}},{"path":"src/main/java/zbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import java.util.List;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":" * Represents the user interface of ZBOT, responsible for interacting with the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":" * The class provides methods to display messages, task lists, and errors","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":" * in a structured manner, ensuring a clear separation between the user interface","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":" * and the logic handling tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"public class Ui {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"     * Generates a response based on the given input command.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"     * @param input The command string to determine the response.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"    public void generateResponse(String input) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"        switch(input) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"        case \"start\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"            printResponse(\"Hello! I\u0027m ZBOT!!\", \"What can I do for you?\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"        case \"end\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"            printResponse(\"Bye. Hope to see you again soon :)\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"        case \"loadingError\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"            printResponse(\"There was an issue loading the list\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"        default:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"            printResponse(\"I\u0027m not sure how to respond to that. Please try a valid command.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"     * Displays all the tasks currently stored in the given {@code TaskList}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"     * @param taskList The {@code TaskList} object containing tasks to be displayed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"    public void showContents(TaskList taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"            System.out.println(index + \". \" + task.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"            index++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"     * Displays tasks that match a given search keyword.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"     * @param taskList A list of {@code Task} objects that match the search query.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"    public void displayFind(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(\"Here are the tasks that matches the keyword:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"            System.out.println(index + \". \" + task.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"            index++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"     * Prints a single response message, with lines above and below it for separation.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"     * @param response The message to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhenglong1603"},"content":"    public void printResponse(String response) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(response);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhenglong1603"},"content":"     * Prints two response messages, with lines above and below them for separation.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhenglong1603"},"content":"     * @param response1 The first message to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhenglong1603"},"content":"     * @param response2 The second message to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhenglong1603"},"content":"    public void printResponse(String response1, String response2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(response1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(response2);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhenglong1603"},"content":"     * Prints three response messages, with lines above and below them for separation.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhenglong1603"},"content":"     * @param response1 The first message to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhenglong1603"},"content":"     * @param response2 The second message to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhenglong1603"},"content":"     * @param response3 The third message to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhenglong1603"},"content":"    public void printResponse(String response1, String response2, String response3) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(response1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(response2);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhenglong1603"},"content":"        System.out.printf(response3);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhenglong1603"},"content":"     * Prints three response messages, with lines above and below them for separation.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhenglong1603"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhenglong1603"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhenglong1603"},"content":"    public void printTaskResponse(Task task, int size) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhenglong1603"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", size);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhenglong1603"},"content":"        printLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhenglong1603"},"content":"     * Prints a line of dashes for formatting purposes.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhenglong1603"},"content":"    public void printLine() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhenglong1603"},"content":"        System.out.println(\"---------------------------------------------------\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":130}},{"path":"src/main/java/zbot/Zbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.EmptyTaskListException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.IncorrectInputException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.ZbotFileNotFoundException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":" * Main class of the program","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"class Zbot {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"    private final StorageManager storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"    public Zbot(String filePath) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"        this.storage \u003d new StorageManager(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"            this.taskList \u003d new TaskList(storage.loadExistingFile());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"        } catch (ZbotFileNotFoundException | IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"            ui.generateResponse(\"loadingError\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"     * Starts and runs the bot, continuously accepting user input and processing commands.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"     * This method initializes the bot, displays the starting response, and enters a loop to","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"     * read user input until the user types \"bye\". For each input, it tries to parse and execute","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"     * the command using the {@link Parser}. If an exception occurs during parsing (e.g.,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"     * invalid command or empty task list), an error message is displayed. The method ensures","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"     * that the task list is saved to a file before the program ends and then displays an ending response.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"    public void run() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"        ui.generateResponse(\"start\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"        String input;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"                isRunning \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"            } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"                    Parser.parseInput(input, ui, taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"                } catch (InvalidCommandException | IncorrectInputException | EmptyTaskListException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"                         | InvalidTaskNumberException exception) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"                    ui.printResponse(exception.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"            ui.printResponse(exception.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"        ui.generateResponse(\"end\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"        new Zbot(\"./data/Zbot.txt\").run();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":75}},{"path":"src/main/java/zbot/exceptions/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.exceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Thrown when an operation is attempted on an empty task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" * This exception signals that the task list is empty and the","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":" * operation cannot be completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"public class EmptyTaskListException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"    public EmptyTaskListException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":12}},{"path":"src/main/java/zbot/exceptions/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.exceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Thrown when the command input is missing required information.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" * This exception is typically thrown when a user provides incomplete","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":" * input, such as missing parameters or missing fields that are","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" * necessary for executing a command.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"public class IncorrectInputException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"    public IncorrectInputException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":13}},{"path":"src/main/java/zbot/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.exceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Thrown when the command refers to an invalid task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" * This exception is typically thrown when a task","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":" * or is not recognized as a valid task by the application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"        super(message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":12}},{"path":"src/main/java/zbot/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.exceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Thrown when the task number provided is invalid.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" * This exception is typically thrown when a user attempts","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":" * to interact with a task using an out-of-range or non-existent","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" * task number","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":13}},{"path":"src/main/java/zbot/exceptions/ZbotFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.exceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Thrown when the ZBOT file cannot be loaded.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" * This exception is thrown when the system fails to read","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":" * the ZBOT file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" * The exception message may provide further details on the cause of failure.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"public class ZbotFileNotFoundException extends Exception {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"    public ZbotFileNotFoundException(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"        super(message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":14}},{"path":"src/main/java/zbot/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":" * Extends the {@link Task} class.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"    private final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"    private LocalDate deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"     * Constructs a {@code DeadlineTask} with the specified description and deadline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"     * The deadline is expected to be in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"     * @param deadline The deadline of the task in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"    public DeadlineTask(String description, String deadline) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"        this.deadline \u003d LocalDate.parse(deadline, inputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the deadline formatted as a string in the format \"MMM dd yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the deadline in the format \"MMM dd yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"    public String deadlineString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"        return this.deadline.format(outputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the deadline of the task as a string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the deadline in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"        return this.deadline.format(inputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"     * Returns a string representation of the {@code DeadlineTask}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"     * The string includes the task\u0027s description, completion status, and deadline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representing the task in the format: \"[D][done status](by: deadline)\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineString() + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":55}},{"path":"src/main/java/zbot/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":" * Represents an event task with a start and end date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":" * Extends the {@link Task} class.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"    private final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"    private LocalDate toDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"     * Constructs an {@code EventTask} with the specified description, start date, and end date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"     * The dates are expected to be in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"     * @param fromDate The start date of the event in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"     * @param toDate The end date of the event in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"    public EventTask(String description, String fromDate, String toDate) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"        this.fromDate \u003d LocalDate.parse(fromDate, inputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"        this.toDate \u003d LocalDate.parse(toDate, inputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the start date of the event formatted as a string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the start date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"    public String getFromDate() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"        return this.fromDate.format(inputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the end date of the event formatted as a string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the end date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"    public String getToDate() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"        return this.toDate.format(inputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the start date of the event formatted as a string in the format \"MMM dd yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the start date in the format \"MMM dd yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"    public String fromDateString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"        return this.fromDate.format(outputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the end date of the event formatted as a string in the format \"MMM dd yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the end date in the format \"MMM dd yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"    public String toDateString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"        return this.toDate.format(outputFormatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"     * Returns a string representation of the {@code EventTask}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"     * The string includes the task\u0027s description, completion status, and the event\u0027s date range.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representing the task in the format: \"[E][done status] (from: fromDate to: toDate)\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDateString() + \" to: \" + toDateString() + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":76}},{"path":"src/main/java/zbot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"    public void markUndone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"     * @return {@code true} if the task is done, otherwise {@code false}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the task\u0027s description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"        return this.description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"     * The status icon is represented by an \"X\" if the task is done, or a blank space if the task is not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representing the task\u0027s completion status as an icon.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"     * The string includes the task\u0027s status icon and description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representing the task in the format: \"[statusIcon] description\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":75}},{"path":"src/main/java/zbot/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"import zbot.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":" * Represents a list of tasks with functionality to manage and manipulate them.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"     * Constructs a {@code TaskList} with an existing list of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"     * @param existingTaskList The existing list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"    public TaskList(List\u003cTask\u003e existingTaskList) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"        this.taskList \u003d existingTaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"     * Adds a new task to the list based on the task type.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"     * Depending on the type, either a ToDoTask, EventTask, or DeadlineTask is added.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"     * @param type The type of task to add (e.g., \"todo\", \"event\", \"deadline\").","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"     * @param description The description of the task, including additional information","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"     *                    like date for event or deadline tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"    public void addContent(String type, String description, Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"        switch(type) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"            Task newToDoTask \u003d new ToDoTask(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"            taskList.add(newToDoTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"            ui.printTaskResponse(newToDoTask, taskList.size());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"        case \"event\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"            Task newEventTask \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"                String[] eventParts \u003d description.split(\" /\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"                newEventTask \u003d new EventTask(eventParts[0], eventParts[1].substring(5), eventParts[2].substring(3));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"                taskList.add(newEventTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"                System.out.println(\"Sorry!! Please use yyyy-MM-dd as the proper date format\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"            } finally {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"                if (newEventTask !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"                    ui.printTaskResponse(newEventTask, taskList.size());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"            Task newDeadlineTask \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"                String[] deadlineParts \u003d description.split(\" /\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"                newDeadlineTask \u003d new DeadlineTask(deadlineParts[0], deadlineParts[1].substring(3));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"                taskList.add(newDeadlineTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"                System.out.println(\"Sorry!! Please use yyyy-MM-dd as the proper date format\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"            } finally {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"                if (newDeadlineTask !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"                    ui.printTaskResponse(newDeadlineTask, taskList.size());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"        default:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"            System.out.println(\"Sorry!! I didn\u0027t recognise that task type. Please use \u0027todo\u0027, \u0027event\u0027, or \u0027deadline\u0027.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhenglong1603"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhenglong1603"},"content":"     * Deletes a task from the list based on the index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhenglong1603"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhenglong1603"},"content":"    public void deleteContent(int index, Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhenglong1603"},"content":"        Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhenglong1603"},"content":"        taskList.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhenglong1603"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhenglong1603"},"content":"        String message1 \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhenglong1603"},"content":"        String message2 \u003d deletedTask.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhenglong1603"},"content":"        String message3 \u003d String.format(\"Now you have %d tasks in the list.%n\", size);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhenglong1603"},"content":"        ui.printResponse(message1, message2, message3);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhenglong1603"},"content":"     * Marks a task as done based on the index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhenglong1603"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhenglong1603"},"content":"    public void markTask(int index, Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhenglong1603"},"content":"        taskList.get(index).markDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhenglong1603"},"content":"        String message1 \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhenglong1603"},"content":"        String message2 \u003d taskList.get(index).toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhenglong1603"},"content":"        ui.printResponse(message1, message2);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhenglong1603"},"content":"     * Marks a task as undone based on the index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhenglong1603"},"content":"     * @param index The index of the task to mark as undone.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhenglong1603"},"content":"    public void unmarkTask(int index, Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhenglong1603"},"content":"        taskList.get(index).markUndone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhenglong1603"},"content":"        String message1 \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhenglong1603"},"content":"        String message2 \u003d taskList.get(index).toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhenglong1603"},"content":"        ui.printResponse(message1, message2);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhenglong1603"},"content":"     * Clears all tasks from the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhenglong1603"},"content":"    public void clearTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhenglong1603"},"content":"        this.taskList.clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the taskList which matches the keyword","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhenglong1603"},"content":"     * @return list of task with matching keyword","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhenglong1603"},"content":"    public List\u003cTask\u003e findTasks(String word) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhenglong1603"},"content":"        List\u003cTask\u003e ans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhenglong1603"},"content":"        for (Task curr : this.taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhenglong1603"},"content":"            if (curr.getDescription().contains(word)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhenglong1603"},"content":"                ans.add(curr);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhenglong1603"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zhenglong1603"},"content":"        return ans;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zhenglong1603"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zhenglong1603"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zhenglong1603"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zhenglong1603"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zhenglong1603"},"content":"     * @return A copy of the list of tasks in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zhenglong1603"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zhenglong1603"},"content":"        return new ArrayList\u003c\u003e(this.taskList);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":158}},{"path":"src/main/java/zbot/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":" * Represents a to-do task that extends the {@code Task} class.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":" * A to-do task has a description and a completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"     * Constructs a new {@code ToDoTask} with the specified description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"     * The format is \"[T][status] description\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":28}},{"path":"src/test/java/zbot/TaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.EmptyTaskListException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.IncorrectInputException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"import zbot.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"import zbot.tasks.ToDoTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":" * To test the commands input and their expected outputs.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhenglong1603"},"content":"public class TaskCommandTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhenglong1603"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhenglong1603"},"content":"    private final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhenglong1603"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhenglong1603"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhenglong1603"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhenglong1603"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhenglong1603"},"content":"        tasks.clearTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhenglong1603"},"content":"     * Tests the expected output for marking a task as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhenglong1603"},"content":"     * This method verifies that the system correctly outputs","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhenglong1603"},"content":"     * the expected message when a task is marked as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhenglong1603"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhenglong1603"},"content":"    public void markTaskSuccess() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhenglong1603"},"content":"        Task t \u003d new ToDoTask(\"test\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhenglong1603"},"content":"        List\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhenglong1603"},"content":"        tasklist.add(t);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhenglong1603"},"content":"        TaskList tl \u003d new TaskList(tasklist);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhenglong1603"},"content":"        tl.markTask(0, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhenglong1603"},"content":"        String expected \u003d String.join(System.lineSeparator(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhenglong1603"},"content":"                \"---------------------------------------------------\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhenglong1603"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhenglong1603"},"content":"                \"[T][X] test\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhenglong1603"},"content":"                \"---------------------------------------------------\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhenglong1603"},"content":"        );","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhenglong1603"},"content":"        assertEquals(expected.trim(), outputStreamCaptor.toString().trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhenglong1603"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhenglong1603"},"content":"     * Tests the expected output for marking a task as done and undone.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhenglong1603"},"content":"     * This method verifies that the system correctly outputs","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhenglong1603"},"content":"     * the expected message when a task is marked as completed","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhenglong1603"},"content":"     * and unmarked as uncompleted.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhenglong1603"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhenglong1603"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhenglong1603"},"content":"    public void unmarkTaskSuccess() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhenglong1603"},"content":"        Task t \u003d new ToDoTask(\"test\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhenglong1603"},"content":"        List\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhenglong1603"},"content":"        tasklist.add(t);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhenglong1603"},"content":"        TaskList tl \u003d new TaskList(tasklist);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhenglong1603"},"content":"        tl.markTask(0, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhenglong1603"},"content":"        tl.unmarkTask(0, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhenglong1603"},"content":"        String expected \u003d String.join(System.lineSeparator(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhenglong1603"},"content":"                \"---------------------------------------------------\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhenglong1603"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhenglong1603"},"content":"                \"[T][X] test\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhenglong1603"},"content":"                \"---------------------------------------------------\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhenglong1603"},"content":"                \"---------------------------------------------------\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhenglong1603"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhenglong1603"},"content":"                \"[T][ ] test\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhenglong1603"},"content":"                \"---------------------------------------------------\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhenglong1603"},"content":"        );","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhenglong1603"},"content":"        assertEquals(expected.trim(), outputStreamCaptor.toString().trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhenglong1603"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhenglong1603"},"content":"    public void invalidInput() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhenglong1603"},"content":"        // Simulate an invalid command","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhenglong1603"},"content":"        Exception thrownException \u003d null;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhenglong1603"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhenglong1603"},"content":"            Parser.parseInput(\"hi\", ui, tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhenglong1603"},"content":"        } catch (IncorrectInputException | InvalidCommandException | EmptyTaskListException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhenglong1603"},"content":"                 | InvalidTaskNumberException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhenglong1603"},"content":"            thrownException \u003d e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhenglong1603"},"content":"        assertNotNull(thrownException, \"Expected IncorrectInputException to be thrown.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhenglong1603"},"content":"        assertEquals(\"Sorry!! I didn\u0027t recognise that request. These are the \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhenglong1603"},"content":"                        + \"following supported commands:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhenglong1603"},"content":"                        + \"- list\\n- mark\\n- unmark\\n- find\\n- delete\\n- todo\\n- deadline\\n- event\\n- bye\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhenglong1603"},"content":"                thrownException.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhenglong1603"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhenglong1603"},"content":"    public void todoInput() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhenglong1603"},"content":"        // Simulate an invalid command","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhenglong1603"},"content":"        Exception thrownException \u003d null;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhenglong1603"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhenglong1603"},"content":"            Parser.parseInput(\"todo\", ui, tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhenglong1603"},"content":"        } catch (IncorrectInputException | InvalidCommandException | EmptyTaskListException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhenglong1603"},"content":"                 | InvalidTaskNumberException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhenglong1603"},"content":"            thrownException \u003d e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhenglong1603"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhenglong1603"},"content":"        assertNotNull(thrownException, \"Expected IncorrectInputException to be thrown.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhenglong1603"},"content":"        assertEquals(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhenglong1603"},"content":"                \"Sorry!! Please ensure your command matches the following example \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhenglong1603"},"content":"                        + \"and has a description after your command. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhenglong1603"},"content":"                        + \"(e.g. \\\"todo read a book\\\")\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhenglong1603"},"content":"                thrownException.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":127}},{"path":"src/test/java/zbot/ZbotTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"package zbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":" * A dummy test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"public class ZbotTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"    public void dummyTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhenglong1603"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhenglong1603"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhenglong1603"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhenglong1603"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhenglong1603"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenglong1603"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhenglong1603"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhenglong1603"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhenglong1603"},"content":"todo join sports club","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhenglong1603"},"content":"todo borrow book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhenglong1603"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhenglong1603"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhenglong1603"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhenglong1603"},"content":"mark 4","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhenglong1603"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhenglong1603"},"content":"unmark 4","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhenglong1603"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhenglong1603"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhenglong1603"},"content":"java -classpath ..\\bin ZBOT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhenglong1603"},"content":"java -classpath ../bin ZBOT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"zhenglong1603":1,"-":37}}]
