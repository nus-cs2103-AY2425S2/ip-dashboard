{"authorDailyContributionsMap":{"leeyenshen":[{"date":"2025-01-22","commitResults":[{"hash":"25a368d4ac031e7ca6636e82fe20fc4af2df0b20","isMergeCommit":false,"messageTitle":"Rename Duke.java to Tom.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"66e217ada0ebd238bb86d07ef3e009f4225609d8","isMergeCommit":false,"messageTitle":"Initialise skeletal chatbot with greeting and exit functionality","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}}]},{"date":"2025-01-24","commitResults":[{"hash":"f9702082fc670bdeabe47205b3d769d3c09da220","isMergeCommit":false,"messageTitle":"Add Event.java Event class is abstract to allow for implementation of Chatbot actions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"40c791d9b4e715dfed8155cd2a51dbf63eacbf25","isMergeCommit":false,"messageTitle":"Add Chatbot.java Exit.java Greeting.java Listen.java","messageBody":"Added functionality for repeating users command input and exiting when \"bye\" is typed\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":0}}},{"hash":"86e3e9dc97466fd9bcccef5ec1d227e568e80399","isMergeCommit":false,"messageTitle":"Refactor Tom.java","messageBody":"Refactored main code to use a queue instead to repeat events and implement functionalities.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":5}}},{"hash":"d4b34df878cb307f310fd3ca2721a075088f21c1","isMergeCommit":false,"messageTitle":"Add List.java and functionality for list","messageBody":"Created a list and refactored the code to use a list stored in Listen event to add items and display list based on what the user inputs\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":19}}},{"hash":"debdaf094dd9593beec702e09eedd488aa96e7ac","isMergeCommit":false,"messageTitle":"Add Pair.java","messageBody":"Pair.java is the task that stores an item name and boolean of whether its done\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"6cc80df1be66264e8243d87a3023ab035e80ff37","isMergeCommit":false,"messageTitle":"Refactor List.java Listen.java to use Pairs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":8}}},{"hash":"4ebb8cfb9c4a7cf3bb5f16020a805b1399daad0e","isMergeCommit":false,"messageTitle":"Edit List.java marking and unmark methods","messageBody":"Marking and unmark now checks whether it is already done or not done before repeating action\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"cc9c74d86a56a887dad7b665962bd97e611c0592","isMergeCommit":false,"messageTitle":"Edit List.java mark and unmark","messageBody":"List position was not numbered properly\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"b86b49c27c5bf4a0355599332a5ed89fcf472642","isMergeCommit":false,"messageTitle":"Add Deadline.java Meeting.java Todo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"56a1c7a250602c0fd933796d1d7a98bbd882c554","isMergeCommit":false,"messageTitle":"Refactor Deadline.java Meeting.java Todo.java","messageBody":"Edit code to print out correct output and store it properly\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":10}}},{"hash":"5f227494e96886d9250a6c5901cec7a4be935995","isMergeCommit":false,"messageTitle":"Refactor List.java, Listen.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":19}}},{"hash":"73499cd0648d9eb45b0c93f38832b90f63f8bbb4","isMergeCommit":false,"messageTitle":"Add Javadoc comments for all classes and methods","messageBody":"- Documented all classes including Chatbot, Deadline, List, Listen, Meeting, Pair, Todo, Event, Exit, Greeting, and Tom.\n- Added detailed descriptions for class purposes, constructors, methods, and return values.\n- Improved code readability and maintainability by adhering to Javadoc standards.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":182,"deletions":1}}},{"hash":"383720e79cf2f5b4f50ce3d1c3485092df87d98f","isMergeCommit":false,"messageTitle":"Add automated testing for Tom using I/O redirection","messageBody":"- Implemented a Bash script (`runtest.sh`) to automate compilation, execution, and result verification.\n- Added support for input redirection (`input.txt`) and output comparison against expected results (`EXPECTED.TXT`).\n- Normalized line endings and whitespace using `dos2unix` and `sed` to ensure consistent comparison.\n- Enhanced test script to handle trailing spaces and inconsistent spacing.\n- Documented steps for preparing test files and running the script.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":3,"deletions":3},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"c6de85fcc3d4af6f59b243e91e5b8f6af79d2b7f","isMergeCommit":false,"messageTitle":"Implement error handling and testing framework for chatbot","messageBody":"- Added comprehensive error handling in the chatbot for invalid commands and input errors.\n  - Handled empty descriptions for `todo`, `deadline`, and `event` commands with detailed error messages.\n  - Validated proper syntax for `deadline` and `event` commands (e.g., missing `/by`, `/from`, or `/to`).\n  - Provided specific error feedback for unknown commands and invalid indices in `mark` and `unmark`.\n  - Used `ChatbotException` with dynamic error messages for all cases.\n- Enhanced the `Listen` class to process user commands and handle errors gracefully.\n- Added a testing framework using I/O redirection:\n  - Created a test script (`runtest.sh`) to automate compilation, execution, and comparison of program output.\n  - Prepared `input.txt` and `EXPECTED.TXT` for testing typical user interactions.\n  - Normalized line endings and whitespace in output for consistent comparison.\n- Updated Javadoc comments for all classes and methods:\n  - Documented the purpose, parameters, and behavior of each method and class.\n  - Included details about exception handling and command processing.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":5},"java":{"insertions":112,"deletions":67}}},{"hash":"8473008852cd136e0d064e6beefddc66e77890c9","isMergeCommit":false,"messageTitle":"Add delete functionality for task management","messageBody":"- Implemented the `delete` command in the `List` class to remove tasks by index.\n  - Added validation to ensure valid task indices.\n  - Displayed confirmation messages after successful deletions.\n- Updated the `Listen` class to handle the `delete` command.\n  - Integrated the `delete` command into the `processCommand` method.\n  - Provided specific error messages for invalid or missing task indices.\n- Enhanced user interaction with detailed feedback for task deletions.\n\nThis update improves task management by enabling users to remove tasks from the list\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":8}}},{"hash":"2b3d4ef00b32e6eb999562a6e1cf900823c984b1","isMergeCommit":false,"messageTitle":"Add comprehensive input and output files for chatbot testing","messageBody":"- Created `input.txt` to test all chatbot functionalities, including:\n  - Adding tasks (`todo`, `deadline`, `event`) with valid and invalid inputs.\n  - Marking and unmarking tasks, including invalid indices.\n  - Deleting tasks, with validation for non-existent and invalid indices.\n  - Handling edge cases for commands with missing or incomplete parameters.\n  - Proper termination with the `bye` command.\n- Added `EXPECTED.TXT` to validate program behavior against:\n  - Correct task management operations.\n  - Detailed error messages for invalid commands and inputs.\n- Ensured the test files cover normal usage scenarios, edge cases, and error handling comprehensively.\n\nThis update improves test coverage and ensures the chatbot is robust against various user inputs.\n","fileTypesAndContributionMap":{"txt":{"insertions":24,"deletions":12}}}]},{"date":"2025-01-25","commitResults":[{"hash":"8de15a6f53eb17a4bf5163420f9208cf09d9ba36","isMergeCommit":false,"messageTitle":"Refactor: Improve adherence to coding standards in all files","messageBody":"Updated various Java files to follow coding conventions:\n- Chatbot.java:\n  * Renamed parameter `tom` to `initialEventSource` for clarity.\n  * Enhanced Javadoc for the `run` method.\n\n- ChatbotException.java:\n  * No changes required; all conventions were followed.\n\n- Deadline.java:\n  * Made field `by` private and added a getter method.\n  * Optimized `toString` method using `StringBuilder`.\n\n- Event.java:\n  * Renamed constant `line` to `LINE` for SCREAMING_SNAKE_CASE compliance.\n  * Enhanced class-level Javadoc for clarity.\n\n- Exit.java:\n  * Updated Javadoc for `simulate` method to clarify return behavior.\n\n- Greeting.java:\n  * Enhanced Javadoc for `simulate` method to describe the returned `Listen` event.\n\n- List.java:\n  * Added `final` to method parameters for immutability.\n  * Improved Javadoc for constructors and methods.\n\n- Listen.java:\n  * Improved class-level Javadoc to describe user interaction.\n  * Refactored `processCommand` into smaller helper methods for maintainability.\n\n- Meeting.java:\n  * Made fields `from` and `to` private.\n  * Optimized `toString` method using `StringBuilder`.\n\n- Pair.java:\n  * Made fields `item` and `done` private.\n  * Added validation in `mark` method to prevent redundant state changes.\n\nThese changes enhance code readability, maintainability, and compliance with Java coding standards.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":16}}}]},{"date":"2025-01-29","commitResults":[{"hash":"1474ca5e12bd4178b463bf59fc17007f47da1a38","isMergeCommit":false,"messageTitle":"Add ChatbotDataHandler.java for task persistence","messageBody":"The chatbot previously lacked task persistence, causing data\nto be lost when the application restarted.\n\nTask persistence is crucial for maintaining chatbot state and\nensuring tasks persist across sessions.\n\nLet\u0027s:\n* Implement `ChatbotDataHandler.java` to manage task storage.\n* Create `data/Tom.txt` as the persistent task file.\n* Implement `getTasks()` to initialize tasks from memory.\n* Implement `saveTasks()` to write tasks back to `data/Tom.txt`.\n* Introduce `parseTask()` to process different task types:\n  - `T | done | description` → `Todo`\n  - `D | done | description | due_date` → `Deadline`\n  - `E | done | description | event_from | event_to` → `Meeting`\n* Use `LinkedList\u003cPair\u003e` for efficient task management.\n* Print debugging messages when loading and saving tasks.\n\nThis enhances chatbot functionality by preserving tasks across\nsessions and improving user experience.\n","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":0}}},{"hash":"6f93c675dfcf90b32ceb8fb56561329ebd67f61e","isMergeCommit":false,"messageTitle":"Refactor chatbot files to integrate with ChatbotDataHandler","messageBody":"Previously, the chatbot handled task management without persistent\nstorage, causing data loss when the application restarted.\n\nIntegrating `ChatbotDataHandler` enables persistent task storage,\nensuring tasks are saved and retrieved across sessions.\n\nLet\u0027s:\n* Modify `Tom.java` to initialize tasks using `ChatbotDataHandler.getTasks()`.\n* Update `Exit.java` to call `ChatbotDataHandler.saveTasks()` before exiting.\n* Refactor `List.java` to store tasks as `LinkedList\u003cPair\u003e` for compatibility.\n* Modify `Listen.java` to process task commands (`todo`, `deadline`, `event`)\n  and update `ChatbotDataHandler`.\n* Update `Deadline.java`, `Meeting.java`, and `Todo.java` to include\n  `toFileFormat()` for task serialization.\n* Improve `Pair.java` to store and format tasks properly.\n* Adjust `Greeting.java` to initialize from stored tasks.\n* Ensure `Chatbot.java` correctly processes stored task events.\n\nThis enhances chatbot functionality by persisting tasks across sessions,\nimproving usability and reliability.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":46}}},{"hash":"9257dab29d4100a58435ae9600fec0c28a839040","isMergeCommit":false,"messageTitle":"Add input validation for task commands","messageBody":"The `mark`, `unmark`, and `delete` commands previously did not\nvalidate user input, causing runtime errors when invalid task\nnumbers or formats were provided.\n\nInput validation is necessary to prevent errors and ensure the\nchatbot provides appropriate feedback for invalid commands.\n\nLet\u0027s:\n* Add a `try-catch` block for `mark` to handle invalid integers.\n* Add a `try-catch` block for `unmark` to handle invalid integers.\n* Add a `try-catch` block for `delete` to handle invalid integers.\n* Display an error message (\"Input a proper number\") for invalid inputs.\n\nThis improves user experience and ensures robust command handling.\n","fileTypesAndContributionMap":{"txt":{"insertions":53,"deletions":19},"java":{"insertions":15,"deletions":3},"md":{"insertions":0,"deletions":30}}},{"hash":"5daa39811f961b196c78cb0ec14d660638042e01","isMergeCommit":false,"messageTitle":"Update input.txt to add more testcases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"b599a0f1e744909427751a511476508badd32472","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-Level-7","messageBody":"* master:\n  Update input.txt to add more testcases\n\n# Conflicts:\n#\ttext-ui-test/input.txt\n","fileTypesAndContributionMap":{}},{"hash":"634d2ca433a4e9e87dc1a9fead1faa3ab8a9af1d","isMergeCommit":false,"messageTitle":"Fix spacing in toFileFormat method","messageBody":"The `toFileFormat` method in `Deadline.java` previously had an\nincorrect spacing in the output string format for the deadline\ntask representation.\n\nProper spacing ensures the file format is consistent and matches\nthe expected output when tasks are saved and loaded.\n\nLet\u0027s:\n* Add a space before the pipe (`|`) in the `toFileFormat` method.\n\nThis improves consistency and ensures tasks are saved in the\ncorrect format for future processing\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7b32dc804b7c07b66434d9904f35cd9983ab18a7","isMergeCommit":false,"messageTitle":"Fix spacing in toFileFormat method","messageBody":"The `toFileFormat` method in `Deadline.java` previously had an\nincorrect spacing in the output string format for the deadline\ntask representation.\n\nProper spacing ensures the file format is consistent and matches\nthe expected output when tasks are saved and loaded.\n\nLet\u0027s:\n* Add a space before the pipe (`|`) in the `toFileFormat` method.\n\nThis improves consistency and ensures tasks are saved in the\ncorrect format for future processing\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e08a30846071e354dd8aae83762a4e3f84a4ab28","isMergeCommit":false,"messageTitle":"Update input.txt and expected.txt","messageBody":"Previously, the `input.txt` and its corresponding expected output\ndid not comprehensively test all chatbot functionalities, such as\nedge cases and error handling for various commands.\n\nTesting a wider range of inputs and verifying their output ensures\nthe chatbot behaves correctly across different scenarios, including\nvalid, invalid, and edge case inputs.\n\nLet\u0027s:\n* Update `input.txt` to include comprehensive test cases for:\n  - Adding todos, deadlines, and events with valid and invalid inputs.\n  - Handling edge cases like empty descriptions and missing fields.\n  - Using `mark`, `unmark`, `delete`, and `list` commands.\n* Update the expected output to reflect the new test cases.\n\nThese changes improve the chatbot\u0027s test coverage and ensure its\nbehavior is robust and predictable.\n","fileTypesAndContributionMap":{"txt":{"insertions":40,"deletions":17}}},{"hash":"b585cff7f7c0a50a429fe898b35a8ad7429eb06f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"* branch-Level-7:\n  Fix spacing in toFileFormat method\n  Fix spacing in toFileFormat method\n  Add input validation for task commands\n  Refactor chatbot files to integrate with ChatbotDataHandler\n  Add ChatbotDataHandler.java for task persistence\n\n# Conflicts:\n#\ttext-ui-test/input.txt\n","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-30","commitResults":[{"hash":"dcf3d8aea1f5318ab044a0fecc7241ee64635526","isMergeCommit":false,"messageTitle":"Refactor task handling and input validation for robustness","messageBody":"Previously, task management in `ChatbotDataHandler.java`, `Deadline.java`,\n`Listen.java`, and `Meeting.java` lacked standardized date-time handling,\ncausing inconsistencies when processing deadlines and events.\n\nEnsuring consistent parsing, formatting, and validation of task inputs\nimproves reliability and maintains chatbot functionality across various\ncommands.\n\nLet\u0027s:\n* Update `ChatbotDataHandler.java` to:\n  - Standardize `parseTask()` logic for deadlines and events.\n  - Support both `LocalDate` and `LocalDateTime` for flexible input formats.\n  - Improve error handling for incorrect date parsing.\n* Modify `Deadline.java` to:\n  - Differentiate between deadlines with and without time components.\n  - Ensure `toFileFormat()` correctly saves deadlines.\n* Refactor `Listen.java` to:\n  - Improve input validation for `todo`, `deadline`, and `event` commands.\n  - Enhance exception handling for missing or malformed inputs.\n* Fix `Meeting.java` to:\n  - Properly store `LocalDate` and `LocalDateTime` for event scheduling.\n  - Ensure correct string representation and file output.\n\nThis improves chatbot robustness by ensuring structured date-time\nmanagement and better input validation, reducing user input errors.\n","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":21}}},{"hash":"88271e06c8cfe96f052ce5c55b32eb3a2023127a","isMergeCommit":false,"messageTitle":"Add test case for deadline with time","messageBody":"Previously, there was no test case in `input.txt` to verify if the\nchatbot correctly handles deadlines with both date and time specified.\n\nThis test is necessary to ensure that the chatbot processes and\nsaves deadlines with time information accurately, and that output\nformatting remains consistent.\n\nLet\u0027s:\n* Add a test case for the command `deadline say hello /from 2019-02-12 2350`\n  in `input.txt`.\n* Use this case to validate the correctness of time parsing and output\n  formatting in the chatbot\u0027s `Deadline` implementation.\n\nThis helps verify that the chatbot can properly handle deadlines\nthat include specific time information and flags potential bugs\nin time formatting.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"8d8f0e685f0dd2412bb077357fbd0e9982a945e7","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-8\u0027","messageBody":"* Level-8:\n  Refactor task handling and input validation for robustness\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"5deed443ca2115fa35e5525a81732fae184a1661","isMergeCommit":false,"messageTitle":"Refactor chatbot to improve OOP structure and modularity","messageBody":"Previously, the chatbot had procedural code with tightly coupled\nlogic, making it difficult to extend, maintain, and test.\n\nApplying Object-Oriented Programming (OOP) principles enhances\ncode organization, encapsulation, and separation of concerns.\n\nLet\u0027s:\n* Introduce `ChatbotDataHandler.java` to handle task persistence.\n* Refactor `Tom.java` to initialize `Ui`, `ChatbotDataHandler`,\n  and `List` for better modularity.\n* Modify `Chatbot.java` to process chatbot events sequentially.\n* Extract `ChatbotException.java` for centralized error handling.\n* Implement `Event.java` as an abstract class for chatbot events.\n* Improve `Listen.java`, `Greeting.java`, and `Exit.java` to\n  handle chatbot states using event-driven design.\n* Enhance `List.java` to encapsulate task operations (`add`, `mark`,\n  `unmark`, `delete`) independently.\n* Improve `Deadline.java` and `Meeting.java` to support both `LocalDate`\n  and `LocalDateTime` formats for better date-time parsing.\n* Add `Parser.java` to handle flexible date/time parsing with\n  improved error messages.\n\nThis refactor improves maintainability, scalability, and readability,\nallowing for easier feature expansion and better testability.\n","fileTypesAndContributionMap":{"java":{"insertions":286,"deletions":241}}},{"hash":"12a0ee46e0e249cae62e6291b4bf5ba8e2041d83","isMergeCommit":false,"messageTitle":"Expand input.txt for comprehensive chatbot testing","messageBody":"Previously, `input.txt` lacked sufficient test coverage for edge cases,\nerror handling, and various chatbot functionalities.\n\nEnsuring a wider range of test cases improves the chatbot\u0027s robustness\nby validating its behavior across different inputs, including valid,\ninvalid, and boundary cases.\n\nLet\u0027s:\n* Add tests for `todo`, `deadline`, and `event` commands with both\n  valid and invalid inputs.\n* Include boundary cases such as empty descriptions and missing fields.\n* Test `mark`, `unmark`, and `delete` commands with valid and out-of-bounds indices.\n* Verify chatbot persistence by adding tasks, exiting, and restarting.\n* Ensure error messages appear correctly for invalid operations.\n\nThese additions enhance chatbot test coverage, ensuring reliable\nhandling of various user inputs.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"402a5b6112c3005ce291c0192dbda5906c303aff","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-MoreOOP\u0027","messageBody":"* A-MoreOOP:\n  Refactor chatbot to improve OOP structure and modularity\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"699b722897236f06265b7c8b8435033c7ad98b0b","isMergeCommit":false,"messageTitle":"Move all classes into a single package for better organization","messageBody":"Previously, classes in `src/main/java` were unstructured, making it\nharder to manage dependencies and maintain consistency.\n\nUsing a single package improves project organization, enhances\nmodularity, and simplifies imports.\n\nLet\u0027s:\n* Move all classes into `com.example.project` (replace with actual package).\n* Update `package` declarations in all Java files.\n* Adjust import statements to match the new package structure.\n\nThis change ensures a cleaner, more maintainable codebase by\nconsolidating all classes under a well-defined package structure.\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":30},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"bbcd876b73c1fb144ee3567eadd00c264171bd91","isMergeCommit":false,"messageTitle":"Add comprehensive tests for chatbot error handling","messageBody":"Previously, `input.txt` lacked extensive test coverage for edge\ncases, invalid inputs, and unexpected user commands.\n\nEnsuring robust error handling improves chatbot reliability by\nvalidating its response to incorrect, incomplete, or malformed\ninputs.\n\nLet\u0027s:\n* Add tests for invalid `todo`, `deadline`, and `event` commands:\n  - Missing descriptions and required fields.\n  - Incorrect date and time formats.\n  - Impossible dates and negative values.\n* Add boundary tests for `mark`, `unmark`, and `delete`:\n  - Non-existent task indices, negative numbers, and zero.\n  - Non-numeric inputs and extra arguments.\n* Include invalid and mistyped commands to test chatbot robustness.\n* Verify persistence by adding, listing, and deleting tasks\n  across chatbot sessions.\n\nThese test cases enhance chatbot error handling, ensuring it\nresponds correctly to all invalid inputs.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":74,"deletions":48},"java":{"insertions":2,"deletions":2}}},{"hash":"9271ef7257e0d561c19c9cfc4b41105584c3c534","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Gradle\u0027","messageBody":"* A-Gradle:\n  build.gradle: Prevent generating a second JAR file\n  Bump gradle and lib version\n  Add Gradle support\n","fileTypesAndContributionMap":{}},{"hash":"02f21ee02cfef4b39508130b88d6b899032bd505","isMergeCommit":false,"messageTitle":"Refactor delete method to streamline output handling","messageBody":"- Refactor the `delete` method to remove the intermediate `output` variable.\n- Directly return the formatted string response, reducing redundancy and improving clarity.\n- Update the exception message to be more descriptive and user-friendly.\n\nThis change enhances code readability and simplifies the logic in the `delete` method while ensuring consistency across similar methods.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}},{"hash":"3eccd7c41482918ab9c09434a388cb1de75730a7","isMergeCommit":false,"messageTitle":"Set up Gradle to run Tom","messageBody":"Previously, the Gradle build configuration was incomplete and did\nnot allow the `Tom` application to run seamlessly.\n\nSetting up Gradle to execute `Tom` ensures a smoother development\nworkflow and allows easy building, running, and packaging of the\napplication.\n\nLet\u0027s:\n* Update `build.gradle`:\n  - Set `application.mainClass` to `tom.Tom` to define the main\n    entry point for the application.\n  - Configure `shadowJar` to generate a JAR named `Tom.jar`.\n  - Add a `run` task to accept standard input during execution.\n\nThese changes enable the project to:\n1. Be run directly using `./gradlew run`.\n2. Generate a standalone JAR file with `./gradlew shadowJar`.\n\nThis setup improves developer productivity and ensures consistent\nexecution across environments.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"2ae80b904c00b0442c34a3ff576493e7394ac58a","isMergeCommit":false,"messageTitle":"Update Gradle configuration for Tom project","messageBody":"Previously, the Gradle build script referenced the old project name\n\"Duke\" and lacked clarity in its structure.\n\nUpdating the configuration ensures the build process aligns with\nthe new project name \"Tom\" and improves readability.\n\nLet\u0027s:\n* Update `application.mainClass` to `tom.Tom` to reflect the main\n  entry point of the application.\n* Rename the shadow JAR output to `Tom.jar` for consistency with\n  the new project name.\n* Fix minor formatting in the Gradle `run` task for better readability.\n\nThese changes improve the build process, ensuring the project can\nbe built and executed correctly as \"Tom.\"\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":3}}},{"hash":"96520a7a3c5e9fe4152c2ee8db654f9bb6387cd7","isMergeCommit":false,"messageTitle":"add JUnit tests for Parser and ChatbotDataHandler","messageBody":"Add JUnit tests to ensure robust behaviour of key methods in Parser and\nChatbotDataHandler.\n\n- Add ParserTest.java:\n  - Test valid commands (`todo`, `deadline`, `bye`).\n  - Verify invalid commands print correct error messages.\n  - Ensure correct task additions in the list.\n\n- Add ChatbotDataHandlerTest.java:\n  - Test `saveTasks()` with an empty list and multiple tasks.\n  - Verify correct file format and ensure data persistence.\n  - Check if the file is created when missing.\n\nThese tests improve code reliability by covering expected functionality\nand potential edge cases.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":194,"deletions":0}}},{"hash":"ea0bf55d15a4dc5fd1a52320a94432ac1fa15b25","isMergeCommit":false,"messageTitle":"Add Javadocs to ChatbotDataHandler, Parser, and Ui classes","messageBody":"- Documented all public methods and constructors with detailed Javadocs.\n- Improved code readability and ensured compliance with SE-EDU Java Coding Standards.\n- Included usage of {@code} tags and structured descriptions for clarity.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"298e3362ec4ac6af2576c769a6253c2e7a0333c5","isMergeCommit":false,"messageTitle":"Apply SE-EDU coding standard fixes to multiple files","messageBody":"- Standardized variable names (`timeby` → `timeBy`, `dateby` → `dateBy`).\n- Updated Javadoc descriptions for clarity in Event, Greeting, and Listen.\n- Changed `FILE_PATH` to `private final` in ChatbotDataHandler.\n- Fixed incorrect event type in Meeting\u0027s `toFileFormat()`.\n- Improved error messages in List class for professionalism.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":19}}},{"hash":"6f88fff6ab9a27bd5d3b1afbdd2ce773ecbd9754","isMergeCommit":false,"messageTitle":"Apply SE-EDU coding standard fixes to multiple files","messageBody":"- Updated exception messages in Parser to be more professional.\n- Corrected Javadoc references in Tom and Pair.\n- Ensured method documentation clarity across all files.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5}}},{"hash":"8c2cb506c9213b92801948d40c7c269ce36f617c","isMergeCommit":false,"messageTitle":"Add find command to search tasks by keyword","messageBody":"- Added `find` method in List to search tasks containing a keyword.\n- Updated Parser to handle `find` command.\n- Improved Ui formatting for search results.\n","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":91}}},{"hash":"9063260f219b74688e44dda15631a408cd0cc4c2","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-9\u0027","messageBody":"* Level-9:\n  Add find command to search tasks by keyword\n","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"0b78f2c8e6758a2e54884326a0fabfad041b026c","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-JavaDoc\u0027","messageBody":"* A-JavaDoc:\n  Add Javadocs to ChatbotDataHandler, Parser, and Ui classes\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-06","commitResults":[{"hash":"d1b0f1bd9c66c57ca3938b9ada8c7b98f5d363d9","isMergeCommit":false,"messageTitle":"Integrate JavaFX UI with chatbot","messageBody":"The chatbot previously ran entirely in the console and lacked a graphical\ninterface. Additionally, chatbot messages had no structured display,\nand resizing the window did not adjust UI elements properly.\n\nThis commit integrates JavaFX to provide a GUI for the chatbot.\n\n- **Add JavaFX UI Components**:\n  - Implement `MainWindow.fxml` for the main chatbot interface.\n  - Implement `DialogBox.fxml` to display user and chatbot messages.\n  - Add `MainWindow.java` as the controller to handle user input.\n  - Add `DialogBox.java` to style chat messages with images and borders.\n\n- **Ensure UI Responsiveness**:\n  - Use `AnchorPane` constraints to make `MainWindow.fxml` resize dynamically.\n  - Ensure `ScrollPane`, `VBox`, `TextField`, and `Button` expand properly.\n\n- **Improve Chat Message Display**:\n  - Add a black-bordered text box for chatbot messages (`DialogBox.fxml`).\n  - Use rounded corners and padding for readability.\n\n- **Redirect Chatbot I/O to GUI**:\n  - Modify `Tom.java` to return responses instead of printing them.\n  - Update `Ui.java` to return strings rather than using `System.out.println()`.\n  - Modify `MainWindow.java` to call `tom.getResponse(input)`,\n    ensuring user input is processed and displayed in the UI.\n\nWith these changes, the chatbot now runs in a **fully interactive JavaFX GUI**,\nmaking it visually structured, responsive, and user-friendly.\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"fxml":{"insertions":94,"deletions":0},"java":{"insertions":206,"deletions":9}}},{"hash":"960664538a03644a0696cc3de448924900e3a0aa","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-10\u0027","messageBody":"* Level-10:\n  Integrate JavaFX UI with chatbot\n","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"d88ca60e37abd6794c3b3810a7c3cebea92b994d","isMergeCommit":false,"messageTitle":" Add addInitialBotMessage() for chatbot initialisation","messageBody":"Currently, the chatbot\u0027s initial response is not modularised, making\ninitialisation handling less structured.\n\nLet\u0027s add a new method `addInitialBotMessage()` to:\n- Display the chatbot\u0027s initial message when `setTom()` is called.\n- Prevent `NullPointerException` by ensuring `tom` is not null before use.\n- Improve code readability and maintainability.\n\nThis ensures a cleaner and more structured chatbot initialisation process.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"leeyenshen":{"java":1367,"md":0,"fxml":94,"sh":2,"bat":1,"gradle":16,"txt":78}},"authorContributionVariance":{"leeyenshen":94733.64},"authorDisplayNameMap":{"leeyenshen":"CS2103T-W12-1 LEE ..SHEN"}}
