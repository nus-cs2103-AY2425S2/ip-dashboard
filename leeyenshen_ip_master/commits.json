{"authorDailyContributionsMap":{"leeyenshen":[{"date":"2025-01-22","commitResults":[{"hash":"25a368d4ac031e7ca6636e82fe20fc4af2df0b20","isMergeCommit":false,"messageTitle":"Rename Duke.java to Tom.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"66e217ada0ebd238bb86d07ef3e009f4225609d8","isMergeCommit":false,"messageTitle":"Initialise skeletal chatbot with greeting and exit functionality","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}}]},{"date":"2025-01-24","commitResults":[{"hash":"f9702082fc670bdeabe47205b3d769d3c09da220","isMergeCommit":false,"messageTitle":"Add Event.java Event class is abstract to allow for implementation of Chatbot actions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"40c791d9b4e715dfed8155cd2a51dbf63eacbf25","isMergeCommit":false,"messageTitle":"Add Chatbot.java Exit.java Greeting.java Listen.java","messageBody":"Added functionality for repeating users command input and exiting when \"bye\" is typed\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":0}}},{"hash":"86e3e9dc97466fd9bcccef5ec1d227e568e80399","isMergeCommit":false,"messageTitle":"Refactor Tom.java","messageBody":"Refactored main code to use a queue instead to repeat events and implement functionalities.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":5}}},{"hash":"d4b34df878cb307f310fd3ca2721a075088f21c1","isMergeCommit":false,"messageTitle":"Add List.java and functionality for list","messageBody":"Created a list and refactored the code to use a list stored in Listen event to add items and display list based on what the user inputs\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":19}}},{"hash":"debdaf094dd9593beec702e09eedd488aa96e7ac","isMergeCommit":false,"messageTitle":"Add Pair.java","messageBody":"Pair.java is the task that stores an item name and boolean of whether its done\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"6cc80df1be66264e8243d87a3023ab035e80ff37","isMergeCommit":false,"messageTitle":"Refactor List.java Listen.java to use Pairs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":8}}},{"hash":"4ebb8cfb9c4a7cf3bb5f16020a805b1399daad0e","isMergeCommit":false,"messageTitle":"Edit List.java marking and unmark methods","messageBody":"Marking and unmark now checks whether it is already done or not done before repeating action\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"cc9c74d86a56a887dad7b665962bd97e611c0592","isMergeCommit":false,"messageTitle":"Edit List.java mark and unmark","messageBody":"List position was not numbered properly\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"b86b49c27c5bf4a0355599332a5ed89fcf472642","isMergeCommit":false,"messageTitle":"Add Deadline.java Meeting.java Todo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"56a1c7a250602c0fd933796d1d7a98bbd882c554","isMergeCommit":false,"messageTitle":"Refactor Deadline.java Meeting.java Todo.java","messageBody":"Edit code to print out correct output and store it properly\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":10}}},{"hash":"5f227494e96886d9250a6c5901cec7a4be935995","isMergeCommit":false,"messageTitle":"Refactor List.java, Listen.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":19}}},{"hash":"73499cd0648d9eb45b0c93f38832b90f63f8bbb4","isMergeCommit":false,"messageTitle":"Add Javadoc comments for all classes and methods","messageBody":"- Documented all classes including Chatbot, Deadline, List, Listen, Meeting, Pair, Todo, Event, Exit, Greeting, and Tom.\n- Added detailed descriptions for class purposes, constructors, methods, and return values.\n- Improved code readability and maintainability by adhering to Javadoc standards.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":182,"deletions":1}}},{"hash":"383720e79cf2f5b4f50ce3d1c3485092df87d98f","isMergeCommit":false,"messageTitle":"Add automated testing for Tom using I/O redirection","messageBody":"- Implemented a Bash script (`runtest.sh`) to automate compilation, execution, and result verification.\n- Added support for input redirection (`input.txt`) and output comparison against expected results (`EXPECTED.TXT`).\n- Normalized line endings and whitespace using `dos2unix` and `sed` to ensure consistent comparison.\n- Enhanced test script to handle trailing spaces and inconsistent spacing.\n- Documented steps for preparing test files and running the script.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":3,"deletions":3},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"c6de85fcc3d4af6f59b243e91e5b8f6af79d2b7f","isMergeCommit":false,"messageTitle":"Implement error handling and testing framework for chatbot","messageBody":"- Added comprehensive error handling in the chatbot for invalid commands and input errors.\n  - Handled empty descriptions for `todo`, `deadline`, and `event` commands with detailed error messages.\n  - Validated proper syntax for `deadline` and `event` commands (e.g., missing `/by`, `/from`, or `/to`).\n  - Provided specific error feedback for unknown commands and invalid indices in `mark` and `unmark`.\n  - Used `ChatbotException` with dynamic error messages for all cases.\n- Enhanced the `Listen` class to process user commands and handle errors gracefully.\n- Added a testing framework using I/O redirection:\n  - Created a test script (`runtest.sh`) to automate compilation, execution, and comparison of program output.\n  - Prepared `input.txt` and `EXPECTED.TXT` for testing typical user interactions.\n  - Normalized line endings and whitespace in output for consistent comparison.\n- Updated Javadoc comments for all classes and methods:\n  - Documented the purpose, parameters, and behavior of each method and class.\n  - Included details about exception handling and command processing.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":5},"java":{"insertions":112,"deletions":67}}},{"hash":"8473008852cd136e0d064e6beefddc66e77890c9","isMergeCommit":false,"messageTitle":"Add delete functionality for task management","messageBody":"- Implemented the `delete` command in the `List` class to remove tasks by index.\n  - Added validation to ensure valid task indices.\n  - Displayed confirmation messages after successful deletions.\n- Updated the `Listen` class to handle the `delete` command.\n  - Integrated the `delete` command into the `processCommand` method.\n  - Provided specific error messages for invalid or missing task indices.\n- Enhanced user interaction with detailed feedback for task deletions.\n\nThis update improves task management by enabling users to remove tasks from the list\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":8}}},{"hash":"2b3d4ef00b32e6eb999562a6e1cf900823c984b1","isMergeCommit":false,"messageTitle":"Add comprehensive input and output files for chatbot testing","messageBody":"- Created `input.txt` to test all chatbot functionalities, including:\n  - Adding tasks (`todo`, `deadline`, `event`) with valid and invalid inputs.\n  - Marking and unmarking tasks, including invalid indices.\n  - Deleting tasks, with validation for non-existent and invalid indices.\n  - Handling edge cases for commands with missing or incomplete parameters.\n  - Proper termination with the `bye` command.\n- Added `EXPECTED.TXT` to validate program behavior against:\n  - Correct task management operations.\n  - Detailed error messages for invalid commands and inputs.\n- Ensured the test files cover normal usage scenarios, edge cases, and error handling comprehensively.\n\nThis update improves test coverage and ensures the chatbot is robust against various user inputs.\n","fileTypesAndContributionMap":{"txt":{"insertions":24,"deletions":12}}}]},{"date":"2025-01-25","commitResults":[{"hash":"8de15a6f53eb17a4bf5163420f9208cf09d9ba36","isMergeCommit":false,"messageTitle":"Refactor: Improve adherence to coding standards in all files","messageBody":"Updated various Java files to follow coding conventions:\n- Chatbot.java:\n  * Renamed parameter `tom` to `initialEventSource` for clarity.\n  * Enhanced Javadoc for the `run` method.\n\n- ChatbotException.java:\n  * No changes required; all conventions were followed.\n\n- Deadline.java:\n  * Made field `by` private and added a getter method.\n  * Optimized `toString` method using `StringBuilder`.\n\n- Event.java:\n  * Renamed constant `line` to `LINE` for SCREAMING_SNAKE_CASE compliance.\n  * Enhanced class-level Javadoc for clarity.\n\n- Exit.java:\n  * Updated Javadoc for `simulate` method to clarify return behavior.\n\n- Greeting.java:\n  * Enhanced Javadoc for `simulate` method to describe the returned `Listen` event.\n\n- List.java:\n  * Added `final` to method parameters for immutability.\n  * Improved Javadoc for constructors and methods.\n\n- Listen.java:\n  * Improved class-level Javadoc to describe user interaction.\n  * Refactored `processCommand` into smaller helper methods for maintainability.\n\n- Meeting.java:\n  * Made fields `from` and `to` private.\n  * Optimized `toString` method using `StringBuilder`.\n\n- Pair.java:\n  * Made fields `item` and `done` private.\n  * Added validation in `mark` method to prevent redundant state changes.\n\nThese changes enhance code readability, maintainability, and compliance with Java coding standards.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":16}}}]},{"date":"2025-01-29","commitResults":[{"hash":"1474ca5e12bd4178b463bf59fc17007f47da1a38","isMergeCommit":false,"messageTitle":"Add ChatbotDataHandler.java for task persistence","messageBody":"The chatbot previously lacked task persistence, causing data\nto be lost when the application restarted.\n\nTask persistence is crucial for maintaining chatbot state and\nensuring tasks persist across sessions.\n\nLet\u0027s:\n* Implement `ChatbotDataHandler.java` to manage task storage.\n* Create `data/Tom.txt` as the persistent task file.\n* Implement `getTasks()` to initialize tasks from memory.\n* Implement `saveTasks()` to write tasks back to `data/Tom.txt`.\n* Introduce `parseTask()` to process different task types:\n  - `T | done | description` → `Todo`\n  - `D | done | description | due_date` → `Deadline`\n  - `E | done | description | event_from | event_to` → `Meeting`\n* Use `LinkedList\u003cPair\u003e` for efficient task management.\n* Print debugging messages when loading and saving tasks.\n\nThis enhances chatbot functionality by preserving tasks across\nsessions and improving user experience.\n","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":0}}},{"hash":"6f93c675dfcf90b32ceb8fb56561329ebd67f61e","isMergeCommit":false,"messageTitle":"Refactor chatbot files to integrate with ChatbotDataHandler","messageBody":"Previously, the chatbot handled task management without persistent\nstorage, causing data loss when the application restarted.\n\nIntegrating `ChatbotDataHandler` enables persistent task storage,\nensuring tasks are saved and retrieved across sessions.\n\nLet\u0027s:\n* Modify `Tom.java` to initialize tasks using `ChatbotDataHandler.getTasks()`.\n* Update `Exit.java` to call `ChatbotDataHandler.saveTasks()` before exiting.\n* Refactor `List.java` to store tasks as `LinkedList\u003cPair\u003e` for compatibility.\n* Modify `Listen.java` to process task commands (`todo`, `deadline`, `event`)\n  and update `ChatbotDataHandler`.\n* Update `Deadline.java`, `Meeting.java`, and `Todo.java` to include\n  `toFileFormat()` for task serialization.\n* Improve `Pair.java` to store and format tasks properly.\n* Adjust `Greeting.java` to initialize from stored tasks.\n* Ensure `Chatbot.java` correctly processes stored task events.\n\nThis enhances chatbot functionality by persisting tasks across sessions,\nimproving usability and reliability.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":46}}},{"hash":"9257dab29d4100a58435ae9600fec0c28a839040","isMergeCommit":false,"messageTitle":"Add input validation for task commands","messageBody":"The `mark`, `unmark`, and `delete` commands previously did not\nvalidate user input, causing runtime errors when invalid task\nnumbers or formats were provided.\n\nInput validation is necessary to prevent errors and ensure the\nchatbot provides appropriate feedback for invalid commands.\n\nLet\u0027s:\n* Add a `try-catch` block for `mark` to handle invalid integers.\n* Add a `try-catch` block for `unmark` to handle invalid integers.\n* Add a `try-catch` block for `delete` to handle invalid integers.\n* Display an error message (\"Input a proper number\") for invalid inputs.\n\nThis improves user experience and ensures robust command handling.\n","fileTypesAndContributionMap":{"txt":{"insertions":53,"deletions":19},"java":{"insertions":15,"deletions":3},"md":{"insertions":0,"deletions":30}}},{"hash":"5daa39811f961b196c78cb0ec14d660638042e01","isMergeCommit":false,"messageTitle":"Update input.txt to add more testcases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"b599a0f1e744909427751a511476508badd32472","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-Level-7","messageBody":"* master:\n  Update input.txt to add more testcases\n\n# Conflicts:\n#\ttext-ui-test/input.txt\n","fileTypesAndContributionMap":{}},{"hash":"634d2ca433a4e9e87dc1a9fead1faa3ab8a9af1d","isMergeCommit":false,"messageTitle":"Fix spacing in toFileFormat method","messageBody":"The `toFileFormat` method in `Deadline.java` previously had an\nincorrect spacing in the output string format for the deadline\ntask representation.\n\nProper spacing ensures the file format is consistent and matches\nthe expected output when tasks are saved and loaded.\n\nLet\u0027s:\n* Add a space before the pipe (`|`) in the `toFileFormat` method.\n\nThis improves consistency and ensures tasks are saved in the\ncorrect format for future processing\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7b32dc804b7c07b66434d9904f35cd9983ab18a7","isMergeCommit":false,"messageTitle":"Fix spacing in toFileFormat method","messageBody":"The `toFileFormat` method in `Deadline.java` previously had an\nincorrect spacing in the output string format for the deadline\ntask representation.\n\nProper spacing ensures the file format is consistent and matches\nthe expected output when tasks are saved and loaded.\n\nLet\u0027s:\n* Add a space before the pipe (`|`) in the `toFileFormat` method.\n\nThis improves consistency and ensures tasks are saved in the\ncorrect format for future processing\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e08a30846071e354dd8aae83762a4e3f84a4ab28","isMergeCommit":false,"messageTitle":"Update input.txt and expected.txt","messageBody":"Previously, the `input.txt` and its corresponding expected output\ndid not comprehensively test all chatbot functionalities, such as\nedge cases and error handling for various commands.\n\nTesting a wider range of inputs and verifying their output ensures\nthe chatbot behaves correctly across different scenarios, including\nvalid, invalid, and edge case inputs.\n\nLet\u0027s:\n* Update `input.txt` to include comprehensive test cases for:\n  - Adding todos, deadlines, and events with valid and invalid inputs.\n  - Handling edge cases like empty descriptions and missing fields.\n  - Using `mark`, `unmark`, `delete`, and `list` commands.\n* Update the expected output to reflect the new test cases.\n\nThese changes improve the chatbot\u0027s test coverage and ensure its\nbehavior is robust and predictable.\n","fileTypesAndContributionMap":{"txt":{"insertions":40,"deletions":17}}},{"hash":"b585cff7f7c0a50a429fe898b35a8ad7429eb06f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"* branch-Level-7:\n  Fix spacing in toFileFormat method\n  Fix spacing in toFileFormat method\n  Add input validation for task commands\n  Refactor chatbot files to integrate with ChatbotDataHandler\n  Add ChatbotDataHandler.java for task persistence\n\n# Conflicts:\n#\ttext-ui-test/input.txt\n","tags":["Level-7"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"leeyenshen":{"java":739,"md":0,"fxml":0,"sh":1,"bat":1,"gradle":0,"txt":51}},"authorContributionVariance":{"leeyenshen":43634.83},"authorDisplayNameMap":{"leeyenshen":"CS2103T-W12-1 LEE ..SHEN"}}
