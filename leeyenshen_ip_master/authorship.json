[{"path":"src/main/java/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"import java.util.Queue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":"import java.util.LinkedList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":" * Represents a chatbot that processes and simulates events in sequence.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"public class Chatbot {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"    private final Queue\u003cEvent\u003e events;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a Chatbot instance with an initial set of events from the given entity.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     * @param tom The source of initial events for the chatbot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"    public Chatbot(Tom tom) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"        this.events \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"        this.events.add(tom.getInitialEvents());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"     * Starts the chatbot, processing and simulating events in the queue","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"     * until there are no more events to process. Each event may add","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"     * subsequent events to the queue.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"    public void run() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"        Event event \u003d this.events.poll();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"        while (event !\u003d null) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"            Event newEvents \u003d event.simulate();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"            this.events.add(newEvents);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"            event \u003d this.events.poll();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":33}},{"path":"src/main/java/ChatbotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents exceptions specific to the chatbot\u0027s operation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"public class ChatbotException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a ChatbotException with the specified error message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"     * @param message The detailed error message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"    public ChatbotException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" * A Deadline includes a description of the task and a date/time by which it must be completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"public class Deadline extends Pair{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"    private String by;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a Deadline instance with the specified details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"     * @param item The description of the deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"     * @param done Whether the task has been completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"    public Deadline(String item, boolean done, String by){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"        super(item, done);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"     * Returns a string representation of the Deadline, including its status and deadline date/time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"     * @return A string representing the Deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"        String temp \u003d \"[D]\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"        if (this.isDone()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"            temp +\u003d \"[X] \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"            temp +\u003d \"[ ] \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leeyenshen"},"content":"        temp +\u003d this.getItem() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leeyenshen"},"content":"        return temp;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":37}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents an abstract event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" * Subclasses should implement the `simulate` method to define","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":" * specific event behaviors.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"public abstract class Event{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"     * A separator line for output formatting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"    public static String LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     * Simulates the exit event by printing a farewell message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"     * @return Always returns null, indicating the end of the event sequence.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"    public abstract Event simulate();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":18}},{"path":"src/main/java/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents the exit event that terminates the program.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"public class Exit extends Event{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"     * Simulates the exit event by printing a farewell message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"     * @return Always returns null to indicate the end of events.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"    public Event simulate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"        System.out.print(Event.LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"        return null;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":15}},{"path":"src/main/java/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents the greeting event that welcomes the user and starts the program.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"public class Greeting extends Event{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"     * Simulates the greeting event by printing a welcome message and initializing the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"     * @return A new Listen event to handle user commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"    public Event simulate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Hello! I\u0027m Tom\\nWhat can I do for you?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(Event.LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"        return new Listen(new List());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":15}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"import java.util.LinkedList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":" * Manages a list of tasks, allowing for task addition, marking as done/undone, and displaying tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"public class List{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"    private LinkedList\u003cPair\u003e list;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a List instance with a specified LinkedList of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"     * @param list A pre-existing LinkedList containing tasks to initialize the list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"    public List(LinkedList\u003cPair\u003e list) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"     * Constructs an empty List instance.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"    public List() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"        this.list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"     * @param x The index of the task to mark as done (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"    public void mark(int x) throws ChatbotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"        if (x \u003e this.list.size() || x \u003c\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"            throw new ChatbotException(\"This item does not exist JERRYYYYYY!!!!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leeyenshen"},"content":"        Pair item \u003d this.list.get(x - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leeyenshen"},"content":"        if (item.isDone()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leeyenshen"},"content":"            throw new ChatbotException(\"You have done it JERRYYYYYY!!!!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leeyenshen"},"content":"        item.mark(true);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\" \" + item);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leeyenshen"},"content":"     * Marks a task at the specified index as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leeyenshen"},"content":"     * @param x The index of the task to mark as not done (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leeyenshen"},"content":"    public void unmark(int x) throws ChatbotException{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leeyenshen"},"content":"        if (x \u003e\u003d this.list.size() || x \u003c\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leeyenshen"},"content":"            throw new ChatbotException(\"This item does not exist JERRYYYYYY!!!!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leeyenshen"},"content":"        Pair item \u003d this.list.get(x - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leeyenshen"},"content":"        if (!item.isDone()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leeyenshen"},"content":"            throw new ChatbotException(\"You have NOT done it JERRYYYYYY!!!!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leeyenshen"},"content":"        item.mark(false);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\" \" + item);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leeyenshen"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leeyenshen"},"content":"     * @param x The index of the task to delete (1-based index).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leeyenshen"},"content":"     * @throws ChatbotException If the index is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leeyenshen"},"content":"    public void delete(int x) throws ChatbotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leeyenshen"},"content":"        if (x \u003c\u003d 0 || x \u003e this.list.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leeyenshen"},"content":"            throw new ChatbotException(\"This item does not exist JERRYYYYYY!!!!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leeyenshen"},"content":"        Pair removedTask \u003d this.list.remove(x - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"  \" + removedTask.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leeyenshen"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leeyenshen"},"content":"     * @param item The task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leeyenshen"},"content":"    public void add(Pair item){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\" \" + item.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leeyenshen"},"content":"        this.list.add(item);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(\"Now you have \" + this.list.size() + \" tasks in the list\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leeyenshen"},"content":"     * Displays all tasks in the list with their status and details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leeyenshen"},"content":"    public void display() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leeyenshen"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leeyenshen"},"content":"            Pair temp \u003d list.get(i);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leeyenshen"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leeyenshen"},"content":"            System.out.println(temp.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leeyenshen"},"content":"     * Retrieves the internal LinkedList of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leeyenshen"},"content":"     * @return The LinkedList containing all tasks in this list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leeyenshen"},"content":"    public LinkedList\u003cPair\u003e getList() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leeyenshen"},"content":"        return this.list;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":108}},{"path":"src/main/java/Listen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":" * Listens for user commands and processes them to perform actions on the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":" * Commands include adding, deleting, marking tasks, and exiting the application.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"public class Listen extends Event{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"    private List list;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a Listen instance with the specified task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"     * @param list The task list to manage and update.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"    public Listen(List list) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"     * Simulates the event by listening for user input and processing commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"     * @return A new Event based on the user command, or the current Listen instance if no valid command is entered.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"    public Event simulate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"        if (!scanner.hasNextLine()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"            return this;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"        if (command.isEmpty() || isInteger(command)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"            return this;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leeyenshen"},"content":"        String bye \u003d command.toLowerCase();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leeyenshen"},"content":"        if (bye.equals(\"bye\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leeyenshen"},"content":"            return new Exit();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leeyenshen"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leeyenshen"},"content":"            System.out.println(Event.LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leeyenshen"},"content":"            processCommand(command);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leeyenshen"},"content":"            System.out.println(Event.LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leeyenshen"},"content":"        } catch (ChatbotException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leeyenshen"},"content":"            System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leeyenshen"},"content":"            System.out.println(Event.LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leeyenshen"},"content":"        return this;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leeyenshen"},"content":"     * Processes the user\u0027s command and performs the corresponding action.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leeyenshen"},"content":"     * Throws a {@code ChatbotException} with specific error messages for invalid commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leeyenshen"},"content":"     * @param command The user\u0027s command input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leeyenshen"},"content":"     * @throws ChatbotException If the command is invalid or incomplete.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leeyenshen"},"content":"    private void processCommand(String command) throws ChatbotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leeyenshen"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leeyenshen"},"content":"        String action \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leeyenshen"},"content":"        switch (action) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leeyenshen"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leeyenshen"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leeyenshen"},"content":"                    throw new ChatbotException(\"JERRYYYYY!!!! The description of a todo cannot be empty. Please provide a task description.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leeyenshen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leeyenshen"},"content":"                this.list.add(new Todo(parts[1].trim(), false));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leeyenshen"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leeyenshen"},"content":"                if (!command.contains(\"/by\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leeyenshen"},"content":"                    throw new ChatbotException(\"A deadline must include \u0027/by\u0027 followed by the due date. Example: deadline Finish report /by tomorrow.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leeyenshen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leeyenshen"},"content":"                String[] deadlineParts \u003d parts[1].split(\"/by\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leeyenshen"},"content":"                if (deadlineParts.length \u003c 2 || deadlineParts[0].trim().isEmpty() || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leeyenshen"},"content":"                    throw new ChatbotException(\"The description or due date of a deadline cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leeyenshen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leeyenshen"},"content":"                this.list.add(new Deadline(deadlineParts[0].trim(), false, deadlineParts[1].trim()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leeyenshen"},"content":"            case \"event\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leeyenshen"},"content":"                if (!command.contains(\"/from\") || !command.contains(\"/to\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leeyenshen"},"content":"                    throw new ChatbotException(\"An event must include \u0027/from\u0027 and \u0027/to\u0027 with valid time periods. Example: event Team meeting /from 2pm /to 4pm.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leeyenshen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leeyenshen"},"content":"                String[] eventParts \u003d parts[1].split(\"/from\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leeyenshen"},"content":"                String[] timeParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leeyenshen"},"content":"                if (eventParts.length \u003c 2 || timeParts.length \u003c 2 ||","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leeyenshen"},"content":"                        eventParts[0].trim().isEmpty() || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leeyenshen"},"content":"                    throw new ChatbotException(\"The description or time periods of an event cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leeyenshen"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leeyenshen"},"content":"                this.list.add(new Meeting(eventParts[0].trim(), false, timeParts[0].trim(), timeParts[1].trim()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leeyenshen"},"content":"            case \"mark\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leeyenshen"},"content":"                this.list.mark(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leeyenshen"},"content":"            case \"unmark\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leeyenshen"},"content":"                this.list.unmark(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leeyenshen"},"content":"            case \"list\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leeyenshen"},"content":"                this.list.display();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leeyenshen"},"content":"            case \"delete\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leeyenshen"},"content":"                this.list.delete(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leeyenshen"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leeyenshen"},"content":"            default:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leeyenshen"},"content":"                throw new ChatbotException(\"I\u0027m sorry, but I don\u0027t know what the command \u0027\" + command + \"\u0027 means. Please try again.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leeyenshen"},"content":"     * Validates the index for the \"mark\" and \"unmark\" commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leeyenshen"},"content":"     * Throws a {@code ChatbotException} if the index is invalid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leeyenshen"},"content":"     * @param parts  The split command parts containing the action and index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leeyenshen"},"content":"     * @param action The action being validated (e.g., \"mark\" or \"unmark\").","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leeyenshen"},"content":"     * @throws ChatbotException If the index is missing or not a valid number.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leeyenshen"},"content":"    private void validateIndex(String[] parts, String action) throws ChatbotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leeyenshen"},"content":"        if (parts.length \u003c 2 || !isInteger(parts[1])) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leeyenshen"},"content":"            throw new ChatbotException(\"The \" + action + \" command requires a valid task number. Example: \" + action + \" 2.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"leeyenshen"},"content":"     * Checks if the given input is an integer.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"leeyenshen"},"content":"     * @param input The input string to check.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"leeyenshen"},"content":"     * @return True if the input is an integer, false otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"leeyenshen"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"leeyenshen"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"leeyenshen"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"leeyenshen"},"content":"            return true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"leeyenshen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"leeyenshen"},"content":"            return false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":142}},{"path":"src/main/java/Meeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents a meeting with a specific time frame.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" * A Meeting includes a description, start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"public class Meeting extends Pair{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"    private String from;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"    private String to;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a Meeting instance with the specified details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"     * @param item The description of the meeting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     * @param done Whether the meeting task is completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"     * @param from The start time of the meeting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"     * @param to The end time of the meeting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"    public Meeting(String item, boolean done, String from, String to){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"        super(item, done);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"     * Returns a string representation of the Meeting, including its status and time frame.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"     * @return A string representing the Meeting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"        String temp \u003d \"[E]\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"        if (this.isDone()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"            temp +\u003d \"[X] \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leeyenshen"},"content":"            temp +\u003d \"[ ] \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leeyenshen"},"content":"        temp +\u003d this.getItem() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leeyenshen"},"content":"        return temp;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":39}},{"path":"src/main/java/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents a basic task with a description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"public class Pair {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"    private String item;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"    private boolean done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a Pair instance with the specified description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"     * @param item The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"    public Pair(String item, boolean done) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"        this.item \u003d item;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"     * @param done True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"    public void mark(boolean done) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"     * Checks if the task is done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leeyenshen"},"content":"        return this.done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leeyenshen"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leeyenshen"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leeyenshen"},"content":"    public String getItem() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leeyenshen"},"content":"        return this.item;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":45}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents a simple to-do task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"public class Todo extends Pair{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"     * Constructs a Todo instance with the specified description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"     * @param item The description of the to-do task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"    public Todo(String item, boolean done) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"        super(item, done);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"     * Returns a string representation of the Todo, including its status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"     * @return A string representing the Todo.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"        String temp \u003d \"[T]\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"        if (this.isDone()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"            temp +\u003d \"[X] \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"            temp +\u003d \"[ ] \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"        temp +\u003d this.getItem();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"        return temp;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":31}},{"path":"src/main/java/Tom.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":" * Represents the main entry point for the chatbot application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":" * This class initializes the chatbot with its initial events and starts it.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"public class Tom {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"     * The main method that launches the chatbot application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"        String logo \u003d \"  _______   ____    __  __ \\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"                + \" |__   __| /  _ \\\\  |  \\\\/  |\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"                + \"    | |    | | | | | |\\\\/| |\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"                + \"    | |    | |_| | | |  | |\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"                + \"    |_|    \\\\____/  |_|  |_|\\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"        String line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"        //System.out.println(logo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"        System.out.println(line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"        Tom tom \u003d new Tom();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"        Chatbot chatbot \u003d new Chatbot(tom);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"        chatbot.run();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"     * Retrieves the initial events to be processed by the chatbot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leeyenshen"},"content":"     * @return The first event for the chatbot, which is a Greeting event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leeyenshen"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leeyenshen"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leeyenshen"},"content":"    public Event getInitialEvents() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leeyenshen"},"content":"        // Define the initial events for the chatbot","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leeyenshen"},"content":"        return new Greeting();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leeyenshen"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leeyenshen"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"leeyenshen":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyenshen"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leeyenshen"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leeyenshen"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leeyenshen"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leeyenshen"},"content":"deadline /by June 6th","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leeyenshen"},"content":"deadline return book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leeyenshen"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leeyenshen"},"content":"event /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leeyenshen"},"content":"event project meeting /from Aug 6th 2pm /to","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leeyenshen"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leeyenshen"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leeyenshen"},"content":"mark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leeyenshen"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leeyenshen"},"content":"unmark 5","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leeyenshen"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leeyenshen"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leeyenshen"},"content":"delete 5","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"todo join sports club","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leeyenshen"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leeyenshen"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leeyenshen"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leeyenshen"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"mark 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leeyenshen"},"content":"delete 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leeyenshen"},"content":"mark 5","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leeyenshen"},"content":"delete 5","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leeyenshen"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leeyenshen":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leeyenshen"},"content":"java -classpath ..\\bin Tom \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"leeyenshen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leeyenshen"},"content":"java -classpath ../bin Tom \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"leeyenshen":1,"-":37}}]
