[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"    mainClass.set(\"mitri.Main\")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"    archiveBaseName \u003d \"mitri\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"    archiveFileName \u003d \"mitri.jar\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"varuuuun":5,"-":39}},{"path":"src/main/java/mitri/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import mitri.chatbot.Mitri;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":" * Main entry point for the application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"public class Main {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"     * The main method that runs the application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"     * @param args Command-line arguments (unnecessary).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"        Mitri bot \u003d new Mitri();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"        bot.run();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varuuuun":19}},{"path":"src/main/java/mitri/chatbot/Mitri.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.chatbot;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"import mitri.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"import mitri.util.Parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"import mitri.util.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"import mitri.util.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"import static java.lang.Math.min;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":" * Represents the chatbot Mitri, handling user interaction and functionality.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"public class Mitri {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"    private String botName;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"    private String logo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"     * Constructs a Mitri chatbot instance.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"     * Initializes necessary components for user interaction and functionality.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"    public Mitri() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"        this.botName \u003d \"Mitri\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"        parser \u003d new Parser(this, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"        storage \u003d new Storage(parser, ui, taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"     * Starts the chatbot and begins processing user commands.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"    public void run() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"        storage.loadFromFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"        greet();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varuuuun"},"content":"        int running \u003d 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varuuuun"},"content":"        while (running \u003d\u003d 1) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varuuuun"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varuuuun"},"content":"            running \u003d parser.processInput(input);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varuuuun"},"content":"        exit();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varuuuun"},"content":"     * Echo functionality originally used to test chatbot. Currently unused.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varuuuun"},"content":"     * @param str String to echo.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varuuuun"},"content":"    private void echo(String str){","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varuuuun"},"content":"        ui.print(str);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varuuuun"},"content":"     * Deletes item at given index \u0026 reports to user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varuuuun"},"content":"     * @param index of item to delete from task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varuuuun"},"content":"    public void delete(int index){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varuuuun"},"content":"        Task t \u003d taskList.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varuuuun"},"content":"        ui.print(\"Got it. I\u0027ve removed this task:\\n\\t\" + t + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varuuuun"},"content":"     * Creates new Todo task and calls function to add it to task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varuuuun"},"content":"     * @param str String containing \"description\" field of Todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varuuuun"},"content":"     * @throws IllegalArgumentException Thrown when str is blank.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varuuuun"},"content":"    public void addTodo(String str) throws IllegalArgumentException{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varuuuun"},"content":"        if (str.isBlank()){","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varuuuun"},"content":"            throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varuuuun"},"content":"        add(new Todo(str.stripLeading()));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varuuuun"},"content":"     * Creates new Deadline task and calls function to add it to task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varuuuun"},"content":"     * @param str String containing \"description\"and \"by\" fields of Deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varuuuun"},"content":"     * @throws IllegalArgumentException Thrown when \"description\" or \"by\" field is blank.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varuuuun"},"content":"     * @throws DateTimeParseException Thrown when \"by\" field cannot be parsed as a LocalDateTime object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varuuuun"},"content":"    public void addDeadline(String str) throws IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"varuuuun"},"content":"        String[] parts \u003d str.split(\" /by \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"varuuuun"},"content":"        if (parts[0].isBlank() || parts.length \u003d\u003d 1 || parts[1].isBlank()){","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"varuuuun"},"content":"            throw new IllegalArgumentException(\"Deadline missing one or more fields. \\nEnsure you provide description and by fields.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"varuuuun"},"content":"        add(new Deadline(parts[0].stripLeading(), extractDateTime(parts[1])));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varuuuun"},"content":"     * Creates new Event task and calls function to add it to task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"varuuuun"},"content":"     * \"from\" and \"to\" fields can be in any orer.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"varuuuun"},"content":"     * @param str String containing \"description\", \"from\" and \"to\" fields of Event task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"varuuuun"},"content":"     * @throws IllegalArgumentException Thrown when one or more of the required fields are blank.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"varuuuun"},"content":"     * @throws DateTimeParseException Thrown when \"from\" or \"to\" fields cannot be parsed as LocalDateTime objects.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varuuuun"},"content":"    public void addEvent(String str) throws IllegalArgumentException, DateTimeParseException{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varuuuun"},"content":"        int from \u003d str.indexOf(\" /from \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varuuuun"},"content":"        int to \u003d str.indexOf(\" /to \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varuuuun"},"content":"        if ((from \u003c\u003d 0) || (to \u003c\u003d 0)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"varuuuun"},"content":"            throw new IllegalArgumentException(\"Event missing one or more fields. \\nEnsure you provide description, from and to fields.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"varuuuun"},"content":"        String descStr \u003d str.substring(0,min(from, to));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"varuuuun"},"content":"        String fromStr, toStr;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"varuuuun"},"content":"        if (from \u003c to){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"varuuuun"},"content":"            fromStr \u003d str.substring(from+7,to);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"varuuuun"},"content":"            toStr \u003d str.substring(to+5);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"varuuuun"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"varuuuun"},"content":"            fromStr \u003d str.substring(from+7);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"varuuuun"},"content":"            toStr \u003d str.substring(to+5, from);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"varuuuun"},"content":"        if (descStr.isBlank() || fromStr.isBlank() || toStr.isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"varuuuun"},"content":"            throw new IllegalArgumentException(\"Event has one or more empty fields. Ensure you provide description, from and to fields.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"varuuuun"},"content":"        add(new Event(descStr.stripLeading(), extractDateTime(fromStr), extractDateTime(toStr)));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"varuuuun"},"content":"     * Takes a string and parses it to a LocalDateTime object wherever possible.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"varuuuun"},"content":"     * @param str String to parse to LocalDateTime object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"varuuuun"},"content":"     * @return LocalDateTime object created from given string.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"varuuuun"},"content":"     * @throws DateTimeParseException Thrown when string cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"varuuuun"},"content":"    private LocalDateTime extractDateTime(String str) throws DateTimeParseException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"varuuuun"},"content":"        if (str.indexOf(\u0027T\u0027)\u003e0){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"varuuuun"},"content":"            return LocalDateTime.parse(str);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"varuuuun"},"content":"        } else if (str.indexOf(\u0027-\u0027)\u003e0) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"varuuuun"},"content":"            return LocalDate.parse(str).atStartOfDay();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"varuuuun"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"varuuuun"},"content":"            return LocalDateTime.of(LocalDate.now(), LocalTime.parse(str));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"varuuuun"},"content":"     * Adds given task to task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"varuuuun"},"content":"     * @param t Task to add to list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"varuuuun"},"content":"    public void add(Task t){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"varuuuun"},"content":"        taskList.add(t);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"varuuuun"},"content":"        ui.print(\"Got it. I\u0027ve added this task:\\n\\t\" + t + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"varuuuun"},"content":"     * Marks given task as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"varuuuun"},"content":"     * @param i Index of task to mark as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"varuuuun"},"content":"     * @throws IndexOutOfBoundsException Thrown when given index is out of the range of the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"varuuuun"},"content":"    public void mark(int i) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"varuuuun"},"content":"        Task t \u003d taskList.get(i);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"varuuuun"},"content":"        t.setDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"varuuuun"},"content":"        ui.print(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + t);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"varuuuun"},"content":"     * Marks given task as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"varuuuun"},"content":"     * @param i Index of task to mark as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"varuuuun"},"content":"     * @throws IndexOutOfBoundsException Thrown when given index is out of the range of the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"varuuuun"},"content":"    public void unmark(int i) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"varuuuun"},"content":"        Task t \u003d taskList.get(i);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"varuuuun"},"content":"        t.setNotDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"varuuuun"},"content":"        ui.print(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + t);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"varuuuun"},"content":"     * Lists all tasks in task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"varuuuun"},"content":"    public void list(){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"varuuuun"},"content":"        String printString \u003d \"Here are the tasks in your list:\" + taskList.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"varuuuun"},"content":"        ui.print(printString);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"varuuuun"},"content":"     * Greets user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"varuuuun"},"content":"    private void greet(){","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"varuuuun"},"content":"        ui.print(\"Hello! I\u0027m \" + botName + \"\\n\" + \"What can I do for you?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"varuuuun"},"content":"     * Cleans up and exits.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"varuuuun"},"content":"    private void exit(){","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"varuuuun"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"varuuuun"},"content":"        storage.writeToFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"varuuuun"},"content":"        ui.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varuuuun":211}},{"path":"src/main/java/mitri/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":" * Represents the Deadline task with deadline to complete by.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"    protected DateTimeFormatter formatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"     * Initialises Deadline object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"     * @param description Description of Task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"     * @param by Deadline to complete this task by.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"    public Deadline(String description, LocalDateTime by){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm:ss\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"     * Converts Deadline Task to string for printing purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"    public String toString(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"     * Converts Deadline Task to string for saving purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"    public String toSave(){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"        return \"D | \" + super.toSave() + \" | \" + by.toString();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"varuuuun":44}},{"path":"src/main/java/mitri/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":" * Represents the Deadline task with from and to fields.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"    protected LocalDateTime from, to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"    protected DateTimeFormatter formatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"     * Initialises Event object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"     * @param description Description of Task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"     * @param from When this task starts.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"     * @param to When this task ends.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm:ss\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"     * Converts Event Task to string for printing purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"    public String toString(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"     * Converts Event Task to string for saving purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"    public String toSave(){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"        return \"E | \" + super.toSave() + \" | \" + from.toString() + \" | \" + to.toString();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"varuuuun":46}},{"path":"src/main/java/mitri/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":" * Abstract class representing a Task object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"     * Initialises Task object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"     * @param description Description of Task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"     * Sets isDone variable to true, denoting task has been completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"     * Sets isDone variable to false, denoting task has not been completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"    public void setNotDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"     * Converts Task to string for printing purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varuuuun"},"content":"     * Converts Task to string for saving purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varuuuun"},"content":"    public String toSave(){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varuuuun"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varuuuun"},"content":"     * Equality check with another object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varuuuun"},"content":"     * @param obj Object to compare with task object","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varuuuun"},"content":"     * @return True is task and objects are equal (all fields have the same value), false otherwise.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varuuuun"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varuuuun"},"content":"        if (obj instanceof Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varuuuun"},"content":"            return this.toString().equals(task.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varuuuun"},"content":"        return false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"varuuuun":70}},{"path":"src/main/java/mitri/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":" * Represents the Todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"     * Initialises Todo object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"     * @param description Description of Todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"    public Todo(String description){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"     * Converts Todo Task to string for printing purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"    public String toString(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"     * Converts Todo Task to string for saving purpose.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"    public String toSave(){","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"        return \"T | \" + super.toSave();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"varuuuun":36}},{"path":"src/main/java/mitri/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":" * Represents the Ui.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"public class Ui {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"    private Scanner sc;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"     * Initialises scanner for the Ui.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"    public Ui(){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"     * Retrieves input from command line.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"     * @return Given input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"    public String getInput() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"     * Closes scanner during cleanup.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"    public void closeScanner(){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"        sc.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"     * Formats and prints given input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"     * @param str String to print.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"    public void print(String str){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"        System.out.println(str);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"     * Formats and prints given Error message.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varuuuun"},"content":"     * @param str Error Message to print.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varuuuun"},"content":"    public void printError(String str){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varuuuun"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varuuuun"},"content":"        System.out.println(\"Error: \" + str);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varuuuun"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varuuuun":57}},{"path":"src/main/java/mitri/util/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":" * Enum class for all possible commands.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"public enum Commands {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"    LIST, BYE, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"     * Gets command from given string.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"     * @param command String with command","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"     * @return Command","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"    public static Commands getCommand(String command) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"        return Commands.valueOf(command.toUpperCase());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"varuuuun":18}},{"path":"src/main/java/mitri/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import mitri.chatbot.Mitri;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"import mitri.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":" * Parser to retrieve commands from input and call relevant functions.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"    private Mitri mitri;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"     * Initialise Parser","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"     * @param mitri Chatbot","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"     * @param ui Ui for printing error messages","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    public Parser(Mitri mitri, Ui ui) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"        this.mitri \u003d mitri;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"     * Given line from file, parses and returns task corresponding to given line.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"     * @param input String to parse into Task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"     * @return Task parsed from input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"     * @throws DateTimeParseException Thrown if DateTime field cannot be parsed properly.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"     * @throws IllegalArgumentException Thrown if line contains errors that show file is corrupted.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"    public Task parseTaskFromFile(String input) throws DateTimeParseException, IllegalArgumentException{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"        String[] parts \u003d input.split(\" \\\\| \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"        Task t;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"            case \"D\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"                t \u003d new Deadline(String.join(\" | \", Arrays.copyOfRange(parts, 2, parts.length-1)), LocalDateTime.parse(parts[parts.length-1]));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varuuuun"},"content":"            case \"E\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varuuuun"},"content":"                t \u003d new Event(String.join(\" | \", Arrays.copyOfRange(parts, 2, parts.length-2)), LocalDateTime.parse(parts[parts.length-2]), LocalDateTime.parse(parts[parts.length-1]));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varuuuun"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varuuuun"},"content":"            default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varuuuun"},"content":"                t \u003d  new Todo(String.join(\" | \", Arrays.copyOfRange(parts, 2, parts.length)));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varuuuun"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varuuuun"},"content":"        if (parts[1].equals(\"1\")){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varuuuun"},"content":"            t.setDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varuuuun"},"content":"        } else{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varuuuun"},"content":"            t.setNotDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varuuuun"},"content":"        return t;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varuuuun"},"content":"     * Parses given command line input into its relevant command and executes it.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varuuuun"},"content":"     * @param input String with command to execute.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varuuuun"},"content":"     * @return 0 if bye received (exit), 1 to continue running chatbot.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varuuuun"},"content":"    public int processInput(String input) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varuuuun"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varuuuun"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varuuuun"},"content":"            return 0;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varuuuun"},"content":"        Commands c;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varuuuun"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varuuuun"},"content":"            c \u003d Commands.getCommand(parts[0]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varuuuun"},"content":"        } catch (IllegalArgumentException e){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varuuuun"},"content":"            return 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varuuuun"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varuuuun"},"content":"            switch (c) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varuuuun"},"content":"                case LIST:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varuuuun"},"content":"                    mitri.list();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varuuuun"},"content":"                case BYE:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varuuuun"},"content":"                    return 0;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varuuuun"},"content":"                case DELETE:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varuuuun"},"content":"                    mitri.delete(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varuuuun"},"content":"                case MARK:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varuuuun"},"content":"                    mitri.mark(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varuuuun"},"content":"                case UNMARK:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"varuuuun"},"content":"                    mitri.unmark(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"varuuuun"},"content":"                case TODO:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"varuuuun"},"content":"                    mitri.addTodo(input.substring(4));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"varuuuun"},"content":"                case DEADLINE:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"varuuuun"},"content":"                    mitri.addDeadline(input.substring(8));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varuuuun"},"content":"                case EVENT:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"varuuuun"},"content":"                    mitri.addEvent(input.substring(5));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varuuuun"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"varuuuun"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"varuuuun"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"You did not provide a readable date/time\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varuuuun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"Not a number. Please give the index of the task!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varuuuun"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"Index out of bounds. Please give the correct index!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varuuuun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"varuuuun"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"varuuuun"},"content":"        return 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varuuuun":121}},{"path":"src/main/java/mitri/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import mitri.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":" * Storage class to deal with file IO.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"public class Storage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"    private File saveFile;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"     * Initialises storage object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"     * @param parser Parser to parse commands read.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"     * @param ui Ui to display messages.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"     * @param taskList List to store tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"    public Storage(Parser parser, Ui ui, TaskList taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"        saveFile \u003d new File(\"data/mitri.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"                Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"        }catch (IOException e){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varuuuun"},"content":"     * Saves tasks by retrieving from task list  and writing to file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varuuuun"},"content":"    public void writeToFile() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varuuuun"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varuuuun"},"content":"            FileWriter fileWriter \u003d new FileWriter(saveFile);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varuuuun"},"content":"            StringBuilder writeStr \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varuuuun"},"content":"            for (int i \u003d0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varuuuun"},"content":"                writeStr.append(taskList.get(i).toSave()).append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varuuuun"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varuuuun"},"content":"            fileWriter.write(writeStr.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varuuuun"},"content":"            fileWriter.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varuuuun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"Could not save tasks to file. \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varuuuun"},"content":"     * Retrieves tasks from saved list and calls parser. Saves returned tasks into task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varuuuun"},"content":"    public void loadFromFile() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varuuuun"},"content":"        try{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varuuuun"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varuuuun"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varuuuun"},"content":"                taskList.add(parser.parseTaskFromFile(fileScanner.nextLine()));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varuuuun"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varuuuun"},"content":"            fileScanner.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varuuuun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varuuuun"},"content":"            //Do nothing - should not reach this section","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varuuuun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"Date/time in wrong format. File may be corrupted.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varuuuun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varuuuun"},"content":"            ui.printError(\"File is corrupted.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varuuuun":83}},{"path":"src/main/java/mitri/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":" * Represents Task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"     * Initialises task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"     * Removes task at specified index of list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"     * @param index Index of task to remove.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"     * @return Removed task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    public Task remove(int index){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"        return taskList.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"     * Gives current size of list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"     * @return Size of list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"    public int size(){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"        return taskList.size();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varuuuun"},"content":"     * Adds task to list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varuuuun"},"content":"     * @param task Task to add to list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varuuuun"},"content":"    public void add(Task task){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varuuuun"},"content":"        taskList.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varuuuun"},"content":"     * Retrieves task at specified index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varuuuun"},"content":"     * @param index Index of task to return.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varuuuun"},"content":"     * @return Task at specified index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varuuuun"},"content":"    public Task get(int index){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varuuuun"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varuuuun"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varuuuun"},"content":"     * Converts task list to string.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varuuuun"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varuuuun"},"content":"     * @return String representation of task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varuuuun"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varuuuun"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varuuuun"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varuuuun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varuuuun"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varuuuun"},"content":"            sb.append(\"\\n\\t\").append(i + 1).append(\". \").append(taskList.get(i));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varuuuun"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varuuuun"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varuuuun":76}},{"path":"src/test/java/mitri/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"    public void parseTaskFromFile_normalInputNotDone_equals(){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"        Parser p \u003d new Parser(null, null);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"        Deadline d \u003d new Deadline(\"test\", LocalDateTime.parse(\"2002-05-05T08:00:00\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"        assertEquals(d, p.parseTaskFromFile(\"D | 0 | test | 2002-05-05T08:00:00\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"    public void parseTaskFromFile_normalInputDone_equals(){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"        Parser p \u003d new Parser(null, null);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"        Deadline d \u003d new Deadline(\"test\", LocalDateTime.parse(\"2002-05-05T08:00:00\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"        d.setDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"        assertEquals(d, p.parseTaskFromFile(\"D | 1 | test | 2002-05-05T08:00:00\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"    public void parseTaskFromFile_badInputLessFields_exceptionThrown() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"        Parser p \u003d new Parser(null, null);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e p.parseTaskFromFile(\"D | 0\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varuuuun"},"content":"    public void parseTaskFromFile_badInputDateTimeFormat_exceptionThrown() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varuuuun"},"content":"        Parser p \u003d new Parser(null, null);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varuuuun"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e p.parseTaskFromFile(\"D | 1 | test | 20-02-2002\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varuuuun":38}},{"path":"src/test/java/mitri/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"package mitri.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"import mitri.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"    public void removeTest_indexWithinSize_noError() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"        list.add(new Todo(\"hello\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"        list.add(new Todo(\"hi\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varuuuun"},"content":"        list.remove(1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varuuuun"},"content":"        assert(list.size() \u003d\u003d 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varuuuun"},"content":"    public void removeTest_tooLargeIndex_exceptionThrown() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varuuuun"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varuuuun"},"content":"        assertThrows(IndexOutOfBoundsException.class, ()-\u003elist.remove(1));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varuuuun"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varuuuun"},"content":"    public void removeTest_tooSmallIndex_exceptionThrown() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varuuuun"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varuuuun"},"content":"        list.add(new Todo(\"hello\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varuuuun"},"content":"        list.add(new Todo(\"hi\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varuuuun"},"content":"        assertThrows(IndexOutOfBoundsException.class, ()-\u003e list.remove(-1));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varuuuun"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varuuuun"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varuuuun"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varuuuun":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"varuuuun"},"content":"todo read book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varuuuun"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varuuuun"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varuuuun"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varuuuun"},"content":"todo join sports club","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varuuuun"},"content":"mark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varuuuun"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varuuuun"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varuuuun"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varuuuun"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varuuuun"},"content":"mark 7","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varuuuun"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varuuuun"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"varuuuun":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varuuuun"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"varuuuun":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varuuuun"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"varuuuun":1,"-":37}}]
