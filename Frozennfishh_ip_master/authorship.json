[{"path":"Placeholder.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"This is a placeholder for branch-Level-7","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"This is another placeholder to ensure Level-7 is merged properly","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    archiveBaseName \u003d \"ekud\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Frozennfishh":28}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"# Ekud User Guide","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"\u003e “I have studied many philosophers and many cats. The wisdom of cats is infinitely superior.” – Hippolyte Taine","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"The new and improved version of Duke, __Ekud__ is:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"- Text-based","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"- Easy to learn","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"- ~~Fast~~ **_ULTRA_** FAST to use \u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"  Steps to download:\u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"1. Download **ekud.jar** from [here](https://github.com/Frozennfishh/ip/releases/tag/v0.1","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"2. Move it to a folder (e.g. Ekud)\u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"3. Open the terminal and navigate to the folder created\u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"4. Run the command `java -jar \"ekud.jar\"`\u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"5. Add your tasks.\u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"6. Let it manage your tasks for you 🐈 \u003c/br\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"   And it is **_FREE_**!","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"\u003e [!NOTE]","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"\u003e If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method: \u003cbr/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"\u003e```ruby","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"\u003epublic class Main {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"\u003e    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"\u003e        new Ekud(\"data/list.txt\").run();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"\u003e    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"\u003e}","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"\u003e```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"## Adding Todos","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"Command: `todo (TASK_NAME)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"Adds a task to the tasklist.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"Example: `deadline homework`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"The bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"Gotcha, Todo task added!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"[T][ ] homework","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"You\u0027re left with 1 tasks left to do!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"## Adding Deadlines","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"Command: `deadline (TASK_NAME) /by (DEADLINE)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"Adds a task with a set deadline.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"Deadline can be given and noted down as a date and time! (In the form `DD/MM/YYYY` or `DD/MM/YY HHMM`)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"Example: `deadline homework /by 25/03/2025 2359`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"The bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"Gotcha, Deadline task added!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"[D][ ] homework (by: Mar 25 2025, 11:59 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"You\u0027re left with 1 tasks left to do!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"## Adding Events","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"Command: `event (TASK_NAME) /from (START_DATE_TIME) /to (END_DATE_TIME)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"Adds a task with a given start and end time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"Start and end times can be given and noted down as a date and time! (In the form `DD/MM/YYYY` or `DD/MM/YY HHMM`)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"Example: `event party /from 26/03/2025 0800 /to 26/03/2025 1600`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"The bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"Gotcha, Event task added!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"[E][ ] party (from: Mar 26 2025, 8:00 am to: Mar 26 2025, 4:00 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"You\u0027re left with 1 tasks left to do!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"## Displaying List","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"Command: `list`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"Displays full list of tasks added","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"With the given above examples and running `list`, the bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"1.[D][ ] homework (by: Mar 25 2025, 11:59 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"2.[T][ ] homework","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"3.[E][ ] party (from: Mar 26 2025, 8:00 am to: Mar 26 2025, 4:00 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"## Deleting tasks","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"Command: `delete (INDEX_NUMBER)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"Deletes task from the list with the given index number.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"With the given above examples and running `delete 2`, the bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"Omgie, removing this task from the list!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"[T][ ] homework","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"You\u0027re left with 2 tasks left to do!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"## Marking and Unmarking tasks","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"Command: `mark (INDEX_NUMBER)` / `unmark (INDEX_NUMBER)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"Marks and unmarks task as being done with the given index number.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"With the given above examples and running `mark 1`, the bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"Yippee marking this task as done!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"[D][X] homework (by: Mar 25 2025, 11:59 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"You\u0027re left with 1 tasks left to do!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"Running `unmark 1`, the bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"Awww marking this task undone :(","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"[D][ ] homework (by: Mar 25 2025, 11:59 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"You\u0027re left with 2 tasks left to do!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"## Finding tasks by keywords","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"Command: `find (STRING)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"Finds task in the list that contains the given `STRING`.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"With the given above examples and running `find home`, the bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"Here are the matching tasks in your list!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"1. [D][ ] homework (by: Mar 25 2025, 11:59 pm)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"## Finding next available free time","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"Command: `freeTime /for HH:MM`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"Finds the next available free time that allows for `HH:MM` amount of free time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"## Finding next available free time on a given date","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"Command: `freeTimeOn (INPUT_DATE) /for HH:MM`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"Finds all available free time that allows for `HH:MM` amount of free time on a given date.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"With the given above examples and running `freeTimeOn 26/03/2025 /for 2:0`, the bot will respond with:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"Here are the time slots that are available on 2025-03-26:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"00:00 to 08:00","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"1600: to 00:00","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"## Features!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"- [x] Managing Tasks","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"- [x] Managing Deadlines, To-dos and Events","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"- [x] Searches Tasks in the list by date and keywords","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"- [x] Searches Free Time slots on any date","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"- [x] Automatically saved and easily exportable","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"- [x] Colour coded messages that change depending on input","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"## Coming Soon!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Frozennfishh"},"content":"- [ ] Sorting by deadline and/or name","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Frozennfishh"},"content":"- [ ] Tagging tasks by types","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"-":16,"Frozennfishh":160}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.gui.EkudApplication;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"public class Launcher {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the file containing task data is not found.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        Application.launch(EkudApplication.class, args);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":20}},{"path":"src/main/java/ekud/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command that clears all tasks from the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a ClearCommand object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input that triggered this command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public ClearCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the clear command by removing all tasks from the task list,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * saving the changes to storage, and returning a confirmation message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The TaskList object that stores the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The Ui object for user interaction (not directly used in this method).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The Storage object responsible for saving the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @return A confirmation message indicating that the task list has been cleared.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Okies, clearing list!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        tasks.clear();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        assert !this.getTasks().isEmpty() : \"List not cleared properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        return \"Okies, clearing list!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":42}},{"path":"src/main/java/ekud/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * Represents a user command in the Ekud task manager.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * This is the base class for all commands, which process and execute different user actions.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"public class Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    private String input;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a command with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user command input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    public Command(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * This method is intended to be overridden by subclasses to define specific command behaviors.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The user interface instance.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating the result of the execution.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        return null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * @return The command input string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"    public String getInput() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        return this.input;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"     * Placeholder method to be overridden by subclasses if needed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * @return A string result (default: {@code null}).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"    public String getString() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        return null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the associated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * @return The task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        return this.tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the storage handler.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     * @return The storage instance.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    public Storage getStorage() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        return this.storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":81}},{"path":"src/main/java/ekud/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    private String task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    private String dueDate;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code DeadlineCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * Parses the input to extract the task description and due date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input containing the task description and due date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"            this.task \u003d temp[0];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"            this.dueDate \u003d temp.length \u003e 1 ? temp[1] : null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command to add a deadline task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * If no input is provided, it returns an error message. If the due date is missing,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * it prompts the user to enter one. Otherwise, the deadline task is added to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list where the deadline will be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for saving the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating the outcome of the command execution.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskNotGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        //No /by detected in input, therefore deadline not given","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"Deadline not given! Try again!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"            return \"Deadline not given! Try again!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getStorage() !\u003d null : \"Storage file does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        return ui.taskAdded(\"Deadline\") + \"\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"                + this.getTasks().add(new Deadline(task, dueDate, 0), this.getStorage());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":63}},{"path":"src/main/java/ekud/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code DeleteCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input specifying the task index to delete.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * If no input is provided, it returns an error message. If the input index is invalid,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * it notifies the user that the task does not exist. Otherwise, the task is deleted.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for saving the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating the result of the deletion.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskNotGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        //checks if the input index is within the range of the tasklist array","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        if (!Parser.isValidIndex(this.getInput(), tasks)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskDoesNotExist();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getStorage() !\u003d null : \"Storage file does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        return ui.delete(tasks, Integer.parseInt(this.getInput()) - 1, storage) + \"\\n\" + tasks.leftCheck();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":52}},{"path":"src/main/java/ekud/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to check for tasks due on a specific date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code DueCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * Parses the input to extract the due date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input specifying the date to check for due tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    public DueCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"        this.dueDate \u003d input \u003d\u003d null ? null : Parser.getDate(this.getInput());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command to check for tasks due on the specified date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * If the date is invalid or missing, an error message is returned.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, it returns the list of tasks due on that date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance (not used in this method).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message showing the tasks due on the given date or an error message if the date is invalid.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"            return ui.invalidDateGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        return this.getTasks().dueCheck(dueDate);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":54}},{"path":"src/main/java/ekud/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    private String task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    private String startDate;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    private String endDate;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code EventCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     * Parses the input to extract the task description, start date, and end date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input specifying the event details.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"            this.task \u003d temp[0];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp2 \u003d temp.length \u003e 1 ? temp[1].split(\" /to \", 2) : null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"            this.startDate \u003d temp2 \u003d\u003d null || temp2.length \u003c\u003d 1 ? null : temp2[0];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"            this.endDate \u003d temp2 !\u003d null \u0026\u0026 temp2.length \u003e 1 ? temp2[1] : null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command to add an event task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * If any required field (task, start date, or end date) is missing, an error message is returned.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the event task is added to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list where the event will be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for saving the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating the outcome of the command execution.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskNotGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"        //no input between /to and /from in input","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"Start date not given\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"            return \"Start date not given\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        //no input after /from input","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"End date not given\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"            return \"End date not given\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getStorage() !\u003d null : \"Storage file does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"        return ui.taskAdded(\"Event\") + \"\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"                + this.getTasks().add(new Event(task, startDate, endDate, 0), this.getStorage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":71}},{"path":"src/main/java/ekud/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code ExitCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * This method returns a farewell message, signaling the termination of the program.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @return A farewell message from the UI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        return ui.goodbye();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":37}},{"path":"src/main/java/ekud/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to search for tasks containing a specific keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code FindCommand} with the given search keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The keyword used to search for tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the find command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * Searches for tasks that contain the given keyword and returns a formatted list of matching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list to search in.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string of matching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        return ui.findTaskPrint(tasks.findTask(this.getInput()));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":39}},{"path":"src/main/java/ekud/command/FindFreeTimesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * The FindFreeTimesCommand class searches for available time slots based on scheduled events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"public class FindFreeTimesCommand extends Command {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private String hoursString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    private String minuteString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    private int minutes \u003d 0;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    private LocalDateTime current;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a FindFreeTimesCommand instance, parsing the input to determine the required free time duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The command input in the format \"/for HH:MM\" specifying the required free duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    public FindFreeTimesCommand(String input) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        //input in form \"/for HH:MM\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp \u003d input.split(\"/for \", 2);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp2 \u003d temp.length \u003e 1 ? temp[1].split(\":\", 2) : null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"            this.hoursString \u003d temp2 \u003d\u003d null || temp2.length \u003c\u003d 1 ? null : temp2[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"            this.minuteString \u003d temp2 !\u003d null \u0026\u0026 temp2.length \u003e 1 ? temp2[1] : null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"            this.minutes +\u003d Parser.hourStringToMinutes(hoursString);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"            this.minutes +\u003d Parser.stringToMinutes(minuteString);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        current \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command to find the next available free time slot.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The TaskList containing scheduled events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The user interface instance for interacting with the user.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage system handling data persistence.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     * @return A message indicating the next available free time slot.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        if (hoursString \u003d\u003d null || !Parser.isInteger(hoursString)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"            return \"Time given is invalid, try again! (Format: HH:MM)\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        if (minuteString \u003d\u003d null || !Parser.isInteger(minuteString)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"            return \"Time given is invalid, try again! (Format: HH:MM)\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cEvent\u003e eventList \u003d tasks.getAllEvents();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"        assert eventList !\u003d null : \"getAllEvents() method failed\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        eventList.sort(Comparator.comparing(Event::getStart));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"        LocalDateTime startFreeTime \u003d current;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"        LocalDateTime endFreeTime \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"        for (Event event : eventList) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"            //If event has been marked done, move to next","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getDone() \u003d\u003d 1) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"                continue;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"            //If event start time is before the end time of previous event,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"            //Move startFreeTime to the end of current event, move to next","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getStart().isBefore(startFreeTime)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"                startFreeTime \u003d event.getEnd();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"                endFreeTime \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"                continue;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"            endFreeTime \u003d event.getStart();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"            if (startFreeTime.until(endFreeTime.plusMinutes(1), ChronoUnit.MINUTES) \u003e\u003d minutes) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"                startFreeTime \u003d event.getEnd();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"                endFreeTime \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"        if (startFreeTime \u003d\u003d current \u0026\u0026 endFreeTime \u003d\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"            return \"You\u0027re free all the way to infinity!\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"        } else if (endFreeTime \u003d\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"            return \"You will only be free after \" + startFreeTime.format(dateTimeFormatter);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"            return \"You will be free from \" + startFreeTime.format(dateTimeFormatter)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"                    + \" to \" + endFreeTime.format(dateTimeFormatter);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":96}},{"path":"src/main/java/ekud/command/FindFreeTimesOnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"import javafx.util.Pair;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":" * The FindFreeTimesOnCommand class is responsible for finding available time slots","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":" * on a specified date based on a user\u0027s scheduled events. It checks for gaps between","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":" * existing events and determines if there is enough continuous free time to accommodate","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":" * a requested duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"public class FindFreeTimesOnCommand extends Command {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    private final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    private LocalDate date;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    private String hoursString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    private String minuteString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    private int minutes \u003d 0;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    private LocalDateTime current;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a FindFreeTimesOnCommand object, parsing the input string for the target date","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * and requested duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The input string in the format \"INPUT_DATE /for HH:MM\".","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    public FindFreeTimesOnCommand(String input) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        //input in format \"INPUT_DATE /for HH:MM\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        if (input !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp \u003d input.split(\" /for \", 2);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            this.date \u003d Parser.getDate(temp[0]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp2 \u003d temp.length \u003e 1 ? temp[1].split(\":\", 2) : null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"            this.hoursString \u003d temp2 \u003d\u003d null || temp2.length \u003c\u003d 1 ? null : temp2[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"            this.minuteString \u003d temp2 !\u003d null \u0026\u0026 temp2.length \u003e 1 ? temp2[1] : null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"            this.minutes +\u003d Parser.hourStringToMinutes(hoursString);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"            this.minutes +\u003d Parser.stringToMinutes(minuteString);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        current \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command to find available time slots on the specified date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks The list of tasks containing scheduled events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui The user interface instance for displaying messages.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for managing saved tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * @return A message containing available time slots or an error message if no suitable slot is found.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        if (hoursString \u003d\u003d null || !Parser.isInteger(hoursString)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"            return \"Time given is invalid, try again! (Format: HH:MM)\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"        if (minuteString \u003d\u003d null || !Parser.isInteger(minuteString)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"            return \"Time given is invalid, try again! (Format: HH:MM)\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cEvent\u003e eventList \u003d tasks.getAllEvents();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        eventList.sort(Comparator.comparing(Event::getStart));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"        LocalDateTime startFreeTime \u003d getStartTime(current, date);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"        LocalDateTime endFreeTime \u003d getEndTime(startFreeTime);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cEvent\u003e involvedEvents \u003d involvedEvents(startFreeTime, endFreeTime, eventList);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"        if (involvedEvents !\u003d null \u0026\u0026 involvedEvents.isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"            return \"This day is completely free, yay!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e markers \u003d","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"                getTimeMarkers(startFreeTime, endFreeTime, involvedEvents);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e res \u003d filterSlots(markers, minutes);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"        if (res \u003d\u003d null || res.isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"            return \"There is not enough time on this day! :(\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"            sb.append(\"Here are the time slots that are avaialable on \").append(date.toString()).append(\":\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"            for (Pair\u003cLocalDateTime, LocalDateTime\u003e slot : res) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"                sb.append(timeDisplay(slot)).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"            return sb.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"     * Determines the start time for free time calculations.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"     * @param current The current date and time.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"     * @param date The target date for checking availability.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"     * @return The starting LocalDateTime for the given date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"    private LocalDateTime getStartTime(LocalDateTime current, LocalDate date) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"        return current.toLocalDate().equals(date)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"                ? LocalDateTime.now() : date.atTime(LocalTime.MIDNIGHT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"     * Determines the end time for free time calculations.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"     * @param t The starting time reference.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"     * @return The end time as midnight of the following day.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"    private LocalDateTime getEndTime(LocalDateTime t) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"        return t.plusDays(1).toLocalDate().atTime(LocalTime.MIDNIGHT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"     * Filters events that overlap with the specified time range.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"     * @param start The start of the free period.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"     * @param end The end of the free period.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"     * @param list The list of scheduled events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"     * @return A list of events that conflict with the free period.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"    private ArrayList\u003cEvent\u003e involvedEvents(LocalDateTime start, LocalDateTime end, ArrayList\u003cEvent\u003e list) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"        assert list !\u003d null : \"List does not exist!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cEvent\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"        for (Event event : list) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"            //if event cover the whole free time, return null and break","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getStart().isBefore(start) \u0026\u0026 event.getEnd().isAfter(end)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"                return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"            //If event ends before startFreeTime, move to next","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getEnd().isBefore(start)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"                continue;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"            //If event starts after endFreeTime, move to next","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getStart().isAfter(end)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"                continue;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"            //If event is marked done, move to next","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getDone() \u003d\u003d 1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"                continue;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"            res.add(event);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"        return res;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"     * Determines available time slots by identifying gaps between events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"     * @param start The starting time of the search.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"     * @param end The ending time of the search.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"     * @param list The list of scheduled events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"     * @return A list of available time slots.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"    private ArrayList\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e getTimeMarkers(LocalDateTime start,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"                                                          LocalDateTime end, ArrayList\u003cEvent\u003e list) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"        if (list \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"            return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cPair\u003cInteger, LocalDateTime\u003e\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"        //1 for starts, 0 for ends","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Frozennfishh"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"        for (Event event : list) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getStart().isBefore(end)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"                temp.add(new Pair\u003c\u003e(1, event.getStart()));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"            if (event.getEnd().isAfter(start)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"                temp.add(new Pair\u003c\u003e(0, event.getEnd()));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"                if (event.getEnd().isBefore(start)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Frozennfishh"},"content":"                    count++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Frozennfishh"},"content":"        temp.sort(Comparator.comparing(Pair::getValue));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Frozennfishh"},"content":"        //Using stack counter method","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Frozennfishh"},"content":"        LocalDateTime freeStartMarker \u003d null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Frozennfishh"},"content":"        for (Pair\u003cInteger, LocalDateTime\u003e marker : temp) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Frozennfishh"},"content":"            //If it\u0027s an end marker","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Frozennfishh"},"content":"            if (marker.getKey() \u003d\u003d 0) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Frozennfishh"},"content":"                count--;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Frozennfishh"},"content":"                assert count \u003e\u003d 0 : \"Something went wrong with stack count\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Frozennfishh"},"content":"                if (count \u003d\u003d 0) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Frozennfishh"},"content":"                    freeStartMarker \u003d marker.getValue();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Frozennfishh"},"content":"            } else if (marker.getKey() \u003d\u003d 1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Frozennfishh"},"content":"                if (count \u003d\u003d 0) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Frozennfishh"},"content":"                    LocalDateTime freeEndMarker \u003d marker.getValue();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Frozennfishh"},"content":"                    if (freeStartMarker !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Frozennfishh"},"content":"                        res.add(new Pair\u003c\u003e(freeStartMarker, freeEndMarker));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Frozennfishh"},"content":"                    } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Frozennfishh"},"content":"                        res.add(new Pair\u003c\u003e(start, freeEndMarker));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Frozennfishh"},"content":"                    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Frozennfishh"},"content":"                    freeStartMarker \u003d null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Frozennfishh"},"content":"                count++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Frozennfishh"},"content":"                assert false : \"Key not valid\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Frozennfishh"},"content":"        if (freeStartMarker !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Frozennfishh"},"content":"            res.add(new Pair\u003c\u003e(freeStartMarker, end));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Frozennfishh"},"content":"        return res;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Frozennfishh"},"content":"     * Filters time slots to only include those that meet the required minimum duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Frozennfishh"},"content":"     * @param list The list of available time slots.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Frozennfishh"},"content":"     * @param minutes The required minimum duration in minutes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Frozennfishh"},"content":"     * @return A filtered list of available time slots that meet the duration criteria.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Frozennfishh"},"content":"    private ArrayList\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e filterSlots(ArrayList\u003cPair\u003cLocalDateTime,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Frozennfishh"},"content":"            LocalDateTime\u003e\u003e list, int minutes) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Frozennfishh"},"content":"        if (list \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Frozennfishh"},"content":"            return null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Frozennfishh"},"content":"        for (Pair\u003cLocalDateTime, LocalDateTime\u003e slot : list) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Frozennfishh"},"content":"            if (slot.getKey().plusMinutes(minutes + 1).isBefore(slot.getValue())) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Frozennfishh"},"content":"                res.add(slot);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Frozennfishh"},"content":"        return res;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Frozennfishh"},"content":"     * Formats a given time slot for display.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Frozennfishh"},"content":"     * @param slot A pair representing the start and end time of a free slot.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the time range of the slot.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Frozennfishh"},"content":"    private String timeDisplay(Pair\u003cLocalDateTime, LocalDateTime\u003e slot) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Frozennfishh"},"content":"        assert slot !\u003d null : \"Pair in array is empty!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Frozennfishh"},"content":"        return slot.getKey().toLocalTime().format(timeFormatter)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Frozennfishh"},"content":"                + \" to \" + slot.getValue().toLocalTime().format(timeFormatter);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":241}},{"path":"src/main/java/ekud/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code ListCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the list command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * If the task list is empty, it returns an appropriate message. Otherwise, it constructs","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * and returns a formatted list of all tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list to retrieve tasks from.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string listing all tasks or a message if the list is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getTasks().isEmpty()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"            return ui.listEmpty();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(i + 1 + \".\" + tasks.get(i).display());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"            sb.append(i + 1).append(\". \").append(tasks.get(i).display()).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":53}},{"path":"src/main/java/ekud/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to mark a task as completed in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code MarkCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input specifying the index of the task to mark as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the mark command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * If the input is missing, it returns an error message. If the input index is invalid,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * it notifies the user that the task does not exist. Otherwise, it marks the task as completed","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * and updates the storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for saving the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating whether the task was successfully marked as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskNotGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        //checks if the input index is within the range of the tasklist array","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        if (!Parser.isValidIndex(this.getInput(), tasks)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskDoesNotExist();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getStorage() !\u003d null : \"Storage file does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        String temp \u003d ui.markDone(this.getTasks(), Integer.parseInt(this.getInput()) - 1);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(this.getTasks());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        return temp;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":54}},{"path":"src/main/java/ekud/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Todo;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to add a to-do task to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code TodoCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input specifying the to-do task description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the to-do command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * If no task description is provided, it returns an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, it adds the to-do task to the task list and updates storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list where the to-do will be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for saving the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating whether the to-do task was successfully added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskNotGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getStorage() !\u003d null : \"Storage file does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        return ui.taskAdded(\"Todo\") + \"\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"                + this.getTasks().add(new Todo(this.getInput(), 0), this.getStorage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":47}},{"path":"src/main/java/ekud/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * Represents an unknown or invalid command entered by the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code UnknownCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The unrecognized user command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    public UnknownCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the unknown command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * This method notifies the user that the entered command is unrecognized.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @return A message indicating that the command is unknown.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        return ui.showUnknown();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":40}},{"path":"src/main/java/ekud/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * Represents a command to unmark a task as incomplete in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code UnmarkCommand} with the given user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user input specifying the index of the task to unmark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        super(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the unmark command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * If the input is missing, it returns an error message. If the input index is invalid,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * it notifies the user that the task does not exist. Otherwise, it marks the task as incomplete","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * and updates storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance for saving the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * @return A response message indicating whether the task was successfully unmarked.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assert tasks !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        if (this.getInput() \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskNotGiven();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        //checks if the input index is within the range of the tasklist array","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        if (!Parser.isValidIndex(this.getInput(), tasks)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"            return ui.taskDoesNotExist();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getTasks() !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        assert this.getStorage() !\u003d null : \"Storage file does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        String temp \u003d ui.markUndone(tasks, Integer.parseInt(this.getInput()) - 1);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        return temp;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":54}},{"path":"src/main/java/ekud/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.gui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":" * Represents a dialog box used in the Ekud GUI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":" * This class is responsible for displaying dialog messages along with a user or system image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":" * It supports flipping the layout to differentiate between user and system responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code DialogBox} with the specified text and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * Loads the corresponding FXML layout and initializes the dialog text and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"     * Flips the dialog box such that the {@code ImageView} appears on the left","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"     * and the text appears on the right.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"    private void flip() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * Creates a dialog box representing the user\u0027s message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     * @param text The text content of the user message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code DialogBox} containing the user’s message and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        switch(commandType) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        case \"ClearCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"clear-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"        case \"DeadlineCommand\", \"EventCommand\", \"TodoCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"        case \"DeleteCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"        case \"DueCommand\", \"FindCommand\", \"ListCommand\", \"FindFreeTimesCommand\", \"FindFreeTimesOnCommand\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"list-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"        case \"MarkCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"mark-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"        case \"UnknownCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"unknown-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"        case \"UnmarkCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"            dialog.getStyleClass().add(\"unmark-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"        case \"ExitCommand\":","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"        default:","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"            assert false : commandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"     * Creates a dialog box representing Ekud\u0027s response.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"     * The layout is flipped to distinguish system responses from user messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"     * @param text The text content of Ekud\u0027s response.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"     * @param img  The image representing Ekud.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code DialogBox} containing Ekud’s response and image.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"    public static DialogBox getEkudDialog(String text, Image img, String commandType) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"        db.flip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"        return db;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":124}},{"path":"src/main/java/ekud/gui/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.gui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.Command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Ekud} class serves as the main controller for the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * It initializes the storage, task list, and user interface, and handles","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * user input processing by parsing and executing commands.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"public class Ekud {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    private String commandType;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an instance of {@code Ekud}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * Initializes the storage, task list, and UI components. Loads existing","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * tasks from the specified file if available.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the specified file does not exist.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    public Ekud(String filePath) throws FileNotFoundException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * Runs the main program logic.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"     * Displays the introduction message, continuously reads user input,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * processes commands, and terminates when the exit command is issued.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    public void run() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        assert taskList !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        ui.intro();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"            Command c \u003d Parser.parse(ui.readLine());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"            commandType \u003d c.getClass().getSimpleName();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"            return;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        ui.goodbye();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the file containing task data is not found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"        new Ekud(\"data/list.txt\").run();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     * Generates a response for the user\u0027s chat input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     * Parses the input and executes the corresponding command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The user\u0027s chat message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"     * @return The response generated by executing the command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"        assert taskList !\u003d null : \"Tasks object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        assert ui !\u003d null : \"UI object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"        assert storage !\u003d null : \"Storage object does not exist\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"        commandType \u003d c.getClass().getSimpleName();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"        return c.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"    public String getCommandType() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(commandType);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"        return commandType;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":96}},{"path":"src/main/java/ekud/gui/EkudApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.gui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * The main entry point for the Ekud GUI application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * This class initializes the JavaFX application, loads the main UI layout,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * and injects an instance of {@code Ekud} into the controller.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"public class EkudApplication extends Application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private final Ekud ekud \u003d new Ekud(\"data/list.txt\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an instance of {@code EkudApplication}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the task data file is not found.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    public EkudApplication() throws FileNotFoundException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * Loads the main window layout from an FXML file, initializes the scene,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * sets the minimum window size, and injects the {@code Ekud} instance","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * into the controller.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(EkudApplication.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEkud(ekud);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"            stage.show();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":55}},{"path":"src/main/java/ekud/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.gui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * Controller for the main GUI of the Ekud application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * This class manages user input and responses, displaying them in a dialog container.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" * It initializes the UI components and handles user interactions.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    private Ekud ekud;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    private Image userImage \u003d new Image(Objects","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"            .requireNonNull(this.getClass().getResourceAsStream(\"/images/cat_right.png\")));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    private Image ekudImage \u003d new Image(Objects","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"            .requireNonNull(this.getClass().getResourceAsStream(\"/images/cat_left.png\")));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * Initializes the GUI components.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * Binds the scroll pane to automatically scroll down as new messages are added to the dialog container.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * Injects the {@code Ekud} instance into the controller.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @param d The {@code Ekud} instance that handles user commands.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public void setEkud(Ekud d) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        ekud \u003d d;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * Handles user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     * Creates two dialog boxes: one displaying the user\u0027s input and the other displaying Ekud\u0027s response.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * The user input field is cleared after processing.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"        String response \u003d ekud.getResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"        String commandType \u003d ekud.getCommandType();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"                DialogBox.getEkudDialog(response, ekudImage, commandType)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":75}},{"path":"src/main/java/ekud/memory/IndexTaskPair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":" * Represents a pairing of an index and a task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * This class is used to associate a task with its position in a list,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * maintaining a 1-based index for user-friendly display.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"public class IndexTaskPair {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    private final int index;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    private final Task task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code IndexTaskPair} with the specified index and task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     * The index is incremented by 1 to follow a 1-based numbering convention.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The zero-based position of the task in a list (converted to 1-based).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * @param task  The task associated with this index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    public IndexTaskPair(int index, Task task) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"        this.index \u003d index + 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representing the task and its assigned index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * The output format is: {@code \"\u003cindex\u003e. \u003ctask display string\u003e\"}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * @return A string representation of the indexed task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    public String indexTaskPairDisplay() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        return index + \". \" + task.display();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":41}},{"path":"src/main/java/ekud/memory/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.File;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * Handles loading and saving task data to a file for persistent storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"public class Storage {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private final File file;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Storage} object and initializes the storage file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * If the file does not exist, it creates the necessary directories and the file itself.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param filePath The file path where task data is stored.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"File list created at: \" + file.getAbsolutePath());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"Saved list exists!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"An error occurred while creating the file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     * Loads tasks from the storage file and returns them as a list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     * @return A list of tasks loaded from the file. Returns an empty list if the file is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the file cannot be found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cTask\u003e loadFileContent() throws FileNotFoundException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Initializing list!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"            String[] line \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"            System.out.print(i + 1 + \". \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"            switch (line[0]) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"            case \"T\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"                list.add(new Todo(line[1], Integer.parseInt(line[2])));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"            case \"D\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"                list.add(new Deadline(line[1], line[2], Integer.parseInt(line[3])));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"            case \"E\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"                list.add(new Event(line[1], line[2], line[3], Integer.parseInt(line[4])));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"            default:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"                assert false : line[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"            i++;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"List is empty!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"            return list;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"     * Saves the current task list to the storage file, overwriting existing content.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"     * @param list The task list to be saved.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"    public void saveToFile(TaskList list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"            for (Task task : list.getList()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"                    writer.write(\"T|\" + task.getName() + \"|\" + task.getDone() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"                } else if (task instanceof Deadline d) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"                    writer.write(\"D|\" + d.getName() + \"|\" + d.getDueString() + \"|\" + d.getDone() + \"\\n\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"                } else if (task instanceof Event e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"                    writer.write(\"E|\" + e.getName() + \"|\" + e.getStart_string() + \"|\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"                            + e.getEnd_string() + \"|\" + e.getDone() + \"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"                } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"                    assert false : \"Invalid data should not be written into file\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"An error occurred while saving to file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":112}},{"path":"src/main/java/ekud/memory/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * Manages a list of tasks, providing methods for adding, removing, and searching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * This class interacts with storage to persist task data.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"public class TaskList {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code TaskList} by loading tasks from storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance used to load tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the storage file is not found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    public TaskList(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"        this.list \u003d storage.loadFileContent();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * Counts and displays the number of incomplete tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * @return A message indicating the number of tasks left to complete.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    public String leftCheck() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        int left \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"            if (task.getDone() \u003d\u003d 0) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"                left +\u003d 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"You\u0027re left with \" + left + \" tasks left to do!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        return \"You\u0027re left with \" + left + \" tasks left to do!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the task list is empty, otherwise {@code false}.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        return list.isEmpty();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"    public int size() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        return list.size();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * @param i The index of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"        return list.get(i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     * Removes all tasks from the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"    public void clear() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"        list.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"     * @return A list containing all tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"        return this.list;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"     * Adds a task to the list, updates storage, and checks remaining tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"     * @param task    The task to add.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance used to save the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"     * @return A message confirming the task addition along with the number of tasks left.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"    public String add(Task task, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"        list.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"        return task.display() + \"\\n\" + this.leftCheck();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"     * Removes a task from the list, updates storage, and checks remaining tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"     * @param index   The index of the task to remove.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance used to save the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"    public void remove(int index, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"        list.remove(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"        this.leftCheck();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"     * Finds tasks that are due on a specific date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"     * Tasks are categorized into \"Undone\" and \"Done\" based on completion status.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"     * @param dueDate The date to check for due tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string listing tasks due on the specified date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"    public String dueCheck(LocalDate dueDate) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cIndexTaskPair\u003e undone \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cIndexTaskPair\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"                //task has no due date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"                if (((Deadline) task).getDue() \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"                //due date does not match input","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"                if (!((Deadline) task).getDue().toLocalDate().equals(dueDate)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"                //sort task to Done and Undone list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"                doneChecker(undone, done, task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"                //task has no due date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"                if (((Event) task).getEnd() \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"                //due date does not match input","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"                if (!((Event) task).getEnd().toLocalDate().equals(dueDate)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"                //sort task to Done and Undone list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"                doneChecker(undone, done, task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"                assert false : task.display();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"        if (undone.isEmpty() \u0026\u0026 done.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"            return \"There is no task due on \" + dueDate + \"!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Here are the tasks that are due on \" + dueDate + \":\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Undone:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"        sb.append(\"Here are the tasks that are due on \").append(dueDate).append(\":\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"        sb.append(\"Undone:\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"        for (IndexTaskPair pair : undone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(pair.indexTaskPairDisplay());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"            sb.append(pair.indexTaskPairDisplay()).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"\\n\" + \"Done:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"        sb.append(\"\\nDone:\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"        for (IndexTaskPair pair : done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Frozennfishh"},"content":"            sb.append(pair.indexTaskPairDisplay()).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Frozennfishh"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Frozennfishh"},"content":"     * Categorizes a task as either undone or done and adds it to the corresponding list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Frozennfishh"},"content":"     * If the task is not completed, it is added to the {@code undone} list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Frozennfishh"},"content":"     * If the task is completed, it is added to the {@code done} list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Frozennfishh"},"content":"     * If the task has an invalid done value, an assertion error is thrown.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Frozennfishh"},"content":"     * @param undone The list of undone tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Frozennfishh"},"content":"     * @param done   The list of completed tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Frozennfishh"},"content":"     * @param task   The task to be categorized.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Frozennfishh"},"content":"    private void doneChecker(ArrayList\u003cIndexTaskPair\u003e undone, ArrayList\u003cIndexTaskPair\u003e done, Task task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Frozennfishh"},"content":"        if (task.getDone() \u003d\u003d 0) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Frozennfishh"},"content":"            undone.add(new IndexTaskPair(list.indexOf(task), task));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Frozennfishh"},"content":"        } else if (task.getDone() \u003d\u003d 1) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Frozennfishh"},"content":"            done.add(new IndexTaskPair(list.indexOf(task), task));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Frozennfishh"},"content":"            assert false : \"Done value for \" + task.display() + \" is invalid\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Frozennfishh"},"content":"     * Searches for tasks that contain a specific keyword in their name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The keyword to search for.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Frozennfishh"},"content":"     * @return A list of tasks that match the search criteria.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cTask\u003e findTask(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : this.getList()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Frozennfishh"},"content":"            if (task.getName().contains(input)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Frozennfishh"},"content":"                output.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Frozennfishh"},"content":"        return output;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cEvent\u003e getAllEvents() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cEvent\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Frozennfishh"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Frozennfishh"},"content":"                res.add((Event) task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Frozennfishh"},"content":"        return res;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":230}},{"path":"src/main/java/ekud/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * Utility class for parsing date and date-time strings into {@code LocalDateTime} or {@code LocalDate} objects.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * Supports multiple date and date-time formats to handle various input styles.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private static final String[] DATE_TIME_PATTERNS \u003d {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        \"d/M/yyyy HHmm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy-MM-dd HH:mm:ss\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy/MM/dd HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMM yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMMM yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"        \"EEE, dd MMM yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"        \"EEEE, dd MMMM yyyy HH:mm\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    };","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    private static final String[] DATE_PATTERNS \u003d {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"        \"d/M/yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        \"dd/MM/yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy-MM-dd\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy/MM/dd\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMM yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMMM yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        \"EEE, dd MMM yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        \"EEEE, dd MMMM yyyy\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    };","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     * Attempts to match the input string against multiple predefined date-time formats.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing succeeds, a corresponding {@code LocalDateTime} object is returned.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, returns {@code null}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The date-time string to parse.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code LocalDateTime} object if parsing is successful, otherwise {@code null}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        assert DATE_TIME_PATTERNS !\u003d null : \"Errpr in loading date time list\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        for (String pattern : DATE_TIME_PATTERNS) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"            try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"                @SuppressWarnings(\"unused\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"                Exception ignored \u003d e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        return null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a date string into a {@code LocalDateTime} object with time set to midnight.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     * Attempts to match the input string against multiple predefined date formats.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing succeeds, the resulting {@code LocalDate} is converted to a {@code LocalDateTime}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     * by setting the time to midnight (00:00).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing fails, returns {@code null}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The date string to parse.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code LocalDateTime} object with time set to midnight if parsing is successful,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"     *         otherwise {@code null}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"    public static LocalDateTime parseDate(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"        assert DATE_PATTERNS !\u003d null : \"Errpr in loading date list\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"        for (String pattern : DATE_PATTERNS) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"            try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"                return LocalDate.parse(input, formatter).atTime(LocalTime.MIDNIGHT);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"                @SuppressWarnings(\"unused\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"                Exception ignored \u003d e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"        return null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":89}},{"path":"src/main/java/ekud/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.ClearCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.Command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.DeadlineCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.DeleteCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.DueCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.EventCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.ExitCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.FindCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.FindFreeTimesCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.FindFreeTimesOnCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.ListCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.MarkCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.TodoCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.UnknownCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"import ekud.command.UnmarkCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":" * Provides utility methods for parsing user input and validating index values within a task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"public class Parser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Parser} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    public Parser() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a user input string and returns the corresponding {@code Command} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * The method extracts the command keyword from the input and maps it to the appropriate command class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * If the command is unrecognized, an {@code UnknownCommand} is returned.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     * @param s The user input string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * @return The corresponding {@code Command} object based on the input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    public static Command parse(String s) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        String[] temp \u003d s.split(\" \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        String command \u003d temp[0];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d temp.length \u003e 1 ? temp[1] : null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        return switch (command) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        case \"bye\" -\u003e new ExitCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        case \"list\" -\u003e new ListCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        case \"clear\" -\u003e new ClearCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        case \"mark\" -\u003e new MarkCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        case \"unmark\" -\u003e new UnmarkCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        case \"todo\" -\u003e new TodoCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        case \"deadline\" -\u003e new DeadlineCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"        case \"event\" -\u003e new EventCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        case \"delete\" -\u003e new DeleteCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        case \"due\" -\u003e new DueCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        case \"find\" -\u003e new FindCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        case \"freeTime\" -\u003e new FindFreeTimesCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        case \"freeTimeOn\" -\u003e new FindFreeTimesOnCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"        default -\u003e new UnknownCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        };","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * Checks whether the given string is a valid index within the provided {@code TaskList}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     * A valid index must be an integer within the bounds of the task list size.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"     * @param s The string representing the index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"     * @param t The {@code TaskList} where the index should exist.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the string is not an integer or exceeds the task list size, otherwise {@code false}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"    public static boolean isValidIndex(String s, TaskList t) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"        assert !t.isEmpty() : \"Task List not given\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"        return isInteger(s) \u0026\u0026 Integer.parseInt(s) \u003c\u003d t.size();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"     * Checks if a given string can be parsed as an integer.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"     * This method attempts to parse the string using {@code Integer.parseInt()}.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing succeeds, it returns {@code true}; otherwise, it catches","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"     * a {@code NumberFormatException} and returns {@code false}.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"     * @param str The string to check.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the string can be parsed as an integer, otherwise {@code false}.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"    public static boolean isInteger(String str) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"            return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"            return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a date string and converts it into a {@code LocalDate} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"     * This method attempts to parse the input using predefined date-time formats.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing as a {@code LocalDateTime} succeeds, it extracts the date portion.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing as a {@code LocalDate} succeeds, it returns the corresponding date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"     * If both attempts fail, {@code null} is returned.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The date string to parse.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code LocalDate} object if parsing is successful, otherwise {@code null}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"    public static LocalDate getDate(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(input) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"            return Objects.requireNonNull(DateTimeParser.parseDateTime(input)).toLocalDate();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(input) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"            return Objects.requireNonNull(DateTimeParser.parseDate(input)).toLocalDate();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"            return null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"     * Converts a string representing minutes into an integer value.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"     * @param minutes A string representing the number of minutes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"     * @return The integer representation of minutes, or 0 if the string is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"    public static int stringToMinutes(String minutes) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"        return minutes !\u003d null \u0026\u0026 Parser.isInteger(minutes)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"                ? Integer.parseInt(minutes) : 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"     * Converts a string representing hours into an integer value of minutes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"     * @param hours A string representing the number of hours.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"     * @return The integer representation of hours converted to minutes, or 0 if the string is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"    public static int hourStringToMinutes(String hours) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"        return hours !\u003d null \u0026\u0026 Parser.isInteger(hours)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"                ? Integer.parseInt(hours) * 60 : 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":145}},{"path":"src/main/java/ekud/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.DateTimeParser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Deadline} class extends {@code Task} and includes a due date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * It supports different date-time formats for parsing and displays the formatted deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private final LocalDateTime due;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private final String dueString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Deadline} task with a specified name, deadline date, and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * The constructor attempts to parse the deadline string into a {@code LocalDateTime}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * If a valid date-time format is found, it is stored in {@code due}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original string is retained.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param task    The name of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param dueDate The due date as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param done    The completion status of the task (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    public Deadline(String task, String dueDate, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        super(task, done);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(dueDate) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"            this.due \u003d DateTimeParser.parseDateTime(dueDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(dueDate) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"            this.due \u003d DateTimeParser.parseDate(dueDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"            this.due \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        this.dueString \u003d dueDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * If the due date was successfully parsed, it is formatted in {@code \"MMM dd yyyy, h:mm a\"} format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original due date string is displayed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        if (due \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"            return \"[D][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName() + \" (by: \" + dueString + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"            DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"            return \"[D][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"                    + \" (by: \" + due.format(outputFormat) + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the original due date string entered by the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * @return The raw due date string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    public String getDueString() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        return this.dueString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the parsed due date as a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     * @return The due date as a {@code LocalDateTime}, or {@code null} if parsing failed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    public LocalDateTime getDue() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        return this.due;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":81}},{"path":"src/main/java/ekud/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.DateTimeParser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Event} class extends {@code Task} and includes start and end date-time information.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * It supports multiple date-time formats and displays formatted event details.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private final String startString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private final String endString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code Event} task with a specified name, start time, end time, and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * The constructor attempts to parse the start and end times using {@code DateTimeParser}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * If a valid format is found, it is stored as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original string input is retained.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @param name  The name of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param start The start date and time as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * @param end   The end date and time as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * @param done  The completion status of the event (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    public Event(String name, String start, String end, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        super(name, done);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        this.startString \u003d start;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        this.endString \u003d end;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(start) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            this.start \u003d DateTimeParser.parseDateTime(start);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(start) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            this.start \u003d DateTimeParser.parseDate(start);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"            this.start \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(end) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"            this.end \u003d DateTimeParser.parseDateTime(end);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(end) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"            this.end \u003d DateTimeParser.parseDate(end);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"            this.end \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representation of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * If the start or end time was successfully parsed, it is formatted in","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     * {@code \"MMM dd yyyy, h:mm a\"} format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original input string is displayed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"        String s \u003d start !\u003d null ? start.format(outputFormat) : this.startString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        String e \u003d end !\u003d null ? end.format(outputFormat) : this.endString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"        return \"[E][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"                + \" (from: \" + s + \" to: \" + e + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the original start time string entered by the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"     * @return The raw start time string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    public String getStart_string() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"        return this.startString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the original end time string entered by the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"     * @return The raw end time string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"    public String getEnd_string() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"        return this.endString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the parsed start time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"     * @return The start time as a {@code LocalDateTime}, or {@code null} if parsing failed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"        return this.start;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the parsed end time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"     * @return The end time as a {@code LocalDateTime}, or {@code null} if parsing failed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"        return this.end;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":109}},{"path":"src/main/java/ekud/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":" * Represents a generic task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Task} class provides the basic functionality for tracking a task\u0027s name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * It serves as the base class for specific task types such as {@code Todo}, {@code Deadline}, and {@code Event}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    private int done;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    private String name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Task} with the specified name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * @param done The completion status (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    public Task(String name, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    public void setDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        this.done \u003d 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    public void setUndone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        this.done \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code 1} if the task is completed, {@code 0} if it is not.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    public int getDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        return this.done;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @return The name or description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public String getName() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        return this.name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     * The output format is: {@code \"[X] Task Name\"} for completed tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * and {@code \"[ ] Task Name\"} for incomplete tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"        return \"[\" + (done \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":69}},{"path":"src/main/java/ekud/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":" * Represents a basic to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":" * A {@code Todo} task has a name and a completion status, but no time constraints.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * It extends the {@code Task} class and overrides the display format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Todo} task with a specified name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     * @param done The completion status of the task (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    public Todo(String name, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        super(name, done);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representation of the to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * The output format is {@code \"[T][X] Task Name\"} for completed tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * and {@code \"[T][ ] Task Name\"} for incomplete tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        return \"[T][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":36}},{"path":"src/main/java/ekud/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * Handles user interaction for the Ekud task manager.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * This class is responsible for reading user input, displaying messages,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * and providing feedback based on user commands.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"public class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Ui} object and initializes a scanner for reading user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    public Ui() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * Reads a line of user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    public String readLine() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a message indicating that the task list is empty.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * @return A message stating that the list is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"    public String listEmpty() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"List is empty! Yippee!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        return \"List is empty! Yippee!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an introduction message when the program starts.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    public void intro() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"                EEEEE K  KK U   U DDD   !","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"                E     KKK   U   U D  D  !","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"                EEEEE K     U   U D   D !","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"                E     KKK   UU UU D  D  \\s","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"                EEEEE K  KK  UUU  DDD   !\"\"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"____________________________\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Hello! I\u0027m\\n\" + logo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"                /|","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"                (^.^7 \\s","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"                |  |\\s","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"                V__,)/","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"                \"\"\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"____________________________\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a goodbye message and terminates the program.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"     * @return A farewell message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    public String goodbye() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"        buffer();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"        System.exit(0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"     * Prints a visual separator for readability in the console.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"    public static void buffer() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"   /\\\\_/\\\\\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"                + \"\u003d (^ v ^) \u003d\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"                + \"  /     \\\\     \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"____________________________\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message when a task does not exist.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"     * @return An error message indicating that the task was not found.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"    public String taskDoesNotExist() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"This task does not exist :( Try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"        return \"This task does not exist :( Try again!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message when no task input is provided.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"     * @return An error message prompting the user to enter a task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"    public String taskNotGiven() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"        return \"No task given, try again!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"     * Marks a task as completed and displays a confirmation message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks The task list containing the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The index of the task to be marked as completed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"     * @return A confirmation message indicating the task has been marked as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"    public String markDone(TaskList tasks, int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"        tasks.get(index).setDone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Yippee marking this task as done!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(tasks.get(index).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"        return \"Yippee marking this task as done!\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"                + tasks.get(index).display() + \"\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"                + tasks.leftCheck();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"     * Marks a task as not completed and displays a confirmation message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks The task list containing the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The index of the task to be marked as not completed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"     * @return A confirmation message indicating the task has been marked as undone.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"    public String markUndone(TaskList tasks, int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"        tasks.get(index).setUndone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Awww marking this task undone :(\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(tasks.get(index).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"        return \"Awww marking this task undone :(\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"                + tasks.get(index).display() + \"\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"                + tasks.leftCheck();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a confirmation message when a task is added.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"     * @param s The type of task that was added (e.g., \"Todo\", \"Deadline\", \"Event\").","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"    public String taskAdded(String s) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Gotcha, \" + s + \" task added!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"        return \"Gotcha, \" + s + \" task added!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"     * Removes a task from the list and displays a confirmation message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The task list containing the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"     * @param index   The index of the task to be deleted.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The storage instance to update the saved task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"     * @return A confirmation message indicating the task has been deleted.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"    public String delete(TaskList tasks, int index, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Omgie, removing this task from the list!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(tasks.get(index).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"        String temp \u003d tasks.get(index).display();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Frozennfishh"},"content":"        tasks.remove(index, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"        return \"Omgie, removing this task from the list! \\n\" + temp;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message for unrecognized commands.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"     * @return An error message indicating the command is unknown.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"    public String showUnknown() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Frozennfishh"},"content":"        return \"I don\u0027t understand ;-; Try again!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Frozennfishh"},"content":"     * Prints and returns a list of tasks that match a given search criteria.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Frozennfishh"},"content":"     * @param list A list of matching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string containing the matching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Frozennfishh"},"content":"    public String findTaskPrint(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Frozennfishh"},"content":"        assert list !\u003d null : \"TaskList object was not created properly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Frozennfishh"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"No related task found in this list :( Try again!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Frozennfishh"},"content":"            return \"No related task found in this list :( Try again!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Frozennfishh"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"Here are the matching tasks in your list!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Frozennfishh"},"content":"            sb.append(\"Here are the matching tasks in your list!\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Frozennfishh"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(i + 1 + \". \" + list.get(i).display());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Frozennfishh"},"content":"                sb.append(i + 1).append(\". \").append(list.get(i).display()).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Frozennfishh"},"content":"            return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message when an invalid date is given.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Frozennfishh"},"content":"     * @return An error message indicating that the date is invalid.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Frozennfishh"},"content":"    public String invalidDateGiven() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Frozennfishh"},"content":"        return \"Invalid date given, try again!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":212}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"         xmlns\u003d\"http://javafx.com/javafx/23.0.1\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"               minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"               wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"            \u003cInsets left\u003d\"7.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"                    right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"            \u003cInsets bottom\u003d\"6.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"                    left\u003d\"6.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"                    right\u003d\"6.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"                    top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"                   fitHeight\u003d\"99.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"                   fitWidth\u003d\"99.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"                   pickOnBounds\u003d\"true\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        \u003cInsets bottom\u003d\"15.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"                left\u003d\"5.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"                right\u003d\"5.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"                top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.effect.InnerShadow?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"            maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"            minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"            prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"            prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"            stylesheets\u003d\"@../css/main.css\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"            xmlns\u003d\"http://javafx.com/javafx/23.0.1\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"            fx:controller\u003d\"ekud.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"   \u003ceffect\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"      \u003cInnerShadow /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"   \u003c/effect\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":60}},{"path":"src/test/java/ekud/EkudTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"public class EkudTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":4}},{"path":"src/test/java/ekud/deadline/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    private Deadline deadlineNoDate \u003d new Deadline(\"task1\", \"tomorrow\", 0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    private Deadline deadlineWithDate \u003d new Deadline(\"task2\", \"25/03/2025 1800\", 0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineNoDateDisplayTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(\"[D][ ] task1 (by: tomorrow)\", deadlineNoDate.display());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineNoDateDoneTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        deadlineNoDate.setDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(\"[D][X] task1 (by: tomorrow)\", deadlineNoDate.display());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineNoDateGetDueStringTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(\"tomorrow\", deadlineNoDate.getDueString());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineNoDateGetDueTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(null, deadlineNoDate.getDue());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineWithDateDisplayTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(\"[D][ ] task2 (by: Mar 25 2025, 6:00 pm)\", deadlineWithDate.display());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineWithDateDoneTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        deadlineWithDate.setDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(\"[D][X] task2 (by: Mar 25 2025, 6:00 pm)\", deadlineWithDate.display());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineWithDateGetDueStringTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(\"25/03/2025 1800\", deadlineWithDate.getDueString());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public void deadlineWithDateGetDueTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2025, 3, 25, 18, 00),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"                deadlineWithDate.getDue());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":57}},{"path":"src/test/java/ekud/memory/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":4}},{"path":"src/test/java/ekud/memory/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":5}},{"path":"src/test/java/ekud/parser/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    //Arbituary numbers used for naming due to the inputs being the same, just in different format","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest1() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"2/12/2019 1800\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"02/12/2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest3() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"2019-12-02 18:00:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest4() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"2019/12/02 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest5() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"02 Dec 2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest6() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"02 December 2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest7() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"Mon, 02 Dec 2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest8() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"                DateTimeParser.parseDateTime(\"Monday, 02 December 2019 18:00\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest1() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"2/12/2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"02/12/2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest3() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"2019-12-02\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest4() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"2019/12/02\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest5() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"02 Dec 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest6() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"02 December 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest7() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"Mon, 02 Dec 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest8() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"Monday, 02 December 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":92}},{"path":"src/test/java/ekud/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    public void isNotIntegerTest1() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(false, Parser.isInteger(\"hi\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    public void isNotIntegerTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(true, Parser.isInteger(\"1\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    public void getDateTest() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDate.of(2019, 12, 2),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"                Parser.getDate(\"02 December 2019\"));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    public void stringToMinutesTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(45, Parser.stringToMinutes(\"45\"));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    public void hourStringToMinutesTest() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(120, Parser.hourStringToMinutes(\"2\"));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"todo eat","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"deadline homework /by Friday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"event party /from 7pm /to 9pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"event","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"event jog /from 2pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"event jog /from 2pm /to 4pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"deadline","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"deadline assignment","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"deadline assignment /by Tuesday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"mark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"mark 4","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"unmark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"java -classpath ..\\bin ekud.gui.Ekud \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Frozennfishh":1}},{"path":"text-ui-test/src/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"public class Main {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Hello world!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":5}}]
