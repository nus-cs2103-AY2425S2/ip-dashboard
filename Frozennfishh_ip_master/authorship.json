[{"path":"Placeholder.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"This is a placeholder for branch-Level-7","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"This is another placeholder to ensure Level-7 is merged properly","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    mainClass.set(\"Ekud\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"    archiveBaseName \u003d \"ekud\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Frozennfishh":30}},{"path":"src/main/java/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Command;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Ekud} class is the main entry point for the application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * It initializes the storage, task list, and user interface,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * and handles the main program loop.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"public class Ekud {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an instance of {@code Ekud}.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the file specified by {@code filePath} is not found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    public Ekud(String filePath) throws FileNotFoundException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * Runs the main program loop.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * - Displays the introduction message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * - Reads user input and executes commands.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * - Terminates when the exit command is issued.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    public void run() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        ui.intro();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"            Command c \u003d new Command(ui.readLine());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        ui.goodbye();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the file containing task data is not found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        new Ekud(\"data/list.txt\").run();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":57}},{"path":"src/main/java/ekud/memory/IndexTaskPair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":" * Represents a pair of an index and a task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * This class is used to associate a task with its position in a list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"public class IndexTaskPair {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"    private int index;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    private final Task task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code IndexTaskPair} with a given index and task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * The index is incremented by 1 to ensure it is **1-based**.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The position of the task in a list (0-based index, incremented by 1).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * @param task  The task associated with this index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    public IndexTaskPair(int index, Task task) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"        this.index \u003d index + 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * Displays the task with its assigned index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * Prints the task in the format: {@code \"\u003cindex\u003e. \u003ctask display string\u003e\"}.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    public void indexTaskPairDisplay() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(index + \". \" + task.display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":32}},{"path":"src/main/java/ekud/memory/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.File;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Storage} class handles loading and saving task data to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" * It ensures that the file exists and maintains task persistence.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"public class Storage {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private File file;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Storage} object and initializes the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * - Creates parent directories if they do not exist.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * - Creates a new file if it does not already exist.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param filePath The path of the file where task data is stored.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"File list created at: \" + file.getAbsolutePath());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"Saved list exists!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"An error occurred while creating the file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     * Loads the content of the task file and initializes a list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing all loaded tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     *         Returns {@code null} if the file is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the file cannot be found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cTask\u003e loadFileContent() throws FileNotFoundException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Initializing list!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"            String[] line \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"            System.out.print(i + 1 + \". \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"            switch (line[0]) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"            case \"T\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"                list.add(new Todo(line[1], Integer.parseInt(line[2])));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"            case \"D\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"                list.add(new Deadline(line[1], line[2], Integer.parseInt(line[3])));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"            case \"E\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"                list.add(new Event(line[1], line[2], line[3], Integer.parseInt(line[4])));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"            default:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"            i++;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"List is empty!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"            return list;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"     * Saves the current task list to the file, overwriting the existing content.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"     * @param list The {@code TaskList} containing tasks to be saved.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"    public void saveToFile(TaskList list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"            for (Task task : list.getList()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"                    writer.write(\"T|\" + task.getName() + \"|\" + task.getDone() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"                } else if (task instanceof Deadline d) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"                    writer.write(\"D|\" + d.getName() + \"|\" + d.getDue_string() + \"|\" + d.getDone() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"                } else if (task instanceof Event e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"                    writer.write(\"E|\" + e.getName() + \"|\" + e.getStart_string() + \"|\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"                            + e.getEnd_string() + \"|\" + e.getDone() + \"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"An error occurred while saving to file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":110}},{"path":"src/main/java/ekud/memory/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * The {@code TaskList} class manages adding, removing, and checking tasks,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * as well as interacting with the storage system.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"public class TaskList {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code TaskList} object by loading tasks from storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The {@code Storage} instance to load tasks from.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * @throws FileNotFoundException If the storage file is not found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    public TaskList(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"        this.list \u003d storage.loadFileContent();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * Checks how many tasks are left to complete and prints the count.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    public void leftCheck() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        int left \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"            if (task.getDone() \u003d\u003d 0) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"                left +\u003d 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"You\u0027re left with \" + left + \" tasks left to do!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the task list is empty, otherwise {@code false}.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        return list.isEmpty();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    public int size() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        return list.size();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves a task at a specified index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     * @param i The index of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * @return The {@code Task} at the given index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"        return list.get(i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"     * Clears all tasks from the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    public void clear() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"        list.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing all tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"        return this.list;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"     * Adds a task to the list, updates storage, and checks remaining tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The {@code Storage} instance used to save the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"    public void add(Task task, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"        list.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"        this.leftCheck();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"     * Removes a task from the list, updates storage, and checks remaining tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The {@code Storage} instance used to save the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"    public void remove(int index, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"        list.remove(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"        this.leftCheck();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"     * Checks for tasks that are due on a specific date and prints them.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"     * Prints list of tasks that are due on specified date.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"     * Split by done and undone tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"     * @param dueDate The {@code LocalDate} to check for due tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"    public void dueCheck(LocalDate dueDate) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cIndexTaskPair\u003e undone \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cIndexTaskPair\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"                if (((Deadline) task).getDue() \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"                if (((Deadline) task).getDue().toLocalDate().equals(dueDate)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"                    if (task.getDone() \u003d\u003d 0) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"                        undone.add(new IndexTaskPair(list.indexOf(task), task));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"                    } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"                        done.add(new IndexTaskPair(list.indexOf(task), task));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"                if (((Event) task).getEnd() \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"                if (((Event) task).getEnd().toLocalDate().equals(dueDate)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"                    if (task.getDone() \u003d\u003d 0) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"                        undone.add(new IndexTaskPair(list.indexOf(task), task));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"                    } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"                        done.add(new IndexTaskPair(list.indexOf(task), task));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Here are the tasks that are due on \" + dueDate + \":\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Undone:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"        for (IndexTaskPair pair : undone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"            pair.indexTaskPairDisplay();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"\\n\" + \"Done:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"        for (IndexTaskPair pair : done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"            pair.indexTaskPairDisplay();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"     * Searches for tasks that contain a specific keyword in their name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"     * This method iterates through the task list and returns a list of tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"     * whose names contain the given input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The keyword to search for within task names.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing tasks that match the search criteria.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"     *         Returns an empty list if no matching tasks are found.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"    public ArrayList\u003cTask\u003e findTask(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"        for (Task task : this.getList()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Frozennfishh"},"content":"            if (task.getName().contains(input)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"                output.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Frozennfishh"},"content":"        return output;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":180}},{"path":"src/main/java/ekud/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * The {@code DateTimeParser} class provides methods for parsing date and time strings","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * into {@code LocalDateTime} or {@code LocalDate} objects.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * It supports multiple date and date-time formats to accommodate various input formats.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private static final String[] DATE_TIME_PATTERNS \u003d {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        \"d/M/yyyy HHmm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy-MM-dd HH:mm:ss\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy/MM/dd HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMM yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMMM yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"        \"EEE, dd MMM yyyy HH:mm\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"        \"EEEE, dd MMMM yyyy HH:mm\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    };","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    private static final String[] DATE_PATTERNS \u003d {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        \"d/M/yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"        \"dd/MM/yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy-MM-dd\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        \"yyyy/MM/dd\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMM yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        \"dd MMMM yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        \"EEE, dd MMM yyyy\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        \"EEEE, dd MMMM yyyy\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    };","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * The method iterates through an array of predefined date-time patterns.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     * If a pattern matches, the corresponding {@code LocalDateTime} object is returned.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"     * If no patterns match, {@code null} is returned.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The date-time string to be parsed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code LocalDateTime} object if parsing succeeds, otherwise {@code null}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        for (String pattern : DATE_TIME_PATTERNS) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"            try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"                @SuppressWarnings(\"unused\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"                Exception ignored \u003d e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"        return null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a date string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     * The method iterates through an array of predefined date patterns.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * If a pattern matches, the corresponding {@code LocalDate} object is created and","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     * then converted into {@code LocalDateTime} by setting the time to midnight.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     * If no patterns match, {@code null} is returned.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The date string to be parsed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code LocalDateTime} object with time set to midnight if parsing succeeds, otherwise {@code null}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"    public static LocalDateTime parseDate(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"        for (String pattern : DATE_PATTERNS) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"            try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"                return LocalDate.parse(input, formatter).atTime(LocalTime.MIDNIGHT);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"                @SuppressWarnings(\"unused\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"                Exception ignored \u003d e;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        return null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":87}},{"path":"src/main/java/ekud/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Parser} class provides utility methods for parsing user input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * and validating index values within a task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"public class Parser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Parser} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public Parser() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * Checks whether the given string is a valid index within the provided {@code TaskList}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * @param s The string to check.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * @param t The {@code TaskList} where the index should exist.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the string is not an integer or exceeds the task list size, otherwise {@code false}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    public static boolean isValidIndex(String s, TaskList t) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"        return isNotInteger(s, 10) || Integer.parseInt(s) \u003e t.size();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * Determines whether a given string is not a valid integer in the specified radix.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     * @param s The string to check.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"     * @param radix The numerical base (e.g., 10 for decimal).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the string is not a valid integer, otherwise {@code false}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    public static boolean isNotInteger(String s, int radix) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"            if (i \u003d\u003d 0 \u0026\u0026 s.charAt(i) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"                if (s.length() \u003d\u003d 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"                    return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"                } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"                    continue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"            if (Character.digit(s.charAt(i), radix) \u003c 0) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"                return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * Parses a date string and converts it into a {@code LocalDate} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     * This method attempts to parse the input using predefined date-time patterns.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing as a {@code LocalDateTime} succeeds, it extracts the date portion.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     * If parsing as a {@code LocalDate} succeeds, it returns the corresponding date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     * If both attempts fail, {@code null} is returned.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     * @param input The date string to parse.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * @return A {@code LocalDate} object if parsing is successful, otherwise {@code null}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    public static LocalDate getDate(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(input) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"            return Objects.requireNonNull(DateTimeParser.parseDateTime(input)).toLocalDate();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(input) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"            return Objects.requireNonNull(DateTimeParser.parseDate(input)).toLocalDate();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"            return null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":78}},{"path":"src/main/java/ekud/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.DateTimeParser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Deadline} class extends {@code Task} and includes a due date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * It supports different date-time formats for parsing and displays the formatted deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private final LocalDateTime due;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private final String dueString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Deadline} task with a specified name, deadline date, and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * The constructor attempts to parse the deadline string into a {@code LocalDateTime}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * If a valid date-time format is found, it is stored in {@code due}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original string is retained.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * @param task    The name of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * @param dueDate The due date as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * @param done    The completion status of the task (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    public Deadline(String task, String dueDate, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"        super(task, done);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(dueDate) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"            this.due \u003d DateTimeParser.parseDateTime(dueDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(dueDate) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"            this.due \u003d DateTimeParser.parseDate(dueDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"            this.due \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"        this.dueString \u003d dueDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     * If the due date was successfully parsed, it is formatted in {@code \"MMM dd yyyy, h:mm a\"} format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original due date string is displayed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        if (due \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"            return \"[D][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName() + \" (by: \" + dueString + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"            DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"            return \"[D][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"                    + \" (by: \" + due.format(outputFormat) + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the original due date string entered by the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"     * @return The raw due date string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    public String getDue_string() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        return this.dueString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the parsed due date as a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     * @return The due date as a {@code LocalDateTime}, or {@code null} if parsing failed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    public LocalDateTime getDue() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        return this.due;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":81}},{"path":"src/main/java/ekud/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.DateTimeParser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Event} class extends {@code Task} and includes start and end date-time information.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * It supports multiple date-time formats and displays formatted event details.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    private final String startString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    private final String endString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs an {@code Event} task with a specified name, start time, end time, and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * The constructor attempts to parse the start and end times using {@code DateTimeParser}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * If a valid format is found, it is stored as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original string input is retained.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @param name  The name of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param start The start date and time as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     * @param end   The end date and time as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * @param done  The completion status of the event (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    public Event(String name, String start, String end, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        super(name, done);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        this.startString \u003d start;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        this.endString \u003d end;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(start) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"            this.start \u003d DateTimeParser.parseDateTime(start);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(start) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            this.start \u003d DateTimeParser.parseDate(start);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"            this.start \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        if (DateTimeParser.parseDateTime(end) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"            this.end \u003d DateTimeParser.parseDateTime(end);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        } else if (DateTimeParser.parseDate(end) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"            this.end \u003d DateTimeParser.parseDate(end);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"            this.end \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representation of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * If the start or end time was successfully parsed, it is formatted in","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     * {@code \"MMM dd yyyy, h:mm a\"} format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the original input string is displayed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"        String s \u003d start !\u003d null ? start.format(outputFormat) : this.startString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        String e \u003d end !\u003d null ? end.format(outputFormat) : this.endString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"        return \"[E][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"                + \" (from: \" + s + \" to: \" + e + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the original start time string entered by the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"     * @return The raw start time string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    public String getStart_string() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"        return this.startString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the original end time string entered by the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"     * @return The raw end time string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"    public String getEnd_string() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"        return this.endString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the parsed end time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"     * @return The end time as a {@code LocalDateTime}, or {@code null} if parsing failed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"        return this.end;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":101}},{"path":"src/main/java/ekud/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":" * Represents a generic task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Task} class provides the basic functionality for tracking a task\u0027s name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * It serves as the base class for specific task types such as {@code Todo}, {@code Deadline}, and {@code Event}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    private int done;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    private String name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Task} with the specified name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"     * @param done The completion status (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    public Task(String name, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    public void setDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        this.done \u003d 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    public void setUndone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        this.done \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code 1} if the task is completed, {@code 0} if it is not.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    public int getDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        return this.done;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     * @return The name or description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public String getName() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        return this.name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     * The output format is: {@code \"[X] Task Name\"} for completed tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"     * and {@code \"[ ] Task Name\"} for incomplete tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"        return \"[\" + (done \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":69}},{"path":"src/main/java/ekud/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":" * Represents a basic to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":" * A {@code Todo} task has a name and a completion status, but no time constraints.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":" * It extends the {@code Task} class and overrides the display format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Todo} task with a specified name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"     * @param done The completion status of the task (1 for done, 0 for not done).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    public Todo(String name, int done) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"        super(name, done);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"     * Returns a formatted string representation of the to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * The output format is {@code \"[T][X] Task Name\"} for completed tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * and {@code \"[T][ ] Task Name\"} for incomplete tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     * @return A formatted string representing the to-do task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public String display() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        return \"[T][\" + (this.getDone() \u003d\u003d 1 ? \"X\" : \" \") + \"] \" + this.getName();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":36}},{"path":"src/main/java/ekud/ui/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * Represents a user command in the Ekud task manager.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Command} class processes and executes different types of user commands,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" * including adding, marking, deleting, and listing tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"public class Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    private String command;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    private String input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Command} object from the user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     * The first element of the input array is treated as the command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"     * If there are additional elements, they are stored as the input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @param input A string array containing the command and optional arguments.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public Command(String[] input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        this.command \u003d input[0];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        this.input \u003d input.length \u003e 1 ? input[1] : null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     * Executes the command based on its type.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"     * The method processes various commands, such as:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code bye} - Exits the program.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code list} - Displays all tasks.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code clear} - Clears all tasks from the list.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code mark} - Marks a task as completed.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code unmark} - Unmarks a completed task.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code todo} - Adds a new to-do task.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code deadline} - Adds a deadline task with a due date.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code event} - Adds an event task with a start and end date.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code delete} - Removes a task from the list.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003e{@code due} - Displays tasks due on a specific date.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"     *     \u003cli\u003eOther inputs are treated as unknown commands.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The {@code TaskList} where tasks are stored.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"     * @param ui      The {@code Ui} instance for user interaction.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The {@code Storage} instance for saving tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"        switch (command) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        case \"bye\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"            isExit \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"        case \"list\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"                ui.listEmpty();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"                    System.out.println(i + 1 + \".\" + tasks.get(i).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        case \"clear\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"Okies, clearing list!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"            tasks.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"        case \"mark\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"            if (Parser.isValidIndex(input, tasks)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskDoesNotExist();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"                ui.markDone(tasks, Integer.parseInt(input) - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"        case \"unmark\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"            if (Parser.isValidIndex(input, tasks)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskDoesNotExist();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"                ui.markUndone(tasks, Integer.parseInt(input) - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"        case \"todo\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"            ui.taskAdded(\"Todo\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"            tasks.add(new Todo(input, 0), storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"        case \"deadline\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"            if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"Deadline not given! Try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskAdded(\"Deadline\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"                tasks.add(new Deadline(temp[0], temp[1], 0), storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"        case \"event\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"            String[] temp \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"            if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(\"Start time not given! Try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"                String[] temp2 \u003d temp[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"                if (temp2.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"                    System.out.println(\"End time not given! Try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"                } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"                    ui.taskAdded(\"Event\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"                    tasks.add(new Event(temp[0], temp2[0], temp2[1], 0), storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"        case \"delete\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Frozennfishh"},"content":"            if (Parser.isValidIndex(input, tasks)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskDoesNotExist();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"                ui.delete(tasks, Integer.parseInt(input) - 1, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Frozennfishh"},"content":"        case \"due\": {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"            LocalDate dueDate \u003d Parser.getDate(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Frozennfishh"},"content":"            if (input \u003d\u003d null || dueDate \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Frozennfishh"},"content":"                ui.taskNotGiven();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Frozennfishh"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Frozennfishh"},"content":"            tasks.dueCheck(dueDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Frozennfishh"},"content":"        case \"find\": {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Frozennfishh"},"content":"            ui.findTaskPrint(tasks.findTask(input));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Frozennfishh"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Frozennfishh"},"content":"        default: ui.unknown();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Frozennfishh"},"content":"        ui.buffer();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Frozennfishh"},"content":"     * Checks if the current command is an exit command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Frozennfishh"},"content":"     * @return {@code true} if the command is \"bye\", otherwise {@code false}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Frozennfishh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Frozennfishh"},"content":"        return this.isExit;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":201}},{"path":"src/main/java/ekud/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import ekud.memory.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import ekud.tasks.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":" * Handles user interaction for the Ekud task manager.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":" * The {@code Ui} class is responsible for reading user input, displaying messages,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":" * and providing feedback based on user commands.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"public class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"     * Constructs a {@code Ui} object and initializes a {@code Scanner} for user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    public Ui() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"     * Reads a line of user input and splits it into a command and optional arguments.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"     * @return A string array where the first element is the command and the second (if present) is the argument.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public String[] readLine() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        return scanner.nextLine().split(\" \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a message indicating that the task list is empty.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    public void listEmpty() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"List is empty! Yippee!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an introduction message when the program starts.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    public void intro() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"                EEEEE K  KK U   U DDD   !","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"                E     KKK   U   U D  D  !","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"                EEEEE K     U   U D   D !","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"                E     KKK   UU UU D  D  \\s","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"                EEEEE K  KK  UUU  DDD   !\"\"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"____________________________\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Hello! I\u0027m\\n\" + logo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"                /|","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"                (^.^7 \\s","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"                |  |\\s","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"                V__,)/","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"                \"\"\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"____________________________\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a goodbye message and exits the program.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"    public void goodbye() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"        buffer();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"        System.exit(0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a visual separator to improve readability in the console.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"    public void buffer() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"   /\\\\_/\\\\\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"                + \"\u003d (^ v ^) \u003d\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"                + \"  /     \\\\     \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"____________________________\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message when a task does not exist.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"    public void taskDoesNotExist() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"This task does not exist :( Try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message when no task input is provided.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"    public void taskNotGiven() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"No task given, try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"     * Marks a task as completed, displays a confirmation message, and updates the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks The {@code TaskList} containing the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The index of the task to mark as completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"    public void markDone(TaskList tasks, int index) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"        tasks.get(index).setDone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Yippee marking this task as done!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(tasks.get(index).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Frozennfishh"},"content":"        tasks.leftCheck();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Frozennfishh"},"content":"     * Marks a task as not completed, displays a confirmation message, and updates the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks The {@code TaskList} containing the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Frozennfishh"},"content":"     * @param index The index of the task to mark as not completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Frozennfishh"},"content":"    public void markUndone(TaskList tasks, int index) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Frozennfishh"},"content":"        tasks.get(index).setUndone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Awww marking this task undone :(\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(tasks.get(index).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Frozennfishh"},"content":"        tasks.leftCheck();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Frozennfishh"},"content":"     * Displays a confirmation message when a task is added.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Frozennfishh"},"content":"     * @param s The type of task that was added (e.g., \"Todo\", \"Deadline\", \"Event\").","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Frozennfishh"},"content":"    public void taskAdded(String s) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Gotcha, \" + s + \" task added!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Frozennfishh"},"content":"     * Removes a task from the list and displays a confirmation message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"     * @param tasks   The {@code TaskList} containing the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"     * @param index   The index of the task to be deleted.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"     * @param storage The {@code Storage} instance to update the saved task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Frozennfishh"},"content":"    public void delete(TaskList tasks, int index, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Omgie, removing this task from the list!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(tasks.get(index).display());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"        tasks.remove(index, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Frozennfishh"},"content":"     * Displays an error message for unrecognized commands.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Frozennfishh"},"content":"    public void unknown() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"I don\u0027t understand ;-; Try again!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Frozennfishh"},"content":"     * Prints a list of tasks that match a given search criteria.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Frozennfishh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Frozennfishh"},"content":"     * If no matching tasks are found, an appropriate message is displayed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Frozennfishh"},"content":"     * Otherwise, the method prints all matching tasks in a numbered format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Frozennfishh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Frozennfishh"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Frozennfishh"},"content":"     * @param list An {@code ArrayList\u003cTask\u003e} containing the matching tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Frozennfishh"},"content":"    public void findTaskPrint(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Frozennfishh"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"No related task found in this list :( Try again!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Frozennfishh"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Frozennfishh"},"content":"            System.out.println(\"Here are the matching tasks in your list!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Frozennfishh"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Frozennfishh"},"content":"                System.out.println(i + 1 + \". \" + list.get(i).display());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Frozennfishh"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":174}},{"path":"src/test/java/ekud/EkudTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"public class EkudTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":4}},{"path":"src/test/java/ekud/memory/IndexTaskPairTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"public class IndexTaskPairTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"    public void dummyTest() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    public void dummyTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":17}},{"path":"src/test/java/ekud/memory/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":4}},{"path":"src/test/java/ekud/memory/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.memory;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":5}},{"path":"src/test/java/ekud/parser/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest1() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"2/12/2019 1800\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"02/12/2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest3() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"2019-12-02 18:00:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest4() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"2019/12/02 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest5() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"02 Dec 2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest6() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"02 December 2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest7() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00), DateTimeParser.parseDateTime(\"Mon, 02 Dec 2019 18:00\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTimeTest8() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 18, 00),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"                DateTimeParser.parseDateTime(\"Monday, 02 December 2019 18:00\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest1() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"2/12/2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"02/12/2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest3() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"2019-12-02\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest4() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"2019/12/02\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest5() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"02 Dec 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest6() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"02 December 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest7() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"Mon, 02 Dec 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDateTest8() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDateTime.of(2019, 12, 2, 00, 00), DateTimeParser.parseDate(\"Monday, 02 December 2019\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":91}},{"path":"src/test/java/ekud/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"package ekud.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    public void isNotIntegerTest1() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(true, Parser.isNotInteger(\"hi\", 10));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"    public void isNotIntegerTest2() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(false, Parser.isNotInteger(\"1\", 10));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    public void getDateTest() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(LocalDate.of(2019, 12, 2), Parser.getDate(\"02 December 2019\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"todo eat","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"deadline homework /by Friday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"event party /from 7pm /to 9pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"event","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"event jog /from 2pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"event jog /from 2pm /to 4pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"deadline","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"deadline assignment","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"deadline assignment /by Tuesday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"mark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"mark 4","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"unmark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"java -classpath ..\\bin Ekud \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Frozennfishh":1}},{"path":"text-ui-test/src/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Frozennfishh"},"content":"public class Main {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"        System.out.println(\"Hello world!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Frozennfishh":5}}]
