[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"# TaskBuddy User Guide","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":"TaskBuddy is a chatbot for managing tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"carineang":2,"-":26}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":" * Represents a deadline task with a description and a specific deadline time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"carineang"},"content":"     * Constructs a Deadline object with a description and a deadline time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"carineang"},"content":"     * @param description A description of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"carineang"},"content":"     * @param deadline The deadline time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"carineang"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"carineang"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"carineang"},"content":"        this.deadline \u003d parseDateTime(deadline);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"carineang"},"content":"     * Parses a string into a LocalDateTime object using a specific format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"carineang"},"content":"     * @param input A string representing the date and time of the deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"carineang"},"content":"     * @return A LocalDateTime object representing the parsed deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"carineang"},"content":"    private LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"carineang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"carineang"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"carineang"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"carineang"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"carineang"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"carineang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"carineang"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"carineang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(outputFormatter) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"carineang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":42}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":" * Represents an event task with a description and a start and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"carineang"},"content":"     * Constructs an Event object with a description and start and end times.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"carineang"},"content":"     * @param description A description of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"carineang"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"carineang"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"carineang"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"carineang"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"carineang"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"carineang"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"carineang"},"content":"     * Parses a string into a LocalDateTime object using a specific format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"carineang"},"content":"     * @param input A string representing the date and time in the format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"carineang"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"carineang"},"content":"    private LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"carineang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"carineang"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"carineang"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"carineang"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"carineang"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"carineang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"carineang"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"carineang"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(outputFormatter) + \" to: \" + to.format(outputFormatter) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"carineang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":45}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":" * An abstract Task class meant for different task types and their completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":"     * Constructs a Task object with a given description. Initially, the task is marked as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"carineang"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"carineang"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"carineang"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"carineang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"carineang"},"content":"     * Returns the status icon of the task based on its completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"carineang"},"content":"     * If the task is completed, it returns \"1\", otherwise \"0\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"carineang"},"content":"     * @return A string representing the completion status icon of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"carineang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"carineang"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"carineang"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"carineang"},"content":"     * After calling this method, the task will be considered completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"carineang"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"carineang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"carineang"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"carineang"},"content":"     * After calling this method, the task will be considered not completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"carineang"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"carineang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"carineang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"carineang"},"content":"     * @return A string representation of the task, in the format \"[status] description\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"carineang"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"carineang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"carineang"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"carineang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":53}},{"path":"src/main/java/TaskBuddy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":" * TaskBuddy task management chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"public class TaskBuddy {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"carineang"},"content":"     * Main entry point for TaskBuddy chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"carineang"},"content":"     * User can interact with the app by entering commands through the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"carineang"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"carineang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"carineang"},"content":"        String indent \u003d \"   \";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"carineang"},"content":"        // Load tasks from text file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"carineang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d loadTasks(indent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"carineang"},"content":"        System.out.println(\"Hello! I\u0027m TaskBuddy\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"carineang"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"carineang"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"carineang"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"carineang"},"content":"            try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"carineang"},"content":"                String userInput \u003d sc.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"carineang"},"content":"                // Split the input into 2 parts","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"carineang"},"content":"                String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"carineang"},"content":"                String command \u003d inputParts[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"carineang"},"content":"                switch (command) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"carineang"},"content":"                    // List all tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"carineang"},"content":"                    case \"list\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"carineang"},"content":"                        listTasks(tasks, indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"carineang"},"content":"                    // Delete a task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"carineang"},"content":"                    case \"delete\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"carineang"},"content":"                        deleteTask(tasks, inputParts, indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"carineang"},"content":"                    // Mark this task as completed","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"carineang"},"content":"                    case \"mark\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"carineang"},"content":"                        markTask(tasks, inputParts, indent, true);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"carineang"},"content":"                    // Mark this task as not completed","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"carineang"},"content":"                    case \"unmark\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"carineang"},"content":"                        markTask(tasks, inputParts, indent, false);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"carineang"},"content":"                    // To-Do tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"carineang"},"content":"                    case \"todo\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"carineang"},"content":"                        addTodoTask(tasks, inputParts, indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"carineang"},"content":"                    // Deadline tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"carineang"},"content":"                    case \"deadline\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"carineang"},"content":"                        addDeadlineTask(tasks, inputParts, indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"carineang"},"content":"                    // Event tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"carineang"},"content":"                    case \"event\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"carineang"},"content":"                        addEventTask(tasks, inputParts, indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"carineang"},"content":"                        break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"carineang"},"content":"                    // Bye to exit","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"carineang"},"content":"                    case \"bye\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"carineang"},"content":"                        System.out.println(indent + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"carineang"},"content":"                        return;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"carineang"},"content":"                    // Invalid commands","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"carineang"},"content":"                    default:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"carineang"},"content":"                        throw new TaskBuddyException(\"Invalid command. Please try again.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"carineang"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"carineang"},"content":"            } catch (TaskBuddyException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"carineang"},"content":"                System.out.println(indent + e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"carineang"},"content":"     * Lists all tasks currently saved in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks to be displayed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"carineang"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e tasks, String indent) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"carineang"},"content":"        System.out.println(indent + \"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"carineang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"carineang"},"content":"     * Deletes a task from the task list based on the task number provided.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"carineang"},"content":"     * If the task number is invalid, a TaskBuddyException is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"carineang"},"content":"     * @param inputParts The user input parts, where the second part is the task number.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"carineang"},"content":"     * @throws TaskBuddyException If the task number is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"carineang"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] inputParts, String indent) throws TaskBuddyException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"carineang"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].isBlank()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"carineang"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"carineang"},"content":"            int taskNumber \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"carineang"},"content":"            Task removedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"  \" + removedTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"carineang"},"content":"            saveTasks(tasks, indent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"carineang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Invalid task number. Please try again.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"carineang"},"content":"     * Marks a task as done or not done based on user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"carineang"},"content":"     * The status of the task is updated, and changes are saved to the text file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"carineang"},"content":"     * @param inputParts The user input parts, where the second part is the task number.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"carineang"},"content":"     * @param isDone Boolean indicating whether to mark the task as done or not.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"carineang"},"content":"     * @throws TaskBuddyException If the task number is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"carineang"},"content":"    private static void markTask(ArrayList\u003cTask\u003e tasks, String[] inputParts, String indent, boolean isDone) throws TaskBuddyException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"carineang"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"carineang"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"carineang"},"content":"            int taskNumber \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"carineang"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"carineang"},"content":"                tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"carineang"},"content":"                System.out.println(indent + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"carineang"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"carineang"},"content":"                tasks.get(taskNumber).markAsNotDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"carineang"},"content":"                System.out.println(indent + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"  \" + tasks.get(taskNumber));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"carineang"},"content":"            saveTasks(tasks, indent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"carineang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Invalid task number. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"carineang"},"content":"     * Adds a to-do task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"carineang"},"content":"     * A task is added with a description provided by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"carineang"},"content":"     * @param inputParts The user input parts, where the second part is the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"carineang"},"content":"     * @throws TaskBuddyException If the task description is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"carineang"},"content":"    private static void addTodoTask(ArrayList\u003cTask\u003e tasks, String[] inputParts, String indent) throws TaskBuddyException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"carineang"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Please provide a valid todo description.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"carineang"},"content":"        Task newTask \u003d new Todo(inputParts[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"carineang"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"carineang"},"content":"        addTaskMessage(newTask, tasks.size(), indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"carineang"},"content":"        saveTasks(tasks, indent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"carineang"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"carineang"},"content":"     * A task is added with a description and deadline date provided by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"carineang"},"content":"     * @param inputParts The user input parts, where the second part is the task description and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"carineang"},"content":"     * @throws TaskBuddyException If the task description or deadline is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"carineang"},"content":"    private static void addDeadlineTask(ArrayList\u003cTask\u003e tasks, String[] inputParts, String indent) throws TaskBuddyException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"carineang"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Please provide a valid deadline description.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"carineang"},"content":"        String[] deadlineParts \u003d inputParts[1].split(\" /by \", 2);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"carineang"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Invalid deadline format. Use: description /by date\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"carineang"},"content":"        String description \u003d deadlineParts[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"carineang"},"content":"        String deadline \u003d deadlineParts[1];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"carineang"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"carineang"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"carineang"},"content":"        addTaskMessage(newTask, tasks.size(), indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"carineang"},"content":"        saveTasks(tasks, indent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"carineang"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"carineang"},"content":"     * A task is added with a description and start and end times provided by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"carineang"},"content":"     * @param inputParts The user input parts, where the second part is the task description, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"carineang"},"content":"     * @throws TaskBuddyException If the task description or time details are invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"carineang"},"content":"    private static void addEventTask(ArrayList\u003cTask\u003e tasks, String[] inputParts, String indent) throws TaskBuddyException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"carineang"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Please provide a valid event description.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"carineang"},"content":"        String[] eventParts \u003d inputParts[1].split(\" /from \", 2);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"carineang"},"content":"        if (eventParts.length \u003c 2) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Invalid event format. Use: description /from start /to end\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"carineang"},"content":"        String description \u003d eventParts[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"carineang"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"carineang"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"carineang"},"content":"            throw new TaskBuddyException(\"Invalid event format. Use: description /from start /to end\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"carineang"},"content":"        String from \u003d timeParts[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"carineang"},"content":"        String to \u003d timeParts[1];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"carineang"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"carineang"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"carineang"},"content":"        addTaskMessage(newTask, tasks.size(), indent);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"carineang"},"content":"        saveTasks(tasks, indent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"carineang"},"content":"     * Prints a message indicating the task was successfully added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"carineang"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"carineang"},"content":"     * @param taskCount The total number of tasks after adding the new one.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"carineang"},"content":"    private static void addTaskMessage(Task task, int taskCount, String indent) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"carineang"},"content":"        System.out.println(indent + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"carineang"},"content":"        System.out.println(indent + \"  \" + task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"carineang"},"content":"        System.out.println(indent + \"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"carineang"},"content":"     * Saves the current task list to a file named \"taskbuddy.txt\" and written in a specific format for loading later.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"carineang"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"carineang"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e tasks, String indent) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"carineang"},"content":"        File file \u003d new File(\"taskbuddy.txt\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"carineang"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"carineang"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"carineang"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Tasks have been saved to taskbuddy.txt.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"carineang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Error saving tasks to file. Please try again.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"carineang"},"content":"     * Loads the tasks from the \"taskbuddy.txt\" file into the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"carineang"},"content":"     * The tasks are parsed from the file and added to the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"carineang"},"content":"     * @param indent Indentation used for formatting the output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"carineang"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"carineang"},"content":"    private static ArrayList\u003cTask\u003e loadTasks(String indent) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"carineang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"carineang"},"content":"        File file \u003d new File(\"taskbuddy.txt\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"carineang"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"carineang"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"carineang"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"carineang"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"carineang"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"carineang"},"content":"                Task task \u003d parseTaskFromString(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"carineang"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"carineang"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"carineang"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Loaded \" + tasks.size() + \" tasks from taskbuddy.txt.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"carineang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"carineang"},"content":"            System.out.println(indent + \"Error loading tasks. Starting with an empty list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"carineang"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"carineang"},"content":"     * Parses a task from a string representation read from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"carineang"},"content":"     * @param line The string representing the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"carineang"},"content":"     * @return The parsed Task object, or null if the line cannot be parsed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"carineang"},"content":"    private static Task parseTaskFromString(String line) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"carineang"},"content":"        boolean isDone \u003d line.contains(\"[1]\"); // Completed task status","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"carineang"},"content":"        if (line.startsWith(\"[T]\")) {           // To-do","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"carineang"},"content":"            String description \u003d line.substring(7);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"carineang"},"content":"            Todo task \u003d new Todo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"carineang"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"carineang"},"content":"                task.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"carineang"},"content":"            return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"carineang"},"content":"        } else if (line.startsWith(\"[D]\")) {    // Deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"carineang"},"content":"            int byIndex \u003d line.indexOf(\"(by:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"carineang"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"carineang"},"content":"                return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"carineang"},"content":"            String description \u003d line.substring(7, byIndex).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"carineang"},"content":"            String by \u003d line.substring(byIndex + 5, line.length() - 1).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"carineang"},"content":"            Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"carineang"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"carineang"},"content":"                task.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"carineang"},"content":"            return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"carineang"},"content":"        } else if (line.startsWith(\"[E]\")) {    // Event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"carineang"},"content":"            int fromIndex \u003d line.indexOf(\"(from:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"carineang"},"content":"            int toIndex \u003d line.indexOf(\"to:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"carineang"},"content":"            if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"carineang"},"content":"                return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"carineang"},"content":"            String description \u003d line.substring(7, fromIndex).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"carineang"},"content":"            String from \u003d line.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"carineang"},"content":"            String to \u003d line.substring(toIndex + 3, line.length() - 1).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"carineang"},"content":"            Event task \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"carineang"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"carineang"},"content":"                task.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"carineang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"carineang"},"content":"            return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"carineang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"carineang"},"content":"        return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"carineang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":323}},{"path":"src/main/java/TaskBuddyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":" * TaskBuddy exception for handling errors specific to the TaskBuddy application, thrown when an invalid operation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":" * or input occurs within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":"public class TaskBuddyException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"     * Constructs a TaskBuddyException with specified detail message containing information about the error.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":"     * @param message The detail message that explains the error.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"carineang"},"content":"    public TaskBuddyException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"carineang"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"carineang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":14}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":" * Represents a to-do task with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":"     * Constructs a To-do object with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":"     * @param description A description of the to-do task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"carineang"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"carineang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"carineang"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"carineang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"carineang"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"carineang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"carineang"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"carineang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"carineang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"carineang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"carineang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"carineang"},"content":"todo borrow books","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"carineang"},"content":"todo read books","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"carineang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"carineang"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"carineang"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"carineang"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"carineang"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"carineang"},"content":"unmark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"carineang"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"carineang"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"carineang":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"carineang"},"content":"java -classpath ../bin TaskBuddy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"carineang":1,"-":37}}]
