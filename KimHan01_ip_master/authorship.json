[{"path":"src/main/java/chatbot/CustomDateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"public class CustomDateFormatter {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    private final static DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    private final static DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    // Given a string of input format(\"yyyy-MM-dd\"), outputs LocalDateTime","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    public static LocalDate dateFromInputFormat(String input) throws DateTimeParseException{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"        return LocalDate.parse(input, inputFormat);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    // Given a LocalDateTime, returns a String in outputFormat","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    public static String formatOutput(LocalDate inputDateTime) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"        return inputDateTime.format(outputFormat);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    // Given a string of output format(\"MMM dd yyyy\"), outputs LocalDateTime","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    public static LocalDate dateFromOutputFormat(String text) throws DateTimeParseException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        return LocalDate.parse(text, outputFormat);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"KimHan01":25}},{"path":"src/main/java/chatbot/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"    private LocalDate by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    private String DateTimeOutput;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    // Input format is deadline \u003cTaskName\u003e /by \u003cDate\u003e,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    // \u003cDate\u003e format from argument should be \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    public Deadline(String taskName, boolean mark, LocalDate by) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"        super(taskName, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"        this.DateTimeOutput \u003d CustomDateFormatter.formatOutput(by);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    // Format: D|0/1|NAME|BY, converting BY into output format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public String toTxt() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        String mark \u003d super.getMark() ? \"1\" : \"0\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        return \"D|\" + mark + \"|\" + super.getName() + \"|\" + DateTimeOutput + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    // Format: 0/1|NAME|BY, converts BY from output format into LocalDateTime","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public static Deadline fromTxt(String body) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        String[] parts \u003d body.split(\"\\\\|\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"        boolean mark \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        String name \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        String by \u003d parts[2];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        return new Deadline(name, mark, CustomDateFormatter.dateFromOutputFormat(by));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeOutput + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":37}},{"path":"src/main/java/chatbot/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"    private LocalDate from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    private LocalDate to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    private String fromOutput; // Formatted output string of from","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    private String toOutput; // Formatted output string of to","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    public Event(String taskName, boolean mark, LocalDate from, LocalDate to) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"        super(taskName, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        this.fromOutput \u003d CustomDateFormatter.formatOutput(from);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"        this.toOutput \u003d CustomDateFormatter.formatOutput(to);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    // Format: E|0/1|NAME|FROM|TO","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    public String toTxt() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        String mark \u003d super.getMark() ? \"1\" : \"0\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        return \"E|\" + mark + \"|\" + super.getName() + \"|\" + fromOutput + \"|\" + toOutput + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    // Format: 0/1|NAME|FROM|TO","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    public static Event fromTxt(String body) throws ArrayIndexOutOfBoundsException{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        String[] parts \u003d body.split(\"\\\\|\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        boolean mark \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        String name \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        String from \u003d parts[2];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        String to \u003d parts[3];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        return new Event(name, mark, CustomDateFormatter.dateFromOutputFormat(from),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"                CustomDateFormatter.dateFromOutputFormat(to));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromOutput + \" to: \" + toOutput + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":41}},{"path":"src/main/java/chatbot/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"public class Response {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"    // Line between each response","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    static String line \u003d \"-----------------------------------------------------------------------------------\" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"            \"------------------------\\n\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    // Rocket\u0027s introduction. Used chatGPT to help generate a response that Chatbot.Rocket Raccoon","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    // from \u0027Guardians of the galaxy\u0027 would say","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    public static void introduction() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Oh, great. Another day, another gig as a chatbot. \" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"                \"Alright listen up, kid.\\nName\u0027s Rocket. Rocket Raccoon. Yeah, the genius, weapons expert, \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"                \"and the best pilot you\u0027ll ever meet.\\nNow, I\u0027m stuck here tracking your tasks instead of \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"                \"blasting through the galaxy with Groot.\\nSo, what do ya want? \" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"                \"Make it quick, I\u0027ve got virtual raccoon stuff to do.\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    // Rocket\u0027s farewell. Used chatGPT as well.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    public static void bye() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        System.out.print(line + \"Alright, fine. You\u0027re leaving already? Whatever. \" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"                \"Just don\u0027t blow anything up without me. Rocket out!\\nmutters Stupid chatbot job...\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"                + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    // Response when user asks to look at an empty list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    public static void emptyList() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Oh, look at that, your list of tasks is empty as a vacuum in space.\\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"                \"Guess that means you\u0027re either super efficient or just really good at procrastinating.\" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"                \" Probably the latter.\\nWant me to add \\\"Make a to-do list\\\" to your list of tasks?\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    // Response when user adds an empty task","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    public static void addEmptyTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Seriously? An empty task? What, are you trying to add \\\"nothing\\\" \" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"                \"to your to-do list?\\n\" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"                \"Hate to break it to you, but that\u0027s not how this works.\\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"                \"Try adding something, even if it\u0027s \\\"stare at the wall dramatically.\\\"\\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"                \"At least give me something to work with here!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"    // Response when user tries to add to a full list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    public static void fullList() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Whoa, whoa, whoa—pump the brakes! Your to-do list is already \" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"                \"stuffed fuller than my weapons stash.\\n\" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"                \"You wanna add more? Maybe finish a task or two first, huh? Or we’ll need to invent a bigger list.\\n\" +","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"                \"Your call, but don’t blame me when the list explodes.\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    // Response to \"list\" which prints out all items inside the list to the console","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    public static void printListItems(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        System.out.print(line);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"            System.out.println(taskNum + \".\" + list.get(i).toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"    // Response to successfully marking a task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"    public static void printMarkedTask(Task task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Successfully marked:\\n\" + task.toString() + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    // Response to successfully unmarking a task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"    public static void printUnmarkedTask(Task task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Successfully unmarked:\\n\" + task.toString() + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"    // Response to trying to mark a task that does not exist","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"    public static void unexistingTaskToMark() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Oh, you\u0027re trying to mark off a task that doesn\u0027t even exist? \\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"                \"If it\u0027s not on the list, it can\u0027t be marked as done. \\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"                \"Check again, maybe the task is hiding in a parallel dimension or something.\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"    // Response to trying to unmark a task that does not exist","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"    public static void unexistingTaskToUnmark() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"You\u0027re trying to unmark a task that doesn\u0027t even exist? \\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"                \"That\u0027s some next-level overthinking right there. \\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"                \"Look, if it\u0027s not on the list, there\u0027s nothing to unmark. \\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"                \"Double-check your list, alright?\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"    // Response to successfully adding a todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"    public static void todoAdded(Todo todo, int listSize) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Successfully added ToDo:\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"                + todo.toString() + \"\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"    // Response to successfully adding a deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"    public static void deadlineAdded(Deadline deadline, int listSize) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Successfully added Deadline:\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"                + deadline.toString() + \"\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"    // Response to successfully adding an event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"    public static void eventAdded(Event event, int listSize) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Successfully added Event:\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"                + event.toString() + \"\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"    // Response to invalid input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"    public static void invalidInput() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Maybe you wanna try giving me something that makes sense,\\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"                \"unless you want me to invent something out of thin air,\\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"                \"which, trust me, you don\u0027t\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"    // Response to successfully removal of a task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"    public static void taskRemoved(Task task, int listSize) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"                + \"\\n\" + \"Now you have \" + listSize + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"    // Response to trying to remove a task not in the list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"    public static void removeUnexistingTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"        System.out.println(line + \"Yeah, that\u0027s not happening. The list has limits, just like my patience.\\n\" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"                \"Check your list, make sure the task exists, and try again\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"KimHan01":124}},{"path":"src/main/java/chatbot/Rocket.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import chatbot.chatbot.data.dataHandler;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public class Rocket {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"        dataHandler.createListFile(); // Creates list file if it does not exist","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"        Response.introduction(); // Prints Introduction","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"        // List to store user\u0027s list of tasks","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"        dataHandler.readList(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"        final int tasksLimit \u003d 100;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        // Takes input from console","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        // Unless the input is \"bye\"(caps insensitive), program will keep waiting for input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"            // When input equals \"bye\" (Case insensitive)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"                Response.bye();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            // When input equals \"list\" (Case insensitive)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"                // updates task list by clearing the list and then reading list from dataHandler","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"                tasks.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"                dataHandler.readList(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"                if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"                    Response.emptyList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"                    Response.printListItems(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"            // When input is blank","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"            } else if (input.isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"                Response.addEmptyTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"            // When input try to add task into full list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            } else if (tasks.size() \u003d\u003d tasksLimit) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"                Response.fullList();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"            // When input is mark task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"            } else if (isMark(input)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"                int taskNumToMark \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"                if (taskNumToMark \u003e tasks.size() || taskNumToMark \u003c 1) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"                    Response.unexistingTaskToMark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"                    Task taskToMark \u003d tasks.get(taskNumToMark - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"                    taskToMark.markTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"                    dataHandler.updateList(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"                    Response.printMarkedTask(taskToMark);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"            // When input is unmark task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"            } else if (isUnmark(input)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"                int taskNumToUnmark \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"                if (taskNumToUnmark \u003e tasks.size() || taskNumToUnmark \u003c 1) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"                    Response.unexistingTaskToUnmark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"                    Task taskToUnmark \u003d tasks.get(taskNumToUnmark - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"                    taskToUnmark.unmarkTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"                    dataHandler.updateList(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"                    Response.printUnmarkedTask(taskToUnmark);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"            // When input is add todo task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"            } else if (isTodo(input)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"                String taskName \u003d input.substring(5);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"                if (taskName.isBlank()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"                    Response.addEmptyTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"                    Todo todo \u003d new Todo(taskName.trim(), false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"                    tasks.add(todo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"                    dataHandler.addTask(todo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"                    Response.todoAdded(todo, tasks.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"            // When input is add deadline task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"            } else if (isDeadline(input)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"                String[] parts \u003d input.substring(9).split(\"/by\", 0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"                if (parts[0].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"                    Response.addEmptyTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"                } else if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"                    Response.invalidInput();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"                    try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"                        LocalDate dateTime \u003d CustomDateFormatter.dateFromInputFormat(parts[1].trim());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"                        Deadline deadline \u003d new Deadline(parts[0].trim(), false, dateTime);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"                        dataHandler.addTask(deadline);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"                        Response.deadlineAdded(deadline, tasks.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"                        System.out.println(\"Invalid Date Time input format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"            // When input is add event task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"            } else if (isEvent(input)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"                String[] splitFrom \u003d input.substring(6).split(\"/from\", 0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"                if (splitFrom[0].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"                    Response.addEmptyTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"                } else if (splitFrom.length !\u003d 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"                    Response.invalidInput();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"                    String[] splitTo \u003d splitFrom[1].split(\"/to\", 0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"                    if (splitTo.length !\u003d 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"                        Response.invalidInput();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"                    } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"                        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"                            LocalDate to \u003d CustomDateFormatter.dateFromInputFormat(splitTo[0].trim());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"                            LocalDate from \u003d CustomDateFormatter.dateFromInputFormat(splitTo[1].trim());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"                            Event event \u003d new Event(splitFrom[0].trim(), false, to, from);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"                            tasks.add(event);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"                            dataHandler.addTask(event);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"                            Response.eventAdded(event, tasks.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"                            System.out.println(\"Invalid Date Time input format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"                        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"            // When input is to delete a task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"            } else if (isDelete(input)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"                String index \u003d input.substring(7);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"                if (isInteger(index)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"                    int intIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KimHan01"},"content":"                    if (intIndex \u003e\u003d 0 \u0026\u0026 intIndex \u003c tasks.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KimHan01"},"content":"                        Task removedTask \u003d tasks.remove(intIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KimHan01"},"content":"                        dataHandler.updateList(tasks);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KimHan01"},"content":"                        Response.taskRemoved(removedTask, tasks.size());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KimHan01"},"content":"                    } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KimHan01"},"content":"                        Response.removeUnexistingTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KimHan01"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KimHan01"},"content":"                    Response.invalidInput();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KimHan01"},"content":"            // Else, input is invalid","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"KimHan01"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"KimHan01"},"content":"                if (input.trim().equalsIgnoreCase(\"todo\")","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KimHan01"},"content":"                        || input.trim().equalsIgnoreCase(\"deadline\")","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KimHan01"},"content":"                            || input.trim().equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"KimHan01"},"content":"                    Response.addEmptyTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"KimHan01"},"content":"                    Response.invalidInput();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"KimHan01"},"content":"    public static boolean isTodo(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 5","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"todo\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(4, 5).isBlank();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"KimHan01"},"content":"    public static boolean isDeadline(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 9","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(\"deadline\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(8, 9).isBlank();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"KimHan01"},"content":"    public static boolean isEvent(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 6","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(\"event\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(5, 6).isBlank();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"KimHan01"},"content":"    public static boolean isMark(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 5","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"mark\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(4, 5).isBlank()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 isInteger(input.substring(5));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"KimHan01"},"content":"    public static boolean isUnmark(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"unmark\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(6, 7).isBlank()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 isInteger(input.substring(7));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"KimHan01"},"content":"    private static boolean isDelete(String input) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"KimHan01"},"content":"        return (input.length() \u003e 7 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"delete\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"KimHan01"},"content":"    public static boolean isInteger(String x) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"KimHan01"},"content":"            int intVal \u003d Integer.parseInt(x);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"KimHan01"},"content":"            return true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"KimHan01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"KimHan01"},"content":"            return false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"KimHan01":193}},{"path":"src/main/java/chatbot/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import static chatbot.Rocket.isInteger;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"    private String taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    public Task(String taskName, boolean mark) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    public String getName() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        return this.taskName;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    public boolean getMark() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    public abstract String toTxt();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":40}},{"path":"src/main/java/chatbot/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"    public Todo(String taskName, boolean mark) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"        super(taskName, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    // Format: T|0/1|NAME, returns String representation in txt file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    public String toTxt() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"        String mark \u003d super.getMark() ? \"1\" : \"0\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"        return \"T|\" + mark + \"|\" + super.getName() + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    // Returns Todo object from txt line, takes in txt String body without header (Format: 0/1|NAME)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    public static Todo fromTxt(String body) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"            String[] parts \u003d body.split(\"\\\\|\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"            boolean mark \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"            String name \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"            return new Todo(name, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"            System.out.println(\"ArrayIndexOutOfBoundsException when calling fromTxt for Todo class, \" +","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"                    \"returning todo with name: invalid\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"            return new Todo(\"invalid\", false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"KimHan01":33}},{"path":"src/main/java/chatbot/chatbot.data/dataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package chatbot.chatbot.data;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import chatbot.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import chatbot.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import chatbot.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import chatbot.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"public class dataHandler {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    final static String directory \u003d \"src/main/java/chatbot/chatbot.data\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    final static String filePath \u003d directory + \"/list.txt\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    static File dir \u003d new File(directory);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    static File file \u003d new File(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    public static void createListFile() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"        if (!dir.isDirectory()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"            if (dir.mkdir()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Created directory\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Failed to create directory\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"                    System.out.println(\"Created list file\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"                    System.out.println(\"Failed to create list file\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    // Read tasks from list.txt","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    public static void readList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"                // Updates the list with the list of tasks","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"                String[] parts \u003d sc.nextLine().split(\"\\\\|\", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"                String header \u003d parts[0];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"                String body \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"                switch (header) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"                    case \"T\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"                        Todo todo \u003d Todo.fromTxt(body);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"                        list.add(todo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"                        break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"                    case \"D\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"                        Deadline deadline \u003d Deadline.fromTxt(body);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"                        list.add(deadline);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"                        break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"                    case \"E\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"                        Event event \u003d Event.fromTxt(body);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"                        list.add(event);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"                        break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"            sc.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    // Writes a list of tasks into a txt file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"    private static void writeToTxt(String filePath, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"            for (Task task : list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"                writer.write(task.toTxt());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"            writer.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"    private static File writeToTemp(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"        String tempPath \u003d directory + \"/temp.txt\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"        File temp \u003d new File(tempPath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"            if (!temp.createNewFile()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Failed to create temp file\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"        dataHandler.writeToTxt(tempPath, list);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"        return temp;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"    private static void replaceFile(File source, File dest) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"            Files.move(source.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"    // Add task of any type -\u003e write","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"            writer.write(task.toTxt());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"            writer.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"    // Updates list.txt with task list. Writes task list into temp.txt file and replaces list.txt with temp.txt","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"    public static void updateList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"        File temp \u003d writeToTemp(list);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"        dataHandler.replaceFile(temp, file);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"KimHan01":126}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"todo readbook","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"deadline homework /by tmr","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"event interview /from 10am /to 11am","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"mark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"blah","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"delete 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"javac  -cp ..\\src\\main\\java\\chatbot -Xlint:none -d ..\\bin ..\\src\\main\\java\\chatbot\\*.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"java -classpath ..\\bin chatbot.Rocket \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KimHan01":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"if ! javac -cp ../src/main/java/chatbot -Xlint:none -d ../bin ../src/main/java/chatbot/*.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KimHan01":1,"-":37}}]
