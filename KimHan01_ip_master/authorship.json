[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    archiveBaseName \u003d \"rocket\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KimHan01":18,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"# Rocket User Guide","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"*Rocket Raccoon* from *Guardians of the Galaxy* is here to be your personal chatbot.   ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"This is a **Command Line Interface(CLI) based chatbot** that can help you track tasks.  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"Careful not to make mistakes lest you enjoy getting roasted.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"- [Setup](#setup)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"- [Features](#features)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"  * [Add Todo](#adding-todo-todo)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"  * [Add Deadline](#adding-deadline-deadline)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"  * [Add Event](#adding-event-event)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"  * [View List](#viewing-your-list-list)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"  * [Mark a Task](#marking-a-task-mark)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"  * [Unmark a Task](#unmarking-a-task-unmark)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"  * [Find Tasks](#finding-tasks-by-name-find)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"  * [Edit a Task](#edit-a-task-edit)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"  * [Exit Application](#exiting-the-application-bye)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"## Setup","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"2. Download the latest jar file from [here](https://github.com/KimHan01/ip/releases).","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"3. Put the jar file into a folder that you wish to run the file from.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"and use the `java -jar rocket.jar` command to run the application.  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"A GUI similar to the one below should appear in a few seconds.  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"## Features","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"\u003e [!NOTE]","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"\u003e * There must be a space after any command keyword (E.g. `todo example`)  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"\u003e * `Date` format: YYYY-MM-DD (e.g. 2025-06-07)  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"\u003e * `Index` is an integer value representing the task number in the list  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"\u003e * Field specifier: `/n` for name, `/by` for deadline date, `/from` or `/to` for event dates","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"\u003e * You can only edit one field at a time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"\u003e * Command keywords are case-insensitive (E.g. `ToDo`, `TODO` are the same)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"## Viewing help: `help`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"Shows a message containing commands and how to use them  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"Format: `help`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"## Adding todo: `todo`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"Adds a todo task  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"Format: `todo [task name]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"Example: `todo Save the Galaxy`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"Expected Response:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"Successfully added:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"[T][ ] Save the Galaxy","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"## Adding deadline: `deadline`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"Adds a deadline task with a deadline date to complete by  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"Format: `deadline [task name] /by [date]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"Example: `deadline Assignment /by 2025-02-21`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"Expected Response:  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"Successfully added:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"[D][ ] Assignment (by: Feb 21 2025)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"## Adding event: `event`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"Adds an event task with a start and end date  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"Format: `event [task name] /from [date] /to [date]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"Example: `event Meet Groot /from 2077-01-05 /to 2077-01-06`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"Expected Response:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"Successfully added:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"[E][ ] Meet Groot (from: Jan 05 2077 to: Jan 06 2077)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"## Viewing your list: `list`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"Shows you the list of tasks you currently have","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"Format: `list`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"## Marking a task: `mark`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"Marks a task as done  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"Format: `mark [index]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"Example: `mark 1`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"Expected Response:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"1.[D][X] Assignment (by: Feb 21 2025)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"2.[T][ ] Save the Galaxy","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"3.[E][ ] Meet Groot (from: Jan 05 2077 to: Jan 06 2077)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"## Unmarking a task: `unmark`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"Unmarks a task  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"Format: `unmark [index]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"Example: `unmark 1`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"Expected Response:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"1.[D][ ] Assignment (by: Feb 21 2025)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"2.[T][ ] Save the Galaxy","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"3.[E][ ] Meet Groot (from: Jan 05 2077 to: Jan 06 2077)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"## Finding tasks by name: `find`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"Shows you a list of tasks with names that contain the keyword given  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"Format: `find [keyword]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"Example: `find G`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"Expected Response:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KimHan01"},"content":"1.[T][ ] Save the Galaxy","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KimHan01"},"content":"2.[E][ ] Meet Groot (from: Jan 05 2077 to: Jan 06 2077)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KimHan01"},"content":"## Edit a task: `edit`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KimHan01"},"content":"Edits a field of a task  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KimHan01"},"content":"Format: `edit [index] [field specifier] [new value for field]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KimHan01"},"content":"Example: `edit 1 /by 2025-02-24`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"KimHan01"},"content":"Expected Response:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KimHan01"},"content":"I have edited this task:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KimHan01"},"content":"[D][ ] Assignment (by: Feb 21 2025)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"KimHan01"},"content":"To:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"KimHan01"},"content":"[D][ ] Assignment (by: Feb 24 2025)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"KimHan01"},"content":"```","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"KimHan01"},"content":"## Exiting the application: `bye`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"KimHan01"},"content":"Exits the application  ","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"KimHan01":131,"-":16}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Main;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"public class Launcher {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":11}},{"path":"src/main/java/rocket/Rocket.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.command.Command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":" * The main class which represents the chatbot {@link Rocket}.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"public class Rocket {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    private TaskList list;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"     * Constructor for {@link Rocket} class,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"     * creates a new {@code Rocket} chatbot with a given valid filePath","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    public Rocket(String filePath) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            list \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            ui.fileNotFound();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"     * Runs the @{code Rocket} chatbot","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    public void run() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        ui.introduction();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"            String input \u003d ui.readInputCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"            c.execute(list, ui, storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        String filePath \u003d \"./data/storage.txt\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"        new Rocket(filePath).run();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"     * Generates a response according to user input from chat message","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        return c.execute(list, ui, storage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"     * Returns rocket\u0027s introduction","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    public static String rocketIntro() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        return \"Oh great, another day as a chatbot. Lets get this over with. What do you want?\\n \" +","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"                \"If you got no clue what you\u0027re doin\u0027, type help and I might not roast ya\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"KimHan01":68}},{"path":"src/main/java/rocket/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Deadline;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Event;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskType;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Todo;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code AddCommand} with the given task to add.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    public AddCommand(Task taskToAdd, boolean isEmpty) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        list.add(taskToAdd);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        storage.updateStorage(list);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        String res \u003d getAddTaskResponse(taskToAdd, list.getSize());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        ui.read(res);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        return getAddTaskResponse(taskToAdd, list.getSize());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"     * Returns an {@code AddCommand} based on the given task type.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"     * @param input the user input string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"     * @param taskType the type of task to be added","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"     * @return the appropriate AddCommand based on the task type,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"     * or an appropriate error command if the input is invalid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    public static Command getAddCommand(String input, TaskType taskType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"        if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            return Todo.getAddTodoCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        } else if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"            return Deadline.getAddDeadlineCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        } else if (taskType \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"            return Event.getAddEventCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"        return new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"     * Returns a response for successfully adding a task into the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    private String getAddTaskResponse(Task task, int listSize) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        return \"Successfully added:\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":61}},{"path":"src/main/java/rocket/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * Represents a command from the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    private final boolean isExit; // Checks if the command is an exit command","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code Command}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"     * @param isExit whether the command is an exit command","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        return this.isExit;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"     * Executes the command and returns rocket\u0027s response","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    public abstract String execute(TaskList list, Ui ui, Storage storage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":29}},{"path":"src/main/java/rocket/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    private final int indexToDelete;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    private static final int headerLen \u003d InputCommandType.DELETE.name().length() + 1;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code DeleteCommand} with the given task number to delete.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        this.indexToDelete \u003d taskNum - 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"            Task removedTask \u003d list.remove(indexToDelete);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            storage.updateStorage(list);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"            String res \u003d getDeleteResponse(removedTask, list.getSize());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            ui.read(res);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            return res;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"            ui.read(getInvalidDeleteResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            return getInvalidDeleteResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is a {@code DeleteCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"    public static boolean isDelete(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"        return (input.length() \u003e 7 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(InputCommandType.DELETE.name()));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"     * Returns the {@code DeleteCommand} from given input, otherwise an {@code InvalidFormatCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"    public static Command getDeleteCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"            int taskNum \u003d getTaskNumToDelete(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"            return new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"     * Returns a response for successfully deleting a task from the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    private String getDeleteResponse(Task task, int listSize) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"        return \"I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"                + \"\\n\" + \"Now you have \" + listSize + \" tasks in the list.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"     * Returns a response for trying to delete a task that does not exist in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"    private String getInvalidDeleteResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"        return \"Yeah, that\u0027s not happening. The list has limits, just like my patience.\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"                \"Check your list, make sure the task exists, and try again\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"    private static int getTaskNumToDelete(String input) throws NumberFormatException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"        String taskNum \u003d input.substring(headerLen);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"        return Integer.parseInt(taskNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":76}},{"path":"src/main/java/rocket/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.common.Utils;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" * Represents a command to Edit a task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    private static final int headerLen \u003d InputCommandType.EDIT.name().length() + 1;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    public EditCommand() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        return \"EditCommand: Error reaching the right edit command\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"     * Checks if the input is an edit command","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    public static boolean isEdit(String input) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e headerLen","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, headerLen - 1).equalsIgnoreCase(InputCommandType.EDIT.name())","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(headerLen - 1, headerLen).isBlank();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"     * Returns an {@code EditCommand} if the given input is a valid edit command,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"     * otherwise the appropriate error command is returned.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    public static Command getEditCommand(String input) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        // input format should be \"edit \u003cindex\u003e \u003cfield to change\u003e\" (only 1 field to change expected)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"        // Checks if the input is of this format, and if \u003cindex\u003e and \u003cfield to change\u003e are valid.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        String[] splitInput \u003d input.split(\" \", 3);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"        if (splitInput.length !\u003d 3","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"                || !Utils.isInteger(splitInput[1])","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"                || !isFieldSpecifier(splitInput[2])) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            return new InvalidFormatCommand();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        int taskNum \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        if (splitInput[2].startsWith(\"/n\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"            String newName \u003d splitInput[2].substring(2).trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"            return new EditNameCommand(newName, taskNum);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"            String fieldToChange \u003d splitInput[2].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"            return new EditDateCommand(fieldToChange, taskNum);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"    private static boolean isFieldSpecifier(String str) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        // Checks str against all valid field specifiers (/n, /by, /from, /to)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"        String[] validFieldSpecifiers \u003d {\"/n\", \"/by\", \"/from\", \"/to\"};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"        for (String fieldSpecifier: validFieldSpecifiers) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"            if (str.startsWith(fieldSpecifier)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"                return true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"     * Returns successful edit message","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"     * @param oldTask The task before edit","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"     * @param newTask The task after edit","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"    String getEditMessage(Task oldTask, Task newTask) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"        return \"I have edited this task:\\n\" + oldTask.toString() + \"\\nTo:\\n\" + newTask.toString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"    String getEmptyNameMessage() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"        return \"Buddy, I can\u0027t do this with an empty name!\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"    String getIndexOutOfBoundsMessage() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"        return \"That task ain\u0027t there, try again!\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"    String getClassCastExceptionMessage() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"        return \"Get a grip on yourself, genius. Your trying to edit something that does not belong to the task!\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"KimHan01":88}},{"path":"src/main/java/rocket/command/EditDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.formatter.CustomDateFormatter;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":" * Represents a command to edit the date of a task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"public class EditDateCommand extends EditCommand {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    private final String fieldToChange;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    private final int index;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"     * Creates a command to edit the date of a task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"     * @param fieldToChange Includes field specifier (Format: [Field specifier][New value of field])","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"     * @param taskNum The task number of the task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    public EditDateCommand(String fieldToChange, int taskNum) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"        this.fieldToChange \u003d fieldToChange;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        this.index \u003d taskNum - 1;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        return getUpdateDateMessage(list, ui, storage, fieldToChange);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    private String getUpdateDateMessage(TaskList list, Ui ui, Storage storage, String inputDate) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        // inputDate will start with either \"/by\", \"/from\" or \"to\".","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"            Task[] oldAndNewTask \u003d updateDate(list, storage, inputDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"            storage.updateStorage(list);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"            ui.read(getEditMessage(oldAndNewTask[0], oldAndNewTask[1]));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"            return getEditMessage(oldAndNewTask[0], oldAndNewTask[1]);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"            ui.read(getInvalidDateMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"            return getInvalidDateMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"            ui.read(getIndexOutOfBoundsMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"            return getIndexOutOfBoundsMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"            ui.read(getClassCastExceptionMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"            return getClassCastExceptionMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    private Task[] updateDate(TaskList list, Storage storage, String inputDate) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        String date;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"        if (inputDate.startsWith(\"/by\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"            date \u003d inputDate.substring(3).trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        } else if (inputDate.startsWith(\"/from\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"            date \u003d inputDate.substring(5).trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"            // inputDate starts with \"/to\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"            date \u003d inputDate.substring(3).trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"        LocalDate newDate \u003d CustomDateFormatter.dateFromInputFormat(date);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        Task oldTask \u003d list.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"        if (inputDate.startsWith(\"/by\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"            list.updateDeadlineDate(index, newDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"        } else if (inputDate.startsWith(\"/from\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"            list.updateEventStartDate(index, newDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"            // inputDate starts with \"/to\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"            list.updateEventEndDate(index, newDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"        storage.updateStorage(list);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"        Task newTask \u003d list.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"        return new Task[] {oldTask, newTask};","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"    private String getInvalidDateMessage() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"        return \"Oh come on, we\u0027ve been through this! Date\u0027s gotta be in yyyy-mm-dd format. Try again!\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"KimHan01":82}},{"path":"src/main/java/rocket/command/EditNameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.exception.EmptyTaskNameException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" * Represents a command to edit the name of a task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"public class EditNameCommand extends EditCommand {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    private final String newName;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    private final int index;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     * Creates a command to edit the name of a task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"     * @param newName The new name of the task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"     * @param taskNum The task number of the task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    public EditNameCommand(String newName, int taskNum) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        this.index \u003d taskNum - 1;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        return getUpdateNameMessage(list, ui, storage, newName, index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    private String getUpdateNameMessage(TaskList list, Ui ui, Storage storage, String newName, int index) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            Task[] oldAndNewTask \u003d updateName(list, newName, index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"            storage.updateStorage(list);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"            ui.read(getEditMessage(oldAndNewTask[0], oldAndNewTask[1]));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"            return getEditMessage(oldAndNewTask[0], oldAndNewTask[1]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"        } catch (EmptyTaskNameException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"            ui.read(getEmptyNameMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"            return getEmptyNameMessage();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"            ui.read(getIndexOutOfBoundsMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"            return getIndexOutOfBoundsMessage();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    private Task[] updateName(TaskList list, String newName, int index)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"            throws EmptyTaskNameException, IndexOutOfBoundsException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        if (newName.isBlank()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"            throw new EmptyTaskNameException(\"No name given\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"        Task oldTask \u003d list.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"        list.updateTaskName(index, newName);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        Task newTask \u003d list.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        return new Task[]{oldTask, newTask};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"KimHan01":56}},{"path":"src/main/java/rocket/command/EmptyTaskNameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * Represents a command that tries to add a task with an empty name to the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public class EmptyTaskNameCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code EmptyTaskNameCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    public EmptyTaskNameCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        ui.read(getAddEmptyTaskResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        return getAddEmptyTaskResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"     * Returns a response for adding a task with no name.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    private String getAddEmptyTaskResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        return \"Seriously? An empty task? What, are you trying to add \\\"nothing\\\" \" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                \"to your to-do list?\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"                \"Hate to break it to you, but that\u0027s not how this works.\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"                \"Try adding something, even if it\u0027s \\\"stare at the wall dramatically.\\\"\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"                \"At least give me something to work with here!\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":34}},{"path":"src/main/java/rocket/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * Represents an exit command, which exits the program.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code ExitCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        super(true);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        ui.read(getFarewellResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        return getFarewellResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is an {@code ExitCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    public static boolean isExit(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        return input.trim().equalsIgnoreCase(InputCommandType.BYE.name());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"     * Returns the farewell response.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    private String getFarewellResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        return \"Alright, fine. You\u0027re leaving already? Whatever. \" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"                \"Just don\u0027t blow anything up without me. Rocket out!\\nmutters Stupid chatbot job...\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":38}},{"path":"src/main/java/rocket/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" * Represents a command to find tasks in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code FindCommand} with the given keyword to search for.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"        TaskList found \u003d new TaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"        for (Task task : list.getTasks()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"                found.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        String res \u003d getFindResponse(found);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        ui.read(res);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        return res;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is a {@code FindCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    public static boolean isFind(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 5","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(InputCommandType.FIND.name())","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(4, 5).isBlank();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"     * Returns the {@code FindCommand} from the given input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"    public static FindCommand getFindCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        String keyword \u003d input.substring(InputCommandType.FIND.name().length() + 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"     * Returns the task description of all tasks found in the task list by the Find command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"    private String getFindResponse(TaskList tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        res.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"            res.append(taskNum).append(\".\")","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"                    .append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"        return res.toString();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"KimHan01":65}},{"path":"src/main/java/rocket/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code HelpCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    public HelpCommand() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"        String helpMessage \u003d \"\"\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"                Commands:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"                LIST","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"                    --\u003e shows your task list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"                TODO [name]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"                    --\u003e adds a todo task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"                DEADLINE [name] /by[date]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"                    --\u003e adds a deadline task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"                EVENT [name] /from[date] /to[date]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"                    --\u003e adds an event task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"                DELETE [index]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"                    --\u003e deletes a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                MARK [index]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"                    --\u003e marks a task as done","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"                UNMARK [index]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"                    --\u003e unmarks a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"                FIND [name]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"                    --\u003e finds a task by name","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"                EDIT [index] [field specifier][new value for the field]","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"                    --\u003e Edits a field of a task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"                BYE","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"                    --\u003e exits the program","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"                ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"                Constraints:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"                * There must be a space after any command keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"                * Date format: YYYY-MM-DD (e.g. 2025-06-07)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"                * Index: an integer value representing the task number in the list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"                * Field specifier: \"/n\" for name, \"/by\" for deadline date, \"/from\" or \"/to\" for event dates","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"                * You can only edit one field at a time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"                * Command keywords are case-insensitive","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"                \"\"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        ui.read(helpMessage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        return helpMessage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is a {@code HelpCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"    public static boolean isHelp(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"        return input.trim().equalsIgnoreCase(InputCommandType.HELP.name());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":58}},{"path":"src/main/java/rocket/command/InputCommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":" * Stores all commands which can be expected from the user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":" * It contains the exact command keywords that user will need to type in order to execute the command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"public enum InputCommandType {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    TODO,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    DEADLINE,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    EVENT,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    DELETE,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    BYE, //Exit","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    FIND,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    HELP,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    LIST,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    MARK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    UNMARK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    EDIT,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    INVALID","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"KimHan01":20}},{"path":"src/main/java/rocket/command/InvalidDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * Represents a command to handle invalid date format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public class InvalidDateCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code InvalidDateCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    public InvalidDateCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        ui.read(getInvalidDateFormatResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        return getInvalidDateFormatResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"     * Returns a response to invalid date format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    private String getInvalidDateFormatResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        return \"Invalid date format given. Please use yyyy-mm-dd\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":30}},{"path":"src/main/java/rocket/command/InvalidFormatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * Represents a command to handle invalid format commands.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public class InvalidFormatCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code InvalidFormatCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    public InvalidFormatCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        ui.read(getInvalidFormatResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        return getInvalidFormatResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"     * Returns a response to invalid input from user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    private String getInvalidFormatResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        return \"Maybe you wanna try giving me something that makes sense,\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                \"unless you want me to invent something out of thin air,\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"                \"which, trust me, you don\u0027t\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":32}},{"path":"src/main/java/rocket/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code ListCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    public ListCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"            ui.read(getEmptyListResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"            return getEmptyListResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"            String res \u003d getListResponse(list.getTasks());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            ui.read(res);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            return res;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is a {@code ListCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    public static boolean isList(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        return input.trim().equalsIgnoreCase(InputCommandType.LIST.name());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"     * Returns a response to the query of an empty list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    private String getEmptyListResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        return \"Oh, look at that, your list of tasks is empty as a vacuum in space.\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"                \"Guess that means you\u0027re either super efficient or just really good at procrastinating.\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"                \" Probably the latter.\\nWant me to add \\\"Make a to-do list\\\" to your list of tasks?\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"     * Returns the task description of every task in the given list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    private String getListResponse(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"            res.append(taskNum).append(\".\").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"        return res.toString();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":61}},{"path":"src/main/java/rocket/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.common.Utils;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    private final int indexToMark;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code MarkCommand} with the given task number to mark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        this.indexToMark \u003d taskNum - 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            Task markedTask \u003d list.mark(indexToMark);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"            storage.updateStorage(list);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            String res \u003d getMarkResponse(markedTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            ui.read(res);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"            return res;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            ui.read(getInvalidMarkResponse());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"            return getInvalidMarkResponse();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is a {@code MarkCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    public static boolean isMark(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 5","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(InputCommandType.MARK.name())","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(4, 5).isBlank()","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 Utils.isInteger(input.substring(5));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"     * Returns the {@code MarkCommand} from the given input if valid,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"     * otherwise an {@code InvalidFormatCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    public static Command getMarkCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"            int taskNum \u003d getTaskNumToMark(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"            return new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"     * Returns a response to successfully marking a given task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    private String getMarkResponse(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        return \"Successfully marked:\\n\" + task.toString();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"     * Returns a response for trying to mark a task that is not in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"    private String getInvalidMarkResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"        return \"Oh, you\u0027re trying to mark off a task that doesn\u0027t even exist? \\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"                \"If it\u0027s not on the list, it can\u0027t be marked as done. \\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"                \"Check again, maybe the task is hiding in a parallel dimension or something.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"    private static int getTaskNumToMark(String input) throws NumberFormatException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"        String taskNum \u003d input.substring(InputCommandType.MARK.name().length() + 1);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"        return Integer.parseInt(taskNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":81}},{"path":"src/main/java/rocket/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.common.Utils;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" * Represents a command to unmark a task from the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    private final int indexToUnmark;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     * Creates a new {@code UnmarkCommand} with the given task number to unmark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        super(false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        this.indexToUnmark \u003d taskNum - 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            Task unmarkedTask \u003d list.unmark(indexToUnmark);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"            storage.updateStorage(list);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            String res \u003d getUnmarkResponse(unmarkedTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            ui.read(res);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"            return res;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            ui.read(getInvalidUnmarkResponse());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"            return getInvalidUnmarkResponse();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given input is an {@code UnmarkCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    public static boolean isUnmark(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 7","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(InputCommandType.UNMARK.name())","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(6, 7).isBlank()","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 Utils.isInteger(input.substring(7));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"     * Returns the {@code UnmarkCommand} from the given input if valid,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"     * otherwise an {@code InvalidFormatCommand}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    public static Command getUnmarkCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"            int taskNum \u003d getTaskNumToUnmark(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"            return new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"     * Returns a response to successfully unmarking a given task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    private String getUnmarkResponse(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        return \"Successfully unmarked:\\n\" + task.toString();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"     * Returns a response for trying to unmark a task that is not in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"    private String getInvalidUnmarkResponse() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"        return \"You\u0027re trying to unmark a task that doesn\u0027t even exist? \\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"                \"That\u0027s some next-level overthinking right there. \\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"                \"Look, if it\u0027s not on the list, there\u0027s nothing to unmark. \\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"                \"Double-check your list, alright?\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"    private static int getTaskNumToUnmark(String input) throws NumberFormatException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"        String taskNum \u003d input.substring(InputCommandType.UNMARK.name().length() + 1);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"        return Integer.parseInt(taskNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":82}},{"path":"src/main/java/rocket/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.common;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":" * Contains static utility methods.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"public class Utils {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    private Utils() {} // Prevent instantiation","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"     * Checks if the given string is an integer","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    public static boolean isInteger(String x) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"        // @@author KimHan01-reused","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/5439529/determine-if-a-string-is-an-integer-in-java","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            int intVal \u003d Integer.parseInt(x);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":13,"-":10}},{"path":"src/main/java/rocket/exception/EmptyTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.exception;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":" * Represents an exception thrown when the task name is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"public class EmptyTaskNameException extends RocketRuntimeException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    public EmptyTaskNameException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"        super(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":10}},{"path":"src/main/java/rocket/exception/RocketRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.exception;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":" * Represents an exception thrown when an error occurs during the execution of Rocket.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"public class RocketRuntimeException extends RuntimeException{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    public RocketRuntimeException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"        super(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":10}},{"path":"src/main/java/rocket/formatter/CustomDateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.formatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * Represents a custom date formatter that formats dates in a specific way.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"public class CustomDateFormatter {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    private final static DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    private final static DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"     * Returns a LocalDate object from a string in input format(\"yyyy-MM-dd\").","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     * @throws DateTimeParseException when the string is not of correct format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    public static LocalDate dateFromInputFormat(String input) throws DateTimeParseException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"        return LocalDate.parse(input, inputFormat);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"     * Returns a string in output format(\"MMM dd yyyy\") from a LocalDate object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public static String formatOutput(LocalDate inputDateTime) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        return inputDateTime.format(outputFormat);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"     * Returns a LocalDate object from a string in output format(\"MMM dd yyyy\").","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"     * @throws DateTimeParseException when the string is not of correct format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    public static LocalDate dateFromOutputFormat(String text) throws DateTimeParseException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"        return LocalDate.parse(text, outputFormat);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"KimHan01":36}},{"path":"src/main/java/rocket/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.command.EditCommand;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskType;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Todo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InputCommandType;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import rocket.command.Command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import rocket.command.AddCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import rocket.command.DeleteCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"import rocket.command.ExitCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"import rocket.command.FindCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InvalidFormatCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"import rocket.command.ListCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"import rocket.command.MarkCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"import rocket.command.UnmarkCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"import rocket.command.HelpCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":" * Represents a parser that handles parsing user input into commands.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"public class Parser {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"     * Parses user input into a command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"     * @return the appropriate Command based on the given input","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        InputCommandType commandType \u003d getCommandType(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        return switch (commandType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            case TODO -\u003e AddCommand.getAddCommand(input, TaskType.TODO);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"            case DEADLINE -\u003e AddCommand.getAddCommand(input, TaskType.DEADLINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"            case EVENT -\u003e AddCommand.getAddCommand(input, TaskType.EVENT);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"            case DELETE -\u003e DeleteCommand.getDeleteCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"            case MARK -\u003e MarkCommand.getMarkCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"            case UNMARK -\u003e UnmarkCommand.getUnmarkCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"            case BYE -\u003e new ExitCommand();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"            case LIST -\u003e new ListCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"            case FIND -\u003e FindCommand.getFindCommand(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"            case HELP -\u003e new HelpCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"            case EDIT -\u003e EditCommand.getEditCommand(input);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            default -\u003e new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        };","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"     * Gets the command type from given input","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"     * @return The command type","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    private static InputCommandType getCommandType(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        if (Todo.isTodo(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.TODO;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"        } else if (Deadline.isDeadline(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.DEADLINE;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        } else if (Event.isEvent(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.EVENT;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"        } else if (DeleteCommand.isDelete(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.DELETE;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"        } else if (MarkCommand.isMark(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.MARK;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"        } else if (UnmarkCommand.isUnmark(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.UNMARK;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        } else if (ExitCommand.isExit(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.BYE;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"        } else if (ListCommand.isList(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.LIST;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"        } else if (FindCommand.isFind(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.FIND;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"        } else if (HelpCommand.isHelp(input)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.HELP;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"        } else if (EditCommand.isEdit(input)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.EDIT;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"            return InputCommandType.INVALID;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":79}},{"path":"src/main/java/rocket/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Deadline;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Event;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.task.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.task.Todo;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":" * Represents the storage of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":" * Handles creating, reading and writing from storage file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"public class Storage {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    private final File file;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    private final File dir;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"     * Creates a {@code Storage} object with a given file path.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"     * Creates file at file path if it does not exist.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        this.dir \u003d file.getParentFile();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        createFilePath(); // Creates file if it does not exist","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"        createFilePath(); // Creates file if it does not exist","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        assert dir.isDirectory(): \"Directory is not created\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"        assert file.isFile(): \"File is not created\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"     * Creates directory and file if they do not exist at given file path.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    public void createFilePath() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"        if (!dir.isDirectory()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            if (dir.mkdir()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Created directory (\" + dir.getPath() + \")\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"            } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Failed to create directory\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"            try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"                    System.out.println(\"Created data file (\" + file.getPath() + \")\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"                    System.out.println(\"Failed to create storage file\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"     * Loads tasks from storage file into an ArrayList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"     * @throws FileNotFoundException if file is not found","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"            String[] parts \u003d sc.nextLine().split(\"\\\\|\", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"            String header \u003d parts[0];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"            String body \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"                switch (header) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"                case \"T\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"                    Todo todo \u003d Todo.fromTxt(body);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"                    tasks.add(todo);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"                case \"D\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"                    Deadline deadline \u003d Deadline.fromTxt(body);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"                case \"E\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"                    Event event \u003d Event.fromTxt(body);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"                    tasks.add(event);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Error loading a task from storage file due to incorrect format\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"        sc.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"        return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"     * Rewrites storage file with tasks from TaskList.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"     * @param list TaskList to rewrite storage with","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"    public void updateStorage(TaskList list) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"        File temp \u003d writeToTemp(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"        replaceFile(temp, file);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"    private void writeToStorage(TaskList list, String filePath) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"            for (Task task : list.getTasks()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"                writer.write(task.toTxt());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"            writer.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"    private File writeToTemp(TaskList list) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"        String tempPath \u003d dir.getPath() + \"/temp.txt\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"        File temp \u003d new File(tempPath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"            if (!temp.createNewFile()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"                System.out.println(\"Failed to create temp file\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KimHan01"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KimHan01"},"content":"        writeToStorage(list, tempPath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KimHan01"},"content":"        return temp;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KimHan01"},"content":"    private void replaceFile(File source, File dest) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KimHan01"},"content":"            Files.move(source.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"KimHan01":141}},{"path":"src/main/java/rocket/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.command.AddCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.command.Command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.command.EmptyTaskNameCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InvalidDateCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InvalidFormatCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import rocket.exception.EmptyTaskNameException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import rocket.formatter.CustomDateFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":" * Represents a Deadline, containing a single due date to complete the task by.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    private LocalDate by;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    private String dateTimeOutput;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"     * Creates a {@code Deadline} object with a name, mark and due date(by).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"     * Format of date should be \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public Deadline(String taskName, boolean mark, LocalDate by) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        super(taskName, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        this.dateTimeOutput \u003d CustomDateFormatter.formatOutput(by);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"     * Returns formatted String representation for storage file of {@code Deadline} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"     * Format to be returned is \"D|MARK|NAME|BY\".","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"     * @return formatted String for storage","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    public String toTxt() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        String mark \u003d super.getMark() ? \"1\" : \"0\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"        return \"D|\" + mark + \"|\" + super.getName() + \"|\" + dateTimeOutput + \"\\n\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"    public TaskType getType() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"        return TaskType.DEADLINE;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"     * Returns the due date of the deadline","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"     * @return the due date of the deadline as a LocalDate","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        return this.by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"     * Returns task description of {@code Deadline} object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTimeOutput + \")\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    public void updateBy(LocalDate newBy) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        this.by \u003d newBy;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"        this.dateTimeOutput \u003d CustomDateFormatter.formatOutput(newBy);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"     * Returns a {@code Deadline} object from a formatted String without its header(\"D|\").","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"     * @throws ArrayIndexOutOfBoundsException if the input String is not formatted correctly","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"    public static Deadline fromTxt(String body) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"        // Format of given body should be: 0/1|NAME|BY","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"        String[] parts \u003d body.split(\"\\\\|\", 2);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"        boolean mark \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"        String nameAndBy \u003d parts[1];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"        int index \u003d nameAndBy.lastIndexOf(\"|\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"        String name \u003d nameAndBy.substring(0, index);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"        String by \u003d nameAndBy.substring(index + 1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"        return new Deadline(name, mark, CustomDateFormatter.dateFromOutputFormat(by));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"     * Checks if the input is a {@code Deadline} task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"     * Deadline task format should be \"deadline NAME /by yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"    public static boolean isDeadline(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 9","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(TaskType.DEADLINE.name())","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(8, 9).isBlank();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"     * Returns the {@code AddCommand} for a Deadline task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"     * from the given input if valid,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"     * otherwise an appropriate error {@code Command} is returned.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"    public static Command getAddDeadlineCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"            Deadline deadline \u003d Deadline.createDeadlineFromInput(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"            return new AddCommand(deadline, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"        } catch (EmptyTaskNameException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"            return new EmptyTaskNameCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"            return new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"            return new InvalidDateCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"    private static Deadline createDeadlineFromInput(String input)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"            throws EmptyTaskNameException, IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"        String[] parts \u003d input.substring(9).split(\"/by\", 0);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"            throw new EmptyTaskNameException(\"Blank Deadline name given\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"            throw new IllegalArgumentException(\"Invalid deadline format\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"        LocalDate dateTime \u003d CustomDateFormatter.dateFromInputFormat(parts[1].trim());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"        return new Deadline(name, false, dateTime);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":125}},{"path":"src/main/java/rocket/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.command.AddCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.command.Command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.command.EmptyTaskNameCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InvalidDateCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InvalidFormatCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import rocket.exception.EmptyTaskNameException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import rocket.formatter.CustomDateFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":" * Represents an Event task with a start date(from) and an end date(to).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    private LocalDate from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    private LocalDate to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    private String fromOutput; // Formatted output string of from","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    private String toOutput; // Formatted output string of to","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"     * Creates an {@code Event} object with a name, mark, start date(from) and end date(to).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    public Event(String taskName, boolean mark, LocalDate from, LocalDate to) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"        super(taskName, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        this.fromOutput \u003d CustomDateFormatter.formatOutput(from);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"        this.toOutput \u003d CustomDateFormatter.formatOutput(to);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"     * Returns formatted String representation for storage file of {@code Event} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"     * Format to be returned is \"E|MARK|NAME|FROM|TO\".","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    public String toTxt() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        String mark \u003d super.getMark() ? \"1\" : \"0\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"        return \"E|\" + mark + \"|\" + super.getName() + \"|\" + fromOutput + \"|\" + toOutput + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    public TaskType getType() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"        return TaskType.EVENT;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"     * Returns the start date of the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"     * @return the start date of the event as a LocalDate","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"        return this.from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"     * Returns the end date of the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"     * @return the end date of the event as a LocalDate","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"        return this.to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"     * Returns task description of {@code Event} object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromOutput + \" to: \" + toOutput + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    public void updateTo(LocalDate date) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"        this.to \u003d date;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"        this.toOutput \u003d CustomDateFormatter.formatOutput(to);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"    public void updateFrom(LocalDate date) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"        this.from \u003d date;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"        this.fromOutput \u003d CustomDateFormatter.formatOutput(from);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"     * Returns an {@code Event} object from a formatted String without its header(\"E|\").","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"     * @throws ArrayIndexOutOfBoundsException if the input String is not formatted correctly","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"    public static Event fromTxt(String body) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"        // Format of given body should be: 0/1|NAME|FROM|TO","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"        String[] parts \u003d body.split(\"\\\\|\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"        boolean mark \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"        String name \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"        String from \u003d parts[2];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"        String to \u003d parts[3];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"        return new Event(name, mark, CustomDateFormatter.dateFromOutputFormat(from),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"                CustomDateFormatter.dateFromOutputFormat(to));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"     * Checks if the input is an {@code Event} task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"    public static boolean isEvent(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 6","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(TaskType.EVENT.name())","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(5, 6).isBlank();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"     * Returns a {@code AddCommand} for an {@code Event} task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"     * from the given input if valid,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"     * otherwise an appropriate error {@code Command} is returned.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"    public static Command getAddEventCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"            Event event \u003d Event.createEventFromInput(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"            return new AddCommand(event, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"        } catch (EmptyTaskNameException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"            return new EmptyTaskNameCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"            return new InvalidFormatCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"            return new InvalidDateCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KimHan01"},"content":"    private static Event createEventFromInput(String input)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KimHan01"},"content":"            throws EmptyTaskNameException, IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KimHan01"},"content":"        String[] splitFrom \u003d input.substring(6).split(\"/from\", 0);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KimHan01"},"content":"        String name \u003d splitFrom[0].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KimHan01"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KimHan01"},"content":"            throw new EmptyTaskNameException(\"Blank Event name given\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KimHan01"},"content":"        if (splitFrom.length !\u003d 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KimHan01"},"content":"            throw new IllegalArgumentException(\"Invalid Event format\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"KimHan01"},"content":"        String[] splitTo \u003d splitFrom[1].split(\"/to\", 0);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"KimHan01"},"content":"        if (splitTo.length !\u003d 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KimHan01"},"content":"            throw new IllegalArgumentException(\"Invalid Event format\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"KimHan01"},"content":"        LocalDate to \u003d CustomDateFormatter.dateFromInputFormat(splitTo[0].trim());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"KimHan01"},"content":"        LocalDate from \u003d CustomDateFormatter.dateFromInputFormat(splitTo[1].trim());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"KimHan01"},"content":"        return new Event(name, false, to, from);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":145}},{"path":"src/main/java/rocket/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":" * Represents a task in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    private String taskName;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"     * Creates a {@code Task} object with a name and mark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    public Task(String taskName, boolean mark) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    public String getName() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"        return this.taskName;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    public boolean getMark() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    public void rename(String newName) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"        this.taskName \u003d newName;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"     * Returns formatted String representation for storage file of {@code Task} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"     * Format to be returned depends on the type of task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"     * @return formatted String for storage","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    public abstract String toTxt();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"     * Returns the task type of {@code Task} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    public abstract TaskType getType();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"     * Returns due date of {@code Task}. This method is not supported for {@link Task} class","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"     * and is to be overridden by relevant child classes.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        throw new UnsupportedOperationException(\"This method is not supported for this class\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"     * Returns start date of {@code Task}. This method is not supported for {@link Task} class","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"     * and is to be overridden by relevant child classes.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        throw new UnsupportedOperationException(\"This method is not supported for this class\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"     * Returns end date of {@code Task}. This method is not supported for {@link Task} class","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"     * and is to be overridden by relevant child classes.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"        throw new UnsupportedOperationException(\"This method is not supported for this class\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"     * Returns task description of {@code Task}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":87}},{"path":"src/main/java/rocket/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.exception.RocketRuntimeException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"public class TaskList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"     * Creates a {@code TaskList} object with an empty list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"     * Creates a {@code TaskList} object with a list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"     * Returns a duplicate {@code Task} object from the {@code TaskList}.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"        String name \u003d task.getName();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        boolean mark \u003d task.getMark();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"        TaskType taskType \u003d task.getType();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        assert taskType \u003d\u003d TaskType.TODO || taskType \u003d\u003d TaskType.DEADLINE || taskType \u003d\u003d TaskType.EVENT","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"                : \"Invalid task type\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"        switch (taskType) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"        case TODO:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"            return new Todo(name, mark);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"            LocalDate by \u003d task.getBy();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"            return new Deadline(name, mark, by);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        case EVENT:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"            LocalDate from \u003d task.getFrom();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"            LocalDate to \u003d task.getTo();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"            return new Event(name, mark, from, to);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"        default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"            throw new RocketRuntimeException(\"Failed to get Task from TaskList\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"            // Fallthrough: throws RocketRuntimeException, but this statement should not occur","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"     * Returns the size of the task list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"     * Returns an arraylist containing all tasks in the task list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"     * Checks if the task list is empty","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KimHan01"},"content":"     * Removes a task from the task list based on the given index","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KimHan01"},"content":"     * @param index the zero-based index of the task to be removed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KimHan01"},"content":"     * @return the removed task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KimHan01"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (index \u003c 0 or index \u003e\u003d size)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KimHan01"},"content":"    public Task remove(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KimHan01"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KimHan01"},"content":"     * Adds the given task into the task list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KimHan01"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KimHan01"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KimHan01"},"content":"     * Marks a task in the task list based on the given index","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KimHan01"},"content":"     * @param index the zero-based index of the task to be removed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KimHan01"},"content":"     * @return the marked task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KimHan01"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (index \u003c 0 or index \u003e\u003d size)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KimHan01"},"content":"    public Task mark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KimHan01"},"content":"        tasks.get(index).markTask();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KimHan01"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KimHan01"},"content":"     * Unmarks a task in the task list based on the given index","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KimHan01"},"content":"     * @param index the zero-based index of the task to be removed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KimHan01"},"content":"     * @return the unmarked task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KimHan01"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (index \u003c 0 or index \u003e\u003d size)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KimHan01"},"content":"    public Task unmark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KimHan01"},"content":"        tasks.get(index).unmarkTask();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KimHan01"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KimHan01"},"content":"    public void updateTaskName(int index, String newName) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KimHan01"},"content":"        tasks.get(index).rename(newName);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KimHan01"},"content":"    public void updateDeadlineDate(int index, LocalDate newDate) throws ClassCastException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KimHan01"},"content":"        Deadline deadline \u003d (Deadline) tasks.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KimHan01"},"content":"        deadline.updateBy(newDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KimHan01"},"content":"    public void updateEventStartDate(int index, LocalDate newDate) throws ClassCastException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KimHan01"},"content":"        Event event \u003d (Event) tasks.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KimHan01"},"content":"        event.updateFrom(newDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KimHan01"},"content":"    public void updateEventEndDate(int index, LocalDate newDate) throws ClassCastException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KimHan01"},"content":"        Event event \u003d (Event) tasks.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KimHan01"},"content":"        event.updateTo(newDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":136}},{"path":"src/main/java/rocket/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":" * Represents the type of task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"public enum TaskType {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":8}},{"path":"src/main/java/rocket/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.command.AddCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import rocket.command.Command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import rocket.command.EmptyTaskNameCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import rocket.exception.EmptyTaskNameException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" * Represents a task with a name and a mark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    public Todo(String taskName, boolean mark) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"        super(taskName, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"     * Returns formatted String representation (\"T|MARK|NAME\") of {@code Todo} object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    public String toTxt() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        String mark \u003d super.getMark() ? \"1\" : \"0\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        return \"T|\" + mark + \"|\" + super.getName() + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    public TaskType getType() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"        return TaskType.TODO;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"     * Returns the task description of {@code Todo} object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"     * Returns a {@code Todo} object from a formatted String without its header(\"T|\").","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"     * @throws ArrayIndexOutOfBoundsException if the format is wrong","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    public static Todo fromTxt(String body) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"        // Format of given body should be: 0/1|NAME","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"        String[] parts \u003d body.split(\"\\\\|\", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        boolean mark \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"        String name \u003d parts[1];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        return new Todo(name, mark);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"     * Checks if the input is a {@code Todo} task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    public static boolean isTodo(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        return input.length() \u003e 5","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(TaskType.TODO.name())","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"                \u0026\u0026 input.substring(4, 5).isBlank();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"     * Returns the {@code AddCommand} for a {@code Todo} task from the given input if valid,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"     * otherwise the appropriate error {@code Command} is returned.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"    public static Command getAddTodoCommand(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"            Todo todo \u003d Todo.createTodoFromInput(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"            return new AddCommand(todo, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"        } catch (EmptyTaskNameException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"            return new EmptyTaskNameCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KimHan01"},"content":"    private static Todo createTodoFromInput(String input) throws EmptyTaskNameException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KimHan01"},"content":"        String name \u003d input.substring(5);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KimHan01"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KimHan01"},"content":"            throw new EmptyTaskNameException(\"Blank Todo name given\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KimHan01"},"content":"        return new Todo(name.trim(), false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"KimHan01":79}},{"path":"src/main/java/rocket/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    private void flip() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"    public static DialogBox getRocketDialog(String text, Image img) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        db.flip();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"        return db;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":60}},{"path":"src/main/java/rocket/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import rocket.Rocket;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    private final Rocket rocket \u003d new Rocket(\"./data/storage.txt\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"            scene.setFill(Color.MEDIUMBLUE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"            stage.setTitle(\"Rocket\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"            stage.getIcons().add(new Image(\"/images/DaRocketIcon.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRocket(rocket);  // inject the Duke instance","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().introMessage();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"            stage.show();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":36}},{"path":"src/main/java/rocket/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"import rocket.Rocket;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"import rocket.command.InputCommandType;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    private Rocket rocket;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    private Image rocketImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaRocket.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    public void setRocket(Rocket r) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        rocket \u003d r;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        String response \u003d rocket.getResponse(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"                DialogBox.getRocketDialog(response, rocketImage)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"        );","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"        if (input.equalsIgnoreCase(InputCommandType.BYE.name())) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"            javafx.application.Platform.exit();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"     * Creates one dialog box for rocket containing his introduction message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    public void introMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"        dialogContainer.getChildren().add(DialogBox.getRocketDialog(rocket.rocketIntro(), rocketImage));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":68}},{"path":"src/main/java/rocket/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import rocket.Rocket;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":" * User Interface class which handles the interaction between user and {@link Rocket}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":" * Contains methods to read input from user and display messages to user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"public class Ui {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    private Scanner sc;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"     * Creates a {@code Ui} with an initialized {@code Scanner} which takes input from user","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"    public Ui() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"     * Reads one input line from user","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"     * @return String of input line","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public String readInputCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"    private final String LINE \u003d \"-----------------------------------------------------------------------------------\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"            \"------------------------\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"    public void read(String message) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"     * Reads rocket\u0027s introduction message","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"    public void introduction() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"        read(Rocket.rocketIntro());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"     * Reads file not found message","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    public void fileNotFound() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"        read(\"File not found\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"KimHan01":51}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"750.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"rocket.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"660.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"660.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"558.0\" prefWidth\u003d\"750.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"554.0\" prefWidth\u003d\"750.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"KimHan01":19}},{"path":"src/test/java/rocket/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"    LocalDate date \u003d LocalDate.of(2030, 12, 30);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    String dateStr \u003d \"Dec 30 2030\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_markDone_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|1|test1|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"test1\", true, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_markNotDone_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|test1|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"test1\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_alphanumericTodoName_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|0|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"0\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|a|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"a\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|test1|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"test1\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|1Test|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"1Test\", false,date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_specialCharactersTodoName_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/||\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/|\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|\\\"\\\\|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"\\\"\\\\\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_dividerInMiddle_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"D|0|test1|test2|\" + dateStr + \"\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"                new Deadline(\"test1|test2\", false, date).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"    public void fromTxt_correctFormatInput_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Deadline(\"test1\", false, date).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"                Deadline.fromTxt(\"0|test1|\" + dateStr).toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Deadline(\"1Test\", true, date).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"                Deadline.fromTxt(\"1|1Test|\" + dateStr).toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KimHan01"},"content":"    public void fromTxt_specialCharactersDeadlineName_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Deadline(\"!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/|\", false, date).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KimHan01"},"content":"                Deadline.fromTxt(\"0|!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/||\" + dateStr).toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Deadline(\"\\\"\\\\\", false, date).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KimHan01"},"content":"                Deadline.fromTxt(\"0|\\\"\\\\|\" + dateStr).toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KimHan01"},"content":"    public void fromTxt_dividerInMiddle_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Deadline(\"test1|test2\", false, date).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KimHan01"},"content":"                Deadline.fromTxt(\"0|test1|test2|\" + dateStr).toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"KimHan01":71}},{"path":"src/test/java/rocket/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"package rocket.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"public class TodoTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_markDone_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|1|test1\\n\", new Todo(\"test1\", true).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_markNotDone_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|test1\\n\", new Todo(\"test1\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_alphanumericTodoName_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|0\\n\", new Todo(\"0\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|a\\n\", new Todo(\"a\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|test1\\n\", new Todo(\"test1\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|1Test\\n\", new Todo(\"1Test\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_specialCharactersTodoName_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/|\\n\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KimHan01"},"content":"                new Todo(\"!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/|\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|\\\"\\\\\\n\", new Todo(\"\\\"\\\\\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KimHan01"},"content":"    public void toTxt_dividerInMiddle_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KimHan01"},"content":"        assertEquals(\"T|0|test1|test2\\n\", new Todo(\"test1|test2\", false).toTxt());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KimHan01"},"content":"    public void fromTxt_correctFormatInput_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Todo(\"test1\", false).toString(), Todo.fromTxt(\"0|test1\").toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Todo(\"1Test\", true).toString(), Todo.fromTxt(\"1|1Test\").toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KimHan01"},"content":"    public void fromTxt_specialCharactersTodoName_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Todo(\"!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/|\", false).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KimHan01"},"content":"                Todo.fromTxt(\"0|!@#$%^\u0026*()-_\u003d+`~{[}]:;\u0027,\u003c.\u003e?/|\").toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Todo(\"\\\"\\\\\", false).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KimHan01"},"content":"                Todo.fromTxt(\"0|\\\"\\\\\").toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KimHan01"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KimHan01"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KimHan01"},"content":"    public void fromTxt_dividerInMiddle_success() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KimHan01"},"content":"        assertEquals(new Todo(\"test1|test2\", false).toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KimHan01"},"content":"                Todo.fromTxt(\"0|test1|test2\").toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KimHan01"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KimHan01"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"KimHan01":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KimHan01"},"content":"todo readbook","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KimHan01"},"content":"deadline homework /by tmr","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KimHan01"},"content":"event interview /from 10am /to 11am","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KimHan01"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KimHan01"},"content":"mark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KimHan01"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KimHan01"},"content":"blah","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KimHan01"},"content":"delete 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KimHan01"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KimHan01"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"KimHan01":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KimHan01"},"content":"javac  -cp ..\\src\\main\\java\\chatbot -Xlint:none -d ..\\bin ..\\src\\main\\java\\chatbot\\*.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KimHan01"},"content":"java -classpath ..\\bin chatbot.Rocket \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KimHan01":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KimHan01"},"content":"if ! javac -cp ../src/main/java/chatbot -Xlint:none -d ../bin ../src/main/java/chatbot/*.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"KimHan01":1,"-":37}}]
