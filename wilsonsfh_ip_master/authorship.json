[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | abc","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | jkl","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | ghi | 2023-02-15 00:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"E | 0 | def | 2023-02-15 00:00 | 2024-02-16 00:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | mno | 2025-10-11 00:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | pqr | 2019-12-02 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | 111","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":7}},{"path":"src/main/java/caviar/Caviar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"public class Caviar {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"    public Caviar(String filePath) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        TaskList tempTaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"            tempTaskList \u003d new TaskList(storage);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"            ui.showMessage(\"Roe..? Error loading tasks.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"            tempTaskList \u003d new TaskList();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        taskList \u003d tempTaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    public void run() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"        while (true) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"            try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"                    ui.showMessage(\"Roe. Hope to see you again soon!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"                    break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"                    taskList.listTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"                } else {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"                    processCommand(input);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"            } catch (CaviarException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(\"roe..!! Invalid number format.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(\"roe..!! Something went wrong.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"        ui.close();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"    private void processCommand(String input) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"        if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"            if (parts.length \u003c 2) throw new CaviarException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            taskList.addTask(new Todo(parts[1]));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"        } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"            if (parts.length \u003c 2 || !parts[1].contains(\" /by \"))","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"                throw new CaviarException(\"The deadline format is incorrect! Use: deadline \u003ctask\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"            String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"            taskList.addTask(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"        } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"            if (parts.length \u003c 2 || !parts[1].contains(\" /from \") || !parts[1].contains(\" /to \"))","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"                throw new CaviarException(\"The event format is incorrect! Use: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"            String[] eventParts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"            taskList.addTask(new Event(eventParts[0], eventParts[1], eventParts[2]));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"        } else {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"I don\u0027t understand roe..?\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"            new Caviar(\"data/tasks.txt\").run();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"        } catch (CaviarException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":79}},{"path":"src/main/java/caviar/command/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.command;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"public class TaskList {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        this.storage \u003d null; // Indicate that storage is unavailable","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(); // No storage dependency","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    public TaskList(Storage storage) throws IOException, CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        this.tasks \u003d storage.load(); // Load tasks from file","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"    Roe..? No tasks in the list yet.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! Here are the tasks in your list:\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve added this task:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" task\" + (tasks.size() \u003e 1 ? \"s\" : \"\") + \" in the list. Roe roe.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"            try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"                storage.save(tasks);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"                System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"                e.printStackTrace(); // Debugging","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"    public void markTask(int index) throws CaviarException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + tasks.get(index));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"            saveTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"    public void unmarkTask(int index) throws CaviarException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + tasks.get(index));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            saveTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"    public void deleteTask(int index) throws CaviarException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + removedTask);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list. Roe roe.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"            saveTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"     * Finds and prints tasks that contain the given keyword.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"                System.out.println(\"    \" + count + \".\" + task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"                count++;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wilsonsfh"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"    Roe..? No matching tasks found.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wilsonsfh"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wilsonsfh"},"content":"     * @return List of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wilsonsfh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wilsonsfh"},"content":"        return tasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wilsonsfh"},"content":"     * Shows all deadlines that fall on the specified date.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wilsonsfh"},"content":"    public void showTasksOnDate(String dateStr) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wilsonsfh"},"content":"            LocalDate targetDate \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wilsonsfh"},"content":"            boolean found \u003d false;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Roe. Deadlines for \" + targetDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \":\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wilsonsfh"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wilsonsfh"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wilsonsfh"},"content":"                    Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wilsonsfh"},"content":"                    if (d.getBy().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wilsonsfh"},"content":"                        System.out.println(\"  \" + d);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wilsonsfh"},"content":"                        found \u003d true;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wilsonsfh"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wilsonsfh"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wilsonsfh"},"content":"            if (!found) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wilsonsfh"},"content":"                System.out.println(\"No deadlines on this date.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wilsonsfh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Invalid date format. Use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":151}},{"path":"src/main/java/caviar/exception/CaviarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.exception;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"public class CaviarException extends Exception {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    public CaviarException(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"        super(\"roe..!! \" + message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":14}},{"path":"src/main/java/caviar/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":" * Handles parsing and execution of user commands.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"public class Parser {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"     * Parses and executes the user input.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"     * @param input     The user input command.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"     * @param taskList  The list of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"     * @param ui        The UI instance for interaction.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"     * @param storage   The storage handler.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException if the command is invalid.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    public static void parseAndExecute(String input, TaskList taskList, Ui ui, Storage storage) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"            case \"bye\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(\"Roe. Hope to see you again soon!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"                System.exit(0);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"            case \"list\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"                taskList.listTasks();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2) throw new CaviarException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"                taskList.addTask(new Todo(parts[1]));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2 || !parts[1].contains(\" /by \"))","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"                    throw new CaviarException(\"The deadline format is incorrect! Use: deadline \u003ctask\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"                String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"                taskList.addTask(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"            case \"event\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2 || !parts[1].contains(\" /from \") || !parts[1].contains(\" /to \"))","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"                    throw new CaviarException(\"The event format is incorrect! Use: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"                String[] eventParts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"                taskList.addTask(new Event(eventParts[0], eventParts[1], eventParts[2]));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2) throw new CaviarException(\"Mark which task? roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"                int markIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"                taskList.markTask(markIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2) throw new CaviarException(\"Unmark which task? roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"                int unmarkIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"                taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2) throw new CaviarException(\"Delete which task? roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"                int deleteIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"                taskList.deleteTask(deleteIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"            case \"find\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"                if (parts.length \u003c 2) throw new CaviarException(\"Find what? Roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"                taskList.findTasks(parts[1]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"            default:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"                throw new CaviarException(\"I don\u0027t understand roe..?\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"        // Save after every change","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"            ui.showMessage(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":79}},{"path":"src/main/java/caviar/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import java.io.File;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"public class Storage {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    private String filePath;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        File parentDir \u003d file.getParentFile(); // Ensure the directory exists","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"            parentDir.mkdirs(); // Create missing folders","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Roe..!! Created missing directory for tasks.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"            writer.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"        writer.close();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"            return tasks; // Return empty list if file does not exist","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            tasks.add(Task.fromStorageString(line));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        scanner.close();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"        return tasks;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":57}},{"path":"src/main/java/caviar/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    public Deadline(String description, String by) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        super(description);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        return by;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"     * Parses date-time from multiple possible formats.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"     * @param input The date-time string provided by the user.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"     * @return LocalDateTime representing the parsed date-time.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException if the input does not match any valid formats.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime parseDateTime(String input) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"                \"d/M/yyyy HHmm\",    // 2/12/2019 1800","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy-MM-dd HHmm\",  // 2024-02-13 1800","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy-MM-dd HH:mm\", // 2024-02-13 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy-MM-dd\",       // 2024-02-13 (Default time 00:00)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"                \"MMM d yyyy h:mm a\", // Dec 2 2019 6:00 PM","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy/MM/dd HH:mm\"  // 2019/12/02 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        );","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"            try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"                return dateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"                // Try next format","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"            LocalDate date \u003d LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            return date.atStartOfDay(); // Default time is 00:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"            // Do nothing, throw an error below","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"        throw new CaviarException(\"Please use a valid date format, roe..! Supported formats:\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"                + \" - d/M/yyyy HHmm (e.g., 2/12/2019 1800)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"                + \" - yyyy-MM-dd HHmm (e.g., 2024-02-13 1800)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"                + \" - yyyy-MM-dd (e.g., 2024-02-13) (Default time 00:00)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"                + \" - MMM d yyyy h:mm a (e.g., Dec 2 2019 6:00 PM)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"                + \" - yyyy/MM/dd HH:mm (e.g., 2019/12/02 18:00)\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(displayFormat) + \")\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":80}},{"path":"src/main/java/caviar/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    public Event(String description, String from, String to) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"        super(description);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"     * Parses date-time from multiple possible formats.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime parseDateTime(String input) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"                \"d/M/yyyy HHmm\",    // 2/12/2019 1800","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy-MM-dd HHmm\",  // 2024-02-13 1800","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy-MM-dd HH:mm\", // 2024-02-13 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy-MM-dd\",       // 2024-02-13 (Default time 00:00)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"                \"MMM d yyyy h:mm a\", // Dec 2 2019 6:00 PM","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"                \"yyyy/MM/dd HH:mm\"  // 2019/12/02 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"        );","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"            try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"                // Try next format","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"            LocalDate date \u003d LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"            return date.atStartOfDay(); // Default time is 00:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"            // Do nothing, throw an error below","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"        throw new CaviarException(\"roe..!! Please use a valid date format, roe..! Supported formats:\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"                + \" - d/M/yyyy HHmm (e.g., 2/12/2019 1800)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"                + \" - yyyy-MM-dd HHmm (e.g., 2024-02-13 1800)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"                + \" - yyyy-MM-dd (e.g., 2024-02-13) (Default time 00:00)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"                + \" - MMM d yyyy h:mm a (e.g., Dec 2 2019 6:00 PM)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"                + \" - yyyy/MM/dd HH:mm (e.g., 2019/12/02 18:00)\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(displayFormat) + \" to: \" + to.format(displayFormat) + \")\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \" | \"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":77}},{"path":"src/main/java/caviar/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"public class Task {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    protected String description;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        return description;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"        return (this instanceof Todo ? \"T\" : this instanceof Deadline ? \"D\" : \"E\")","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"                + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"    public static Task fromStorageString(String data) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"        String type \u003d parts[0]; // T, D, or E","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        Task task;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"            switch (type) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"                case \"T\":","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"                    break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"                case \"D\":","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"                        throw new CaviarException(\"Invalid deadline format in storage, roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"                    String by \u003d parts[3]; // Get the deadline time string","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"                    task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"                    break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"                case \"E\":","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"                    if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"                        throw new CaviarException(\"Invalid event format in storage, roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"                    String from \u003d parts[3];","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"                    String to \u003d parts[4];","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"                    task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"                    break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"                default:","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"                    throw new IllegalArgumentException(\"Invalid task type in storage: \" + type);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"                task.markAsDone();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"            return task;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"        } catch (CaviarException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error loading task from storage: \" + data);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"        return null;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":88}},{"path":"src/main/java/caviar/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"        super(description);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":19}},{"path":"src/main/java/caviar/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":" * Handles user interaction with Caviar.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"public class Ui {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    public Ui() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the welcome message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"Hello! I\u0027m Caviar. Roe!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"______________________\\n\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     * Reads user input.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"     * @return User command as a String.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the given message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"     * @param message Message to display.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the divider line.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"______________________\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"     * Closes the scanner.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    public void close() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        scanner.close();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":53}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"deadline cs2103-week 2 /by 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"bye","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"# reset storage (delete previous tasks.txt)","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"if [ -e \"../data/tasks.txt\" ]; then","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    rm ../data/tasks.txt","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"fi","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"java -classpath ../bin Caviar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"# ignore task count differences","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"diff \u003c(grep -v \"Now you have [0-9]\\+ tasks\" ACTUAL.TXT) \u003c(grep -v \"Now you have [0-9]\\+ tasks\" EXPECTED-UNIX.TXT)","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":8,"-":36}}]
