[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"checkstyle {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    implementation \u0027org.openjfx:javafx-controls:17\u0027","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17\u0027","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    mainClass.set(\"caviar.gui.Launcher\")","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"jar {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"    manifest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        attributes(","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"                \u0027Main-Class\u0027: \u0027caviar.Caviar\u0027","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"        )","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    archiveBaseName \u003d \"ip\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":17,"-":39}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"D | 1 | Electricity bills contract end | 2025-02-25 00:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | Read book Man-Month | 2025-02-25 00:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | Marathon X D-day | 2025-02-28 00:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | buy groceries today","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | clean floor","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | meet friend today","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | return book","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | run tomorrow","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | sleep at 12am","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | MA1301 | 2025-02-18 00:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"E | 0 | Gala | 2025-03-01 10:00 | 2025-03-01 12:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | submit report | 2025-03-02 18:00","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":12}},{"path":"data/test_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | read book","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"# Caviar User Guide","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"## Introduction","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"\u003e Caviar, a type of fish roe. Speak to the fish in the water for your tasks!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"Caviar is an interactive task manager with a personality—sometimes ending and starting sentences with _roe_.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"Choose between CLI or GUI interaction with your task manager!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"## Features","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"- **Tasks Management** – Add, mark, unmark, list, and delete tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"- **Deadline Tracker** – Set deadlines with a due date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"- **Event Scheduler** – Schedule events with start and end dates and times.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"- **Find Tasks** – Search for tasks by description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"- **Sort Task List** – Sort your list with different options (chronologically or in reverse order).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"- **Error Handler** – Get warnings if commands are invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"## Setup","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"1. Download the latest release in GitHub Open, and run the application (e.g., `java -jar Caviar.jar`).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"2. If you prefer the GUI, launch with gradle (e.g., `./gradlew run`) normally and interact with the chat window.  ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"   For CLI usage, type commands into your terminal after running the `.jar` file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"### 1. Adding a To-Do Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"Creates a simple task with no date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"todo \u003ctask description\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"### **2. Adding a Deadline**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD HHmm\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"*Compulsory:* description and datetime","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"### **3. Adding an Event**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"event \u003cevent description\u003e /from \u003cYYYY-MM-DD HHmm\u003e /to \u003cYYYY-MM-DD HHmm\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"*Compulsory:* description, /from datetime, and /to datetime","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"### **4. View Task List**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"### **5. Find Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"*Compulsory:* tasks contain keyword in their description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"### **6. Sort Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"**Commands:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"sort 1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"sort 2","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"* Sort all tasks chronologically _or_ reverse-chronologically","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"sort todo 1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"* Sort only todo tasks chronologically","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"sort deadline 2","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"* Sort only deadline tasks reverse-chronologically","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"sort event 1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"* Sort only event tasks chronologically","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"### **7. Mark Task as Done**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"### **8. Unmark a Task**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"### **9. Delete Task**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"*Compulsory:* Deleting tasks by indices.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"### **11. Exiting Caviar**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wilsonsfh"},"content":"**Command:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wilsonsfh"},"content":"```plaintext","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wilsonsfh"},"content":"bye","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wilsonsfh"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wilsonsfh"},"content":"##","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wilsonsfh"},"content":"Willing to contribute to this project? feel free to submit PRs! ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":104,"-":16}},{"path":"src/main/java/caviar/Caviar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.parser.Parser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import caviar.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":" * The main class for the Caviar chatbot application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":" *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":" * \u003cp\u003eCaviar is an interactive task manager that allows users to add,","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":" * manage, and store tasks with deadlines and events.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"public class Caviar {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"     * Initializes the chatbot, loading tasks from storage if available.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If an error occurs while loading tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    public Caviar(String filePath) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path must not be null or empty\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"        taskList \u003d loadTaskListSafely();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"        assert taskList !\u003d null : \"TaskList should never be null after initialization\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"     * Runs the main interaction loop of CLI version for Caviar chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"     * \u003cp\u003eThe chatbot continuously waits for user input and processes commands","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"     * until the user inputs \"bye\".\u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"    public void run() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"        mainLoop();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"        ui.close();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"    private void mainLoop() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        while (true) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"            try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"                String input \u003d readUserInput();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"                if (isBye(input)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"                    ui.showMessage(\"Roe. Hope to see you again soon!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"                    break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"                processInput(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(\"roe..!! Invalid number format.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"            } catch (CaviarException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"                ui.showMessage(\"roe..!! Something went wrong.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"    private TaskList loadTaskListSafely() throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"        TaskList tempTaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"            tempTaskList \u003d new TaskList(storage);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"            ui.showMessage(\"Roe..? Error loading tasks.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"            tempTaskList \u003d new TaskList();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"        return tempTaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"    private String readUserInput() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"        String input \u003d ui.readCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"        assert input !\u003d null : \"User input must not be null\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"        return input;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"    private void processInput(String input) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"        if (\"list\".equals(input)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"            taskList.listTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"            Parser.parseAndExecute(input, taskList, ui, storage);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"    private boolean isBye(String input) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"        boolean isByeCommand \u003d \"bye\".equalsIgnoreCase(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"        return isByeCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"     * Captures the output from parseAndExecute so it can be displayed in the GUI.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"     * @param input The user command","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"     * @return The output text from parseAndExecute","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"    public String getResponseFromCaviar(String input) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"        PrintStream ps \u003d new PrintStream(baos);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"        System.setOut(ps);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wilsonsfh"},"content":"            Parser.parseAndExecute(input, taskList, ui, storage);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wilsonsfh"},"content":"        } catch (CaviarException e) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wilsonsfh"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wilsonsfh"},"content":"        } finally {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wilsonsfh"},"content":"            System.setOut(oldOut);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wilsonsfh"},"content":"        return baos.toString();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wilsonsfh"},"content":"     * The main entry point of the Caviar application.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wilsonsfh"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wilsonsfh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wilsonsfh"},"content":"            new Caviar(\"data/tasks.txt\").run();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wilsonsfh"},"content":"        } catch (CaviarException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wilsonsfh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":135}},{"path":"src/main/java/caviar/command/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.command;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":" * Represents a list of tasks that can be modified and stored.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":" *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":" * \u003cp\u003eThe {@code TaskList} class manages task additions, deletions,","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":" * and storage operations.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"public class TaskList {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs an empty {@code TaskList} without storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        this.storage \u003d null; // Indicate that storage is unavailable","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(); // No storage dependency","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs a {@code TaskList} and loads tasks from storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"     * @param storage The storage instance to load tasks from.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"     * @throws IOException     If there is an issue reading from the storage file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If the storage file contains invalid task data.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"    public TaskList(Storage storage) throws IOException, CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        this.tasks \u003d storage.load(); // Load tasks from file","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"     * Lists all tasks in the current task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"     * Displays a message if the task list is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"    Roe..? No tasks in the list yet.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! Here are the tasks in your list:\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"     * Saves the tasks to storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"     * @throws IOException If an error occurs during saving.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve added this task:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"            \"    Now you have \" + tasks.size() + \" task\" + (tasks.size() \u003e 1 ? \"s\" : \"\") + \" in the list. Roe roe.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"                storage.save(tasks);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"                System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"                e.printStackTrace(); // Debugging","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If the index is out of range.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"    public void markTask(int index) throws CaviarException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + tasks.get(index));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"            saveTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"     * Marks the specified task as not done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"     * \u003cp\u003eIf the storage is available, this method also updates the tasks in the","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"     * storage file.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"     * @param index The index of the task to mark as not done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If the index is out of range (invalid task index).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wilsonsfh"},"content":"    public void unmarkTask(int index) throws CaviarException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wilsonsfh"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + tasks.get(index));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wilsonsfh"},"content":"            saveTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wilsonsfh"},"content":"     * Validates the index for mark/unmark/delete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wilsonsfh"},"content":"    private void validateIndex(int index) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wilsonsfh"},"content":"     * Removes a task from the list based on its index.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wilsonsfh"},"content":"     * \u003cp\u003eIf the storage is available, this method also updates the tasks in the","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wilsonsfh"},"content":"     * storage file.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wilsonsfh"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If the index is out of range (invalid task index).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wilsonsfh"},"content":"    public void deleteTask(int index) throws CaviarException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wilsonsfh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"No such task exists, roe..!!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wilsonsfh"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Roe! I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"      \" + removedTask);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list. Roe roe.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wilsonsfh"},"content":"            saveTasks();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wilsonsfh"},"content":"     * Saves all tasks to the underlying storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wilsonsfh"},"content":"     * \u003cp\u003eIf no storage is set (i.e., {@code storage \u003d\u003d null}), this method does nothing.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wilsonsfh"},"content":"     * @throws IOException If an I/O error occurs while writing tasks to the storage file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"wilsonsfh"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"wilsonsfh"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"wilsonsfh"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"wilsonsfh"},"content":"     * Finds tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"wilsonsfh"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"wilsonsfh"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"wilsonsfh"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"wilsonsfh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"wilsonsfh"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"wilsonsfh"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"wilsonsfh"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"wilsonsfh"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"wilsonsfh"},"content":"     * @return List of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"wilsonsfh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"wilsonsfh"},"content":"        return tasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"wilsonsfh"},"content":"     * Sorts tasks by a user-chosen option:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"wilsonsfh"},"content":"     *   1 \u003d chronologically, A→Z","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"wilsonsfh"},"content":"     *   2 \u003d reverse, Z→A","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"wilsonsfh"},"content":"    public void sortTasksByOption(int option) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"wilsonsfh"},"content":"        if (option !\u003d 1 \u0026\u0026 option !\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Invalid sort option. Please enter 1 or 2.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"wilsonsfh"},"content":"        // User want chronological order with option 1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"wilsonsfh"},"content":"        Comparator\u003cTask\u003e baseComparator \u003d buildBaseComparator();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"wilsonsfh"},"content":"        // User want reversed chronological order with option 2","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"wilsonsfh"},"content":"        if (option \u003d\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"wilsonsfh"},"content":"            baseComparator \u003d baseComparator.reversed();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"wilsonsfh"},"content":"        tasks.sort(baseComparator);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"wilsonsfh"},"content":"        printSortedTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime getDateTimeIfAny(Task t) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"wilsonsfh"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"wilsonsfh"},"content":"            return ((Deadline) t).getBy();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"wilsonsfh"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"wilsonsfh"},"content":"            return ((Event) t).getFrom();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"wilsonsfh"},"content":"        return null; // Todo has no date/time","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"wilsonsfh"},"content":"    private Comparator\u003cTask\u003e buildBaseComparator() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"wilsonsfh"},"content":"        return (t1, t2) -\u003e {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"wilsonsfh"},"content":"            LocalDateTime dt1 \u003d getDateTimeIfAny(t1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"wilsonsfh"},"content":"            LocalDateTime dt2 \u003d getDateTimeIfAny(t2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"wilsonsfh"},"content":"            // Compare both tasks that has date/time","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"wilsonsfh"},"content":"            if (dt1 !\u003d null \u0026\u0026 dt2 !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"wilsonsfh"},"content":"                return dt1.compareTo(dt2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"wilsonsfh"},"content":"            // One task out of the two has date/time, then it goes first","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"wilsonsfh"},"content":"            if (dt1 !\u003d null \u0026\u0026 dt2 \u003d\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"wilsonsfh"},"content":"                return -1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"wilsonsfh"},"content":"            if (dt1 \u003d\u003d null \u0026\u0026 dt2 !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"wilsonsfh"},"content":"                return 1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"wilsonsfh"},"content":"            // Default, compare by description","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"wilsonsfh"},"content":"            return t1.getDescription().compareToIgnoreCase(t2.getDescription());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"wilsonsfh"},"content":"        };","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"wilsonsfh"},"content":"    public void sortTasksByType(String type, int option) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"wilsonsfh"},"content":"        if (!isValidType(type)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Unknown task type. Use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"wilsonsfh"},"content":"        if (option !\u003d 1 \u0026\u0026 option !\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Invalid sort option. Please enter 1 or 2.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"wilsonsfh"},"content":"        // 1) Collect tasks of the chosen type","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cTask\u003e filteredTasks \u003d filterTasksByType(type);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"wilsonsfh"},"content":"        // 2) Sort them using the same base comparator","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"wilsonsfh"},"content":"        Comparator\u003cTask\u003e baseComparator \u003d buildBaseComparator();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"wilsonsfh"},"content":"        if (option \u003d\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"wilsonsfh"},"content":"            baseComparator \u003d baseComparator.reversed();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"wilsonsfh"},"content":"        filteredTasks.sort(baseComparator);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"wilsonsfh"},"content":"        // 3) Print them","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"wilsonsfh"},"content":"        printFilteredTasks(filteredTasks, type, option);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"wilsonsfh"},"content":"    private boolean isValidType(String type) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"wilsonsfh"},"content":"        return type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"wilsonsfh"},"content":"    private List\u003cTask\u003e filterTasksByType(String type) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"wilsonsfh"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"wilsonsfh"},"content":"            if (type.equals(\"todo\") \u0026\u0026 t instanceof caviar.task.Todo) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"wilsonsfh"},"content":"                result.add(t);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"wilsonsfh"},"content":"            } else if (type.equals(\"deadline\") \u0026\u0026 t instanceof caviar.task.Deadline) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"wilsonsfh"},"content":"                result.add(t);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"wilsonsfh"},"content":"            } else if (type.equals(\"event\") \u0026\u0026 t instanceof caviar.task.Event) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"wilsonsfh"},"content":"                result.add(t);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"wilsonsfh"},"content":"        return result;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"wilsonsfh"},"content":"    private void printFilteredTasks(List\u003cTask\u003e filtered, String type, int option) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"wilsonsfh"},"content":"        if (filtered.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"No \" + type + \" tasks found to sort.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"wilsonsfh"},"content":"        String orderName \u003d (option \u003d\u003d 1) ? \"chronologically, A→Z\" : \"reverse, Z→A\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"Here are your \" + type + \" tasks sorted (\" + orderName + \"):\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"wilsonsfh"},"content":"        for (int i \u003d 0; i \u003c filtered.size(); i++) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"  \" + (i + 1) + \". \" + filtered.get(i));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"wilsonsfh"},"content":"    private void printSortedTasks() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"Here are your tasks after sorting:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"wilsonsfh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"  \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"wilsonsfh"},"content":"     * Shows all deadlines that occur on the specified date.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"wilsonsfh"},"content":"     * \u003cp\u003eIf no matching deadlines are found, a message is displayed instead.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"wilsonsfh"},"content":"     * @param dateStr The date string in {@code yyyy-MM-dd} format.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"wilsonsfh"},"content":"    public void showTasksOnDate(String dateStr) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"wilsonsfh"},"content":"            LocalDate targetDate \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"wilsonsfh"},"content":"            boolean found \u003d false;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"wilsonsfh"},"content":"                \"Roe. Deadlines for \" + targetDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \":\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"wilsonsfh"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"wilsonsfh"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"wilsonsfh"},"content":"                    Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"wilsonsfh"},"content":"                    if (d.getBy().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"wilsonsfh"},"content":"                        System.out.println(\"  \" + d);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"wilsonsfh"},"content":"                        found \u003d true;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"wilsonsfh"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"wilsonsfh"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"wilsonsfh"},"content":"            if (!found) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"wilsonsfh"},"content":"                System.out.println(\"No deadlines on this date.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"wilsonsfh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Invalid date format. Use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":347}},{"path":"src/main/java/caviar/exception/CaviarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.exception;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":" * Represents an exception specific to the Caviar application.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"public class CaviarException extends Exception {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"    public CaviarException(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"        super(\"roe..!! \" + message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":10}},{"path":"src/main/java/caviar/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.gui;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":" * Represents a dialog box containing text and an image.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"    private void ensureRight() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"        setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"    private void flip() {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"        dialog.getStyleClass().add(\"bot-label\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        db.ensureRight();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        db.dialog.getStyleClass().add(\"user-label\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        return db;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"    public static DialogBox getCaviarDialog(String text, Image img) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"        db.flip();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"        db.dialog.getStyleClass().add(\"bot-label\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"        return db;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":63}},{"path":"src/main/java/caviar/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.gui;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":" * Launches the JavaFX application.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"public class Launcher {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":12}},{"path":"src/main/java/caviar/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.gui;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.Caviar;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":" * A GUI for Caviar using JavaFX.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    private Caviar caviar;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    public void start(Stage stage) throws CaviarException {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"            // Initialize your chatbot with a data file","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"            caviar \u003d new Caviar(\"data/tasks.txt\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"            // Load FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"            // Set the scene","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"            // Inject the chatbot into the MainWindow controller","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"            controller.setCaviar(caviar);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"            stage.setTitle(\"Caviar Chatbot\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"            stage.show();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":43}},{"path":"src/main/java/caviar/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.gui;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.Caviar;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.parser.Parser;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":" * Controller for the main GUI of Caviar.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    private Caviar caviar;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"    private final Image caviarImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Caviar.png\"));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"        bindScrollPaneToDialogContainer();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"     * Sets the Caviar instance to interact with.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"     * @param c The chatbot instance.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"    public void setCaviar(Caviar c) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"        this.caviar \u003d c;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"    @FXML","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        String input \u003d getUserInput();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        String response \u003d caviar.getResponseFromCaviar(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        displayUserMessage(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"        if (isBye(response)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            displayExitMessage();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"            closeWindow();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"        displayCaviarMessage(response);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"        clearUserInput();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"    private void displayWelcomeMessage() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Caviar. Roe!\\nWhat can I do for you?\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"        displayCaviarMessage(welcomeMessage);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"     * Binds the scrollPane to follow dialogContainer height.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"    private void bindScrollPaneToDialogContainer() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"    private String getUserInput() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"        return userInput.getText().trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"    private boolean isBye(String response) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"        return \"bye\".equalsIgnoreCase(response);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"    private void displayUserMessage(String message) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"        addUserDialog(message, userImage);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"    private void displayCaviarMessage(String message) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"        addCaviarDialog(message, caviarImage);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"    private void displayExitMessage() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"        displayCaviarMessage(\"Roe. Hope to see you again soon!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"    private void clearUserInput() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"    private void addUserDialog(String message, Image image) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(message, image));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"    private void addCaviarDialog(String message, Image image) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"        dialogContainer.getChildren().add(DialogBox.getCaviarDialog(message, image));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"    private void closeWindow() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"        Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wilsonsfh"},"content":"        stage.close();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":114}},{"path":"src/main/java/caviar/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Event;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import caviar.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":" * Handles parsing and execution of corresponding command.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"public class Parser {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    public static void parseAndExecute(String input, TaskList taskList, Ui ui, Storage storage) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"        assert input !\u003d null : \"Command input cannot be null\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        String arguments \u003d (parts.length \u003e 1) ? parts[1] : \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"        switch (command) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"            handleBye(ui);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"        case \"list\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"            handleList(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"            handleMark(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"            handleUnmark(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"            handleTodo(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"        case \"deadline\": // NEW","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"            handleDeadline(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"        case \"event\": // NEW","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"            handleEvent(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"            handleDelete(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        case \"find\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"            handleFind(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"        case \"date\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            handleDate(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"        case \"sort\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"            handleSort(arguments, taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"        default:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"I don\u0027t understand roe..?\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"        saveData(taskList, storage, ui);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"    private static String handleBye(Ui ui) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"        ui.showMessage(\"Roe. Hope to see you again soon!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"        return \"bye\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleList(TaskList taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"        taskList.listTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleMark(String arguments, TaskList taskList) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Please specify the task number to mark.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"            int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"            taskList.markTask(index - 1); // Convert 1-based user input to 0-based index","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Invalid task number format.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleUnmark(String arguments, TaskList taskList) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Please specify the task number to unmark.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"            int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"            taskList.unmarkTask(index - 1); // Convert 1-based user input to 0-based index","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Invalid task number format.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleTodo(String arguments, TaskList taskList) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Todo(arguments));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleDeadline(String arguments, TaskList taskList) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wilsonsfh"},"content":"        // e.g., \"return book /by 2025-02-18 1800\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d arguments.split(\" /by \", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wilsonsfh"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Please specify \u0027/by\u0027 for deadline. Example:\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wilsonsfh"},"content":"                + \"  deadline return book /by 2025-02-18 1800\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wilsonsfh"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wilsonsfh"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Deadline(description, by));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleEvent(String arguments, TaskList taskList) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wilsonsfh"},"content":"        // e.g., \"project meeting /from 2025-03-01 10:00 /to 2025-03-01 12:00\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wilsonsfh"},"content":"        String[] fromParts \u003d arguments.split(\" /from \", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wilsonsfh"},"content":"        if (fromParts.length \u003c 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Please specify \u0027/from\u0027 for event. Example:\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wilsonsfh"},"content":"                + \"  event project meeting /from 2025-03-01 10:00 /to 2025-03-01 12:00\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wilsonsfh"},"content":"        String description \u003d fromParts[0].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wilsonsfh"},"content":"        String[] toParts \u003d fromParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wilsonsfh"},"content":"        if (toParts.length \u003c 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Please specify \u0027/to\u0027 for event. Example:\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wilsonsfh"},"content":"                + \"  event project meeting /from 2025-03-01 10:00 /to 2025-03-01 12:00\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wilsonsfh"},"content":"        String from \u003d toParts[0].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wilsonsfh"},"content":"        String to \u003d toParts[1].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Event(description, from, to));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleDelete(String arguments, TaskList taskList) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Please specify the task number to delete.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wilsonsfh"},"content":"            int index \u003d Integer.parseInt(arguments.trim());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wilsonsfh"},"content":"            taskList.deleteTask(index - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wilsonsfh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wilsonsfh"},"content":"            throw new CaviarException(\"Invalid task number format.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleFind(String arguments, TaskList taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Please specify a keyword to find tasks.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wilsonsfh"},"content":"        java.util.List\u003cTask\u003e matchingTasks \u003d taskList.findTasks(arguments.trim());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"wilsonsfh"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"wilsonsfh"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"wilsonsfh"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"wilsonsfh"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleDate(String arguments, TaskList taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Please specify a date in yyyy-MM-dd format.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"wilsonsfh"},"content":"        taskList.showTasksOnDate(arguments.trim());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleSort(String arguments, TaskList taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"wilsonsfh"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"wilsonsfh"},"content":"            printSortOptions();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d arguments.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"wilsonsfh"},"content":"        // If user typed only one token (e.g. \"1\" or \"2\"), do the existing \"sort all\" approach","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"wilsonsfh"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"wilsonsfh"},"content":"            handleSortAll(parts[0], taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"wilsonsfh"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"wilsonsfh"},"content":"        // Otherwise, user typed two tokens: e.g. \"deadline 1\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"wilsonsfh"},"content":"        String type \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"wilsonsfh"},"content":"        String optionStr \u003d parts[1];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"wilsonsfh"},"content":"            int option \u003d Integer.parseInt(optionStr);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"wilsonsfh"},"content":"            taskList.sortTasksByType(type, option);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"wilsonsfh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Invalid sort option. Please enter 1 or 2.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"wilsonsfh"},"content":"    private static void handleSortAll(String optionStr, TaskList taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"wilsonsfh"},"content":"            int option \u003d Integer.parseInt(optionStr);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"wilsonsfh"},"content":"            taskList.sortTasksByOption(option);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"wilsonsfh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Invalid sort option. Please enter either\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"wilsonsfh"},"content":"                + \"sort 1\\n or\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"wilsonsfh"},"content":"                + \"sort 2\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"wilsonsfh"},"content":"    private static void printSortOptions() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"Sort options:\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"wilsonsfh"},"content":"            + \"Sort all\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"wilsonsfh"},"content":"            + \" i.e. sort 1\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"wilsonsfh"},"content":"            + \"      sort 2\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"wilsonsfh"},"content":"            + \"Or sort a specific type:\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"wilsonsfh"},"content":"            + \"  sort todo 1\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"wilsonsfh"},"content":"            + \"  sort deadline 2\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"wilsonsfh"},"content":"            + \"  sort event 1\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"wilsonsfh"},"content":"    private static void saveData(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"wilsonsfh"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"wilsonsfh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"wilsonsfh"},"content":"            ui.showMessage(\"roe..!! Error saving task.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":239}},{"path":"src/main/java/caviar/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.io.File;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":" * Manages storage of tasks by saving and loading them to/from a file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":" *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":" * \u003cp\u003eThe {@code Storage} class provides methods to persist a list of tasks to a file","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":" * and retrieve them when needed.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"public class Storage {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    private String filePath;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs a {@code Storage} instance with the specified file path.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"     * \u003cp\u003eIf the storage file\u0027s directory does not exist, it is created automatically.\u003c/p\u003e","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"        createDirectoryIfMissing(file);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"            writer.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"        writer.close();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"    private void createDirectoryIfMissing(File file) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            System.out.println(\"Roe..!! Created missing directory for tasks.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"     * @return The list of loaded tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"     * @throws IOException     If an error occurs while reading the file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If an error occurs while parsing task data.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"            return tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            tasks.add(Task.fromStorageString(line));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"        scanner.close();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"        return tasks;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":79}},{"path":"src/main/java/caviar/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":" * Represents a deadline task with a specific due date/time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs a Deadline with the given description and due date/time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"     * @param by          The due date/time string.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If the date/time cannot be parsed.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    public Deadline(String description, String by) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        super(description);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        return by;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime parseDateTime(String input) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"            \"d/M/yyyy HHmm\",    // 2/12/2019 1800","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy-MM-dd HHmm\",  // 2024-02-13 1800","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy-MM-dd HH:mm\", // 2024-02-13 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy-MM-dd\",       // 2024-02-13 (Default time 00:00)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"            \"MMM d yyyy h:mm a\",// Dec 2 2019 6:00 PM","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy/MM/dd HH:mm\"  // 2019/12/02 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"        );","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"            LocalDateTime dateTime \u003d tryParseDateTime(input, format);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"            if (dateTime !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"                return dateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"        LocalDate date \u003d tryParseDate(input, \"yyyy-MM-dd\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"            return date.atStartOfDay(); // Default time is 00:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"        throw new CaviarException(\"Please use a valid date format, roe..! Supported formats:\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"            + \" - d/M/yyyy HHmm (e.g., 2/12/2019 1800)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            + \" - yyyy-MM-dd HHmm (e.g., 2024-02-13 1800)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"            + \" - yyyy-MM-dd (e.g., 2024-02-13) (Default time 00:00)\\n\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"            + \" - MMM d yyyy h:mm a (e.g., Dec 2 2019 6:00 PM)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"            + \" - yyyy/MM/dd HH:mm (e.g., 2019/12/02 18:00)\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime tryParseDateTime(String input, String format) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"            return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"            return null;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDate tryParseDate(String input, String format) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"            return LocalDate.parse(input, formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"            return null;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"    public boolean isDueOn(LocalDate date) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"        return by.toLocalDate().equals(date);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(displayFormat) + \")\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"        return \"D | \" + status + \" | \" + description + \" | \"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"            + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":97}},{"path":"src/main/java/caviar/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":" * Represents an event task with a start and end date/time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs an Event with the given description, start, and end times.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"     * @param description The event description.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"     * @param from        The start date/time string.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"     * @param to          The end date/time string.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If date/time parsing fails.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"    public Event(String description, String from, String to) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"        super(description);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime parseDateTime(String input) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"            \"d/M/yyyy HHmm\",    // 2/12/2019 1800","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy-MM-dd HHmm\",  // 2024-02-13 1800","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy-MM-dd HH:mm\", // 2024-02-13 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy-MM-dd\",       // 2024-02-13 (Default time 00:00)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"            \"MMM d yyyy h:mm a\",// Dec 2 2019 6:00 PM","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"            \"yyyy/MM/dd HH:mm\"  // 2019/12/02 18:00","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"        );","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"            LocalDateTime dateTime \u003d tryParseDateTime(input, format);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"            if (dateTime !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"                return dateTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        LocalDate date \u003d tryParseDate(input, \"yyyy-MM-dd\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"            return date.atStartOfDay();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"        throw new CaviarException(\"roe..!! Please use a valid date format, roe..! Supported formats:\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"            + \" - d/M/yyyy HHmm (e.g., 2/12/2019 1800)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"            + \" - yyyy-MM-dd HHmm (e.g., 2024-02-13 1800)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"            + \" - yyyy-MM-dd (e.g., 2024-02-13) (Default time 00:00)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"            + \" - MMM d yyyy h:mm a (e.g., Dec 2 2019 6:00 PM)\\n\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"            + \" - yyyy/MM/dd HH:mm (e.g., 2019/12/02 18:00)\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDateTime tryParseDateTime(String input, String format) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"            return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"            return null;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"    private LocalDate tryParseDate(String input, String format) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"            return LocalDate.parse(input, formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"            return null;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"            + \" (from: \" + from.format(displayFormat)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"            + \" to: \" + to.format(displayFormat) + \")\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"        return from;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"        return \"E | \" + status + \" | \" + description + \" | \"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"            + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"            + \" | \"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"            + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":100}},{"path":"src/main/java/caviar/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":" * Represents a generic task in the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"public class Task {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"    protected String description;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs a new Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"     * Returns the task description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"        return description;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"     * @return [X] if done, [ ] if not done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"     * Converts the task into a storage-friendly string format.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"     * @return The formatted storage string.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wilsonsfh"},"content":"        String taskType;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wilsonsfh"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wilsonsfh"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wilsonsfh"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wilsonsfh"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wilsonsfh"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wilsonsfh"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wilsonsfh"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wilsonsfh"},"content":"        return taskType + \" | \" + status + \" | \" + description;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wilsonsfh"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wilsonsfh"},"content":"     * Recreates a Task object from a storage string.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wilsonsfh"},"content":"     * @param data The storage string containing task data.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wilsonsfh"},"content":"     * @return The reconstructed Task object.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If the data is invalid.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wilsonsfh"},"content":"    public static Task fromStorageString(String data) throws CaviarException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wilsonsfh"},"content":"        String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wilsonsfh"},"content":"        Task task \u003d createTask(parts);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wilsonsfh"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wilsonsfh"},"content":"            task.markAsDone();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wilsonsfh"},"content":"        return task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wilsonsfh"},"content":"    private static Task createTask(String[] parts) throws CaviarException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wilsonsfh"},"content":"        String type \u003d parts[0], description \u003d parts[2];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wilsonsfh"},"content":"        if (\"T\".equals(type)) return new Todo(description);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wilsonsfh"},"content":"        if (\"D\".equals(type)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wilsonsfh"},"content":"            if (parts.length \u003c 4)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wilsonsfh"},"content":"                throw new CaviarException(\"Invalid deadline format in storage, roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wilsonsfh"},"content":"            return new Deadline(description, parts[3]);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wilsonsfh"},"content":"        if (\"E\".equals(type)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wilsonsfh"},"content":"            if (parts.length \u003c 5)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wilsonsfh"},"content":"                throw new CaviarException(\"Invalid event format in storage, roe..!!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wilsonsfh"},"content":"            return new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wilsonsfh"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wilsonsfh"},"content":"        throw new IllegalArgumentException(\"Invalid task type in storage: \" + type);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":111}},{"path":"src/main/java/caviar/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":" * Represents a Todo task, which is a simple task without any date or time.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"        super(description);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"     * @return The formatted task string.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    @Override","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":26}},{"path":"src/main/java/caviar/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":" * Handles user interaction with Caviar.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"public class Ui {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    public Ui() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the welcome message for CLI.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"Hello! I\u0027m Caviar. Roe!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"______________________\\n\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the welcome message for GUI.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    public String showWelcomeGUI() {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"        return \"Hello! I\u0027m Caviar. Roe!\\n\"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"            + \"______________________\\n\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"     * Reads user input.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"     * @return User command as a String.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the given message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"     * @param message Message to display.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"     * Displays the divider line.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        System.out.println(\"______________________\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wilsonsfh"},"content":"    public void close() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wilsonsfh"},"content":"        scanner.close();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"         alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"               wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"                   fitHeight\u003d\"50.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"                   fitWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"            fx:controller\u003d\"caviar.gui.MainWindow\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"            stylesheets\u003d\"@../css/main.css, @../css/dialog-box.css\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"                   prefWidth\u003d\"324.0\"/\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"                text\u003d\"Send\"/\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"                    prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"                      fillWidth\u003d\"true\"/\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":36}},{"path":"src/test/java/caviar/command/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.command;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":" * Tests the behavior of the {@link TaskList} class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"     * Initializes a new {@link TaskList} before each test.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    void setUp() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     * Tests if a task can be added to the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"    void testFindTasks() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"        taskList.getTasks().add(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        taskList.getTasks().add(new Todo(\"Return book to library\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"        taskList.getTasks().add(new Todo(\"Go for a run\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cTask\u003e results \u003d taskList.findTasks(\"book\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(2, results.size(), \"Should return 2 matching tasks.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(\"Read book\", results.get(0).getDescription());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(\"Return book to library\", results.get(1).getDescription());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"    void testAddTask() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Todo(\"Test Task\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(1, taskList.getTasks().size(), \"Task should be added.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"     * Tests if a task can be deleted from the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"     * @throws Exception If deletion fails.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"    void testDeleteTask() throws Exception {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Todo(\"Task to delete\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(0, taskList.getTasks().size(), \"Task should be removed.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":55}},{"path":"src/test/java/caviar/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"import caviar.command.TaskList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"import caviar.exception.CaviarException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"import caviar.storage.Storage;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Deadline;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"import caviar.task.Todo;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"import caviar.ui.Ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":" * Tests the behavior of the {@link Parser} class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"class ParserTest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    private final Storage storage \u003d new Storage(\"data/test_tasks.txt\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"     * Tests if a \"todo\" command correctly adds a task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"     * @throws CaviarException If there is an error executing the command.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"    void testParseTodo() throws CaviarException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"        Parser.parseAndExecute(\"todo read book\", taskList, ui, storage);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(1, taskList.getTasks().size(), \"Todo should be added.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"     * Tests if an invalid command throws a {@link CaviarException}.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"    void testParseInvalidCommand() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wilsonsfh"},"content":"        Exception exception \u003d assertThrows(CaviarException.class, () -\u003e","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wilsonsfh"},"content":"            Parser.parseAndExecute(\"unknownCommand\", taskList, ui, storage)","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wilsonsfh"},"content":"        );","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wilsonsfh"},"content":"        assertTrue(exception.getMessage().contains(\"roe..!!\"), \"Should throw an error for unknown commands.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"    void testParseFind() throws CaviarException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wilsonsfh"},"content":"        taskList.addTask(new Deadline(\"return book\", \"2025-02-25\"));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wilsonsfh"},"content":"        List\u003cTask\u003e results \u003d taskList.findTasks(\"book\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(2, results.size(), \"Both tasks should be found.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":54}},{"path":"src/test/java/caviar/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":" * Tests the behavior of the {@link Task} class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"class TaskTest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"     * Tests if a task can be marked as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"        Task task \u003d new Todo(\"Test Task\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"        assertTrue(task.isDone, \"Task should be marked as done.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"     * Tests if a task can be marked as not done after being completed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"    void testMarkAsNotDone() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"        Task task \u003d new Todo(\"Test Task\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"        assertFalse(task.isDone, \"Task should be marked as not done.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":32}},{"path":"src/test/java/caviar/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"package caviar.task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":" * JUnit test class for the {@link Todo} class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"public class TodoTest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"     * Tests creation of a Todo task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"        Todo todo \u003d new Todo(\"Finish Gradle setup\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(\"[T][ ] Finish Gradle setup\", todo.toString());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wilsonsfh"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"     * Tests marking a Todo task as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wilsonsfh"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wilsonsfh"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wilsonsfh"},"content":"        Todo todo \u003d new Todo(\"Finish Gradle setup\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wilsonsfh"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"        assertEquals(\"[T][X] Finish Gradle setup\", todo.toString());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":28}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | abc","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wilsonsfh"},"content":"E | 0 | cs2103-week 3 | 2025-02-23 00:00 | 2025-02-28 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wilsonsfh"},"content":"T | 0 | abc","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wilsonsfh"},"content":"D | 0 | cs2103-week 2 | 2025-02-23 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wilsonsfh"},"content":"E | 0 | cs2103-week 3 | 2025-02-23 00:00 | 2025-02-28 00:00","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonsfh"},"content":"todo","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wilsonsfh"},"content":"todo abc","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"deadline","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"deadline cs2103-week 2 /by 2025-02-23","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"event","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"event cs2103-week 3 /from 2025-02-23 /to 2025-02-28","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"bye","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wilsonsfh"},"content":"# define paths","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wilsonsfh"},"content":"SRC_PATH\u003d\"../src/main/java\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wilsonsfh"},"content":"BIN_PATH\u003d\"../bin\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wilsonsfh"},"content":"MAIN_CLASS\u003d\"caviar.Caviar\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wilsonsfh"},"content":"if [ ! -d \"$BIN_PATH\" ]","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wilsonsfh"},"content":"# compile all Java files into bin directory, terminate if error occurs","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wilsonsfh"},"content":"if ! find \"$SRC_PATH\" -name \"*.java\" | xargs javac -cp \"$SRC_PATH\" -Xlint:none -d \"$BIN_PATH\"; then","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wilsonsfh"},"content":"## compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wilsonsfh"},"content":"#if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wilsonsfh"},"content":"#then","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wilsonsfh"},"content":"#    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wilsonsfh"},"content":"#    exit 1","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wilsonsfh"},"content":"#fi","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wilsonsfh"},"content":"# reset storage (delete previous tasks.txt)","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wilsonsfh"},"content":"if [ -e \"../data/tasks.txt\" ]; then","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wilsonsfh"},"content":"    rm ../data/tasks.txt","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wilsonsfh"},"content":"fi","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wilsonsfh"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wilsonsfh"},"content":"# run the program, feed commands from input.txt, and redirect output to ACTUAL.TXT","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wilsonsfh"},"content":"java -classpath \"$BIN_PATH\" \"$MAIN_CLASS\" \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wilsonsfh"},"content":"# ignore task count differences","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wilsonsfh"},"content":"diff \u003c(grep -v \"Now you have [0-9]\\+ tasks\" ACTUAL.TXT) \u003c(grep -v \"Now you have [0-9]\\+ tasks\" EXPECTED-UNIX.TXT)","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wilsonsfh":24,"-":31}}]
