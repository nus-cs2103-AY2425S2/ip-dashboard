[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"# woogie.Woogie project template","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"1. After that, locate the `src/main/java/woogie.Woogie.java` file, right-click it, and choose `Run woogie.Woogie.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"niha81":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"checkstyle {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"    configDirectory.set(file(\"$rootDir/config/checkstyle\"))","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"//    mainClass.set(\"woogie.Woogie\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"    mainClass.set(\"woogie.Launcher\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"    archiveBaseName \u003d \"woogie\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"    archiveFileName \u003d \u0027woogie.jar\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"niha81":25,"-":39}},{"path":"data/woogie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"E | 1 | c | 2024-12-03 1300 | 2025-02-03 1500","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"T | 0 | 2","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"T | 1 | 1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"D | 0 | 2 | 2021-12-23 1400","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"E | 1 | c | 2011-12-12 1400 | 2011-12-13 1600","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"T | 1 | Buy groceries","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"T | 0 | x","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"E | 1 | a | 2020-12-12 1600 | 2020-12-13 1600","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"T | 0 | (0[]0)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"T | 0 | (°△°)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"T | 0 | ( •⌓• )","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"T | 0 | 1","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"T | 1 | (•¬•)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"T | 0 | 1","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":14}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"# woogie.Woogie User Guide","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"niha81":1,"-":29}},{"path":"src/main/java/woogie/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"        displayPicture.setClip(new Circle(displayPicture.getFitWidth() / 2,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"                displayPicture.getFitHeight() / 2,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"                displayPicture.getFitWidth() / 2));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"        // Adjust padding and spacing for better alignment","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"        this.setSpacing(10);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"        this.setPadding(new Insets(5, 10, 5, 10));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"        // Ensure text wraps properly","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"        dialog.setMaxWidth(250); // Set max width before wrapping","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"    private void flip() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niha81"},"content":"    public static DialogBox getWoogieDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niha81"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niha81"},"content":"        db.flip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niha81"},"content":"        return db;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":75}},{"path":"src/main/java/woogie/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"public class Launcher {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":12}},{"path":"src/main/java/woogie/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    private Woogie woogie \u003d new Woogie();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWoogie(woogie);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"            stage.show();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":30}},{"path":"src/main/java/woogie/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    private Woogie woogie;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/samhani.jpg\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    private Image woogieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/woonagi.jpg\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"     * Initializes the main window components.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"        // Display greeting message when GUI starts","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"        String greeting \u003d \"* Greetings! I\u0027m Woogie *･ﾟ✧\\n\" + \" How can I help you?\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"                DialogBox.getWoogieDialog(greeting, woogieImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"    public void setWoogie(Woogie w) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"        woogie \u003d w;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"        String response \u003d woogie.getResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"                DialogBox.getWoogieDialog(response, woogieImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":61}},{"path":"src/main/java/woogie/Woogie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import woogie.command.Parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import woogie.list.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import woogie.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import woogie.ui.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":" * The main entry point for the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":" * Processes user input and manages tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"public class Woogie {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    /** File path where tasks are stored. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"    private static final String FILE_PATH \u003d \"./data/woogie.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"     * Initializes the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"     * Loads saved tasks and prepares for user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    public Woogie() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"        tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"     * Runs the chatbot by processing user commands in a loop.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"     * Saves tasks after each command execution.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"    public void run() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"        ui.showGreeting();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"            String input \u003d ui.readCommand().trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"                ui.showGoodbye();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"            Parser.processCommand(input, tasks, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"            return ui.getGoodbye();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"        return Parser.processCommandWithResponse(input, tasks, ui);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"     * Starts the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"        new Woogie().run();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"niha81":64}},{"path":"src/main/java/woogie/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import woogie.list.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import woogie.task.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import woogie.task.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import woogie.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import woogie.task.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"import woogie.ui.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":" * Handles the processing of user commands.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":" * Determines the appropriate actions to take based on user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"     * Processes user input and executes the corresponding command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     * @param input User input command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList containing the tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"     * @param ui    User interface for displaying messages.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    public static void processCommand(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"            tasks.listTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"            tasks.markTask(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"            tasks.unmarkTask(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"            addTodo(tasks, input, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"            addDeadline(tasks, input, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"            addEvent(tasks, input, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"            tasks.deleteTask(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"            String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"                ui.showMessage(\"Please enter a keyword to search for.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"                tasks.findTask(keyword);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"sorry idk this command ;-;\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"     * Adds a ToDo task to the TaskList.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList where the task will be added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"     * @param input User input command for adding a ToDo.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"     * @param ui    User interface for displaying messages.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"    private static void addTodo(TaskList tasks, String input, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"        if (input.length() \u003c\u003d 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"todo\u0027s description cannot be empty, pls add one (•¬•)\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList where the task will be added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niha81"},"content":"     * @param input User input command for adding a Deadline.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niha81"},"content":"     * @param ui    User interface for displaying messages.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niha81"},"content":"    private static void addDeadline(TaskList tasks, String input, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niha81"},"content":"        if (!input.contains(\" /by \")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"you can\u0027t have a deadline without a deadline, add a /by (•︿•)\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niha81"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niha81"},"content":"            String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niha81"},"content":"            if (parts[0].length() \u003c\u003d 9 || parts[0].substring(9).trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"deadline\u0027s description cannot be empty, pls add one (•¬•)\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niha81"},"content":"            if (!parts[1].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\")) { // Ensure correct format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"deadline must be in yyyy-MM-dd HHmm format!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niha81"},"content":"            String description \u003d parts[0].substring(9);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niha81"},"content":"            String by \u003d parts[1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niha81"},"content":"            Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niha81"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niha81"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"oop, smt went wrong with your deadline input (°△°)!!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niha81"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niha81"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niha81"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList where the task will be added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niha81"},"content":"     * @param input User input command for adding an Event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niha81"},"content":"     * @param ui    User interface for displaying messages.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niha81"},"content":"    private static void addEvent(TaskList tasks, String input, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niha81"},"content":"        if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"i need to know when your event starts and ends,\\n\" + \"pls add both a /from and /to (•︿•)\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niha81"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niha81"},"content":"            String[] firstSplit \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niha81"},"content":"            if (firstSplit.length \u003c 2 || firstSplit[0].substring(6).trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"event\u0027s description cannot be empty, pls add one (•¬•)\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niha81"},"content":"            String description \u003d firstSplit[0].substring(6).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niha81"},"content":"            String[] secondSplit \u003d firstSplit[1].split(\" /to \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niha81"},"content":"            if (secondSplit.length \u003c 2 || secondSplit[0].trim().isEmpty() || secondSplit[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"i need to know when your event starts and ends,\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"niha81"},"content":"                        + \" pls add both a /from and /to (•︿•)\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"niha81"},"content":"            String from \u003d secondSplit[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"niha81"},"content":"            String to \u003d secondSplit[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"niha81"},"content":"            if (!from.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\") || !to.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"event times must be in yyyy-MM-dd HHmm format!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"niha81"},"content":"            Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"niha81"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"niha81"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"oop, smt went wrong with your event input (°△°)!!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"niha81"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"niha81"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"niha81"},"content":"     * Processes user input and executes the corresponding command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"niha81"},"content":"     * Returns a response string instead of printing directly.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"niha81"},"content":"     * @param input User input command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList containing the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"niha81"},"content":"     * @param ui    User interface for displaying messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"niha81"},"content":"     * @return A response string based on the command execution.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"niha81"},"content":"    public static String processCommandWithResponse(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"niha81"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"niha81"},"content":"            return ui.getGoodbye();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"niha81"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"niha81"},"content":"            return tasks.getTaskListAsString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"niha81"},"content":"            return tasks.markTaskWithResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"niha81"},"content":"            return tasks.unmarkTaskWithResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"niha81"},"content":"            return addTodoWithResponse(tasks, input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"niha81"},"content":"            return addDeadlineWithResponse(tasks, input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"niha81"},"content":"            return addEventWithResponse(tasks, input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"niha81"},"content":"            return tasks.deleteTaskWithResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"niha81"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"niha81"},"content":"            String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"niha81"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"niha81"},"content":"                return \"Please enter a keyword to search for (•¬•)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"niha81"},"content":"            } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"niha81"},"content":"                return tasks.findTaskWithResponse(keyword);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"niha81"},"content":"        } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"niha81"},"content":"            return \"sorry idk this command ;-;\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"niha81"},"content":"     * Adds a ToDo task to the TaskList and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList where the task will be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"niha81"},"content":"     * @param input User input command for adding a ToDo.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"niha81"},"content":"     * @return Response message confirming task addition or an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"niha81"},"content":"    private static String addTodoWithResponse(TaskList tasks, String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"niha81"},"content":"        if (input.length() \u003c\u003d 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"niha81"},"content":"            return \"todo\u0027s description cannot be empty, pls add one (•¬•)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"niha81"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"niha81"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"niha81"},"content":"        return tasks.addTaskWithResponse(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"niha81"},"content":"     * Adds a Deadline task to the TaskList and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList where the task will be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"niha81"},"content":"     * @param input User input command for adding a Deadline.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"niha81"},"content":"     * @return Response message confirming task addition or an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"niha81"},"content":"    private static String addDeadlineWithResponse(TaskList tasks, String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"niha81"},"content":"        if (!input.contains(\" /by \")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"niha81"},"content":"            return \"you can\u0027t have a deadline without a deadline, add a /by (•︿•)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"niha81"},"content":"            String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"niha81"},"content":"            if (parts[0].length() \u003c\u003d 9 || parts[0].substring(9).trim().isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"deadline\u0027s description cannot be empty, pls add one (•¬•)\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"niha81"},"content":"            if (!parts[1].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\")) { // Ensure correct format","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"deadline must be in yyyy-MM-dd HHmm format!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"niha81"},"content":"            String description \u003d parts[0].substring(9);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"niha81"},"content":"            String by \u003d parts[1];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"niha81"},"content":"            Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"niha81"},"content":"            return tasks.addTaskWithResponse(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"niha81"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"niha81"},"content":"            return \"oop, smt went wrong with your deadline input (°△°)!!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"niha81"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"niha81"},"content":"            return \"OOP! smt went wrong:\\n\" + e.getMessage();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"niha81"},"content":"     * Adds an Event task to the TaskList and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"niha81"},"content":"     * @param tasks TaskList where the task will be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"niha81"},"content":"     * @param input User input command for adding an Event.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"niha81"},"content":"     * @return Response message confirming task addition or an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"niha81"},"content":"    private static String addEventWithResponse(TaskList tasks, String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"niha81"},"content":"        if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"niha81"},"content":"            return \"i need to know when your event starts and ends,\\n\" + \"pls add both a /from and /to (•︿•)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"niha81"},"content":"            String[] firstSplit \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"niha81"},"content":"            if (firstSplit.length \u003c 2 || firstSplit[0].substring(6).trim().isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"event\u0027s description cannot be empty, pls add one (•¬•)\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"niha81"},"content":"            String description \u003d firstSplit[0].substring(6).trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"niha81"},"content":"            String[] secondSplit \u003d firstSplit[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"niha81"},"content":"            if (secondSplit.length \u003c 2 || secondSplit[0].trim().isEmpty() || secondSplit[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"i need to know when your event starts and ends,\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"niha81"},"content":"                        + \" pls add both a /from and /to (•︿•)\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"niha81"},"content":"            String from \u003d secondSplit[0].trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"niha81"},"content":"            String to \u003d secondSplit[1].trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"niha81"},"content":"            if (!from.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\") || !to.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"niha81"},"content":"                throw new IllegalArgumentException(\"event times must be in yyyy-MM-dd HHmm format!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"niha81"},"content":"            Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"niha81"},"content":"            return tasks.addTaskWithResponse(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"niha81"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"niha81"},"content":"            return \"oop, smt went wrong with your event input (°△°)!!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"niha81"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"niha81"},"content":"            return \"OOP! smt went wrong:\\n\" + e.getMessage();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"niha81":267}},{"path":"src/main/java/woogie/list/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.list;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import woogie.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import woogie.ui.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":" * Manages the list of tasks in Woogie.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":" * Handles adding, deleting, marking, unmarking, and listing tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"     * Initializes a TaskList with a preloaded list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     * @param loadedTasks An ArrayList of tasks loaded from storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"     * Initializes an empty TaskList.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"     * Retrieves the current list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"        return this.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"     * Adds a task to the task list and notifies the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"        ui.showMessage(\"Oki. I\u0027ve added this task:\\n  \" + newTask + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"                + \" tasks in the list (੭˃ᴗ˂)੭.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"     * Deletes a task from the list based on user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"     * @param input The user\u0027s delete command, expected format: \"delete X\" where X is task index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"INVALID! Pls specify task number :)\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"            Task rem \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"Noted. I\u0027ve removed this task:\\n  \" + rem + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"                    + \" tasks in the list ٩\u003eᴗ\u003c)و.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niha81"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niha81"},"content":"            ui.showError(\"woogie.task.Task number must be a valid number :)\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niha81"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"INVALID! pls choose a task between 1 and \" + tasks.size() + \"  (•⌓•).\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niha81"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niha81"},"content":"     * @param input The user\u0027s mark command, expected format: \"mark X\" where X is task index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niha81"},"content":"    public void markTask(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"INVALID! Pls specify task number :)\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niha81"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niha81"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niha81"},"content":"            tasks.get(taskIndex).markDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(taskIndex));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niha81"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niha81"},"content":"            ui.showError(\"Task number must be a valid number :)\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niha81"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"INVALID! pls choose a task between 1 and \" + tasks.size() + \" (•⌓•).\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niha81"},"content":"     * Marks a task as not done based on user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niha81"},"content":"     * @param input The user\u0027s unmark command, expected format: \"unmark X\" where X is task index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niha81"},"content":"    public void unmarkTask(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"INVALID! Pls specify task number :)\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niha81"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niha81"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niha81"},"content":"            tasks.get(taskIndex).markUndone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"Ok, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(taskIndex));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niha81"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niha81"},"content":"            ui.showError(\"Task number must be a valid number :)\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niha81"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"INVALID! pls choose a task between 1 and \" + tasks.size() + \" (•⌓•).\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"niha81"},"content":"     * Lists all tasks currently in the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"niha81"},"content":"     * Displays a message if the task list is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"niha81"},"content":"    public void listTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"niha81"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"nothing here yet TT\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"niha81"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"niha81"},"content":"            ui.showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"niha81"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"niha81"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"niha81"},"content":"            ui.showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"niha81"},"content":"     * Finds tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"niha81"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"niha81"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"niha81"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"niha81"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"niha81"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"niha81"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"niha81"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"No matching tasks found ;-;\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"niha81"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"niha81"},"content":"            ui.showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"niha81"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"niha81"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"niha81"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"niha81"},"content":"     * Returns the list of tasks as a formatted string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"niha81"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"niha81"},"content":"    public String getTaskListAsString() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"niha81"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"niha81"},"content":"            return \"nothing here yet TT\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"niha81"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"niha81"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"niha81"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"niha81"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"niha81"},"content":"     * Marks a specified task as done and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"niha81"},"content":"     * @param input The user input containing the task number.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"niha81"},"content":"     * @return A response message confirming the task is marked done or an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"niha81"},"content":"    public String markTaskWithResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"niha81"},"content":"            return \"INVALID! Pls specify task number :)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"niha81"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"niha81"},"content":"            tasks.get(taskIndex).markDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"niha81"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(taskIndex);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"niha81"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"niha81"},"content":"            return \"OOP! smt went wrong:\\nTask number must be a valid number :)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"niha81"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"niha81"},"content":"            return \"INVALID! pls choose a task between 1 and \" + tasks.size() + \" (•⌓•).\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"niha81"},"content":"     * Marks a specified task as not done and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"niha81"},"content":"     * @param input The user input containing the task number.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"niha81"},"content":"     * @return A response message confirming the task is unmarked or an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"niha81"},"content":"    public String unmarkTaskWithResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"niha81"},"content":"            return \"INVALID! Pls specify task number :)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"niha81"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"niha81"},"content":"            tasks.get(taskIndex).markUndone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"niha81"},"content":"            return \"Ok, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(taskIndex);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"niha81"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"niha81"},"content":"            return \"OOP! smt went wrong:\\nTask number must be a valid number :)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"niha81"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"niha81"},"content":"            return \"INVALID! pls choose a task between 1 and \" + tasks.size() + \" (•⌓•).\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"niha81"},"content":"     * Adds a new task to the list and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"niha81"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"niha81"},"content":"     * @return A response message confirming task addition.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"niha81"},"content":"    public String addTaskWithResponse(Task newTask) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"niha81"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"niha81"},"content":"        return \"Oki. I\u0027ve added this task:\\n  \" + newTask + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"niha81"},"content":"                + \" tasks in the list (˃ᴗ˂).\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"niha81"},"content":"     * Deletes a specified task from the list and returns a response message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"niha81"},"content":"     * @param input The user input containing the task number.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"niha81"},"content":"     * @return A response message confirming task deletion or an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"niha81"},"content":"    public String deleteTaskWithResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"niha81"},"content":"            return \"INVALID! Pls specify task number :)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"niha81"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"niha81"},"content":"            Task rem \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"niha81"},"content":"            return \"Noted. I\u0027ve removed this task:\\n  \" + rem + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"niha81"},"content":"                    + \" tasks in the list ٩\u003eᴗ\u003c)و.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"niha81"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"niha81"},"content":"            return \"OOP! smt went wrong:\\nTask number must be a valid number :)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"niha81"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"niha81"},"content":"            return \"INVALID! pls choose a task between 1 and \" + tasks.size() + \" (•⌓•).\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"niha81"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"niha81"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"niha81"},"content":"     * @return A response message listing matching tasks or indicating no matches found.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"niha81"},"content":"    public String findTaskWithResponse(String keyword) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"niha81"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"niha81"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"niha81"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"niha81"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"niha81"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"niha81"},"content":"            return \"No matching tasks found ;-;\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"niha81"},"content":"        } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"niha81"},"content":"            String res \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"niha81"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"niha81"},"content":"                res +\u003d (i + 1) + \".\" + matchingTasks.get(i);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"niha81"},"content":"            return res;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"niha81":285}},{"path":"src/main/java/woogie/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"import woogie.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":" * Handles saving and loading tasks from a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":" * Ensures tasks persist between program runs.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"     * Initializes a Storage object with the specified file path.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"                writer.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"            writer.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"     * If the file does not exist, returns an empty task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"            return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"            String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"                Task task \u003d Task.fromFileFormat(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niha81"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niha81"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niha81"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"niha81":76}},{"path":"src/main/java/woogie/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":" * Represents a task with a deadline in the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":" * A Deadline task has a specific date and time by which it must be completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"     * Initializes a new Deadline task with a description and due date.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"     * @param by The due date and time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"     * Converts the Deadline task into a formatted string for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(INPUT_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"     * @return The formatted task string with type, status, and due date.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"niha81":45}},{"path":"src/main/java/woogie/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":" * Represents an event task in the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":" * An Event task has a specific start date/time and an end date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"     * Initializes a new Event task with a description, start time, and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"     * @param from The start date and time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"     * @param to The end date and time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"     * Converts the Event task into a formatted string for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"                + from.format(INPUT_FORMATTER) + \" | \" + to.format(INPUT_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"     * @return The formatted task string with type, status, start time, and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"                + \" to: \" + to.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"niha81":50}},{"path":"src/main/java/woogie/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":" * Represents a task in the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":" * Provides functionality to mark tasks as done or not done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"    /** Description of the task. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"    protected String description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"    /** Completion status of the task. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"     * Initializes a task with the given description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"    public void markUndone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"     * @return true if the task is done, otherwise false.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"    public boolean getStatus() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"        return this.description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"     * Returns a string representation of the task in file format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"     * This method is implemented in subclasses.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"     * @return The task formatted for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"     * Creates a task object from a string stored in a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"     * @param line The line from the file representing a task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"     * @return The corresponding Task object, or null if the format is invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"            return null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niha81"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niha81"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niha81"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niha81"},"content":"        switch (type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niha81"},"content":"        case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niha81"},"content":"            ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niha81"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niha81"},"content":"                todo.markDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niha81"},"content":"            return todo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niha81"},"content":"        case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niha81"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niha81"},"content":"                return null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niha81"},"content":"            Deadline deadline \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niha81"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niha81"},"content":"                deadline.markDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niha81"},"content":"            return deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niha81"},"content":"        case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niha81"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niha81"},"content":"                return null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niha81"},"content":"            Event event \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niha81"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niha81"},"content":"                event.markDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niha81"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niha81"},"content":"            return event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niha81"},"content":"        default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niha81"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niha81"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niha81"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niha81"},"content":"     * @return The formatted task string with status and description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niha81"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niha81"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niha81"},"content":"        return \"[\" + status + \"] \" + description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"niha81":115}},{"path":"src/main/java/woogie/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":" * Represents a To-Do task in the Woogie chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":" * A To-Do is a task without a specific date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"     * Initializes a new To-Do task with the given description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     * Converts the To-Do task into a formatted string for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"     * Returns a string representation of the To-Do task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"     * @return The formatted task string with type and status.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"niha81":36}},{"path":"src/main/java/woogie/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":" * Handles all user interactions, including input and output.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":" * Manages user prompts, messages, and errors.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"public class Ui {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"    /** Constant line separator for formatting messages. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"    private static final String LINE \u003d \"\\n---------------------------------------------------------------\\n\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"    /** Scanner object for reading user input. */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"     * Initializes the user interface.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"     * Creates a scanner to read user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    public Ui() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"     * Displays the chatbot\u0027s greeting message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"        System.out.println(LINE + \"* Greetings! I\u0027m Woogie *･ﾟ✧\\n\" + \"How can I help you?\" + LINE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"        return \"* Greetings! I\u0027m Woogie *･ﾟ✧\\n\" + \"How can I help you?\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"     * Displays the chatbot\u0027s farewell message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"        System.out.println(LINE + \"It pains me to have to part ways ૮(ㅠ-ㅠ).\\nHope to see you again soon!\" + LINE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"    public String getGoodbye() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"        return \"It pains me to have to part ways ૮(ㅠ-ㅠ).\\nHope to see you again soon!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"     * Prints a horizontal line separator.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"    public void showLine() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"     * Reads and returns the user\u0027s input command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"        System.out.println(LINE + message + LINE);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niha81"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niha81"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niha81"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niha81"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niha81"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niha81"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niha81"},"content":"        System.out.println(LINE + \"OOP! smt went wrong:\\n\" + message + LINE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"niha81":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"woogie.MainWindow\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"niha81":20}},{"path":"src/test/java/woogie/WoogieTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"import woogie.list.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"import woogie.storage.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"import woogie.task.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"import woogie.task.ToDo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"import woogie.ui.Ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"public class WoogieTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"    private Woogie woogie;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"        storage \u003d new Storage(\"./test_data/woogie_test.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"        tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"        woogie \u003d new Woogie();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"    public void testWoogieInitialization() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"        assertNotNull(woogie, \"Woogie should be initialized properly.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"        assertNotNull(woogie.getClass(), \"Woogie should have a valid class definition.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"    public void testTaskListPersistsAfterExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"        TaskList loadedTasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"        assertEquals(1, loadedTasks.getTasks().size(), \"Task should persist after saving and reloading.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"niha81":46}},{"path":"src/test/java/woogie/list/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.list;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"import woogie.task.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"import woogie.task.ToDo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Finish homework\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"        assertEquals(1, taskList.getTasks().size(), \"Task should be added successfully.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"    public void testDeleteTaskValid() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"        Task task1 \u003d new ToDo(\"Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"        Task task2 \u003d new ToDo(\"Write notes\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"        taskList.deleteTask(\"delete 1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"        assertEquals(1, taskList.getTasks().size(), \"Task should be deleted successfully.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niha81"},"content":"    public void testDeleteTaskInvalidIndex() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niha81"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niha81"},"content":"        taskList.deleteTask(\"delete 10\"); // Invalid index","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niha81"},"content":"        assertEquals(1, taskList.getTasks().size(), \"List should remain unchanged if delete index is out of range.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niha81"},"content":"    public void testMarkTask() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Clean room\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niha81"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niha81"},"content":"        taskList.markTask(\"mark 1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niha81"},"content":"        assertTrue(taskList.getTasks().get(0).getStatus(), \"Task should be marked as done.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niha81"},"content":"    public void testUnmarkTask() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Watch movie\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niha81"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niha81"},"content":"        taskList.markTask(\"mark 1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niha81"},"content":"        taskList.unmarkTask(\"unmark 1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niha81"},"content":"        assertFalse(taskList.getTasks().get(0).getStatus(), \"Task should be marked as not done.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"niha81":69}},{"path":"src/test/java/woogie/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"package woogie.task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"public class TaskTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"    public void testMarkDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Finish homework\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"        task.markDone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"        assertTrue(task.isDone, \"Task should be marked as done.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niha81"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niha81"},"content":"        Task task \u003d new ToDo(\"Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niha81"},"content":"        task.markDone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niha81"},"content":"        task.markUndone();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niha81"},"content":"        assertFalse(task.isDone, \"Task should be marked as not done.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niha81"},"content":"    public void testFromFileFormatTodo() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niha81"},"content":"        Task task \u003d Task.fromFileFormat(\"T | 1 | Buy milk\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niha81"},"content":"        assertNotNull(task, \"Task should not be null.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niha81"},"content":"        assertInstanceOf(ToDo.class, task, \"Task should be an instance of ToDo.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niha81"},"content":"        assertEquals(\"[T][X] Buy milk\", task.toString(), \"Task should be correctly parsed from file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niha81"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niha81"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niha81"},"content":"    public void testFromFileFormatInvalidFormat() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niha81"},"content":"        Task task \u003d Task.fromFileFormat(\"X | 0 | Invalid task\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niha81"},"content":"        assertNull(task, \"Invalid task format should return null.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niha81"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niha81"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"niha81":42}},{"path":"test_data/woogie_test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"T | 0 | Read book","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"niha81":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niha81"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niha81"},"content":"todo","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niha81"},"content":"todo one","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niha81"},"content":"deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niha81"},"content":"deadline /by sun","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niha81"},"content":"deadline two /by sun","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niha81"},"content":"event three /from mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niha81"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niha81"},"content":"mark","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niha81"},"content":"mark 8","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niha81"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niha81"},"content":"mark 2","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niha81"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niha81"},"content":"unmark 2","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niha81"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niha81"},"content":"delete 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niha81"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"niha81":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niha81"},"content":"java -classpath ..\\bin woogie.Woogie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"niha81":1,"-":20}}]
