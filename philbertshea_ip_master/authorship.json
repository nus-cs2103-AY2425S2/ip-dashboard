[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"# Phil chatbot project","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"This is the repository for the Phil chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"1. After that, open the terminal and run `./gradlew run` to start the chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"philbertshea":3,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"checkstyle {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"    mainClass.set(\"phil.main.Launcher\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"    archiveBaseName \u003d \"phil\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"philbertshea":22,"-":39}},{"path":"data/phil.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"Todo -   - read a new book","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"Todo -   - do something today","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"Todo -   - hi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"Todo -   - bye","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"Todo -   - hello","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"Deadline -   - read - tuesday","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"Event -   - hi - mon - tues","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"Event -   - tutorial - 2/5/25 1000 - 05/07/2025 1100","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"Event -   - tutorial - 2/5/25 1100 - tomorrow","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"Event -   - break - 2/7/25 1000 - 2/10/25 1100","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":10}},{"path":"data/philNotes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"hello","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"hey there","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"the sky is blue","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"# Phil User Guide","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"![Image of Interface](Ui.png)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"Phil is a chatbot that helps you track your tasks and notes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"The user types a command into the input text-box","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"## Managing Tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"### Adding todo tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"Add a Todo task that contains a description (with at least one word)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"to the list of tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"Input format: `todo \u003cdescription\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `todo read`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"[T][ ] read","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `todo`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for creating tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"A Todo task requires a description of minimally one word.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"For example, \u0027todo read\u0027 creates the task \u0027read\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"### Adding event tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"Add an Event task that contains a description (with at least one word),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"a \"from\" date (with at least one word) and a \"to\" date (with at least one word)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"to the list of tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"Input format: `event \u003cdescription\u003e /from \u003cstart-date\u003e /to \u003cend-date\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"Note that the `\u003cstart-date\u003e` and `\u003cend-date\u003e` specifically","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"accept dates in the format `M/d/yy HHmm`. If your input matches this format,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"the date will be displayed in the format `MMM d, yyyy h.mma`.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `event tutorial /from today afternoon /to tonight`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"[E][ ] tutorial (from: today afternoon to: tonight)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `event break /from 2/7/25 1000 /to 2/10/25 1100`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"[E][ ] break (from: Feb 7, 2025 10.00AM to: Feb 10, 2025 11.00AM)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `event tutorial /from today`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for creating tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"An Event task requires a description AND a from date, ","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"specified as a string after \u0027/by\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"And a to date, specified as a string after \u0027/to\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"For example, \u0027event reading /from Monday /to Tuesday\u0027 ","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"creates the event \u0027reading\u0027\\n from \u0027Monday\u0027 to \u0027Tuesday\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"### Adding deadline tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"Add a Deadline task that contains a description (with at least one word),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"a \"by\" date (with at least one word).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"Input format: `deadline \u003cdescription\u003e /by \u003cdeadline-date\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"Note that the `\u003cdeadline-date\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"accept dates in the format `M/d/yy HHmm`. If your input matches this format,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"the date will be displayed in the format `MMM d, yyyy h.mma`.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `deadline assigment /by tomorrow`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philbertshea"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philbertshea"},"content":"[D][ ] assignment (by: tomorrow)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philbertshea"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `deadline assignment /by 2/10/25 2200`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philbertshea"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philbertshea"},"content":"[D][ ] assignment (by: Feb 10, 2025 10.00PM)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philbertshea"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `deadline assignment`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for creating tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philbertshea"},"content":"A Deadline task requires a description AND a deadline, specified as a string after \u0027/by\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philbertshea"},"content":"For example, \u0027deadline read /by Tuesday\u0027 creates the task \u0027read\u0027 with a deadline of \u0027Tuesday\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philbertshea"},"content":"### List tasks in list","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philbertshea"},"content":"List all tasks created that have not been removed.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philbertshea"},"content":"Input format: `list`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `list`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philbertshea"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philbertshea"},"content":"1. [T][ ] read","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philbertshea"},"content":"2. [E][ ] tutorial (from: today afternoon to: tonight)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philbertshea"},"content":"3. [D][ ] assignment (by: Feb 10, 2025 10.00AM)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philbertshea"},"content":"### Mark tasks as done","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philbertshea"},"content":"Mark tasks as done using their index, starting from 1.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philbertshea"},"content":"You can check the index of the task, using the `list` command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philbertshea"},"content":"Input format: `mark \u003cindex-of-task\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `mark 2`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philbertshea"},"content":"Nice! I\u0027ve marked the task as done:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philbertshea"},"content":"[E][X] tutorial (from: today afternoon to: tonight)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `mark 1000` where the list has 5 tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for marking or deleting tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"philbertshea"},"content":"To mark a task as done, say \u0027mark X\u0027 where X is the task to mark as done.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"philbertshea"},"content":"Make sure X is a valid positive integer from 1 to 5 (number of tasks). ","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"philbertshea"},"content":"For example, calling \u0027mark 2\u0027 marks the second task as done.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"philbertshea"},"content":"Say \u0027list\u0027 to see the tasks you have stored.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"philbertshea"},"content":"### Mark tasks as not done","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"philbertshea"},"content":"Mark tasks as not done using their index, starting from 1.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"philbertshea"},"content":"You can check the index of the task, using the `list` command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"philbertshea"},"content":"Input format: `unmark \u003cindex-of-task\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `unmark 2`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"philbertshea"},"content":"OK, I\u0027ve marked the task as not done:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"philbertshea"},"content":"[E][ ] tutorial (from: today afternoon to: tonight)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `unmark 1000` where the list has 5 tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for marking or deleting tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"philbertshea"},"content":"To mark a task as not done, say \u0027unmark X\u0027 where X is the task to mark as not done.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"philbertshea"},"content":"Make sure X is a valid positive integer from 1 to 5.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"philbertshea"},"content":"For example, calling \u0027unmark 2\u0027 marks the second task as not done.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"philbertshea"},"content":"Say \u0027list\u0027 to see the tasks you have stored.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"philbertshea"},"content":"### Delete tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"philbertshea"},"content":"Delete tasks using their index, starting from 1.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"philbertshea"},"content":"You can check the index of the task, using the `list` command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"philbertshea"},"content":"Input format: `delete \u003cindex-of-task\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `delete 2`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"philbertshea"},"content":"Noted, I\u0027ve removed this task:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"philbertshea"},"content":"[E][ ] tutorial (from: today afternoon to: tonight)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"philbertshea"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `delete 1000` where the list has 5 tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for marking or deleting tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"philbertshea"},"content":"To delete a task, say \u0027delete X\u0027 where X is the task to remove.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"philbertshea"},"content":"Make sure X is a valid positive integer from 1 to 5. ","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"philbertshea"},"content":"For example, calling \u0027delete 2\u0027 deletes the second task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"philbertshea"},"content":"Say \u0027list\u0027 to see the tasks you have stored.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"philbertshea"},"content":"### Find tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"philbertshea"},"content":"Find tasks using a search term (with at least one word).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"philbertshea"},"content":"Input format: `find \u003csearch-term\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `find read`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"philbertshea"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"philbertshea"},"content":"1. [T][ ] read","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `find`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for creating tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"philbertshea"},"content":"Finding a task requires a search term of minimally one word.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"philbertshea"},"content":"For example, \u0027find hello\u0027 finds all tasks with the keyword \u0027hello\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"philbertshea"},"content":"## Managing Notes","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"philbertshea"},"content":"### Create notes","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"philbertshea"},"content":"Create a note with a note (with at least one word).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"philbertshea"},"content":"Input format: `new-note \u003cnote\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `new-note the sky is blue`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"philbertshea"},"content":"Got it! I\u0027ve added this note:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"philbertshea"},"content":"the sky is blue","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"philbertshea"},"content":"Now you have 2 notes in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"philbertshea"},"content":"Example Invalid Input: `new-note`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"philbertshea"},"content":"Invalid arguments passed for creating tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"philbertshea"},"content":"Details:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"philbertshea"},"content":"A Note requires a description of minimally one word.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"philbertshea"},"content":"For example, \u0027new-note the sky is blue\u0027 creates the note \u0027the sky is blue\u0027.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"philbertshea"},"content":"### List notes","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"philbertshea"},"content":"List all notes in the list of notes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"philbertshea"},"content":"Input format: `list-note`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `list-note`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"philbertshea"},"content":"Here are the notes in your list:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"philbertshea"},"content":"1. the sky is blue","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"philbertshea"},"content":"2. the earth is not flat","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"philbertshea"},"content":"### Delete notes","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"philbertshea"},"content":"Delete a note using its index.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"philbertshea"},"content":"You can check the index of a note using the `list-note` command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"philbertshea"},"content":"Input format: `delete-note \u003cindex-of-note\u003e`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"philbertshea"},"content":"Example Valid Input: `delete-note 2`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"philbertshea"},"content":"Noted. I\u0027ve removed this note:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"philbertshea"},"content":"the earth is not flat","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"philbertshea"},"content":"Now you have 2 notes in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"philbertshea"},"content":"```","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"philbertshea"},"content":"## Others","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"philbertshea"},"content":"### End the conversation","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"philbertshea"},"content":"End the conversation and save the tasks and notes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"philbertshea"},"content":"Input format: `bye`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"philbertshea"},"content":"This closes the GUI window, saving the tasks and notes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"philbertshea"},"content":"These will be loaded in the future.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"philbertshea"},"content":"## Side Note","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"philbertshea"},"content":"The bot saves the details of the tasks and notes in the files `data/phil.txt`","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"philbertshea"},"content":"and `data/philNotes.txt` respectively.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"philbertshea"},"content":"If these happen to be deleted or corrupted, the previously","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"philbertshea"},"content":"saved tasks and notes cannot be restored.","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":266,"-":25}},{"path":"src/main/java/phil/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" * Represents a command to end the conversation.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"public class ByeCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    private NoteList noteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Bye command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks to store.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param noteList list of notes to store.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param storage storage instance that handles loading and storing of data.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    public ByeCommand(TaskList taskList, NoteList noteList, Storage storage) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        this.noteList \u003d noteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and closes the window.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output of the execution.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"    public String execute() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"            this.storage.save(this.taskList, this.noteList);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"            output +\u003d \"Data not saved: \" + e.getMessage() + \"\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        return output + \"Bye. Hope to see you again soon.\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":43}},{"path":"src/main/java/phil/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" * Represents the command to create a Deadline task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"public class DeadlineCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Deadline Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    public DeadlineCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.CREATE_DEADLINE);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        int byIndex \u003d inputArgs.indexOf(\"/by\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        String description \u003d String.join(\" \", inputArgs.subList(1, byIndex));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        String byDate \u003d String.join(\" \", inputArgs.subList(byIndex + 1, inputArgs.size()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().addTask(new Deadline(description, byDate));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":42}},{"path":"src/main/java/phil/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" * Represents the command to delete a task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"public class DeleteCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    private int numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Delete Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks in task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    public DeleteCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid, int numTasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        this.numTasks \u003d numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.DELETE_TASK, this.numTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        int taskToDelete \u003d Integer.parseInt(this.inputArgs.get(1));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().deleteTask(taskToDelete);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":43}},{"path":"src/main/java/phil/command/DeleteNoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" * Represents the command to delete a note.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"public class DeleteNoteCommand extends NoteCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private int numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the New Note Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param noteList list of notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks in task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    public DeleteNoteCommand(List\u003cString\u003e inputArgs, NoteList noteList, boolean isInputInvalid, int numTasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        super(noteList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        this.numTasks \u003d numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.DELETE_NOTE, this.numTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        int noteToRemove \u003d Integer.parseInt(this.inputArgs.get(1));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        return super.getNoteList().deleteNote(noteToRemove);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":42}},{"path":"src/main/java/phil/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" * Represents the command to create an Event task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"public class EventCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Event Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    public EventCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.CREATE_EVENT);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        int fromIndex \u003d inputArgs.indexOf(\"/from\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        int toIndex \u003d inputArgs.indexOf(\"/to\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        String description \u003d String.join(\" \", inputArgs.subList(1, fromIndex));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        String fromDate \u003d String.join(\" \", inputArgs.subList(fromIndex + 1, toIndex));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        String toDate \u003d String.join(\" \", inputArgs.subList(toIndex + 1, inputArgs.size()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().addTask(new Event(description, fromDate, toDate));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":44}},{"path":"src/main/java/phil/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" * Represents the command to find tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"public class FindCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Find Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    public FindCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.FIND_TASK);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        String searchTerm \u003d String.join(\" \", inputArgs.subList(1, inputArgs.size()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().filteredTasksToString(searchTerm);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":40}},{"path":"src/main/java/phil/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":" * Represents the command to list all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"public class ListCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     * Sets up the ListCommand instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     * @param taskList taskList used for accessing the tasks needed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"        super(taskList, false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * Performs the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    public String execute() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":29}},{"path":"src/main/java/phil/command/ListNoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":" * Represents the command to list notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"public class ListNoteCommand extends NoteCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     * Sets up the New Note Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * @param noteList list of notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    public ListNoteCommand(NoteList noteList) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"        super(noteList, false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        return super.getNoteList().toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":30}},{"path":"src/main/java/phil/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" * Represents the command to mark a task as done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"public class MarkCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    private int numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Mark Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks in task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    public MarkCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid, int numTasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        this.numTasks \u003d numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.MARK_DONE, this.numTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        int taskToMark \u003d Integer.parseInt(this.inputArgs.get(1));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().markTaskAsDone(taskToMark);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":43}},{"path":"src/main/java/phil/command/NewNoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.Note;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" * Represents the command to create a new note.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"public class NewNoteCommand extends NoteCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * Sets up the New Note Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param noteList list of notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    public NewNoteCommand(List\u003cString\u003e inputArgs, NoteList noteList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        super(noteList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.CREATE_NOTE);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        String note \u003d String.join(\" \", inputArgs.subList(1, inputArgs.size()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        return super.getNoteList().addNote(new Note(note));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":41}},{"path":"src/main/java/phil/command/NoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" * Represents a command relating to notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"public abstract class NoteCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    private NoteList noteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    private boolean isInputInvalid;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Task Command instance.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * @param noteList list of notes.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    public NoteCommand(NoteList noteList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        this.noteList \u003d noteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        this.isInputInvalid \u003d isInputInvalid;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"     * Returns a list of notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     * @return noteList with a list of notes.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    public NoteList getNoteList() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        return this.noteList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * Throws an InvalidArgumentException with a specified command type","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     * if the input is invalid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"     * @param commandType command type to create the InvalidArgumentException with.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"     * @throws InvalidArgumentException exception to be thrown.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    public void throwExceptionIfInvalid(CommandType commandType) throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        if (!this.isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"            return;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        throw new InvalidArgumentException(commandType);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"     * Throws an InvalidArgumentException with a specified command type","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"     * if the input is invalid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"     * @param commandType command type to create the InvalidArgumentException with.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     * @param numNotes number of notes in note list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"     * @throws InvalidArgumentException exception to be thrown.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"    public void throwExceptionIfInvalid(CommandType commandType, int numNotes) throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"        if (!this.isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"            return;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"        throw new InvalidArgumentException(commandType, numNotes);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"     * Execute the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"    public abstract String execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":70}},{"path":"src/main/java/phil/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" * Represents a command relating to tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"public abstract class TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    private boolean isInputInvalid;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Task Command instance.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    public TaskCommand(TaskList taskList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        this.isInputInvalid \u003d isInputInvalid;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"     * Returns a list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     * @return tasklist with a list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        return this.taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * Throws an InvalidArgumentException with a specified command type","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     * if the input is invalid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"     * @param commandType command type to create the InvalidArgumentException with.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"     * @throws InvalidArgumentException exception to be thrown.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    public void throwExceptionIfInvalid(CommandType commandType) throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        if (!this.isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"            return;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        throw new InvalidArgumentException(commandType);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"     * Throws an InvalidArgumentException with a specified command type","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"     * if the input is invalid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"     * @param commandType command type to create the InvalidArgumentException with.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks in task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"     * @throws InvalidArgumentException exception to be thrown.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"    public void throwExceptionIfInvalid(CommandType commandType, int numTasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"        if (!this.isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"            return;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"        throw new InvalidArgumentException(commandType, numTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"     * Execute the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"    public abstract String execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":70}},{"path":"src/main/java/phil/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import phil.model.Todo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" * Represents the command to create a Todo task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"public class TodoCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Todo Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    public TodoCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.CREATE_TODO);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        String description \u003d String.join(\" \", inputArgs.subList(1, inputArgs.size()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().addTask(new Todo(description));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":40}},{"path":"src/main/java/phil/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.CommandType;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" * Represents the command to mark a task as undone.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"public class UnmarkCommand extends TaskCommand {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private List\u003cString\u003e inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private int numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Unmark Command instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs input arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param isInputInvalid whether input to command is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks in task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    public UnmarkCommand(List\u003cString\u003e inputArgs, TaskList taskList, boolean isInputInvalid, int numTasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        super(taskList, isInputInvalid);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        this.inputArgs \u003d inputArgs;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        this.numTasks \u003d numTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * Executes the command and returns the output string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the output to be displayed by the chatbot","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     *         in the form of a dialog.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    public String execute() throws InvalidArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        super.throwExceptionIfInvalid(CommandType.MARK_UNDONE, this.numTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        int taskToUnmark \u003d Integer.parseInt(this.inputArgs.get(1));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        return super.getTaskList().markTaskAsNotDone(taskToUnmark);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"philbertshea":42}},{"path":"src/main/java/phil/exception/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents the Command Types, to be used with phil.exception.InvalidArgumentException.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"public enum CommandType {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"    CREATE_TODO,","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"    CREATE_DEADLINE,","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"    CREATE_EVENT,","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"    MARK_DONE,","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    MARK_UNDONE,","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    DELETE_TASK,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    FIND_TASK,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    CREATE_NOTE,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    DELETE_NOTE","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":16}},{"path":"src/main/java/phil/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents the exception to be returned for invalid arguments passed when creating tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"public class InvalidArgumentException extends PhilException {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"    private String explainedUsage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"     * Sets up the InvalidArgumentException.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     * @param commandType enum Command type representing the type of command passed by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    public InvalidArgumentException(CommandType commandType) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"        super(\"Invalid arguments passed for creating tasks.\");","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"        if (commandType \u003d\u003d CommandType.CREATE_TODO) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"A Todo task requires a description of minimally one word.\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"                    + \"\\n For example, \u0027todo read\u0027 creates the task \u0027read\u0027.\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.CREATE_DEADLINE) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"A Deadline task requires a description AND a deadline, \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"                                  + \"specified as a string after \u0027/by\u0027.\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\n For example, \u0027deadline read /by Tuesday\u0027 creates the task\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"                                  + \" \u0027read\u0027 with a deadline of \u0027Tuesday\u0027.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.CREATE_EVENT) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"An Event task requires a description AND a from date, \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"                                  + \"specified as a string after \u0027/from\u0027.\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\n And a to date, specified as a string after \u0027/to\u0027.\"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\n For example, \u0027event reading /from Monday /to Tuesday\u0027 \"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"                                  + \" creates the event \u0027reading\u0027\\n from \u0027Monday\u0027 to \u0027Tuesday\u0027.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.FIND_TASK) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"Finding a task requires a search term of minimally one word.\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"                    + \"\\n For example, \u0027find hello\u0027 finds all tasks with the keyword \u0027hello\u0027.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.CREATE_NOTE) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"A Note requires a description of minimally one word.\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"                    + \"\\n For example, \u0027new-note the sky is blue\u0027 creates the note \u0027the sky is blue\u0027.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     * Sets up the InvalidArgumentException, for commands MARK_DONE, MARK_UNDONE and DELETE_TASK.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"     * @param commandType enum Command type representing the type of command passed by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks, for commands involving marking, unmarking or deleting tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"    public InvalidArgumentException(CommandType commandType, int numTasks) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"        super(\"Invalid arguments passed for marking or deleting tasks.\");","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"Add at least one task to your list, before calling mark or delete.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.MARK_DONE) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"To mark a task as done, say \u0027mark X\u0027 where X is the task to mark as done.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nMake sure X is a valid positive integer from 1 to \" + numTasks + \" (number of tasks). \"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nFor example, calling \u0027mark 2\u0027 marks the second task as done.\"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nSay \u0027list\u0027 to see the tasks you have stored.\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.MARK_UNDONE) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"To mark a task as not done, say \u0027unmark X\u0027 where X is the task to mark as not done.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\nMake sure X is a valid positive integer from 1 to \" + numTasks + \".\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\nFor example, calling \u0027unmark 2\u0027 marks the second task as not done.\"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\nSay \u0027list\u0027 to see the tasks you have stored.\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.DELETE_TASK) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"To delete a task, say \u0027delete X\u0027 where X is the task to remove.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\nMake sure X is a valid positive integer from 1 to \" + numTasks + \" . \"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\nFor example, calling \u0027delete 2\u0027 deletes the second task.\"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"                                  + \"\\nSay \u0027list\u0027 to see the tasks you have stored.\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"        } else if (commandType \u003d\u003d CommandType.DELETE_NOTE) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"To delete a note, say \u0027delete X\u0027 where X is the note to remove.\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nMake sure X is a valid positive integer from 1 to \" + numTasks + \" . \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nFor example, calling \u0027delete-note 2\u0027 deletes the second note.\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nSay \u0027list-note\u0027 to see the note you have stored.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"            this.explainedUsage \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philbertshea"},"content":"     * Returns message and explanation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"     * @return message with explained usage.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"    public String getMessage() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philbertshea"},"content":"        return super.getMessage() + \"\\nDetails: \\n\" + this.explainedUsage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":85}},{"path":"src/main/java/phil/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents the exception regarding invalid commands passed when creating tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" * This is thrown when the first word of the input line is not a valid command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"public class InvalidCommandException extends PhilException {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"     * Sets up the InvalidCommandException.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     * @param invalidCommand String representing first word of the command passed by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    public InvalidCommandException(String invalidCommand) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"        super(invalidCommand + \" is not a valid command. \\n\"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"                + \"These are the supported commands: \\n\"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027list\u0027 to see the list of tasks.\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027todo \u003csome task\u003e\u0027 to create a new Todo task. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027deadline \u003csome task\u003e \\\\by \u003cdeadline-date\u003e\u0027 to create a new Deadline task. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027event \u003csome task\u003e \\\\from \u003cstart-date\u003e \\\\end \u003cend-date\u003e\u0027 to create a new Event task. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027delete \u003csome task index\u003e\u0027 to delete a task. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027find \u003csome search term\u003e\u0027 to find a task by that search term. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027new-note \u003csome note\u003e\u0027 to create a new note. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027delete-note \u003csome note index\u003e\u0027 to delete a note. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027list-note\u0027 to view a list of notes. \\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"                + \"\u0027bye\u0027 to end the conversation. \\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":28}},{"path":"src/main/java/phil/exception/PhilException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents a runtime exception, specially for Phil.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"public class PhilException extends RuntimeException {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"     * Sets up the PhilException.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     * @param message representing message of exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    public PhilException(String message) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"        super(message);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":16}},{"path":"src/main/java/phil/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.main;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":" * Represents a Launcher used to workaround path problems.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":" * This class should be executed to initiate the bot (Graphical UI version) by","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" * launching the PhilMain class.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"public class Launcher {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"        Application.launch(PhilMain.class, args);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":14}},{"path":"src/main/java/phil/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.main;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.command.ByeCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.command.DeadlineCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import phil.command.DeleteCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"import phil.command.DeleteNoteCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"import phil.command.EventCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"import phil.command.FindCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"import phil.command.ListCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"import phil.command.ListNoteCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"import phil.command.MarkCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"import phil.command.NewNoteCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"import phil.command.TodoCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"import phil.command.UnmarkCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"import phil.exception.InvalidCommandException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"import phil.exception.PhilException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"import phil.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":" * Represents the Parser which contains logic to process input strings passed in.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"public class Parser {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    private NoteList noteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Parser object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"     * @param noteList list of notes.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"     * @param storage storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"    public Parser(TaskList taskList, NoteList noteList, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"        this.noteList \u003d noteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"     * Checks whether the given string input is valid","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"     * for Mark, Unmark, Delete commands, requiring only one argument.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs String list from input String, delimited by space.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"     * @param numTasks number of tasks in task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"     * @return boolean representing if input is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"    private boolean isInputInvalidForMarkUnmarkDelete(List\u003cString\u003e inputArgs, int numTasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"        if (inputArgs.size() !\u003d 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"            return true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"        } else if (!inputArgs.get(1).matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"            return true;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"            return Integer.parseInt(inputArgs.get(1)) \u003e numTasks;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"     * Checks whether the given string input is valid","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"     * for Find, Todo, Event, Deadline commands.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"     * @param inputArgs String list from input String, delimited by space.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"     * @param minimumNumberOfArgs minimum number of arguments required.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"     * @param requiredArgs varArgs for required args to check.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"     * @return boolean representing if input is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"    private boolean isInputInvalidForFindAndTaskCreation(List\u003cString\u003e inputArgs,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"            int minimumNumberOfArgs, String... requiredArgs) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"        boolean hasMinNumberOfArgs \u003d inputArgs.size() \u003e\u003d minimumNumberOfArgs;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"        boolean hasRequiredArgs \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philbertshea"},"content":"        for (String arg : requiredArgs) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"            hasRequiredArgs \u003d hasRequiredArgs \u0026\u0026 inputArgs.contains(arg);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"        return !hasMinNumberOfArgs || !hasRequiredArgs;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philbertshea"},"content":"    private boolean matchesFirstArg(List\u003cString\u003e inputArgs, String argToMatch) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philbertshea"},"content":"        return inputArgs.get(0).equals(argToMatch);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philbertshea"},"content":"     * Takes in a String input, and returns the corresponding output based on the command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philbertshea"},"content":"     * @param input input by user representing the command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philbertshea"},"content":"     * @return output to print if command is valid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philbertshea"},"content":"     * @throws PhilException to be thrown if command or arguments are not valid.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philbertshea"},"content":"    public String generateStringOutputFromInput(String input) throws PhilException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philbertshea"},"content":"        // Assert taskList and storage are initialised, before potential accesses.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philbertshea"},"content":"        assert this.taskList !\u003d null \u0026\u0026 this.storage !\u003d null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philbertshea"},"content":"        List\u003cString\u003e inputArgs \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philbertshea"},"content":"        int numTasks \u003d this.taskList.getNumberOfTasks();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philbertshea"},"content":"        int numNotes \u003d this.noteList.getNumberOfNotes();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philbertshea"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philbertshea"},"content":"            return new ByeCommand(this.taskList, this.noteList, this.storage).execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"list\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philbertshea"},"content":"            return new ListCommand(this.taskList).execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"delete\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philbertshea"},"content":"            return new DeleteCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForMarkUnmarkDelete(inputArgs, numTasks), numTasks)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"mark\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philbertshea"},"content":"            return new MarkCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForMarkUnmarkDelete(inputArgs, numTasks), numTasks)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"unmark\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philbertshea"},"content":"            return new UnmarkCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForMarkUnmarkDelete(inputArgs, numTasks), numTasks)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"todo\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philbertshea"},"content":"            return new TodoCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForFindAndTaskCreation(inputArgs, 2))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"deadline\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philbertshea"},"content":"            return new DeadlineCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForFindAndTaskCreation(inputArgs, 4, \"/by\"))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"event\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philbertshea"},"content":"            return new EventCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForFindAndTaskCreation(inputArgs, 6, \"/from\", \"/to\"))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"find\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philbertshea"},"content":"            return new FindCommand(inputArgs, this.taskList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForFindAndTaskCreation(inputArgs, 2))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"new-note\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philbertshea"},"content":"            return new NewNoteCommand(inputArgs, this.noteList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForFindAndTaskCreation(inputArgs, 2))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philbertshea"},"content":"        } else if (matchesFirstArg(inputArgs, \"delete-note\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philbertshea"},"content":"            return new DeleteNoteCommand(inputArgs, this.noteList,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philbertshea"},"content":"                    isInputInvalidForMarkUnmarkDelete(inputArgs, numNotes), numNotes)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philbertshea"},"content":"                    .execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"philbertshea"},"content":"        } else if (input.equals(\"list-note\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"philbertshea"},"content":"            return new ListNoteCommand(this.noteList).execute();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"philbertshea"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"philbertshea":148}},{"path":"src/main/java/phil/main/Phil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.main;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.exception.PhilException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents the Phil instance that stores the parser","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" * and a function to get the response from parser based on user input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"public class Phil {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Phil instance.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    public Phil() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        Storage storage \u003d new Storage(\"data\", \"phil.txt\", \"philNotes.txt\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"            noteList \u003d storage.loadNotes();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"            noteList \u003d new NoteList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"        this.parser \u003d new Parser(taskList, noteList, storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     * Return response from parser based on input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * @param input String passed in as input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     * @return String response to be returned by parser.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        // Assert parser is not null before accessing it.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        assert this.parser !\u003d null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"            return this.parser.generateStringOutputFromInput(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"        } catch (PhilException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"            return e.getMessage();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":48}},{"path":"src/main/java/phil/main/PhilMain.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.main;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"import phil.ui.MainWindow;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":" * Represents PhilMain instance that is an Application","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":" * to be launched by the Launcher class upon calling gradle run.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"public class PhilMain extends Application {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    private Phil phil \u003d new Phil();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * Load the MainWindow.fxml file as an AnchorPane, attach the Scene to the Stage","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * and Start showing the Stage to initialise the App.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     * @param stage Stage to set up scene on, and show for the Chatbot Graphic User Interface.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"            FXMLLoader loader \u003d new FXMLLoader(PhilMain.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"            Image philImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Phil.png\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"            AnchorPane ap \u003d loader.load();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"            loader.\u003cMainWindow\u003egetController().setPhil(this.phil);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"            stage.setTitle(\"Phil\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"            stage.getIcons().add(philImage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"            stage.show();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":43}},{"path":"src/main/java/phil/main/PhilTextUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.main;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.ui.Ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents Main Class of Phil (TextUI version) to be executed for running the bot.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class PhilTextUI {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * Main Method to be executed to initialise the chatbot.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"        Storage storage \u003d new Storage(\"data\", \"phil.txt\", \"philNotes.txt\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        String loadMessage \u003d \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"            noteList \u003d storage.loadNotes();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"            loadMessage +\u003d \"Successfully loaded previous notes.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"            noteList \u003d new NoteList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"            loadMessage +\u003d \"Error when loading notes. Not loaded. \\n\" + e.getMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        Parser parser \u003d new Parser(taskList, noteList, storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        Ui ui \u003d new Ui(parser);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        ui.printOutput(loadMessage);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        ui.runBot();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":37}},{"path":"src/main/java/phil/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" * Represents a Deadline task which has a description and a by-date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"M/d/yy HHmm\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy h.mma\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private String byDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private LocalDateTime byDateInDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Deadline object","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @param description String which describes the deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @param byDate String which represents the deadline of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        // Check if byDate is in datetime format, and parse it as datetime if so.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"            LocalDateTime byDateInDateTime \u003d LocalDateTime.parse(byDate, Deadline.INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"            this.byDate \u003d null;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"            this.byDateInDateTime \u003d byDateInDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"            this.byDate \u003d byDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"            this.byDateInDateTime \u003d null;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        // Assert that either byDate or byDateInDateTime is not null","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        assert this.byDateInDateTime !\u003d null || this.byDate !\u003d null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of the deadline (by-date).","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"     * If a LocalDateTime was provided as the bydate, it formats it based on the formatter provided.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"     * Else, the String bydate is returned.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     * @param formatter formatter to format the LocalDateTime object representing the by date to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the by date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    public String byDateToString(DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        if (this.byDate !\u003d null) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"            return this.byDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"            return this.byDateInDateTime.format(formatter);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of Deadline object for printing when list is called.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Deadline object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"                + this.byDateToString(Deadline.OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"     * Returns String representation of Deadline object for use by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Deadline object to be stored and loaded by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"    public String toLoadString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"        return \"Deadline - \" + super.toLoadString() + \" - \"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"                + this.byDateToString(Deadline.INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":76}},{"path":"src/main/java/phil/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" * Represents a Event task which has a description and a from-date and an end-date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"M/d/yy HHmm\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy h.mma\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private String fromDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    private String toDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    private LocalDateTime fromDateInDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    private LocalDateTime toDateInDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Event object","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @param description String which describes the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @param fromDate String which represents the start date of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     * @param toDate String which represents the end date of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    public Event(String description, String fromDate, String toDate) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"            this.fromDateInDateTime \u003d LocalDateTime.parse(fromDate, Event.INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"            this.fromDate \u003d null;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"            this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"            this.fromDateInDateTime \u003d null;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"            this.toDateInDateTime \u003d LocalDateTime.parse(toDate, Event.INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"            this.toDate \u003d null;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"            this.toDate \u003d toDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"            this.toDateInDateTime \u003d null;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        // Assert that either fromDate or fromDateInDateTime is not null","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        assert this.fromDateInDateTime !\u003d null || this.fromDate !\u003d null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"        // Assert that either toDate or toDateInDateTime is not null","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        assert this.toDateInDateTime !\u003d null || this.toDate !\u003d null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of the event\u0027s from-date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"     * If a LocalDateTime was provided as the fromdate, it formats it based on the formatter provided.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"     * Else, the String fromdate is returned.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     * @param formatter formatter to format the LocalDateTime object representing the from date to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the from date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"    public String fromDateToString(DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"        if (this.fromDate !\u003d null) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"            return this.fromDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"            return this.fromDateInDateTime.format(formatter);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of the event\u0027s to-date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"     * If a LocalDateTime was provided as the to-date, it formats it based on the formatter provided.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"     * Else, the String todate is returned.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"     * @param formatter formatter to format the LocalDateTime object representing the to date to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the to date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"    public String toDateToString(DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"        if (this.toDate !\u003d null) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"            return this.toDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"            return this.toDateInDateTime.format(formatter);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of Event object for printing when list is called.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Event object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philbertshea"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philbertshea"},"content":"                + this.fromDateToString(Event.OUTPUT_FORMATTER) + \" to: \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philbertshea"},"content":"                + this.toDateToString(Event.OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philbertshea"},"content":"     * Returns String representation of Event object for use by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Event object to be stored and loaded by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philbertshea"},"content":"    public String toLoadString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philbertshea"},"content":"        return \"Event - \" + super.toLoadString() + \" - \"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philbertshea"},"content":"                + this.fromDateToString(Event.INPUT_FORMATTER) + \" - \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philbertshea"},"content":"                + this.toDateToString(Event.INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":103}},{"path":"src/main/java/phil/model/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents a note.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"public class Note {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"    private String note;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"     * Sets up a note instance.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     * @param note note to be taken down, as a string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    public Note(String note) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"        this.note \u003d note;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * Returns a string showing the note\u0027s content.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the note.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        return this.note;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"philbertshea":27}},{"path":"src/main/java/phil/model/NoteList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":" * Represents a list of notes.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"public class NoteList {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"    private List\u003cNote\u003e notes;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    public NoteList() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"        this.notes \u003d new ArrayList\u003cNote\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     * Returns number of notes.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * @return number of notes stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"    public int getNumberOfNotes() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        return this.notes.size();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"     * Adds note to note list, and returns String output for success.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     * @param note Note to be added into list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * @return String output upon adding to list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    public String addNote(Note note) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        this.notes.add(note);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        return \"Got it! I\u0027ve added this note: \\n\" + note.toString()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"                + \"\\nNow you have \" + this.getNumberOfNotes() + \" notes in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"     * Removes note from note list, and returns String output for success.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"     * @param index index of note (1-indexed) to be removed from list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"     * @return String output upon removing note from note list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"    public String deleteNote(int index) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"        String resultStr \u003d \"Noted. I\u0027ve removed this note: \\n\" + this.notes.get(index - 1).toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        this.notes.remove(index - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"        return resultStr + \"\\nNow you have \" + this.getNumberOfNotes() + \" notes in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"     * Returns string representation of Note list, used when list is called.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the Note list and each Note.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"        StringBuilder listToPrint \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"        listToPrint.append(\"Here are the Notes in your list: \\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfNotes(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"            listToPrint.append((i + 1)).append(\". \").append(this.notes.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        if (this.getNumberOfNotes() \u003e 10) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"            listToPrint.append(\"That\u0027s a lot of notes! Remember to discard what \"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"                    + \"you don\u0027t need using the `delete-note \u003cindex-of-note\u003e` command.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"        return listToPrint.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"     * Returns list of Notes stored in the Note list,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"     * stored as a String for loading.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"     * @return list of Notes stored.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"    public String toLoadString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"        StringBuilder listToPrint \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfNotes(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philbertshea"},"content":"            listToPrint.append(this.notes.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"        return listToPrint.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"philbertshea":82}},{"path":"src/main/java/phil/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents the abstract Task class, which concrete classes Todo, Event, Deadline extend from.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"    protected String description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Task object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     * @param description String which describes the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * Gets the status icon based on whether the task is done (X) or not ( ).","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of Task object for printing when list is called.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"     * Returns String representation of Task object for use by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Task object to be stored and loaded by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"    public String toLoadString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"        return this.getStatusIcon() + \" - \" + this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"     * Returns whether string is in description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"     * @param str String search term to check in description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"     * @return boolean representing whether string is in description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"    public boolean descContains(String str) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"        return this.description.contains(str);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":69}},{"path":"src/main/java/phil/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"public class TaskList {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"    private List\u003cTask\u003e listOfTasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"     * Sets up the TaskList object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * Returns number of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"     * @return number of tasks stored.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * Adds task to task list, and returns String output for success.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * @param task Task to be added into task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     * @return String output upon adding task to task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        return \"Got it! I\u0027ve added this task: \\n\" + task.toString()","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"                + \"\\nNow you have \" + this.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"     * Removes task from task list, and returns String output for success.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     * @param index index of task (1-indexed) to be removed from list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"     * @return String output upon removing task from task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        String resultStr \u003d \"Noted. I\u0027ve removed this task: \\n\" + this.listOfTasks.get(index - 1).toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"        this.listOfTasks.remove(index - 1);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"        return resultStr + \"\\nNow you have \" + this.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"     * Marks task as done on task list, and returns String output for success.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     * @param index index of task (1-indexed) to be marked as done on list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"     * @return String output upon marking task as done on list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"    public String markTaskAsDone(int index) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        this.listOfTasks.get(index - 1).markDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + this.listOfTasks.get(index - 1).toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"     * Marks task as not done on task list, and returns String output for success.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"     * @param index index of task (1-indexed) to be marked as not done on list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"     * @return String output upon marking task as not done on list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"    public String markTaskAsNotDone(int index) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"        this.listOfTasks.get(index - 1).markNotDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"        return \"OK, I\u0027ve marked this task as not done: \\n\" + this.listOfTasks.get(index - 1).toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"     * Returns string representation of task list, used when list is called.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philbertshea"},"content":"     * @return String representing the task list and each task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"        StringBuilder listToPrint \u003d new StringBuilder();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"        listToPrint.append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philbertshea"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philbertshea"},"content":"            listToPrint.append((i + 1)).append(\". \").append(this.listOfTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philbertshea"},"content":"        if (this.getNumberOfTasks() \u003e 10) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philbertshea"},"content":"            listToPrint.append(\"That\u0027s a lot of tasks! Remember to clear tasks \"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philbertshea"},"content":"                    + \"you are done with using the `delete \u003cindex-of-task\u003e` command.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philbertshea"},"content":"        return listToPrint.toString();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philbertshea"},"content":"     * Returns list of tasks stored in the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philbertshea"},"content":"     * @return list of tasks stored.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philbertshea"},"content":"    public List\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philbertshea"},"content":"        return this.listOfTasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philbertshea"},"content":"     * Returns filtered tasks based on search term.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philbertshea"},"content":"     * @param searchTerm String representing the search term to use.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philbertshea"},"content":"     * @return String representing all filtered tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philbertshea"},"content":"    public String filteredTasksToString(String searchTerm) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philbertshea"},"content":"        StringBuilder listToPrint \u003d new StringBuilder();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philbertshea"},"content":"        listToPrint.append(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philbertshea"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philbertshea"},"content":"            Task task \u003d this.listOfTasks.get(i);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philbertshea"},"content":"            if (task.descContains(searchTerm)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philbertshea"},"content":"                listToPrint.append(i + 1).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philbertshea"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philbertshea"},"content":"        return listToPrint.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":119}},{"path":"src/main/java/phil/model/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":" * Represents a Todo task which has a description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Event object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"     * @param description String which describes the event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * Returns the string representation of Todo object for printing when list is called.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Todo object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     * Returns String representation of Todo object for use by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     * @return String representation of the Todo object to be stored and loaded by Storage class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"    public String toLoadString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        return \"Todo - \" + super.toLoadString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":36}},{"path":"src/main/java/phil/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import java.util.List;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"import phil.model.Deadline;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"import phil.model.Event;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"import phil.model.Note;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"import phil.model.Task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"import phil.model.Todo;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":" * Represents the storage element which allows the loading and storing of data to disk.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"public class Storage {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    private Path dirPath;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    private Path taskPath;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    private Path notePath;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Storage object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     * @param dirPath directory path for storing data","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"     * @param taskPath file path for storing data","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    public Storage(String dirPath, String taskPath, String notePath) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        this.dirPath \u003d Paths.get(dirPath);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        this.taskPath \u003d Paths.get(dirPath, taskPath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        this.notePath \u003d Paths.get(dirPath, notePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"     * Loads file specified at dirPath and taskPath.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"     * @return task list obtained from loading file at taskPath.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     * @throws IOException if directory or file cannot be opened or other IO issues.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"    public TaskList loadTasks() throws IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        // Create folder \u0027data\u0027 and/or file \u0027phil.txt\u0027 if it does not exist","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"        if (!Files.exists(this.dirPath)) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"            Files.createDirectory(this.dirPath);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"        if (!Files.exists(this.taskPath)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"            Files.createFile(this.taskPath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"        // Assert that both the directory path and the data path must exist.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"        assert Files.exists(this.dirPath) \u0026\u0026 Files.exists(this.taskPath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"        // Load data from \u0027phil.txt\u0027","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(this.taskPath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"            String[] lineArgs \u003d line.split(\" - \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"            if (lineArgs[0].equals(\"Todo\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"                Task taskToAdd \u003d new Todo(lineArgs[2]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"                if (lineArgs[1].equals(\"X\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"                    taskToAdd.markDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"                taskList.addTask(taskToAdd);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"            } else if (lineArgs[0].equals(\"Deadline\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"                Task taskToAdd \u003d new Deadline(lineArgs[2], lineArgs[3]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"                if (lineArgs[1].equals(\"X\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"                    taskToAdd.markDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"                taskList.addTask(taskToAdd);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"            } else if (lineArgs[0].equals(\"Event\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"                Task taskToAdd \u003d new Event(lineArgs[2], lineArgs[3], lineArgs[4]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philbertshea"},"content":"                if (lineArgs[1].equals(\"X\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philbertshea"},"content":"                    taskToAdd.markDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philbertshea"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philbertshea"},"content":"                taskList.addTask(taskToAdd);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philbertshea"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philbertshea"},"content":"        return taskList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philbertshea"},"content":"     * Loads file specified at dirPath and taskPath.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philbertshea"},"content":"     * @return task list obtained from loading file at taskPath.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philbertshea"},"content":"     * @throws IOException if directory or file cannot be opened or other IO issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philbertshea"},"content":"    public NoteList loadNotes() throws IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList \u003d new NoteList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philbertshea"},"content":"        // Create folder \u0027data\u0027 and/or file \u0027phil.txt\u0027 if it does not exist","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philbertshea"},"content":"        if (!Files.exists(this.dirPath)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philbertshea"},"content":"            Files.createDirectory(this.dirPath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philbertshea"},"content":"        if (!Files.exists(this.notePath)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philbertshea"},"content":"            Files.createFile(this.notePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philbertshea"},"content":"        // Assert that both the directory path and the data path must exist.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philbertshea"},"content":"        assert Files.exists(this.dirPath) \u0026\u0026 Files.exists(this.notePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philbertshea"},"content":"        // Load data from note path","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philbertshea"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(this.notePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philbertshea"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philbertshea"},"content":"            noteList.addNote(new Note(line));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philbertshea"},"content":"        return noteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philbertshea"},"content":"     * Saves task list into a file at a specified taskPath.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philbertshea"},"content":"     * @param taskList list of tasks to save.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philbertshea"},"content":"     * @throws IOException thrown if there are IO errors when saving.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philbertshea"},"content":"    public void save(TaskList taskList, NoteList noteList) throws IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philbertshea"},"content":"        // Assert that both the directory path and the data path must exist.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philbertshea"},"content":"        assert Files.exists(this.dirPath) \u0026\u0026 Files.exists(this.taskPath) \u0026\u0026 Files.exists(this.notePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philbertshea"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philbertshea"},"content":"        for (Task task : taskList.getListOfTasks()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philbertshea"},"content":"            tasksString.append(task.toLoadString()).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philbertshea"},"content":"        Files.writeString(this.taskPath, tasksString.toString());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philbertshea"},"content":"        Files.writeString(this.notePath, noteList.toLoadString());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"philbertshea":133}},{"path":"src/main/java/phil/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import java.util.Collections;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"import phil.main.PhilMain;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":" * Represents a Dialog Box instance, which when used with /view/DialogBox.fxml","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":" * represents a dialog for either an input by the user, or an output by the chatbot.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    private Label dialog;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"     * Sets up the DialogBox instance.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"     * @param text Text String to be shown in the dialog.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     * @param img Image to be used in the dialog box as either the user or the chatbot.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * @param pictureHeight Height of picture to represent the user or chatbot.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    public DialogBox(String text, Image img, double pictureHeight) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"            FXMLLoader loader \u003d new FXMLLoader(PhilMain.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"            loader.setController(this);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"            loader.setRoot(this);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"            loader.load();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        if (text.length() \u003e 50) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"            dialog.setStyle(dialog.getStyle() + \"-fx-font-size: \" + 15);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"            dialog.setStyle(dialog.getStyle() + \"-fx-font-size: \" + 20);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"        displayPicture.setFitHeight(pictureHeight);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"        displayPicture.setFitWidth(pictureHeight);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"    public void flip() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":67}},{"path":"src/main/java/phil/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"import phil.main.Phil;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":" * Represents an AnchorPane that is the main window.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":" * The main window stores a scrollpane, a vbox for the dialogs,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":" * and a textfield for storing the user input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    // Referenced in TextField fx:id","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    private TextField userInput;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    private Phil phil;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    private Image philImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Phil.png\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"     * Initialises the scrollpane to scroll to the height of the dialog container.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    private void initialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     * Sets the Phil attribute to the Phil instance passed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"     * @param phil Phil instance passed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    public void setPhil(Phil phil) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        this.phil \u003d phil;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"    // Don\u0027t forget to add the \u0027@FXML\u0027 tag for the .fxml file to recognise this function","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"    // The FXML tag exposes the function to fxml file without needing public access","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"    // Referenced in TextField onAction","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     * Adds the corresponding user and duke dialogs once Action is detected","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"     * at the TextField or the sendButton (in /view/DialogBox.fxml).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"     * Closes the stage if user inputs bye.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"    private void addInputAndOutputDialogs() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"        DialogBox userDialog \u003d new DialogBox(input, this.userImage, 50.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"        DialogBox philDialog \u003d new DialogBox(this.phil.getResponse(input), this.philImage, 50.0);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"        philDialog.flip();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"        this.dialogContainer.getChildren().addAll(userDialog, philDialog);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"        this.userInput.clear();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"            // Code adapted from a.b on https://stackoverflow.com/questions/13567019/close-fxml-window-by-code-javafx","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philbertshea"},"content":"            Stage stage \u003d (Stage) this.dialogContainer.getScene().getWindow();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philbertshea"},"content":"            stage.close();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":76}},{"path":"src/main/java/phil/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import phil.exception.PhilException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"import phil.main.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents the text-based user interface for interacting with the chatbot.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class Ui {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"     * Sets up the Ui object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"     * @param parser Parser to be used by the Ui.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    public Ui(Parser parser) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"     * Prints the given output with additional lines to separate the output.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     * @param output output to be printed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    public void printOutput(String output) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        System.out.println(\"\\n-----------------------------------------\\n\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        System.out.println(output);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        System.out.println(\"\\n-----------------------------------------\\n\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     * Runs the user interface of the bot, including receiving input and printing output.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    public void runBot() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        printOutput(\"Hello. I\u0027m phil.main.Phil.\\nWhat can I do for you?\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"                    + \"\\nTip: say \u0027list\u0027 to get a list of actions to do, \"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"                    + \"say \u0027bye\u0027 to end the conversation.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"            try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"                printOutput(parser.generateStringOutputFromInput(input));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"            } catch (PhilException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"                printOutput(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"philbertshea":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"               wrapText\u003d\"true\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"               minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"               style\u003d\"-fx-padding: 0 10 0 10;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"                      -fx-background-color: #FFD65A;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"                      -fx-border-width: 2;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"                      -fx-border-color: #000000;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"                      -fx-border-radius: 0 10 0 10;\"/\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"                   fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"                   pickOnBounds\u003d\"true\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"                   preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"            fx:controller\u003d\"phil.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"                   onAction\u003d\"#addInputAndOutputDialogs\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"                layoutX\u003d\"324.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"                onMouseClicked\u003d\"#addInputAndOutputDialogs\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"                    hvalue\u003d\"1.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"                    fitToHeight\u003d\"true\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"                      prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"                      style\u003d\"-fx-background-color: #CAE0BC\"/\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"philbertshea":49}},{"path":"src/test/java/phil/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.main;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"import phil.model.NoteList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"import phil.model.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"import phil.model.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"import phil.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":" * Represents the Testing Class for Parser.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"     * Tests the generateStringOutputFromInput method of the Parser class.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"    public void generateStringOutputFromInput() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        // Initialise with an empty TaskList and NoteList","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"        TaskList taskListCompare \u003d new TaskList();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList \u003d new NoteList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"        Parser parser \u003d new Parser(taskList, noteList, new Storage(\"data\", \"phil.txt\", \"philNotes.txt\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"        assertEquals(taskListCompare.addTask(new Todo(\"read a book\")),","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"                     parser.generateStringOutputFromInput(\"todo read a book\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        // Print list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        assertEquals(taskListCompare.toString(), parser.generateStringOutputFromInput(\"list\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"philbertshea":36}},{"path":"src/test/java/phil/model/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents Testing Class for Deadline Class.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the Deadline class with a new Deadline.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    public void toString_newDeadline_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"tomorrow\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[D][ ] homework (by: tomorrow)\", deadline.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"        deadline.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[D][X] homework (by: tomorrow)\", deadline.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        deadline.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[D][ ] homework (by: tomorrow)\", deadline.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     * Tests the toLoadString method of the Deadline class with a new Deadline.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    public void toLoadString_newDeadline_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"tomorrow\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Deadline -   - homework - tomorrow\", deadline.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        deadline.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Deadline - X - homework - tomorrow\", deadline.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        deadline.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Deadline -   - homework - tomorrow\", deadline.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the Deadline class with a new Deadline.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"     * This deadline gives the from and to dates with a valid date-time input.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"    public void toString_newDeadlineWithDateTime_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"2/7/25 1000\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[D][ ] homework (by: Feb 7, 2025 10.00AM)\", deadline.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        deadline.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[D][X] homework (by: Feb 7, 2025 10.00AM)\", deadline.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"        deadline.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[D][ ] homework (by: Feb 7, 2025 10.00AM)\", deadline.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"     * Tests the toLoadString method of the Deadline class with a new Deadline.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"    public void toLoadString_newDeadlineWithDateTime_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"2/7/25 1000\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Deadline -   - homework - 2/7/25 1000\", deadline.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"        deadline.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Deadline - X - homework - 2/7/25 1000\", deadline.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"        deadline.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Deadline -   - homework - 2/7/25 1000\", deadline.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":65}},{"path":"src/test/java/phil/model/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" * Represents Testing Class for Event Class.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"public class EventTest {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the Event class with a new Event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"    public void toString_newEvent_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        Event event \u003d new Event(\"book sharing session\", \"afternoon\", \"night\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[E][ ] book sharing session (from: afternoon to: night)\", event.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        event.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[E][X] book sharing session (from: afternoon to: night)\", event.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        event.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[E][ ] book sharing session (from: afternoon to: night)\", event.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     * Tests the toLoadString method of the Event class with a new Event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"    public void toLoadString_newEvent_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        Event event \u003d new Event(\"book sharing session\", \"afternoon\", \"night\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Event -   - book sharing session - afternoon - night\", event.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        event.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Event - X - book sharing session - afternoon - night\", event.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        event.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Event -   - book sharing session - afternoon - night\", event.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the Event class with a new Event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"     * This event gives the from and to dates with a valid date-time input.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"    public void toString_newEventWithDateTime_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"        Event event \u003d new Event(\"book sharing session\", \"2/7/25 1000\", \"2/7/25 1500\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[E][ ] book sharing session (from: Feb 7, 2025 10.00AM to: Feb 7, 2025 3.00PM)\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"                event.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"        event.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[E][X] book sharing session (from: Feb 7, 2025 10.00AM to: Feb 7, 2025 3.00PM)\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"                event.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"        event.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[E][ ] book sharing session (from: Feb 7, 2025 10.00AM to: Feb 7, 2025 3.00PM)\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"                event.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philbertshea"},"content":"     * Tests the toLoadString method of the Event class with a new Event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philbertshea"},"content":"    public void toLoadString_newEventWithDateTime_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philbertshea"},"content":"        Event event \u003d new Event(\"book sharing session\", \"2/7/25 1000\", \"2/7/25 1500\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Event -   - book sharing session - 2/7/25 1000 - 2/7/25 1500\", event.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philbertshea"},"content":"        event.markDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Event - X - book sharing session - 2/7/25 1000 - 2/7/25 1500\", event.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philbertshea"},"content":"        event.markNotDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Event -   - book sharing session - 2/7/25 1000 - 2/7/25 1500\", event.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":70}},{"path":"src/test/java/phil/model/NoteListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents Testing Class for NoteList Class.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class NoteListTest {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * Tests the addNote method of the NoteList class with a new NoteList.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    public void addNote_newNoteList_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList \u003d new NoteList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Got it! I\u0027ve added this note: \\nthe sky is blue\\nNow you have 1 notes in the list.\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"                noteList.addNote(new Note(\"the sky is blue\")));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     * Tests the deleteNote method of the NoteList class with a new NoteList.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    public void deleteNote_newNoteListWithOneNote_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList \u003d new NoteList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"        noteList.addNote(new Note(\"the sky is blue\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Noted. I\u0027ve removed this note: \\nthe sky is blue\\nNow you have 0 notes in the list.\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"                noteList.deleteNote(1));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the NoteList class with a new NoteList.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    public void toString_newNoteListWithTwoNotes_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList \u003d new NoteList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        noteList.addNote(new Note(\"the sky is blue\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        noteList.addNote(new Note(\"the sun is red\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Here are the Notes in your list: \\n1. the sky is blue\\n2. the sun is red\\n\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"                noteList.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philbertshea"},"content":"     * Tests the toLoadString method of the NoteList class with a new NoteList.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philbertshea"},"content":"    public void toLoadString_newNoteListWithTwoNotes_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philbertshea"},"content":"        NoteList noteList \u003d new NoteList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philbertshea"},"content":"        noteList.addNote(new Note(\"the sky is blue\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philbertshea"},"content":"        noteList.addNote(new Note(\"the sun is red\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"the sky is blue\\nthe sun is red\\n\", noteList.toLoadString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":57}},{"path":"src/test/java/phil/model/NoteTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents Testing Class for Note Class.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class NoteTest {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the Note class with a new Note.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    public void toString_newNote_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"        Note note \u003d new Note(\"the sky is blue\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"the sky is blue\", note.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":21}},{"path":"src/test/java/phil/model/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents Testing Class for TaskList Class.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * Tests the addTask method of the TaskList class with a new TaskList.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    public void addTask_newTaskList_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Got it! I\u0027ve added this task: \\n[T][ ] read book\\nNow you have 1 tasks in the list.\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"                taskList.addTask(new Todo(\"read book\")));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"     * Tests the deleteTask method of the TaskList class with a TaskList of one task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"    public void deleteTask_newTaskListWithOneTask_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"        taskList.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task: \\n[T][ ] read book\\nNow you have 0 tasks in the list.\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"                taskList.deleteTask(1));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the TaskList class with a TaskList of two tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"    public void toString_newTaskListWithTwoTasks_correctStringOutput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philbertshea"},"content":"        taskList.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philbertshea"},"content":"        taskList.addTask(new Todo(\"watch tv\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Here are the tasks in your list: \\n1. [T][ ] read book\\n2. [T][ ] watch tv\\n\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philbertshea"},"content":"                taskList.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"philbertshea":46}},{"path":"src/test/java/phil/model/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"package phil.model;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":" * Represents Testing Class for Todo Class.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philbertshea"},"content":"     * Tests the toString method of the Todo class with a new Todo.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philbertshea"},"content":"    public void toString_newTodo_correctStringOutput() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"        Todo todo \u003d new Todo(\"read a book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[T][ ] read a book\", todo.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philbertshea"},"content":"        todo.markDone();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[T][X] read a book\", todo.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philbertshea"},"content":"        todo.markNotDone();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"[T][ ] read a book\", todo.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philbertshea"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philbertshea"},"content":"     * Tests the toLoadString method of the Todo class with a new Todo.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philbertshea"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philbertshea"},"content":"    @Test","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philbertshea"},"content":"    public void toLoadString_newTodo_correctStringOutput() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philbertshea"},"content":"        Todo todo \u003d new Todo(\"read a book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Todo -   - read a book\", todo.toLoadString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philbertshea"},"content":"        todo.markDone();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Todo - X - read a book\", todo.toLoadString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philbertshea"},"content":"        todo.markNotDone();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philbertshea"},"content":"        assertEquals(\"Todo -   - read a book\", todo.toLoadString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philbertshea"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philbertshea"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philbertshea"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"philbertshea":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"philbertshea"},"content":"todo read a book","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philbertshea"},"content":"deadline do homework","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philbertshea"},"content":"deadline do homework /by tomorrow morning","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philbertshea"},"content":"event tutorial session","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philbertshea"},"content":"event tutorial session /from Monday 2pm /to Monday 5pm","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philbertshea"},"content":"list","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philbertshea"},"content":"mark 1","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philbertshea"},"content":"mark 3","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philbertshea"},"content":"unmark 3","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philbertshea"},"content":"list","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philbertshea"},"content":"some incompatible command","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philbertshea"},"content":"bye","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"philbertshea":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philbertshea"},"content":"java -classpath ..\\bin phil.main.PhilTextUI \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"philbertshea":1,"-":20}}]
