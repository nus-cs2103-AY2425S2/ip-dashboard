[{"path":"data/veronica_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"[D] | [ ] | return book | [by: 2019-12-02T18:00]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"[E] | [ ] | book club | [from: 1991-12-15T18:00 | to: 1991-12-15T19:00]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"[T] | [ ] | read book","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"[D] | [ ] | submit assignment | [by: 2022-02-11T12:34]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"[E] | [ ] | school reopening | [from: 2023-02-11T23:59 | to: 2023-03-11T23:59]","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Melvan-Chan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Melvan-Chan"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Melvan-Chan"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM yyyy, h:mma\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Melvan-Chan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Melvan-Chan"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Melvan-Chan"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Melvan-Chan"},"content":"            this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Invalid date format! Please use \u0027d/M/yyyy HHmm\u0027. Example: 16/12/1991 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Melvan-Chan"},"content":"            this.by \u003d null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Melvan-Chan"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Melvan-Chan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Melvan-Chan"},"content":"        String formattedDate \u003d (by !\u003d null) ? formatDateWithSuffix(by) : \"Invalid date\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Melvan-Chan"},"content":"        return super.toString() + \" | [by: \" + formattedDate + \"]\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Melvan-Chan"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Melvan-Chan"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Melvan-Chan"},"content":"        return super.toString() + \" | [by: \" + by + \"]\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Melvan-Chan"},"content":"    private static String formatDateWithSuffix(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Melvan-Chan"},"content":"        int day \u003d dateTime.getDayOfMonth();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Melvan-Chan"},"content":"        String suffix \u003d getDaySuffix(day);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Melvan-Chan"},"content":"        return day + suffix + \" of \" + dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Melvan-Chan"},"content":"    private static String getDaySuffix(int day) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Melvan-Chan"},"content":"        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) return \"th\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Melvan-Chan"},"content":"        switch (day % 10) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Melvan-Chan"},"content":"            case 1: return \"st\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Melvan-Chan"},"content":"            case 2: return \"nd\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Melvan-Chan"},"content":"            case 3: return \"rd\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Melvan-Chan"},"content":"            default: return \"th\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":46}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Melvan-Chan"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Melvan-Chan"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Melvan-Chan"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Melvan-Chan"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM yyyy, h:mma\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Melvan-Chan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Melvan-Chan"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Melvan-Chan"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Melvan-Chan"},"content":"            this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Melvan-Chan"},"content":"            this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Invalid date format! Please use \u0027d/M/yyyy HHmm\u0027. Example: 16/12/1991 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Melvan-Chan"},"content":"            this.from \u003d null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Melvan-Chan"},"content":"            this.to \u003d null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Melvan-Chan"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Melvan-Chan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Melvan-Chan"},"content":"        String formattedFrom \u003d (from !\u003d null) ? formatDateWithSuffix(from) : \"Invalid date\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Melvan-Chan"},"content":"        String formattedTo \u003d (to !\u003d null) ? formatDateWithSuffix(to) : \"Invalid date\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Melvan-Chan"},"content":"        return super.toString() + \" | [from: \" + formattedFrom + \" | to: \" + formattedTo + \"]\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Melvan-Chan"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Melvan-Chan"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Melvan-Chan"},"content":"        return super.toString() + \" | [from: \" + from + \" | to: \" + to + \"]\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Melvan-Chan"},"content":"    private static String formatDateWithSuffix(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Melvan-Chan"},"content":"        int day \u003d dateTime.getDayOfMonth();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Melvan-Chan"},"content":"        String suffix \u003d getDaySuffix(day);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Melvan-Chan"},"content":"        return day + suffix + \" of \" + dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Melvan-Chan"},"content":"    private static String getDaySuffix(int day) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Melvan-Chan"},"content":"        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) return \"th\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Melvan-Chan"},"content":"        switch (day % 10) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Melvan-Chan"},"content":"            case 1: return \"st\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Melvan-Chan"},"content":"            case 2: return \"nd\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Melvan-Chan"},"content":"            case 3: return \"rd\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Melvan-Chan"},"content":"            default: return \"th\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":50}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Melvan-Chan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Melvan-Chan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Melvan-Chan"},"content":"public class Storage {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Melvan-Chan"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Melvan-Chan"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Melvan-Chan"},"content":"    private static final int MAX_TASK_SIZE \u003d 100;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Melvan-Chan"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Melvan-Chan"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Melvan-Chan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Melvan-Chan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Melvan-Chan"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Melvan-Chan"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Melvan-Chan"},"content":"            try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Melvan-Chan"},"content":"                file.getParentFile().mkdirs();      // Ensure \"data\" folder exists","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Melvan-Chan"},"content":"                file.createNewFile();               // Create file if not present","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Melvan-Chan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"Error while creating file: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Melvan-Chan"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Melvan-Chan"},"content":"        return this.taskCount;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Melvan-Chan"},"content":"    // Save tasks to file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Melvan-Chan"},"content":"    public void saveTasks(Task[] tasks, int taskCount) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Melvan-Chan"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Melvan-Chan"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Melvan-Chan"},"content":"                writer.write(tasks[i].toFileString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Melvan-Chan"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Melvan-Chan"},"content":"    // Load tasks from file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Melvan-Chan"},"content":"    public Task[] loadTasks() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Melvan-Chan"},"content":"        Task[] tasks \u003d new Task[MAX_TASK_SIZE]; // Fixed array size","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Melvan-Chan"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Melvan-Chan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Melvan-Chan"},"content":"            String line;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Melvan-Chan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null \u0026\u0026 taskCount \u003c 100) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Melvan-Chan"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Melvan-Chan"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Melvan-Chan"},"content":"                    tasks[taskCount++] \u003d task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Melvan-Chan"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Melvan-Chan"},"content":"        return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Melvan-Chan"},"content":"    // Concert a line from file to a Task object","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Melvan-Chan"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Melvan-Chan"},"content":"        String[] parts \u003d line.split(\" \\\\| \"); // Split based on \" | \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Melvan-Chan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"Invalid task format: \" + line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Melvan-Chan"},"content":"            return null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Melvan-Chan"},"content":"        String type \u003d parts[0]; // [T], [D], or [E]","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Melvan-Chan"},"content":"        boolean isDone \u003d parts[1].equals(\"[X]\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Melvan-Chan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Melvan-Chan"},"content":"        switch (type) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Melvan-Chan"},"content":"            case \"[T]\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Melvan-Chan"},"content":"                ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Melvan-Chan"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Melvan-Chan"},"content":"                    todo.markAsComplete();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Melvan-Chan"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Melvan-Chan"},"content":"                return todo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Melvan-Chan"},"content":"            case \"[D]\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Melvan-Chan"},"content":"                if (parts.length \u003c 4) return null; // Ensure deadline has date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Melvan-Chan"},"content":"                try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Melvan-Chan"},"content":"                    String cleanDate \u003d parts[3].replace(\"[by: \", \"\").replace(\"]\", \"\").trim(); // Remove unwanted characters","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Melvan-Chan"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(cleanDate);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Melvan-Chan"},"content":"                    DateTimeFormatter correctFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Melvan-Chan"},"content":"                    String formattedDate \u003d dateTime.format(correctFormat); // Convert to correct format","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Melvan-Chan"},"content":"                    Deadline deadline \u003d new Deadline(description, formattedDate);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Melvan-Chan"},"content":"                    if (isDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Melvan-Chan"},"content":"                        deadline.markAsComplete();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Melvan-Chan"},"content":"                    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Melvan-Chan"},"content":"                    return deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Melvan-Chan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Melvan-Chan"},"content":"                    System.out.println(\"Invalid date format in saved data: \" + parts[3]);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Melvan-Chan"},"content":"                    return null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Melvan-Chan"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Melvan-Chan"},"content":"            case \"[E]\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Melvan-Chan"},"content":"                if (parts.length \u003c 5) return null; // Ensure event has start \u0026 end time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Melvan-Chan"},"content":"                try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Melvan-Chan"},"content":"                    String cleanFrom \u003d parts[3].replace(\"[from: \", \"\"); // Remove unwanted characters","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Melvan-Chan"},"content":"                    String cleanTo \u003d parts[4].replace(\"to: \", \"\").replace(\"]\", \"\").trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Melvan-Chan"},"content":"                    LocalDateTime fromDateTime \u003d LocalDateTime.parse(cleanFrom);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Melvan-Chan"},"content":"                    LocalDateTime toDateTime \u003d LocalDateTime.parse(cleanTo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Melvan-Chan"},"content":"                    DateTimeFormatter correctFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Melvan-Chan"},"content":"                    String formattedFrom \u003d fromDateTime.format(correctFormat);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Melvan-Chan"},"content":"                    String formattedTo \u003d toDateTime.format(correctFormat);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Melvan-Chan"},"content":"                    Event event \u003d new Event(description, formattedFrom, formattedTo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Melvan-Chan"},"content":"                    if (isDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Melvan-Chan"},"content":"                        event.markAsComplete();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Melvan-Chan"},"content":"                    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Melvan-Chan"},"content":"                    return event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Melvan-Chan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Melvan-Chan"},"content":"                    System.out.println(\"Invalid event date format in saved data: \" + parts[3] + \" to \" + parts[4]);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Melvan-Chan"},"content":"                    return null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Melvan-Chan"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Melvan-Chan"},"content":"            default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"Unknown task type: \" + type);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Melvan-Chan"},"content":"                return null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":128}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"    protected TaskType type;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Melvan-Chan"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Melvan-Chan"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Melvan-Chan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Melvan-Chan"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Melvan-Chan"},"content":"    public String getStatus() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Melvan-Chan"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Melvan-Chan"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Melvan-Chan"},"content":"        return this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Melvan-Chan"},"content":"    public void markAsComplete() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Melvan-Chan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Melvan-Chan"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Melvan-Chan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Melvan-Chan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Melvan-Chan"},"content":"        return \"[\" + type.name().charAt(0) + \"] | [\" + this.getStatus() + \"] | \" + this.description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Melvan-Chan"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":33}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"public enum TaskType {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":3}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Melvan-Chan"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Melvan-Chan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Melvan-Chan"},"content":"        return super.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Melvan-Chan"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Melvan-Chan"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Melvan-Chan"},"content":"        return super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":16}},{"path":"src/main/java/Veronica.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"public class Veronica {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"    private static final String FILE_PATH \u003d \"data/veronica_tasks.txt\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Melvan-Chan"},"content":"    private static final Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Melvan-Chan"},"content":"    private static final int MAX_TASK_SIZE \u003d 100;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Melvan-Chan"},"content":"    static Task[] tasks \u003d new Task[MAX_TASK_SIZE];           // Task object to store user tasks","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Melvan-Chan"},"content":"    static int taskCount \u003d 0;                      // Track number of tasks added","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Melvan-Chan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Melvan-Chan"},"content":"        tasks \u003d storage.loadTasks();    // Should load an array into tasks","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Melvan-Chan"},"content":"        taskCount \u003d storage.getTaskCount();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Melvan-Chan"},"content":"        greetUser();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Melvan-Chan"},"content":"        processUserCommands();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Melvan-Chan"},"content":"    private static void greetUser() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Melvan-Chan"},"content":"        String greet \u003d \"\"\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Melvan-Chan"},"content":"                _________________________________________________________________________________________________","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Melvan-Chan"},"content":"                 Hello! I\u0027m Veronica. Tony Stark create me after Jarvis.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Melvan-Chan"},"content":"                 A little bit about me is that my name means \u0027she who brings the victory\u0027.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Melvan-Chan"},"content":"                ","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Melvan-Chan"},"content":"                 Here\u0027s my command list:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Melvan-Chan"},"content":"                 - todo \u003ctask\u003e: Add\u0027s task to the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Melvan-Chan"},"content":"                 - deadline \u003ctask\u003e /by \u003cdate\u003e: Add\u0027s deadline to the list with a due date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Melvan-Chan"},"content":"                 - event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e: Add\u0027s event to the list with a start/end date.\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Melvan-Chan"},"content":"                    \u003e Each date\u0027s format must be dd/MM/yyyy (Time) e.g 2/12/2019 1800","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Melvan-Chan"},"content":"                 - list: List\u0027s all the tasks in the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Melvan-Chan"},"content":"                 - mark \u003cno. of task\u003e: Marks the task specified.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Melvan-Chan"},"content":"                 - unmark \u003cno. of task\u003e: Unmarks the task specified.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Melvan-Chan"},"content":"                 - remove \u003cno. of task\u003e: Removes the task specified.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Melvan-Chan"},"content":"                ","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Melvan-Chan"},"content":"                 What can I do for you?","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Melvan-Chan"},"content":"                _________________________________________________________________________________________________","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Melvan-Chan"},"content":"                \"\"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(greet);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Melvan-Chan"},"content":"    private static void processUserCommands() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Melvan-Chan"},"content":"        Scanner sc \u003d new Scanner(System.in);    // Set up to read user input","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Melvan-Chan"},"content":"        while (true) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Melvan-Chan"},"content":"            String userInput \u003d \"\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Melvan-Chan"},"content":"            if (sc.hasNextLine()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Melvan-Chan"},"content":"                userInput \u003d sc.nextLine(); // Read user input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Melvan-Chan"},"content":"            } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Melvan-Chan"},"content":"                break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Melvan-Chan"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Melvan-Chan"},"content":"                if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Melvan-Chan"},"content":"                    exitProgram();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Melvan-Chan"},"content":"                    break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Melvan-Chan"},"content":"                    listTasks();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Melvan-Chan"},"content":"                    markTask(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Melvan-Chan"},"content":"                    unmarkTask(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.startsWith(\"remove \")) { // Remove task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Melvan-Chan"},"content":"                    removeTask(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Melvan-Chan"},"content":"                    addTodo(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Melvan-Chan"},"content":"                    addDeadline(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Melvan-Chan"},"content":"                } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Melvan-Chan"},"content":"                    addEvent(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Melvan-Chan"},"content":"                } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Melvan-Chan"},"content":"                    throw new VeronicaException(\"UHOH! I\u0027m sorry, but I\u0027ve no idea what you mean! Please try again.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Melvan-Chan"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Melvan-Chan"},"content":"            } catch (VeronicaException errorMsg) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     Veronica: \" + errorMsg.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Melvan-Chan"},"content":"        sc.close();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Melvan-Chan"},"content":"    private static void listTasks() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Melvan-Chan"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Veronica: List is empty at the moment.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Melvan-Chan"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Melvan-Chan"},"content":"            for (int i \u003d 0; i \u003c taskCount; ++i) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     \" + (i + 1) + \". \" + (tasks[i]));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Melvan-Chan"},"content":"    private static void markTask(String input) throws VeronicaException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Melvan-Chan"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Melvan-Chan"},"content":"            int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Melvan-Chan"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCount) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Melvan-Chan"},"content":"                tasks[taskIndex].markAsComplete();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     Veronica: Marking this task as completed!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     \" + tasks[taskIndex]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Melvan-Chan"},"content":"            } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Melvan-Chan"},"content":"                throw new VeronicaException(\"UHOH! I\u0027m afraid that the task number does not exist! Please try again.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Melvan-Chan"},"content":"            throw new VeronicaException(\"UHOH! Please enter a valid number after \u0027done\u0027.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Melvan-Chan"},"content":"    private static void unmarkTask(String input) throws VeronicaException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Melvan-Chan"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Melvan-Chan"},"content":"            int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Melvan-Chan"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCount) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Melvan-Chan"},"content":"                tasks[taskIndex].markAsIncomplete();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     Veronica: Unmarking this task as incomplete!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     \" + tasks[taskIndex]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Melvan-Chan"},"content":"            } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     Veronica: This task does not exist! Please try again.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Melvan-Chan"},"content":"            throw new VeronicaException(\"UHOH! I\u0027m afraid that the task number does not exist! Please try again.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Melvan-Chan"},"content":"    private static void removeTask(String input) throws VeronicaException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Melvan-Chan"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Melvan-Chan"},"content":"            String argument \u003d input.substring(7).trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Melvan-Chan"},"content":"            if (argument.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Melvan-Chan"},"content":"                taskCount \u003d 0;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Melvan-Chan"},"content":"                tasks \u003d new Task[MAX_TASK_SIZE];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     Veronica: Removed all the tasks in this list.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Melvan-Chan"},"content":"                System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Melvan-Chan"},"content":"            } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Melvan-Chan"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Melvan-Chan"},"content":"                if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCount) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Melvan-Chan"},"content":"                    System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Melvan-Chan"},"content":"                    System.out.println(\"     Veronica: Removed \" + tasks[taskIndex]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Melvan-Chan"},"content":"                    for (int i \u003d taskIndex; i \u003c taskCount - 1; i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Melvan-Chan"},"content":"                        tasks[i] \u003d tasks[i + 1];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Melvan-Chan"},"content":"                    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Melvan-Chan"},"content":"                    taskCount--;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Melvan-Chan"},"content":"                    System.out.println(\"     Veronica: Now, you\u0027ve got \" + taskCount + \" tasks in the list!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Melvan-Chan"},"content":"                    System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Melvan-Chan"},"content":"                } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Melvan-Chan"},"content":"                    throw new VeronicaException(\"UHOH! Task number does not exist.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Melvan-Chan"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Melvan-Chan"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Melvan-Chan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Melvan-Chan"},"content":"            throw new VeronicaException(\"UHOH! Please enter a valid number after \u0027remove\u0027.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Melvan-Chan"},"content":"    private static void addTodo(String input) throws VeronicaException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Melvan-Chan"},"content":"        String taskDescription \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Melvan-Chan"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Melvan-Chan"},"content":"            throw new VeronicaException(\"UHOH! Description can\u0027t be empty! Please try again.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Melvan-Chan"},"content":"        tasks[taskCount++] \u003d new ToDo(taskDescription);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     Veronica: Alright, I\u0027ve added this to the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     \" + tasks[taskCount - 1]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     Veronica: Now, you\u0027ve got \" + taskCount + \" tasks in the list!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Melvan-Chan"},"content":"    private static void addDeadline(String input) throws VeronicaException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Melvan-Chan"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Melvan-Chan"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Melvan-Chan"},"content":"            tasks[taskCount++] \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Veronica: Alright, I\u0027ve added this to the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     \" + tasks[taskCount - 1]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Veronica: Now, you\u0027ve got \" + taskCount + \" tasks in the list!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Melvan-Chan"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Melvan-Chan"},"content":"            throw new VeronicaException(\"UHOH! Invalid format detected. Use: deadline \u003ctask\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Melvan-Chan"},"content":"    private static void addEvent(String input) throws VeronicaException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Melvan-Chan"},"content":"        String[] parts \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Melvan-Chan"},"content":"        if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Melvan-Chan"},"content":"            tasks[taskCount++] \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Veronica: Alright, I\u0027ve added this to the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     \" + tasks[taskCount - 1]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     Veronica: Now, you\u0027ve got \" + taskCount + \" tasks in the list!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Melvan-Chan"},"content":"            System.out.println(\"     _________________________________________________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Melvan-Chan"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Melvan-Chan"},"content":"            throw new VeronicaException(\"UHOH! Invalid format detected. Use: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Melvan-Chan"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Melvan-Chan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Melvan-Chan"},"content":"    private static void exitProgram() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Melvan-Chan"},"content":"        storage.saveTasks(tasks, taskCount);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Melvan-Chan"},"content":"        System.out.println(\"Veronica: Bye. Hope to see you again soon! \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":206}},{"path":"src/main/java/VeronicaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"public class VeronicaException extends Exception {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"    public VeronicaException(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"        super(message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Melvan-Chan"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Melvan-Chan"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Melvan-Chan"},"content":"todo add book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Melvan-Chan"},"content":"todo return book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Melvan-Chan"},"content":"todo buy book","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Melvan-Chan":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Melvan-Chan"},"content":"java -classpath ..\\bin Veronica \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Melvan-Chan":1}}]
