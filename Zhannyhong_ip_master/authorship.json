[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"# Gabby project template","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"1. After that, locate the `src/main/java/Gabby.java` file, right-click it, and choose `Run Gabby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"    mainClass.set(\"gabby.Launcher\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"    archiveBaseName \u003d \"gabby\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Zhannyhong":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"# Gabby User Guide","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":1,"-":29}},{"path":"src/main/java/gabby/Gabby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import gabby.ui.TextUi;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" * Represents the main class of the program.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"public class Gabby {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"    public static final String NAME \u003d \"Gabby\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"    private boolean hasEncounteredError;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    private String commandType;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new Gabby instance.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"     * @param filePath The file path to save tasks to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    public Gabby(String filePath) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        assert !filePath.isEmpty() : \"Filepath of storage cannot be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"        new Gabby(\"data/tasks.txt\").run();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"     * Runs the program.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"    public void run() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"        TextUi ui \u003d new TextUi();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"        try (Scanner reader \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"            while (true) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"                String input \u003d reader.nextLine().strip();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"                try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"                    Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"                    c.execute(this.tasks, this.storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"                    ui.showMsg(c.getResponse());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"                    if (c.isExit()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"                        break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"                    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"                } catch (GabbyException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"                    ui.showMsg(e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"            }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"            ui.showMsg(\"Ahhh! Something went wrong! Please try again later.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"        this.hasEncounteredError \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"            c.execute(this.tasks, this.storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"            this.commandType \u003d c.getClass().getSimpleName();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"            return c.getResponse();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"        } catch (GabbyException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"            this.commandType \u003d \"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"            this.hasEncounteredError \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zhannyhong"},"content":"     * Returns true if the last response generated an error.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zhannyhong"},"content":"     * @return true if the last response generated an error, false otherwise.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zhannyhong"},"content":"    public boolean hasEncounteredError() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zhannyhong"},"content":"        return this.hasEncounteredError;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zhannyhong"},"content":"    public String getCommandType() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zhannyhong"},"content":"        return this.commandType;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":98}},{"path":"src/main/java/gabby/GabbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":" * Represents an exception specific to Gabby.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"public class GabbyException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"    public GabbyException(String errorMsg) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"        super(errorMsg);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":10}},{"path":"src/main/java/gabby/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.ui.Main;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":13}},{"path":"src/main/java/gabby/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.ByeCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.Command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.DeadlineCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.DeleteCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.EventCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.FindCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.HelpCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.ListCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.MarkCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.TodoCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.UnmarkCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":" * Represents a parser that parses user input into commands.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"public class Parser {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"     * @param input The user input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"     * @return The command","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the input is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    public static Command parse(String input) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"        assert splitInput.length \u003e\u003d 1 : \"Input not split correctly\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"        assert splitInput.length \u003c\u003d 2 : \"Input not split correctly\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"        String command \u003d splitInput[0].toUpperCase();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"        String args \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"        return switch (command) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"        case \"BYE\" -\u003e new ByeCommand();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"        case \"HELP\" -\u003e new HelpCommand();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"        case \"LIST\" -\u003e new ListCommand(args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"        case \"MARK\" -\u003e new MarkCommand(parseTaskID(args));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"        case \"UNMARK\" -\u003e new UnmarkCommand(parseTaskID(args));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"        case \"DELETE\" -\u003e new DeleteCommand(parseTaskID(args));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"        case \"TODO\" -\u003e new TodoCommand(args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"        case \"DEADLINE\" -\u003e new DeadlineCommand(args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"        case \"EVENT\" -\u003e new EventCommand(args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"        case \"FIND\" -\u003e new FindCommand(args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        default -\u003e throw new GabbyException(\"Sorry! I don\u0027t understand what you just said \u003d(\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"        };","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"     * Parses the task ID from the user input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"     * @return The task ID.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the task ID is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"    private static int parseTaskID(String args) throws GabbyException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"I need to know the ID of the task!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"            return Integer.parseInt(args);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"\u0027\" + args + \"\u0027 is not a valid integer!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":68}},{"path":"src/main/java/gabby/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.io.File;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.DeadlineTask;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.EventTask;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TodoTask;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":" * Represents a storage class that handles loading and saving of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"public class Storage {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    private String taskStorePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    public Storage() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new storage class with the specified file path.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"     * @param filePath The file path to save tasks to.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"        this.taskStorePath \u003d filePath;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"        assert !this.taskStorePath.isEmpty() : \"Filepath of storage cannot be empty!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"        File file \u003d new File(this.taskStorePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"                String[] serialized \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"                if (serialized.length \u003c 3) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"                    // Silently ignore tasks that are not in the correct format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"                    continue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"                try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"                    switch (serialized[0]) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"                    case \"T\" -\u003e taskList.add(TodoTask.deserialize(serialized));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"                    case \"D\" -\u003e taskList.add(DeadlineTask.deserialize(serialized));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"                    case \"E\" -\u003e taskList.add(EventTask.deserialize(serialized));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"                    default -\u003e {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"                    } // Silently ignore tasks that are not in the correct format","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"                    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"                } catch (GabbyException err) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"                    // Silently ignore tasks that are not in the correct format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"            // Do nothing as chatbot might be run for the first time and there are no saved tasks to load","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"        return taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"     * Saves tasks to the storage file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If there is an error writing to the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"    public void save(TaskList taskList) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"        assert !this.taskStorePath.isEmpty() : \"Filepath of storage cannot be empty!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"        File file \u003d new File(this.taskStorePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zhannyhong"},"content":"            if (file.getParentFile() !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zhannyhong"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zhannyhong"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zhannyhong"},"content":"        } catch (SecurityException err) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Unable to create directory to save tasks!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zhannyhong"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zhannyhong"},"content":"            writer.write(taskList.serialize());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zhannyhong"},"content":"        } catch (IOException err) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Error writing to file while saving tasks!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":98}},{"path":"src/main/java/gabby/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"    public ByeCommand() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d \"Nuuu I hate to see you go... Hope to see you again soon!\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":18}},{"path":"src/main/java/gabby/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command that can be executed by the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    protected String response;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"        return this.isExit;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    public String getResponse() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"        return this.response;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"     * @param storage The storage object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If an error occurs during execution.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    public abstract void execute(TaskList tasks, Storage storage) throws GabbyException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":35}},{"path":"src/main/java/gabby/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.DeadlineTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    private final DeadlineTask task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new deadline command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments to create the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the arguments are invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    public DeadlineCommand(String args) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        this.task \u003d DeadlineTask.parseArgs(args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d String.format(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"                \"Wow what a busy man huh. I\u0027ve added this task:\\n  %s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"                task, tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":32}},{"path":"src/main/java/gabby/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    private final int taskId;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new delete command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d tasks.deleteTask(this.taskId - 1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d String.format(\"Poof! I\u0027ve removed this task:\\n  %s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"                task, tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":30}},{"path":"src/main/java/gabby/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.EventTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    private final EventTask task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new event command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments to create the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the arguments are invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    public EventCommand(String args) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        this.task \u003d EventTask.parseArgs(args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d String.format(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"                \"Wow what a busy man huh. I\u0027ve added this task:\\n  %s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"                task, tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":32}},{"path":"src/main/java/gabby/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to find tasks by a keyword in the description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"        TaskList filteredTasks \u003d new TaskList(tasks.filterTasksByKeyword(this.keyword));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"            this.response \u003d \"I couldn\u0027t find any tasks matching the keyword \u0027\" + this.keyword + \"\u0027! \u003d/\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"            this.response \u003d \"Here are the matching tasks in your list:\\n\" + filteredTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":32}},{"path":"src/main/java/gabby/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to show the help message.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d \"\"\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"                Here are the commands you can use:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"                - `list [date]`: Lists all tasks. If date is provided, lists tasks on that date.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"                - `todo \u003cdescription\u003e`: Adds a todo task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"                - `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`: Adds a deadline task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"                - `event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e`: Adds an event task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"                - `mark \u003ctask ID\u003e`: Marks a task as done.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"                - `unmark \u003ctask ID\u003e`: Marks a task as not done.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"                - `delete \u003ctask ID\u003e`: Deletes a task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"                - `find \u003ckeyword\u003e`: Finds tasks by a keyword in the description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"                - `help`: Shows this help message.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"                - `bye`: Exits the program.\"\"\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":25}},{"path":"src/main/java/gabby/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"    private LocalDate filterDate \u003d null;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new list command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments provided by the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the date provided is in the wrong format.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    public ListCommand(String args) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"                this.filterDate \u003d LocalDate.parse(args, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"            } catch (DateTimeParseException err) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"                throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"                        \"Date provided is in the wrong format. Expected: yyyy-mm-dd (e.g. 2001-11-23)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"            this.response \u003d \"You have no tasks in your list!\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"            return;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"        if (this.filterDate \u003d\u003d null) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"            this.response \u003d \"Here are all the tasks in your list:\\n\" + tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"            return;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        TaskList filteredTasks \u003d new TaskList(tasks.filterTasksByDate(this.filterDate));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"        String dateStr \u003d filterDate.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"            this.response \u003d \"You have no tasks on \" + dateStr + \"!\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"            this.response \u003d \"Here are the tasks in your list on \" + dateStr + \":\\n\" + filteredTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":55}},{"path":"src/main/java/gabby/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    private final int taskId;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new mark command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskId The ID of the task to mark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    public MarkCommand(int taskId) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d tasks.markTask(this.taskId - 1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d \"Great job! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":29}},{"path":"src/main/java/gabby/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TodoTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    private final TodoTask task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new todo command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments to create the todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the arguments are invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    public TodoCommand(String args) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        this.task \u003d TodoTask.parseArgs(args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d String.format(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"                \"Wow what a busy man huh. I\u0027ve added this task:\\n  %s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"                task, tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":32}},{"path":"src/main/java/gabby/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import gabby.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" * Represents a command to unmark a task to be not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    private final int taskId;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new unmark command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskId The ID of the task to unmark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    public UnmarkCommand(int taskId) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    public void execute(TaskList tasks, Storage storage) throws GabbyException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d tasks.unmarkTask(this.taskId - 1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        this.response \u003d \"Sure! I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":29}},{"path":"src/main/java/gabby/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"    private static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"(.+) /by (.+)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    public DeadlineTask(String description, LocalDateTime by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"     * Parses the arguments to create a new deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments to create the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"     * @return The new deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the arguments are invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"    public static DeadlineTask parseArgs(String args) throws GabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Oh no! The description of a deadline cannot be empty!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"        Matcher parsed \u003d DEADLINE_PATTERN.matcher(args);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"        if (!parsed.matches()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"                    \"Deadlines have to be in the format: deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd hhmm\u003e\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"        LocalDateTime by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"            by \u003d LocalDateTime.parse(parsed.group(2), Task.DT_FORMAT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"                    \"Datetime provided is in the wrong format. Expected: yyyy-mm-dd hhmm (e.g. 2001-11-23 2025)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"        assert by !\u003d null : \"Parsed \u0027by\u0027 date should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"        return new DeadlineTask(parsed.group(1), by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"     * Deserializes a saved deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"     * @param serialized The serialized task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"     * @return The deserialized deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the serialized task is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"    public static DeadlineTask deserialize(String[] serialized) throws GabbyException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"        assert serialized !\u003d null : \"Serialized data should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"        if (serialized.length !\u003d 4) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Saved task does not have the required number of arguments!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"        LocalDateTime by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"            by \u003d LocalDateTime.parse(serialized[3], Task.DT_FORMAT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"                    \"Datetime parsed is in the wrong format. Expected: yyyy-mm-dd hhmm (e.g. 2001-11-23 2025)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"        assert by !\u003d null : \"Deserialized \u0027by\u0027 date should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zhannyhong"},"content":"        DeadlineTask task \u003d new DeadlineTask(serialized[2], by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zhannyhong"},"content":"        if (serialized[1].equals(\"1\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zhannyhong"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zhannyhong"},"content":"        } else if (!serialized[1].equals(\"0\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Saved task contains invalid symbol for isDone!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zhannyhong"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zhannyhong"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zhannyhong"},"content":"                \"D | %s | %s | %s\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zhannyhong"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zhannyhong"},"content":"                super.description,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zhannyhong"},"content":"                Task.DT_FORMAT.format(this.by)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zhannyhong"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zhannyhong"},"content":"    public boolean isDateInRange(TemporalAccessor date) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zhannyhong"},"content":"        return this.by.toLocalDate().isEqual(LocalDate.from(date));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zhannyhong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), Task.DT_DISPLAY.format(this.by));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":115}},{"path":"src/main/java/gabby/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":" * Represents an event task with a start and end deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"(.+) /from (.+) /to (.+)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    public EventTask(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"     * Parses the arguments to create a new event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments to create the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"     * @return The new event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the arguments are invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"    public static EventTask parseArgs(String args) throws GabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Oh no! The description of an event cannot be empty!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"        Matcher parsed \u003d EVENT_PATTERN.matcher(args);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        if (!parsed.matches()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"                    \"Events have to be in the format: event \u003cdescription\u003e /from \u003cyyyy-mm-dd hhmm\u003e /to \u003cyyyy-mm-dd hhmm\u003e\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"            );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"        LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"        LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"            from \u003d LocalDateTime.parse(parsed.group(2), Task.DT_FORMAT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"            to \u003d LocalDateTime.parse(parsed.group(3), Task.DT_FORMAT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"                    \"Datetime provided is in the wrong format. Expected: yyyy-mm-dd hhmm (e.g. 2001-11-23 2025)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"        assert from !\u003d null : \"Parsed \u0027from\u0027 date should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"        assert to !\u003d null : \"Parsed \u0027to\u0027 date should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Event end time cannot be before start time!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"        return new EventTask(parsed.group(1), from, to);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"     * Deserializes a saved event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"     * @param serialized The serialized task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"     * @return The deserialized event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the serialized task is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"    public static EventTask deserialize(String[] serialized) throws GabbyException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"        assert serialized !\u003d null : \"Serialized data should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"        if (serialized.length !\u003d 5) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Saved task does not have the required number of arguments!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zhannyhong"},"content":"        LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zhannyhong"},"content":"        LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zhannyhong"},"content":"            from \u003d LocalDateTime.parse(serialized[3], Task.DT_FORMAT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zhannyhong"},"content":"            to \u003d LocalDateTime.parse(serialized[4], Task.DT_FORMAT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zhannyhong"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zhannyhong"},"content":"                    \"Datetime provided is in the wrong format. Expected: yyyy-mm-dd hhmm (e.g. 2001-11-23 2025)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zhannyhong"},"content":"        assert from !\u003d null : \"Deserialized \u0027from\u0027 date should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zhannyhong"},"content":"        assert to !\u003d null : \"Deserialized \u0027to\u0027 date should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zhannyhong"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Event end time cannot be before start time!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zhannyhong"},"content":"        EventTask task \u003d new EventTask(serialized[2], from, to);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zhannyhong"},"content":"        if (serialized[1].equals(\"1\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zhannyhong"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zhannyhong"},"content":"        } else if (!serialized[1].equals(\"0\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Saved task contains invalid symbol for isDone!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zhannyhong"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zhannyhong"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zhannyhong"},"content":"                \"E | %s | %s | %s | %s\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zhannyhong"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zhannyhong"},"content":"                super.description,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zhannyhong"},"content":"                Task.DT_FORMAT.format(this.from),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Zhannyhong"},"content":"                Task.DT_FORMAT.format(this.to)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Zhannyhong"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Zhannyhong"},"content":"    public boolean isDateInRange(TemporalAccessor date) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Zhannyhong"},"content":"        LocalDate queryDate \u003d LocalDate.from(date);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Zhannyhong"},"content":"        return !this.from.toLocalDate().isAfter(queryDate) \u0026\u0026 !this.to.toLocalDate().isBefore(queryDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Zhannyhong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Zhannyhong"},"content":"                \"[E]%s (from: %s -- to: %s)\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Zhannyhong"},"content":"                super.toString(),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Zhannyhong"},"content":"                Task.DT_DISPLAY.format(this.from),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Zhannyhong"},"content":"                Task.DT_DISPLAY.format(this.to)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Zhannyhong"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":140}},{"path":"src/main/java/gabby/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":" * Represents a task in the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"    protected static final DateTimeFormatter DT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    protected static final DateTimeFormatter DT_DISPLAY \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yyyy HH:mm\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    protected String description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"     * Returns the status icon of the task if it is marked done or not.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"     * @return Description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"        return this.description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"     * Serializes the task for saving.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"     * @return The serialized task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"    public abstract String serialize();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"     * Returns true if the date is on or within the task\u0027s deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"     * @param date The date to filter by.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"     * @return true if the date is on or within the task\u0027s deadline, false otherwise.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"    public abstract boolean isDateInRange(TemporalAccessor date);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":76}},{"path":"src/main/java/gabby/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import java.util.List;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"public class TaskList {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"     * Creates a new task list from a list of existing tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskList The existing tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"    public int size() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"        return taskList.size();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"     * @return true if the task is added successfully, false otherwise.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"        return this.taskList.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskID The ID of the task to delete.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the task ID is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"    public Task deleteTask(int taskID) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"        if (isTaskIdInvalid(taskID)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Task ID is not in your list!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"        return taskList.remove(taskID);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskID The ID of the task to mark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"     * @return The marked task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the task ID is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"    public Task markTask(int taskID) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"        if (isTaskIdInvalid(taskID)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Task ID is not in your list!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d taskList.get(taskID);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"        return task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zhannyhong"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskID The ID of the task to unmark.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zhannyhong"},"content":"     * @return The unmarked task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the task ID is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zhannyhong"},"content":"    public Task unmarkTask(int taskID) throws GabbyException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zhannyhong"},"content":"        if (isTaskIdInvalid(taskID)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Task ID is not in your list!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d taskList.get(taskID);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zhannyhong"},"content":"        task.markNotDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zhannyhong"},"content":"        return task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zhannyhong"},"content":"     * Filters tasks by a date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zhannyhong"},"content":"     * @param filterDate The date to filter tasks by.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zhannyhong"},"content":"     * @return List of tasks that match the date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zhannyhong"},"content":"    public List\u003cTask\u003e filterTasksByDate(LocalDate filterDate) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zhannyhong"},"content":"        return taskList.stream()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zhannyhong"},"content":"                .filter(task -\u003e filterDate.query(task::isDateInRange))","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zhannyhong"},"content":"                .toList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zhannyhong"},"content":"     * Filters tasks where the task description contains the keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zhannyhong"},"content":"     * @param keyword Keyword to filter tasks by.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zhannyhong"},"content":"     * @return List of tasks that contain the keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zhannyhong"},"content":"    public List\u003cTask\u003e filterTasksByKeyword(String keyword) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Zhannyhong"},"content":"        return taskList.stream()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Zhannyhong"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Zhannyhong"},"content":"                .toList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Zhannyhong"},"content":"     * Serializes the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Zhannyhong"},"content":"     * @return The serialized task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Zhannyhong"},"content":"    public String serialize() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Zhannyhong"},"content":"        StringJoiner serialized \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Zhannyhong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Zhannyhong"},"content":"            serialized.add(task.serialize());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Zhannyhong"},"content":"        return serialized.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Zhannyhong"},"content":"     * Checks if the task ID is valid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Zhannyhong"},"content":"     * @param taskID The task ID to check.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Zhannyhong"},"content":"     * @return true if the task ID is valid, false otherwise.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Zhannyhong"},"content":"    private boolean isTaskIdInvalid(int taskID) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Zhannyhong"},"content":"        return taskID \u003c 0 || taskID \u003e\u003d taskList.size();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Zhannyhong"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Zhannyhong"},"content":"        StringJoiner msg \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Zhannyhong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Zhannyhong"},"content":"            msg.add(String.format(\"%d.%s\", i + 1, taskList.get(i)));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Zhannyhong"},"content":"        return msg.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":161}},{"path":"src/main/java/gabby/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.GabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":" * Represents a todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"     * Parses the arguments to create a new todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"     * @param args The arguments to create the todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"     * @return The new todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the arguments are invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    public static TodoTask parseArgs(String args) throws GabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Oh no! The description of a todo cannot be empty!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        return new TodoTask(args);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"     * Deserializes a saved todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"     * @param serialized The serialized task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"     * @return The saved todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"     * @throws GabbyException If the serialized task is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"    public static TodoTask deserialize(String[] serialized) throws GabbyException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"        assert serialized !\u003d null : \"Serialized data should not be null!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"        if (serialized.length !\u003d 3) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Saved task does not have the required number of arguments!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"        TodoTask task \u003d new TodoTask(serialized[2]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        if (serialized[1].equals(\"1\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"        } else if (!serialized[1].equals(\"0\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"            throw new GabbyException(\"Saved task contains invalid symbol for isDone!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(\"T | %s | %s\", super.isDone ? 1 : 0, super.description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"    public boolean isDateInRange(TemporalAccessor date) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":69}},{"path":"src/main/java/gabby/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"    public static DialogBox getGabbyDialog(String text, Image img, boolean isError, String commandType) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"        db.flip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"        if (isError) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"            db.dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"            db.changeDialogStyle(commandType);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"        return db;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"        switch(commandType) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"        case \"DeadlineCommand\": // Fallthrough","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"        case \"EventCommand\": // Fallthrough","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"        case \"TodoCommand\": // Fallthrough","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"        case \"DeleteCommand\": // Fallthrough","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"        case \"MarkCommand\": // Fallthrough","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"        case \"UnmarkCommand\": // Fallthrough","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"            this.dialog.getStyleClass().add(\"success-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"            break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"        default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"            // Use default label style","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"            break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"        this.dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":84}},{"path":"src/main/java/gabby/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Gabby;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":" * A GUI for Gabby using FXML.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    private final Gabby gabby \u003d new Gabby(\"data/tasks.txt\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGabby(this.gabby); // inject the Gabby instance","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"            stage.setTitle(Gabby.NAME);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"            stage.getIcons().add(new Image(\"images/LKY.jpg\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":37}},{"path":"src/main/java/gabby/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Gabby;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Chad.gif\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"    private final Image gabbyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Skibidi.gif\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    private Gabby gabby;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"     * Initializes the main window.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"        // Greet the user","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"        this.dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"                DialogBox.getGabbyDialog(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"                        \"Fancy seeing you here! What can I do for you?\", this.gabbyImage, false, \"\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"     * Injects the Gabby instance","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"    public void setGabby(Gabby gabby) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"        this.gabby \u003d gabby;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Gabby\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"        String response \u003d this.gabby.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"        String commandType \u003d this.gabby.getCommandType();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"                DialogBox.getGabbyDialog(response, this.gabbyImage, this.gabby.hasEncounteredError(), commandType)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"        this.userInput.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"        if (commandType.equals(\"ByeCommand\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":73}},{"path":"src/main/java/gabby/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import gabby.Gabby;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":" * Represents the user interface of the program.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"public class TextUi {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"    public static final String LOGO \u003d \"\"\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"              _____     __   __","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"             / ___/__ _/ /  / /  __ __","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"            / (_ / _ `/ _ \\\\/ _ \\\\/ // /","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"            \\\\___/\\\\_,_/_.__/_.__/\\\\_, /","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"                               /___/","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"            \"\"\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"    public TextUi() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"     * Shows the welcome message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        System.out.printf(LOGO);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        showMsg(\"Fancy seeing you here! What can I do for you?\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"     * Shows a message to the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"     * @param msg The message to show.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    public void showMsg(String msg) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"        System.out.println(Gabby.NAME + \":\\n\" + msg);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gabby.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type here...\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"            \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":23}},{"path":"src/test/java/gabby/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.ByeCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.DeadlineCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.DeleteCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.EventCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.ListCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.MarkCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.TodoCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"import gabby.command.UnmarkCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_byeCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(ByeCommand.class, Parser.parse(\"bye\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_listCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(ListCommand.class, Parser.parse(\"list\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_listCommandWithDate_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(ListCommand.class, Parser.parse(\"list 2025-02-05\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_listCommandWithDate_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e assertInstanceOf(ListCommand.class, Parser.parse(\"list 2025-2-5\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_markCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(MarkCommand.class, Parser.parse(\"mark 420\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_unmarkCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(UnmarkCommand.class, Parser.parse(\"unmark 69\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_deleteCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(DeleteCommand.class, Parser.parse(\"delete 42\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_todoCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(TodoCommand.class, Parser.parse(\"todo test task\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_deadlineCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(DeadlineCommand.class,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zhannyhong"},"content":"                Parser.parse(\"deadline test task /by 2025-02-06 2359\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_deadlineCommandNoDesc_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"deadline /by 2025-02-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_deadlineCommandNoBy_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"deadline test task 2025-02-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_deadlineCommandNoTime_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"deadline test task /by 2025-02-06\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_deadlineCommandWrongDateFormat_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"deadline test task /by 2025-2-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_eventCommand_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertInstanceOf(EventCommand.class,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zhannyhong"},"content":"                Parser.parse(\"event test task /from 2025-02-04 2345 /to 2025-02-06 2359\")));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_eventCommandNoDesc_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"event /from 2025-02-04 2345 /to 2025-02-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_eventCommandNoFrom_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"event test task 2025-02-04 2345 /to 2025-02-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_eventCommandNoTo_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"event test task /from 2025-02-04 2345 2025-02-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_eventCommandWrongFromDateTimeFormat_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"event test task /from 2025-02-04 /to 2025-02-06 2359\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_eventCommandWrongToDateTimeFormat_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"event test task /from 2025-02-04 2345 /to 2025-02-06\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zhannyhong"},"content":"    public void parse_unknownCommand_failure() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zhannyhong"},"content":"        assertThrows(GabbyException.class, () -\u003e Parser.parse(\"test\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":120}},{"path":"src/test/java/gabby/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"package gabby.task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"    public void addTask_todoTask_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d new TodoTask(\"test task\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zhannyhong"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(task, tasks.deleteTask(0)));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zhannyhong"},"content":"    public void deleteTask_validTaskId_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d new TodoTask(\"test task\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(task, tasks.deleteTask(0)));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zhannyhong"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zhannyhong"},"content":"    public void markTask_validTaskId_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zhannyhong"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d new TodoTask(\"test task\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(task, tasks.markTask(0)));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zhannyhong"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zhannyhong"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zhannyhong"},"content":"    public void unmarkTask_validTaskId_success() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zhannyhong"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zhannyhong"},"content":"        Task task \u003d new TodoTask(\"test task\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zhannyhong"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zhannyhong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zhannyhong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zhannyhong"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(task, tasks.unmarkTask(0)));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zhannyhong"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zhannyhong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zhannyhong"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zhannyhong"},"content":"todo read book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zhannyhong"},"content":"deadline return book /by 2021-06-06 2359","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zhannyhong"},"content":"event project meeting /from 2022-02-02 2200 /to 2022-02-02 2300","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zhannyhong"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zhannyhong"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zhannyhong"},"content":"todo join sports club","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zhannyhong"},"content":"mark 4","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zhannyhong"},"content":"todo borrow book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zhannyhong"},"content":"unmark 4","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zhannyhong"},"content":"delete 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zhannyhong"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zhannyhong"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Zhannyhong":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zhannyhong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\gabby\\*.java","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zhannyhong"},"content":"java -classpath ..\\bin gabby.Gabby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":19,"Zhannyhong":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zhannyhong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/gabby/*.java","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zhannyhong"},"content":"java -classpath ../bin gabby.Gabby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"Zhannyhong":2}}]
