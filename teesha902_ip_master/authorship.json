[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"    //id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    //implementation \u0027org.openjfx:javafx-controls:17.0.2\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    //implementation \u0027org.openjfx:javafx-fxml:17.0.2\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    //mainClass.set(\"PiggyPlanner\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    mainClass.set(\"piggyplanner.Launcher\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"    archiveBaseName \u003d \"PiggyPlanner\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"jar {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    enabled \u003d false","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"    //jvmArgs \u003d [\u0027--module-path\u0027, \u0027/path/to/javafx-sdk/lib\u0027, \u0027--add-modules\u0027, \u0027javafx.controls,javafx.fxml\u0027]","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"checkstyle {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"    toolVersion \u003d \u002710.20.2\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"    //configFile \u003d file(\"config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"    //configProperties \u003d [\"suppressionFile\": file(\"config/checkstyle/Checkstyle Suppressions.xml\")]","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"teesha902":29,"-":39}},{"path":"src/main/java/commands/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import tasks.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":" * Handles adding different types of tasks (ToDo, Deadline, Event) to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"public class AddTask {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     * Adds a ToDo type task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"     * @param userInput The full user command containing the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list where the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"     * @return A success message confirming the addition.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the task description is missing.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    public static String todo(String userInput, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        assert userInput !\u003d null : \"User input should never be null in AddTask.todo()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        assert taskList !\u003d null : \"Task list should never be null in AddTask.todo()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"        if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"You forgot to mention what the task is.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        String taskName \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        validateNonEmpty(taskName, \"You forgot to mention what the task is.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"        if (isDuplicate(newTask, taskList)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"This task already exists in your list!\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"        assert taskList.contains(newTask) : \"Task should be successfully added to taskList in AddTask.todo()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"        return taskAddedMsg(newTask, taskList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"     * Adds a Deadline type task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"     * @param userInput The full user command containing the task and due date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list where the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"     * @return A success message confirming the addition.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the task description or deadline is missing or incorrectly formatted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    public static String deadline(String userInput, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        assert userInput !\u003d null : \"User input should never be null in AddTask.deadline()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"        assert taskList !\u003d null : \"Task list should never be null in AddTask.deadline()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"        if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"You forgot to mention when the task is due.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"        int dueDateIndex \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        String taskName \u003d userInput.substring(9, dueDateIndex).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"        String dueDateStr \u003d userInput.substring(dueDateIndex + 3).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"        validateNonEmpty(taskName, \"You forgot to mention what the task is.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"        validateNonEmpty(dueDateStr, \"You forgot to mention when the deadline is.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"            LocalDateTime dueDate \u003d LocalDateTime.parse(dueDateStr, INPUT_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"            assert dueDate !\u003d null : \"Parsed dueDate should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"            Task newTask \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"            if (isDuplicate(newTask, taskList)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"                throw new PiggyException(\"This deadline already exists in your list!\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"            taskList.add(newTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"            assert taskList.contains(newTask) : \"Task should be successfully added to taskList in AddTask.deadline()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"            return taskAddedMsg(newTask, taskList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Invalid date format! Try again and use: d/M/yyyy HHmm (e.g., 2/12/2019 1800).\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"     * Adds an Event type task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"     * @param userInput The full user command containing the task, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list where the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"     * @return A success message confirming the addition.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the task description, start time, or end time is missing or incorrectly formatted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"    public static String event(String userInput, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"        assert userInput !\u003d null : \"User input should never be null in AddTask.event()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"        assert taskList !\u003d null : \"Task list should never be null in AddTask.event()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"        if (!userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"You forgot to mention when the event starts/ends.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"        int fromIndex \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"        int toIndex \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"        String taskName \u003d userInput.substring(6, fromIndex).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"        String startTimeStr \u003d userInput.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"        String endTimeStr \u003d userInput.substring(toIndex + 3).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"        validateNonEmpty(taskName, \"You forgot to mention what the event is.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"        validateNonEmpty(startTimeStr, \"You forgot to mention when the event starts.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"        validateNonEmpty(endTimeStr, \"You forgot to mention when the event ends.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(startTimeStr, INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(endTimeStr, INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"            if (!startTime.isBefore(endTime)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"                throw new PiggyException(\"Event start time must be before end time.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"            Task newTask \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"            if (isDuplicate(newTask, taskList)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"                throw new PiggyException(\"This event already exists in your list!\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"            taskList.add(newTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"            assert taskList.contains(newTask) : \"Task should be successfully added to taskList in AddTask.event()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"            return taskAddedMsg(newTask, taskList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Invalid date format! Try again and use: d/M/yyyy HHmm (e.g., 2/12/2019 1800).\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"teesha902"},"content":"                    + \"Or check that the start time is before the end time.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"teesha902"},"content":"     * Validates that the given input is not empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"teesha902"},"content":"     * @param input The input string to validate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"teesha902"},"content":"     * @param errorMessage The error message to display if validation fails.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the input is empty or null.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"teesha902"},"content":"    private static void validateNonEmpty(String input, String errorMessage) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"teesha902"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(errorMessage);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"teesha902"},"content":"     * Constructs a formatted success message when a task is added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"teesha902"},"content":"     * @param task The newly added task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"teesha902"},"content":"     * @param totalTasks The total number of tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"teesha902"},"content":"     * @return A formatted success message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"teesha902"},"content":"    private static String taskAddedMsg(Task task, int totalTasks) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"teesha902"},"content":"        // Create the message based on the total number of tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"teesha902"},"content":"        String taskCountMessage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"teesha902"},"content":"        if (totalTasks \u003d\u003d 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"teesha902"},"content":"            taskCountMessage \u003d \"Now we have 1 task in the list.\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"teesha902"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"teesha902"},"content":"            taskCountMessage \u003d \"Now we have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"teesha902"},"content":"        // Return the final success message","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"teesha902"},"content":"        return \"New task incoming! I\u0027ve added it to our list :)\\n \" + task + \"\\n\" + taskCountMessage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"teesha902"},"content":"     * Checks if a task with the same description and relevant time details","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"teesha902"},"content":"     * (if applicable) already exists in the provided task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"teesha902"},"content":"     * @param newTask  The task to check for duplicates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks to search for duplicates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"teesha902"},"content":"     * @return true if a task with the same details exists in the list; false otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"teesha902"},"content":"    private static boolean isDuplicate(Task newTask, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"teesha902"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"teesha902"},"content":"            if (task.equals(newTask)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"teesha902"},"content":"                return true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"teesha902"},"content":"        return false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":174}},{"path":"src/main/java/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":" * Represents the different types of commands that can be executed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"public enum CommandType {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"    LIST,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"    MARK,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"    UNMARK,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"    TODO,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    EVENT,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"    DELETE,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    DAYPLAN,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    HELP,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    FIND,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    EXIT,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    UNKNOWN; // For unrecognized commands","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     * Converts a user input string into a corresponding CommandType.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"     * @param input The user input command as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"     * @return The corresponding CommandType.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    public static CommandType fromString(String input) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        case \"list\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"            return LIST;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"            return MARK;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"            return UNMARK;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"            return TODO;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"            return DEADLINE;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"        case \"event\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"            return EVENT;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"            return DELETE;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        case \"agenda\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"            return DAYPLAN;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"        case \"help\":","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"            return HELP;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        case \"find\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"            return FIND;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"            return EXIT;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"        default:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":54}},{"path":"src/main/java/commands/DayPlan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import tasks.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":" * Represents a command that generates a day\u0027s plan based on tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":" * It checks for deadlines and events occurring on a specified date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"public class DayPlan {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd yyyy\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     * Executes the \"agenda for {date}\" command, retrieving tasks and events for a specified date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"     * @param userInput The user\u0027s input string containing the date","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"     * @param taskList  The list of tasks to check against the specified date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string of deadlines and events occurring on the specified date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the user input is invalid or contains an incorrect date format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    public static String execute(String userInput, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        assert userInput !\u003d null : \"User input should never be null in DayPlan.execute()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        assert taskList !\u003d null : \"Task list should never be null in DayPlan.execute()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"            return \"You have no tasks at the moment. Free all day!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        LocalDate currDate \u003d extractDate(userInput);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"        assert currDate !\u003d null : \"Extracted date should never be null in DayPlan.execute()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        String formattedDate \u003d currDate.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        StringBuilder tasksOfDay \u003d new StringBuilder(\"Here\u0027s what\u0027s happening on \")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"                .append(formattedDate)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"                .append(\":\\n\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        appendDeadlines(currDate, taskList, tasksOfDay);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"        appendEvents(currDate, taskList, tasksOfDay);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        return tasksOfDay.toString().trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"     * Extracts and validates the date from user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"     * @param userInput The user\u0027s input string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"     * @return The extracted LocalDate.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the input format is invalid.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"    private static LocalDate extractDate(String userInput) throws PiggyException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        String[] inputParts \u003d userInput.split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        if (inputParts.length \u003c 3 || !inputParts[1].equals(\"for\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"I don\u0027t exactly understand what you are asking. Try this format:\\n \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"                    + \"agenda for d/M/yyyy (e.g., agenda for 2/12/2023)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"        String dateStr \u003d inputParts[2].trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"        if (dateStr.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Missing date! Please provide a valid date \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"                    + \"in the format d/M/yyyy (e.g., 2/12/2023).\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"            return LocalDate.parse(dateStr, DATE_FORMATTER);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Invalid date! \\nPlease check the day, month, \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"                    + \"and format (d/M/yyyy, e.g., 2/12/2023).\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"     * Appends deadlines occurring on the specified date to the output.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"     * @param date      The date to filter deadlines.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"     * @param taskList  The list of tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"     * @param tasksOfDay The StringBuilder storing the day\u0027s schedule.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"    private static void appendDeadlines(LocalDate date, ArrayList\u003cTask\u003e taskList, StringBuilder tasksOfDay) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"        tasksOfDay.append(\"DEADLINES:\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"        int deadlineCount \u003d 0;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"            if (task instanceof Deadline \u0026\u0026 ((Deadline) task).getDueDate().toLocalDate().equals(date)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"                tasksOfDay.append(task.getName())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"                        .append(\" due at: \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"                        .append(((Deadline) task).getTime())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"                deadlineCount++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"        if (deadlineCount \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"            tasksOfDay.append(\"You have no deadlines on this day.\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"            tasksOfDay.append(\"You have \").append(deadlineCount).append(\" deadline\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"            if (deadlineCount \u003e 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"                tasksOfDay.append(\"s\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"            tasksOfDay.append(\" on this day.\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"        tasksOfDay.append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"     * Appends events occurring on the specified date to the output.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"     * @param date The date to filter events.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"teesha902"},"content":"     * @param tasksOfDay The StringBuilder storing the day\u0027s schedule.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"teesha902"},"content":"    private static void appendEvents(LocalDate date, ArrayList\u003cTask\u003e taskList, StringBuilder tasksOfDay) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"teesha902"},"content":"        tasksOfDay.append(\"EVENTS:\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"teesha902"},"content":"        int eventCount \u003d 0;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"teesha902"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"teesha902"},"content":"            if (task instanceof Event \u0026\u0026 ((Event) task).includesDate(date)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"teesha902"},"content":"                tasksOfDay.append(task.getName())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"teesha902"},"content":"                        .append(\" \")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"teesha902"},"content":"                        .append(((Event) task).getDates())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"teesha902"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"teesha902"},"content":"                eventCount++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"teesha902"},"content":"        if (eventCount \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"teesha902"},"content":"            tasksOfDay.append(\"You have no events on this day.\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"teesha902"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"teesha902"},"content":"            tasksOfDay.append(\"You have \").append(eventCount).append(\" event\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"teesha902"},"content":"            if (eventCount \u003e 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"teesha902"},"content":"                tasksOfDay.append(\"s\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"teesha902"},"content":"            tasksOfDay.append(\" on this day.\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"teesha902":147}},{"path":"src/main/java/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":" * Handles deleting a task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"public class DeleteTask {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     * Deletes a task from the list based on the provided index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"     * @param index The command containing the task index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     * @return A success message after deletion.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    public static String execute(String index, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"            int taskIndex \u003d Integer.parseInt(index.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"                throw new PiggyException(\"You need to pick a task to delete that is actually in the list, silly.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"            if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"                return \"Phew! We got rid of \" + currTask","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"                        + \"\\nNow you only have 1 task to worry about.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"            return \"Phew! We got rid of \" + currTask","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks to worry about.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"You need to pick a single index number \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"                    + \"to delete from the list. You can try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":41}},{"path":"src/main/java/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.util.Set;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":" * Represents a command to find tasks in the task list that match one or more keywords.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"public class Find {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     * Extracts keywords from user input and calls the varargs-based execute method.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"     * @param userInput The full user input string, including the \"find\" command and keywords.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"     * @param tasks The list of tasks to search through.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string listing matching tasks or a message indicating no matches were found.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    public static String execute(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"        assert userInput !\u003d null : \"User input should not be null in Find.execute()\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        assert tasks !\u003d null : \"Task list should not be null in Find.execute()\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"        String[] inputParts \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"            return \"You forgot to tell me what keyword(s) to look for. Try again!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        /*","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        // Extract keywords and pass them as varargs","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        String[] rawKeywords \u003d inputParts[1].trim().split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"        ArrayList\u003cString\u003e keywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        for (String word : rawKeywords) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"            if (!word.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"                keywordList.add(word);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"        String[] keywords \u003d keywordList.toArray(new String[0]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        // Extract keywords as a List (filters out any empty words)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        List\u003cString\u003e keywords \u003d extractKeywords(inputParts[1]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"        return processKeywords(tasks, keywords);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"     * Processes the search for tasks containing any of the provided keywords.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"     * @param keywords The keywords to search for.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"     * @return The formatted search results.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"    private static String processKeywords(ArrayList\u003cTask\u003e tasks, List\u003cString\u003e keywords) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        assert !keywords.isEmpty() : \"Keyword list should not be empty in Find.processKeywords()\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        // Stream-based filtering of matching tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"        Set\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"                .filter(task -\u003e taskMatchesKeywords(task, keywords))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"        return formatResults(matchingTasks, keywords);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"     * Checks if a task\u0027s name contains any of the provided keywords (case-insensitive).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"    private static boolean taskMatchesKeywords(Task task, List\u003cString\u003e keywords) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"        String taskNameLower \u003d task.getName().toLowerCase();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"        return keywords.stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"                .map(keyword -\u003e keyword.toLowerCase())","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"                .anyMatch(keyword -\u003e taskNameLower.contains(keyword));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"     * Extracts keywords from a string (splits by spaces, removes empties).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"    private static List\u003cString\u003e extractKeywords(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"        return List.of(input.split(\" \")).stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"                .filter(word -\u003e !word.isEmpty())","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"     * Formats the result string based on matching tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"    private static String formatResults(Set\u003cTask\u003e matchingTasks, List\u003cString\u003e keywords) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"            return \"I couldn\u0027t find any tasks related to the keywords: \\\"\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"                    + String.join(\"\\\", \\\"\", keywords) + \"\\\".\\nTry different ones!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks I found related to the keywords: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"                + String.join(\", \", keywords) + \":\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"        for (Task task : matchingTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"            result.append(count++).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"        return result.toString().trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":103}},{"path":"src/main/java/commands/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":" * Handles the display of help information about available commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"public class Help {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"     * Returns a formatted help message describing available commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"     * @return A string containing help information.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    public static String execute() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"        return \"Here are the commands you can use in PiggyPlanner:\\n\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"                + \"1. list - View all tasks\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"                + \"2. mark [task number] - Mark a task as done\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"                + \"3. unmark [task number] - Mark a task as not done\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"                + \"4. todo [task description] - Add a ToDo task\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"                + \"5. deadline [task description] /by [d/M/yyyy HHmm] - Add a Deadline task\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"                + \"6. event [task description] /from [d/M/yyyy HHmm] /to [d/M/yyyy HHmm] - Add an Event task\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"                + \"7. delete [task number] - Delete a task\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"                + \"8. agenda for [d/M/yyyy] - View tasks on a specific date\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"                + \"9. find [keywords] - Search tasks by keywords\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"                + \"10. help - Show this help message\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"                + \"11. bye - Exit PiggyPlanner\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"teesha902":26}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":" * Handles displaying all tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"public class ListCommand {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     * @return A formatted list of tasks or a message if the list is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    public static String execute(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"            return \"You have no tasks at the moment. Yay!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"        StringBuilder fullList \u003d new StringBuilder(\"Here is our to-do list:\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"            fullList.append(String.format(\"%d. %s\\n\", i + 1, taskList.get(i).toString()));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"        return fullList.toString().trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":29}},{"path":"src/main/java/commands/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":" * Handles marking a task as completed in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"public class Mark {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     * Marks a task as completed based on the provided index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     * @param index The command containing the task index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"     * @return A success message after marking the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the index is invalid or the task is already marked.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    public static String execute(String index, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"            int taskIndex \u003d Integer.parseInt(index.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"                throw new PiggyException(\"You need to mark something actually in the list, silly\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"            // Check if the task is already marked","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"            if (currTask.status().equals(\"X\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"                return \"The task is already marked.\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"                // Mark the task and return success message","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"                currTask.mark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"                return \"Good work! Let\u0027s keep going.\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"                        + \"\\nI\u0027ve marked this task as done:\\n  \" + currTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"You need to pick an index number to mark in the list. You can try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":45}},{"path":"src/main/java/commands/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":" * Handles unmarking a task in the task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"public class Unmark {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     * Unmarks a task, marking it as incomplete, based on the provided index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     * @param index The command containing the task index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"     * @return A success message after unmarking the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the index is invalid or the task is already unmarked.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    public static String execute(String index, ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"            int taskIndex \u003d Integer.parseInt(index.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"                throw new PiggyException(\"You need to unmark something actually in the list, silly\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"            // Check if the task is already marked","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"            if (currTask.status().equals(\" \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"                return \"The task is already unmarked.\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"                // Mark the task and return success message","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"                currTask.unmark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"                return \"Oops, no problem.\\nI\u0027ve unmarked the task:\\n  \" + currTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"You need to pick an index number to unmark in the list. You can try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":42}},{"path":"src/main/java/exception/PiggyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package exception;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":" * Represents a custom exception specific to the PiggyPlanner application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":" * This exception is thrown when an error occurs due to invalid user input","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":" * or any other domain-specific issues within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"public class PiggyException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"     * Constructs a new PiggyException with the specified message giving detail about the nature of the source of error.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    public PiggyException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"        super(message); // Pass error message to Exception class","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"teesha902":17}},{"path":"src/main/java/piggyplanner/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package piggyplanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":" * This class serves as the entry point to the PiggyPlanner application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":" * It is responsible for launching the JavaFX graphical user interface (GUI).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"     * The main method that starts the PiggyPlanner application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"     * This method delegates to JavaFX to initialize the UI.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"     * @param args Command-line arguments passed to the application (not used).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    public static void main(String[] args) { //entry point to Java app","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"        Application.launch(ui.MainWindow.class, args); //tells JavaFX to start GUI by launching MainWindow","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"teesha902":19}},{"path":"src/main/java/piggyplanner/PiggyPlanner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package piggyplanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import commands.AddTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import commands.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import commands.DayPlan;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import commands.DeleteTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import commands.Find;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import commands.Help;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import commands.ListCommand;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import commands.Mark;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import commands.Unmark;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"import tasks.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":" * The main class for the PiggyPlanner application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":" * This class validates and processes commands.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"public class PiggyPlanner {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    private final Scanner reader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"     * Constructs a new PiggyPlanner instance.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"     * Initializes the task list by loading stored tasks and sets up a scanner for user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException if there is an error loading the stored tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    public PiggyPlanner() throws PiggyException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        this.taskList \u003d new TaskList(Storage.loadList());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"     * Processes the user\u0027s command and returns the result.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"     * @param userInput The input command string from the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"     * @return The result message after executing the command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If an invalid command or incorrect arguments are provided.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    private String processCommand(String userInput) throws PiggyException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"        assert userInput !\u003d null : \"User input should never be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        assert !userInput.trim().isEmpty() : \"User input should never be empty\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        assert taskList !\u003d null : \"Task list should not be null when processing a command\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        String[] inputParts \u003d userInput.trim().split(\" \", 2); // Split: command, arguments","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"        CommandType command \u003d CommandType.fromString(inputParts[0]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        assert command !\u003d null : \"Command type should never be null in processCommand()\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        validateArguments(command, inputParts);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        switch (command) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"        case LIST:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"            return ListCommand.execute(taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        case MARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"            assert inputParts.length \u003d\u003d 2 : command + \" should have an argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"            String markResponse \u003d Mark.execute(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"            Storage.updateList(taskList.getAllTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"            return markResponse;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"            assert inputParts.length \u003d\u003d 2 : command + \" should have an argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"            String unmarkResponse \u003d Unmark.execute(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"            Storage.updateList(taskList.getAllTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"            return unmarkResponse;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"        case TODO:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"            String todoResponse \u003d AddTask.todo(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"            Storage.updateList(taskList.getAllTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"            return todoResponse;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"            String deadlineResponse \u003d AddTask.deadline(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"            Storage.updateList(taskList.getAllTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"            return deadlineResponse;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"        case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"            String eventResponse \u003d AddTask.event(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"            Storage.updateList(taskList.getAllTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"            return eventResponse;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"        case DELETE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"            assert inputParts.length \u003d\u003d 2 : command + \" should have an argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"            String deleteResponse \u003d DeleteTask.execute(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"            Storage.updateList(taskList.getAllTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"            return deleteResponse;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"        case FIND:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"            assert inputParts.length \u003e\u003d 2 : command + \" should have an argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"            return Find.execute(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"        case DAYPLAN:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"            assert inputParts.length \u003e\u003d 2 : command + \" should have an argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"            return DayPlan.execute(userInput, taskList.getAllTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"        case HELP:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"            return Help.execute();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"        case EXIT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"            //Platform.exit();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"            return \"Goodbye! See you soon! 🐷\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"        default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"            assert false : \"processCommand should never receive an UNKNOWN command\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Unfortunately, I don\u0027t know what that means. Please try again.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"     * Handles user input from the GUI and returns the response to be displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"     * @return The response string from PiggyPlanner.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"teesha902"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"teesha902"},"content":"            return processCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"teesha902"},"content":"        } catch (PiggyException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"teesha902"},"content":"            return e.getMessage(); // Return error messages to GUI","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"teesha902"},"content":"     * Runs the PiggyPlanner application in the console.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"teesha902"},"content":"     * Continuously listens for user commands until the user exits.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"teesha902"},"content":"    public void run() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"teesha902"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"teesha902"},"content":"        while (true) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"teesha902"},"content":"            String userInput \u003d reader.nextLine(); // Get user input from console","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"teesha902"},"content":"            assert userInput !\u003d null : \"User input should never be null when reading from console\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"teesha902"},"content":"            try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"teesha902"},"content":"                String response \u003d processCommand(userInput);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"teesha902"},"content":"                Ui.showMessage(response);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"teesha902"},"content":"                if (CommandType.fromString(userInput.split(\" \")[0]) \u003d\u003d CommandType.EXIT) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"teesha902"},"content":"                    Ui.showExitMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"teesha902"},"content":"                    return; // Exit","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"teesha902"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"teesha902"},"content":"            } catch (PiggyException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"teesha902"},"content":"                Ui.showMessage(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"teesha902"},"content":"     * Validates the arguments provided for a given command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"teesha902"},"content":"     * Ensures the user input meets the expected format for each command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"teesha902"},"content":"     * @param command The command type provided by the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"teesha902"},"content":"     * @param inputParts The split user input containing command and arguments.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException if the provided arguments are incorrect or missing.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"teesha902"},"content":"    private void validateArguments(CommandType command, String[] inputParts) throws PiggyException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"teesha902"},"content":"        assert command !\u003d null : \"Command type should never be null in validateArguments\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"teesha902"},"content":"        int argLength \u003d inputParts.length; // Check number of arguments","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"teesha902"},"content":"        switch (command) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"teesha902"},"content":"        case LIST:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"teesha902"},"content":"        case EXIT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003d\u003d 1 : \"LIST and EXIT commands should not have arguments\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"teesha902"},"content":"        case MARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"teesha902"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"teesha902"},"content":"        case DELETE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003d\u003d 2 : \"MARK, UNMARK, and DELETE commands require exactly one argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"teesha902"},"content":"        case FIND:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003e\u003d 2 : \"FIND command should have at least one keyword\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"teesha902"},"content":"        case TODO:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003d\u003d 2 \u0026\u0026 !inputParts[1].trim().isEmpty()","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"teesha902"},"content":"                    : \"TODO command must have a valid task description\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"teesha902"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003e\u003d 2 \u0026\u0026 inputParts[1].contains(\"/by\") : \"DEADLINE command must have a valid date format\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"teesha902"},"content":"        case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003e\u003d 2 \u0026\u0026 inputParts[1].contains(\"/from\") \u0026\u0026 inputParts[1].contains(\"/to\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"teesha902"},"content":"                    : \"EVENT command must have a valid start and end time\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"teesha902"},"content":"        case DAYPLAN:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"teesha902"},"content":"            assert argLength \u003d\u003d 2 : \"DAYPLAN command requires a date argument\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"teesha902"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"teesha902"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"teesha902"},"content":"        default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"teesha902"},"content":"            assert false : \"validateArguments should never receive an UNKNOWN command\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"teesha902"},"content":"            //throw new PiggyException(\"Unknown command. Can you try again?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"teesha902"},"content":"     * The entry point for the PiggyPlanner application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"teesha902"},"content":"     * Initializes and runs the application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"teesha902"},"content":"     * @param args Command-line arguments (not used yet).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"teesha902"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"teesha902"},"content":"            new PiggyPlanner().run();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"teesha902"},"content":"        } catch (PiggyException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"teesha902"},"content":"            System.out.println(\"An error occurred while starting the program: \" + e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"teesha902":219}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.io.BufferedReader; //read data source file (line by line) - input needs to be wrapped by FileReader","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.io.BufferedWriter; //read data source file (line by line) - input needs to be wrapped by FileReader","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.io.File; //no r/w - only interacts with file metadata (exists, size, etc.)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.io.FileReader; // reads file contents (char by char)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":" * Handles the storage and retrieval of tasks from a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":" * Provides methods to load, save, and ensure the file\u0027s existence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"public class Storage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    private static final String FILE_PATH \u003d \"data/taskList.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"     * Ensures the task file and its parent directory exist.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    private static void ensureFileExists() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"                file.createNewFile();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"            System.out.println(\"An error occurred while ensuring the file exists: \" + e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"     * Loads the list of tasks from the file into an ArrayList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"     * Parses each line and reconstructs corresponding Task objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"     * @return An ArrayList of Task objects representing the saved tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If an error occurs while loading tasks from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"    public static ArrayList\u003cTask\u003e loadList() throws PiggyException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"            String currLine;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"            while ((currLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"                Task task \u003d parseTask(currLine);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"                }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"        assert taskList !\u003d null : \"Task list should never be null after loading\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"        return taskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"     * Parses a task entry from the file and reconstructs the corresponding Task object.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"     * @param line The line read from the file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"     * @return A Task object or null if parsing fails.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"        String[] taskParts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"        if (taskParts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"            System.out.println(\"Warning: Skipping corrupted entry - \" + line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"            return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"        String status \u003d taskParts[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"        boolean isDone \u003d status.equals(\"X\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"        String typeAndName \u003d taskParts[1].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"        if (!typeAndName.contains(\":\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"            System.out.println(\"Warning: Skipping malformed task entry - \" + line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"            return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"        String[] typeSplit \u003d typeAndName.split(\":\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"        if (typeSplit.length \u003c 2) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"            System.out.println(\"Warning: Skipping invalid task format - \" + line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"            return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"        String type \u003d typeSplit[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"        String description \u003d typeSplit[1].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"        String timeInfo \u003d taskParts[2].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"        return createTask(type, description, timeInfo, isDone, line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"     * Creates a Task object based on the provided parameters.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"     * @param type        The task type (T, D, E).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"     * @param timeInfo    The time information for Deadline/Event.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"     * @param isDone      Whether the task is marked as done.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"     * @param line        The original line from the file for error logging.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"     * @return A Task object or null if creation fails.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"teesha902"},"content":"    private static Task createTask(String type, String description, String timeInfo, boolean isDone, String line) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"teesha902"},"content":"            switch (type) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"teesha902"},"content":"            case \"T\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"teesha902"},"content":"                return new ToDo(description, isDone);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"teesha902"},"content":"            case \"D\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"teesha902"},"content":"                return createDeadline(description, timeInfo, isDone, line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"teesha902"},"content":"            case \"E\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"teesha902"},"content":"                return createEvent(description, timeInfo, isDone, line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"teesha902"},"content":"            default:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"teesha902"},"content":"                System.out.println(\"Warning: Unknown task type in file: \" + type);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"teesha902"},"content":"                return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"teesha902"},"content":"        } catch (PiggyException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"teesha902"},"content":"            System.out.println(\"Warning: Skipping invalid entry - \" + line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"teesha902"},"content":"            return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"teesha902"},"content":"    private static Task createDeadline(String description, String timeInfo, boolean isDone, String line)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"teesha902"},"content":"            throws PiggyException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"teesha902"},"content":"        if (!timeInfo.startsWith(\"by: \")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Invalid time format for deadline - \" + line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"teesha902"},"content":"        String dateStr \u003d timeInfo.substring(4).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"teesha902"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(dateStr, INPUT_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"teesha902"},"content":"        return new Deadline(description, by, isDone);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"teesha902"},"content":"    private static Task createEvent(String description, String timeInfo, boolean isDone, String line)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"teesha902"},"content":"            throws PiggyException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"teesha902"},"content":"        if (!timeInfo.startsWith(\"from: \") || !timeInfo.contains(\", to: \")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Invalid time format for event - \" + line);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"teesha902"},"content":"        String[] eventParts \u003d timeInfo.split(\", to: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"teesha902"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(eventParts[0].substring(6).trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"teesha902"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(eventParts[1].trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"teesha902"},"content":"        return new Event(description, from, to, isDone);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"teesha902"},"content":"     * Updates the storage file with the current list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"teesha902"},"content":"     * Creates a backup before writing and restores it if an error occurs.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"teesha902"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If an error occurs while updating the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"teesha902"},"content":"    public static void updateList(ArrayList\u003cTask\u003e taskList) throws PiggyException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"teesha902"},"content":"        ensureFileExists();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"teesha902"},"content":"        File originalFile \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"teesha902"},"content":"        File backupFile \u003d new File(FILE_PATH + \".bak\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"teesha902"},"content":"        // Backup previous valid file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"teesha902"},"content":"        if (originalFile.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"teesha902"},"content":"            originalFile.renameTo(backupFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"teesha902"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"teesha902"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"teesha902"},"content":"                writer.write(formatTask(task));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"teesha902"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"teesha902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"teesha902"},"content":"            if (backupFile.exists()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"teesha902"},"content":"                backupFile.renameTo(originalFile);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"An error occurred while updating the task list: \" + e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"teesha902"},"content":"        } finally {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"teesha902"},"content":"            if (backupFile.exists()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"teesha902"},"content":"                backupFile.delete();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"teesha902"},"content":"     * Formats a Task object into a string suitable for storage.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"teesha902"},"content":"     * @param task The task to format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"teesha902"},"content":"    private static String formatTask(Task task) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"teesha902"},"content":"        String status \u003d task.status();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"teesha902"},"content":"        String type;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"teesha902"},"content":"        String timeInfo \u003d \"--\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"teesha902"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"teesha902"},"content":"            type \u003d \"T\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"teesha902"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"teesha902"},"content":"            type \u003d \"D\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"teesha902"},"content":"            LocalDateTime dueDate \u003d ((Deadline) task).getDueDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"teesha902"},"content":"            timeInfo \u003d \"by: \" + dueDate.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"teesha902"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"teesha902"},"content":"            type \u003d \"E\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"teesha902"},"content":"            LocalDateTime startTime \u003d ((Event) task).getStart();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"teesha902"},"content":"            LocalDateTime endTime \u003d ((Event) task).getEnd();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"teesha902"},"content":"            timeInfo \u003d \"from: \" + startTime.format(OUTPUT_FORMATTER) + \", to: \" + endTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"teesha902"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"teesha902"},"content":"            return \"\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"teesha902"},"content":"        return status + \" | \" + type + \": \" + task.getName() + \" | \" + timeInfo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"teesha902":220}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":" * Represents a task with a deadline that must be completed before a specific date/time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"     * @param dueDate The due date and time of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    public Deadline(String name, LocalDateTime dueDate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"        super(name);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"     * Constructs a new Deadline task with completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"     * @param dueDate The due date and time of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    public Deadline(String name, LocalDateTime dueDate, boolean isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        super(name);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"     * Gets the due date of the deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"     * @return The due date as a LocalDateTime object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"        return dueDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"     * Gets the due time formatted as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"     * @return The formatted due time string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"    public String getTime() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        return dueDate.format(TIME_FORMATTER).toLowerCase();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(OUTPUT_FORMATTER).toLowerCase() + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"     * Compares this deadline with another object to determine equality.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"     * Two deadlines are considered equal if they have the same description and due date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"     * @param obj The object to compare with this deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"     * @return true if the object is a Deadline with the same description and due date; false otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"            return false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"        return this.dueDate.equals(deadline.dueDate);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"teesha902":81}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":" * Represents an event task that has a start and end date/time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd yyyy\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     * @param start The start date and time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"     * @param end The end date and time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the start time is after the end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) throws PiggyException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"        super(name);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Event start time must be before end time.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"     * Constructs a new Event task with completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"     * @param start The start date and time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"     * @param end The end date and time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If the start time is after the end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end, boolean isDone) throws PiggyException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"        super(name);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"            throw new PiggyException(\"Event start time must be before end time.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"     * @return The start time as a LocalDateTime object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        return start;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"     * @return The end time as a LocalDateTime object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"        return end;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"     * Checks if the event includes a given date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"     * @param date The date to check.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"     * @return True if the event includes the given date, otherwise false.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"    public boolean includesDate(LocalDate date) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"        return !date.isBefore(start.toLocalDate()) \u0026\u0026 !date.isAfter(end.toLocalDate());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"     * Gets the formatted event dates as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"     * @return The formatted event dates.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"    public String getDates() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"        return \"from: \" + start.format(DATE_FORMATTER) + \", to: \" + end.format(DATE_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(OUTPUT_FORMATTER).toLowerCase()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"                + \" to: \" + end.format(OUTPUT_FORMATTER).toLowerCase() + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"     * Compares this event with another object to determine equality.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"     * Two events are considered equal if they have the same description,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"     * start time, and end time.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"     * @param obj The object to compare with this event.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"     * @return true if the object is an Event with the same description, start time, and end time; false otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"            return false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"        Event event \u003d (Event) obj;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"        return this.start.equals(event.start) \u0026\u0026 this.end.equals(event.end);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"teesha902":118}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":" * Represents a generic task that can be tracked in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"public class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"    protected final String name;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"     * Constructs a new Task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     * Gets the status of the task (done or not).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"     * @return \"X\" if done, otherwise \" \".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    public String status() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"            return \"X\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        return \" \";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    public void mark() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"     * Gets the name/description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"     * @return The task name.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"    public String getName() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"        return this.name;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        return \"[\" + this.status() + \"] \" + this.name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"     * Compares this task with another object to determine equality.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"     * Two tasks are considered equal if they have the same description (name),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"     * regardless of their type or completion status.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"     * @param obj The object to compare with this task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"     * @return true if the object is a Task with the same description; false otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"            return true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"            return false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"        Task task \u003d (Task) obj;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"        return this.name.equals(task.name);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"teesha902":85}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":" * Manages list of all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"     * Gets all tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"     * Checks if a task with the same description and relevant time details","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"     * (if applicable) already exists in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"     * @param newTask The task to check for duplicates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"     * @return true if a task with the same details exists; false otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"    public boolean isDuplicateTask(Task newTask) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"            if (task.equals(newTask)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"                return true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        return false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"teesha902":51}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":" * Represents a simple task without any date/time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"     * Constructs a new ToDo task with completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"     * @param name The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"        super(name);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"teesha902":37}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":" * DialogBox represents a message bubble for the user and PiggyPlanner.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":" * It extends HBox and allows messages to be displayed with an image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    private final Label text;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    private final ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"     * Constructs a DialogBox with a specified message and image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"     * @param message The text to display.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"     * @param img The image to display.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    public DialogBox(String message, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        text \u003d new Label(message);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        text.setWrapText(true); //text wrapping","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        text.setMaxWidth(280); //limit width - prevent overflow","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        displayPicture \u003d new ImageView(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"        // Set size and style","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        displayPicture.setFitWidth(50);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        displayPicture.setFitHeight(50);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"        text.setStyle(\"-fx-background-color: #ffccd5; -fx-padding: 10; -fx-border-radius: 10; \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"                + \"-fx-background-radius: 10;\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        // Add timestamp (current time)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"        String timestamp \u003d LocalTime.now().format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        Label timestampLabel \u003d new Label(timestamp);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        timestampLabel.setStyle(\"-fx-text-fill: grey; -fx-font-size: 10;\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        // Group message + timestamp vertically","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"        VBox messageWithTimestamp \u003d new VBox(text, timestampLabel);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        messageWithTimestamp.setSpacing(2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        // Create a circular clip for the image","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"        Circle clip \u003d new Circle(25, 21, 13.5); // x, y, radius","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        displayPicture.setClip(clip); // Apply circular mask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"        this.setAlignment(Pos.TOP_RIGHT); // Default alignment for user","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"        this.setSpacing(2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        this.setMaxWidth(Double.MAX_VALUE); //Allow the dialog box to take full width","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        this.getChildren().addAll(messageWithTimestamp, displayPicture); // Add message, image and timestamp","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"     * Flips the dialog box alignment to the left, for PiggyPlanner responses.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"        //Converts curr elements (text, images) in dialog box into list to manipulate","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"        ObservableList\u003cNode\u003e nodes \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"        //reverses the order of elements","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"        FXCollections.reverse(nodes);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"        //update dialog box","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"        this.getChildren().setAll(nodes);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"     * Creates a DialogBox for user messages.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"     * @param message The user’s message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"     * @param userImage The user’s profile image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"     * @return A DialogBox aligned to the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"    public static DialogBox getUserDialog(String message, Image userImage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"        //Image userImage \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"        DialogBox dialogBox \u003d new DialogBox(message, userImage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"        dialogBox.setAlignment(Pos.TOP_RIGHT); //Ensure alignment to the right","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"        dialogBox.text.setStyle(\"-fx-background-color: #FFE5EA; -fx-padding: 10; \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"                + \"-fx-border-radius: 10; -fx-background-radius: 10;\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"        return dialogBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"     * Creates a DialogBox for PiggyPlanner responses, with flipped alignment.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"     * @param message The PiggyPlanner’s message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"     * @param piggyImage The PiggyPlanner’s profile image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"     * @return A DialogBox aligned to the left.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"    public static DialogBox getPiggyPlannerDialog(String message, Image piggyImage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"        //Image pigImage \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/pig.png\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"        DialogBox dialogBox \u003d new DialogBox(message, piggyImage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"        dialogBox.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"        //lighter pink for piggy responses","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"        dialogBox.text.setStyle(\"-fx-background-color: #ffccd5; -fx-padding: 10;\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"                + \" -fx-border-radius: 10; -fx-background-radius: 10;\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"        return dialogBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"teesha902":109}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"import piggyplanner.PiggyPlanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":" * MainWindow initializes and manages the graphical user interface (GUI) for PiggyPlanner.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":" * It extends the JavaFX Application class and handles user interactions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"public class MainWindow extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    private final Image piggyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pig.png\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    private PiggyPlanner piggyPlanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"     * Starts the JavaFX application, setting up the primary stage and loading the UI components.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"     * @throws PiggyException If there is an error initializing PiggyPlanner.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    //overriding start method from Application","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"    public void start(Stage stage) throws PiggyException { //main method JavaFX calls to set up + display GUI window","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        this.piggyPlanner \u003d new PiggyPlanner();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"            // Load FXML file for UI layout - read by fxmlloader","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"            //attach anchor pane to window (Stage) using Scene.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"            AnchorPane ap \u003d fxmlLoader.load(); //Load UI components into AnchorPane","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"            controller.setPiggyPlanner(this.piggyPlanner); // Pass initialized piggyPlanner to controller","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"            Scene scene \u003d new Scene(ap); //scene \u003d window content","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"            // Set up the stage (window)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"            stage.setTitle(\"PiggyPlanner 🐷\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"            // define minimum window size when resizing","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"            stage.setMinWidth(400);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"            stage.setMinHeight(600);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"            //makes main UI (AnchorPane) always stretch to match scene width/height","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"            ap.prefWidthProperty().bind(scene.widthProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"            ap.prefHeightProperty().bind(scene.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"     * Initializes the UI components and sets up event listeners.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"        // Make sure ScrollPane resizes with window","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"        scrollPane.fitToWidthProperty().set(true);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"        // Auto-scroll as new messages appear","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"        dialogContainer.getChildren().add(DialogBox.getPiggyPlannerDialog(Ui.showWelcomeMessage(), piggyImage));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"        // Ensure user input field expands properly","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"        AnchorPane.setLeftAnchor(userInput, 10.0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"        AnchorPane.setRightAnchor(userInput, 80.0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"        AnchorPane.setBottomAnchor(userInput, 10.0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"        // Ensure send button stays at the right","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"        AnchorPane.setRightAnchor(sendButton, 10.0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"        AnchorPane.setBottomAnchor(sendButton, 10.0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"        // Add key event listener for Enter key","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"        userInput.setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"     * Handles user input and generates a response from PiggyPlanner.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"     * Displays the conversation in the UI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"        String input \u003d userInput.getText(); // Get user\u0027s input from text field","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(input); // Get response from PiggyPlanner logic","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"        // Display user input and PiggyPlanner\u0027s response in the dialogContainer","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"                DialogBox.getPiggyPlannerDialog(response, piggyImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"        userInput.clear(); // Clear input field after sending msg","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"teesha902"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"teesha902"},"content":"            // Delay closing the window for 1.5 seconds","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"teesha902"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"teesha902"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"teesha902"},"content":"            delay.play();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"teesha902"},"content":"     * Sets the PiggyPlanner instance for the UI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"teesha902"},"content":"     * @param piggyPlanner The PiggyPlanner instance.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"teesha902"},"content":"    public void setPiggyPlanner(PiggyPlanner piggyPlanner) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"teesha902"},"content":"        this.piggyPlanner \u003d piggyPlanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"teesha902":135}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":" * Handles user interface interactions by displaying messages.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"        System.out.println(\"Hi! I\u0027m your PiggyPlanner\\nWhat shall we get done today?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"        return \"Hi! I\u0027m your PiggyPlanner\\n\\nWhat shall we get done today?\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"     * Displays the exit message when the application is terminated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    public static String showExitMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"        System.out.println(\"Bye. Excited to work with you again soon!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"        return \"Bye. Excited to work with you again soon!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"     * Displays a given message within a formatted separator.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    public static void showMessage(String message) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"teesha902":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"\u003c!-- Can organise everything with coordinates in AnchorPane, all elements are inside this --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"ui.MainWindow\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"            prefWidth\u003d\"400.0\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"            style\u003d\"-fx-background-color: #ffe6f0;\"\u003e \u003c!-- Light pink background --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    \u003c!-- ScrollPane to display conversation --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    \u003c!-- Vbox inside ScrollPane --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"10.0\" style\u003d\"-fx-padding: 10;\" prefWidth\u003d\"380.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    \u003c!-- Anchoring ScrollPane (fills available space except bottom 50px) --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.topAnchor\u003e10.0\u003c/AnchorPane.topAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.bottomAnchor\u003e50.0\u003c/AnchorPane.bottomAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.leftAnchor\u003e10.0\u003c/AnchorPane.leftAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.rightAnchor\u003e10.0\u003c/AnchorPane.rightAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane prefHeight\u003d\"50.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        \u003c!-- TextField - where user types input --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"10.0\" layoutY\u003d\"520.0\" prefWidth\u003d\"300.0\" promptText\u003d\"Enter your task here...\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        \u003c!-- Send Button --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        \u003cButton fx:id\u003d\"sendButton\" text\u003d\"Send\" layoutX\u003d\"320.0\" layoutY\u003d\"520.0\" prefWidth\u003d\"70.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"                style\u003d\"-fx-background-color: #ff99c8; -fx-text-fill: white;\" /\u003e \u003c!-- Pink button --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        \u003cAnchorPane.leftAnchor\u003e10.0\u003c/AnchorPane.leftAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        \u003cAnchorPane.rightAnchor\u003e10.0\u003c/AnchorPane.rightAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        \u003cAnchorPane.bottomAnchor\u003e0.0\u003c/AnchorPane.bottomAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"    \u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    \u003c!-- Anchoring elements --\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.bottomAnchor\u003e0.0\u003c/AnchorPane.bottomAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.leftAnchor\u003e0.0\u003c/AnchorPane.leftAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"    \u003cAnchorPane.rightAnchor\u003e0.0\u003c/AnchorPane.rightAnchor\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"teesha902":46}},{"path":"src/test/java/commands/AddTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"public class AddTaskTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    void validToDo() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"        String response \u003d AddTask.todo(\"todo Buy groceries\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"New task incoming! I\u0027ve added it to our list :)\\n \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"                + \"[T][ ] Buy groceries\\nNow we have 1 task in the list.\", response);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    void missingToDoTaskDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"            AddTask.todo(\"todo\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to mention what the task is.\", thrown.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    void validDeadlineInput() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"        String response \u003d AddTask.deadline(\"deadline Submit report /by 12/3/2025 1800\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"New task incoming! I\u0027ve added it to our list :)\\n \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"                + \"[D][ ] Submit report (by: wednesday, mar 12 2025, 6:00pm)\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"                + \"\\nNow we have 1 task in the list.\", response);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    void missingDeadlineDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"            AddTask.deadline(\"deadline /by 12/3/2025 1800\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to mention what the task is.\", thrown.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    void missingDeadlineDate() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"            AddTask.deadline(\"deadline Submit report\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to mention when the task is due.\", thrown.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"    void invalidDeadlineFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"            AddTask.deadline(\"deadline Submit report /by 32/13/2025 1800\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"Invalid date format! \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"                + \"Try again and use: d/M/yyyy HHmm (e.g., 2/12/2019 1800).\", thrown.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"    void validEventInput() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"        String response \u003d AddTask.event(\"event Team meeting /from 1/4/2025 0900 /to 1/4/2025 1100\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"New task incoming! I\u0027ve added it to our list :)\\n \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"                + \"[E][ ] Team meeting (from: tuesday, apr 01 2025, 9:00am to: tuesday, apr 01 2025, 11:00am)\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"                + \"\\nNow we have 1 task in the list.\", response);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"    void missingEventName() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"            AddTask.event(\"event /from 1/4/2025 0900 /to 1/4/2025 1100\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to mention what the event is.\", thrown.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"teesha902"},"content":"    void missingEventStart() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"teesha902"},"content":"            AddTask.event(\"event Conference /to 1/4/2025 1100\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to mention when the event starts/ends.\", thrown.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"teesha902"},"content":"    void missingEventEnd() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"teesha902"},"content":"            AddTask.event(\"event Conference /from 1/4/2025 0900\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to mention when the event starts/ends.\", thrown.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"teesha902"},"content":"    void invalidEventFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"teesha902"},"content":"            AddTask.event(\"event Conference /from 32/13/2025 0900 /to 1/4/2025 1100\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"Invalid date format! Try again and use: d/M/yyyy HHmm (e.g., 2/12/2019 1800).\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"teesha902"},"content":"                + \"\\nOr check that the start time is before the end time.\", thrown.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"teesha902"},"content":"    void invalidEventTimeRange() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"teesha902"},"content":"        PiggyException thrown \u003d assertThrows(PiggyException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"teesha902"},"content":"            AddTask.event(\"event Conference /from 2/4/2025 1800 /to 1/4/2025 0900\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"teesha902"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"Invalid date format! Try again and use: d/M/yyyy HHmm (e.g., 2/12/2019 1800).\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"teesha902"},"content":"                + \"\\nOr check that the start time is before the end time.\", thrown.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":121}},{"path":"src/test/java/commands/DayPlanTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"//import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"public class DayPlanTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    void noTasks() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        String result \u003d DayPlan.execute(\"agenda for 10/2/2025\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You have no tasks at the moment. Free all day!\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    void variousTasksInDay() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        taskList.add(new Deadline(\"Submit proposal\", LocalDateTime.parse(\"10/2/2025 2359\", INPUT_FORMATTER)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        taskList.add(new Event(\"Conference\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"10/2/2025 0900\", INPUT_FORMATTER),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"10/2/2025 1700\", INPUT_FORMATTER)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        String expectedOutput \u003d \"Here\u0027s what\u0027s happening on Monday, Feb 10 2025:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"                + \"\\nDEADLINES:\\nSubmit proposal due at: 11:59pm\\nYou have 1 deadline on this day.\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"                + \"\\nEVENTS:\\nConference from: Monday, Feb 10 2025, to: Monday, Feb 10 2025\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"                + \"You have 1 event on this day.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"        String result \u003d DayPlan.execute(\"agenda for 10/2/2025\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        assertEquals(expectedOutput, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":48}},{"path":"src/test/java/commands/DeleteTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"public class DeleteTaskTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    void execute_deleteFromEmptyList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e DeleteTask.execute(\"delete 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to pick a task to delete that is actually in the list, silly.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    void execute_nonIntegerIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy groceries\")); // Add at least 1 task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e DeleteTask.execute(\"delete one\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to pick a single index number to delete from the list. You can try again.\",","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"                e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    void execute_outOfBoundsIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Do homework\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e DeleteTask.execute(\"delete 5\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to pick a task to delete that is actually in the list, silly.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    void execute_correctDeletion() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Walk the dog\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Go jogging\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Read a book\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"        String result \u003d DeleteTask.execute(\"delete 2\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Phew! We got rid of [T][ ] Go jogging\\nNow you have 2 tasks to worry about.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        assertEquals(2, taskList.size()); // Ensure size updated","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"    void execute_correctDeletionOneLeft() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Submit assignment\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Pay bills\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        String result \u003d DeleteTask.execute(\"delete 2\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Phew! We got rid of [T][ ] Pay bills\\nNow you only have 1 task to worry about.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"        assertEquals(1, taskList.size()); // Ensure size updated","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"    void execute_correctDeletionAllDeleted() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Cook dinner\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"        String result \u003d DeleteTask.execute(\"delete 1\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Phew! We got rid of [T][ ] Cook dinner\\nNow you have 0 tasks to worry about.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"        assertEquals(0, taskList.size()); // Ensure list is now empty","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":79}},{"path":"src/test/java/commands/FindTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"public class FindTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    void setUp() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy milk\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Call John\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        taskList.add(new Deadline(\"Submit report\", LocalDateTime.parse(\"10/2/2025 2359\", FORMATTER)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        taskList.add(new Event(\"Team meeting\", LocalDateTime.parse(\"15/2/2025 1000\", FORMATTER),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"15/2/2025 1200\", FORMATTER)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    void findSingleMatch() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        String result \u003d Find.execute(\"find milk\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Here are the tasks I found related to the keywords: milk:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"                + \"1. [T][ ] Buy milk\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"    /*","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    void findMultipleMatches() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"        String result \u003d Find.execute(\"find meeting report\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Here are the tasks I found related to the keywords: meeting, report:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"                + \"1. [E][ ] Team meeting (from: saturday, feb 15 2025, 10:00am to: saturday, feb 15 2025, 12:00pm)\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"                + \"2. [D][ ] Submit report (by: monday, feb 10 2025, 11:59pm)\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"    */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"    void noMatch() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"        String result \u003d Find.execute(\"find groceries\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"I couldn\u0027t find any tasks related to the keywords: \\\"groceries\\\".\\nTry different ones!\", result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"    /*","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"    void findWithMultipleKeywordsOneMatching() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        String result \u003d Find.execute(\"find groceries meeting\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Here are the tasks I found related to the keywords: groceries, meeting:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"                + \"1. [E][ ] Team meeting (from: saturday, feb 15 2025, 10:00am to: saturday, feb 15 2025, 12:00pm)\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"    void findWithoutKeywords() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"        String result \u003d Find.execute(\"find\", taskList);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You forgot to tell me what keyword(s) to look for. Try again!\", result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":74}},{"path":"src/test/java/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"public class ListCommandTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    void execute_ifEmptyTaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You have no tasks at the moment. Yay!\", ListCommand.execute(taskList));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    void execute_multipleTasks_returnsFormattedList() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy milk\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        taskList.add(new Deadline(\"Submit report\", LocalDateTime.of(2025, 2, 10, 18, 0)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        taskList.add(new Event(\"Meeting\", LocalDateTime.of(2025, 3, 1, 9, 0), LocalDateTime.of(2025, 3, 1, 11, 0)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        String expected \u003d \"Here is our to-do list:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"                + \"1. [T][ ] Buy milk\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"                + \"2. [D][ ] Submit report (by: monday, feb 10 2025, 6:00pm)\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"                + \"3. [E][ ] Meeting (from: saturday, mar 01 2025, 9:00am to: saturday, mar 01 2025, 11:00am)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        assertEquals(expected, ListCommand.execute(taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":45}},{"path":"src/test/java/commands/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"public class MarkTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    void execute_nonIntegerIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e Mark.execute(\"mark one\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to pick an index number to mark in the list. You can try again.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    void execute_outOfBoundsIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e Mark.execute(\"mark 2\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to mark something actually in the list, silly\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"    void execute_markInEmptyList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e Mark.execute(\"mark 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to mark something actually in the list, silly\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    void execute_markAlrMarked() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy pen\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        Mark.execute(\"mark 1\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"The task is already marked.\", Mark.execute(\"mark 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"    //correct test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    void execute_markSuccess() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy pen\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"Good work! Let\u0027s keep going.\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"                        + \"\\nI\u0027ve marked this task as done:\\n  [T][X] Buy pen\",","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"                Mark.execute(\"mark 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":61}},{"path":"src/test/java/commands/UnmarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"public class UnmarkTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    void execute_nonIntegerIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e Unmark.execute(\"unmark one\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to pick an index number to unmark in the list. You can try again.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    void execute_outOfBoundsIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e Unmark.execute(\"unmark 2\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to unmark something actually in the list, silly\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    void execute_unmarkInEmptyList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        PiggyException e \u003d assertThrows(PiggyException.class, () -\u003e Unmark.execute(\"unmark 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"You need to unmark something actually in the list, silly\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    void execute_unmarkAlrUnmarked() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy pen\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"The task is already unmarked.\", Unmark.execute(\"unmark 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"    //correct test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"    void execute_unmarkSuccess() throws PiggyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        taskList.add(new ToDo(\"Buy pen\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        Mark.execute(\"mark 1\", taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"Oops, no problem.\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"                        + \"\\nI\u0027ve unmarked the task:\\n  [T][ ] Buy pen\",","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"                Unmark.execute(\"unmark 1\", taskList));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"teesha902":59}},{"path":"src/test/java/piggyplanner/PiggyPlannerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package piggyplanner;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"public class PiggyPlannerTest {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    private PiggyPlanner piggyPlanner;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    void setUp() throws PiggyException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"        ArrayList\u003cTask\u003e initialTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"        initialTasks.add(new ToDo(\"Test Task\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"        Storage.updateList(initialTasks); // Ensure the file starts with this known state","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        piggyPlanner \u003d new PiggyPlanner();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    void getResponse_listCommand_returnsListOfTasks() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"list\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Test Task\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    void getResponse_todoCommand_addsTask() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"todo Buy milk\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Buy milk\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    void getResponse_deadlineCommand_addsDeadlineTask() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"deadline Submit report /by 18/2/2025 2359\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Submit report\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    void getResponse_eventCommand_addsEventTask() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"event Team meeting /from 18/2/2025 1400 /to 18/2/2025 1600\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Team meeting\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"    void getResponse_markCommand_marksTaskAsDone() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"        piggyPlanner.getResponse(\"todo Complete project\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"mark 2\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"[X] Complete project\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"    void getResponse_unmarkCommand_unmarksTask() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"        piggyPlanner.getResponse(\"todo Complete project\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"        piggyPlanner.getResponse(\"mark 2\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"unmark 2\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"[ ] Complete project\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"teesha902"},"content":"    void getResponse_findCommand_findsTasksWithKeyword() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"find Test\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Test Task\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"teesha902"},"content":"    void getResponse_dayPlanCommand_showsTasksForDate() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"teesha902"},"content":"        piggyPlanner.getResponse(\"deadline Submit report /by 18/2/2025 2359\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"teesha902"},"content":"        piggyPlanner.getResponse(\"event Team meeting /from 18/2/2025 1400 /to 18/2/2025 1600\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"teesha902"},"content":"        String response \u003d piggyPlanner.getResponse(\"agenda for 18/2/2025\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Submit report\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"teesha902"},"content":"        assert (response.contains(\"Team meeting\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"teesha902":82}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    public void getTime_correctlyFormatsAmTime() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"2/12/2025 0930\", INPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", dueDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"9:30am\", deadline.getTime(), \"getTime() should return time in h:mma format.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"    public void getTime_correctlyFormatsPmTime() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"2/12/2025 2130\", INPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", dueDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"9:30pm\", deadline.getTime(), \"getTime() should return time in h:mma format.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    public void getTime_correctlyFormatsMidnight() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"2/12/2025 0000\", INPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        Deadline deadline \u003d new Deadline(\"Start new task\", dueDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"12:00am\", deadline.getTime(), \"getTime() should correctly handle midnight.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"    public void getTime_correctlyFormatsNoon() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"2/12/2025 1200\", INPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        Deadline deadline \u003d new Deadline(\"Lunch break\", dueDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"12:00pm\", deadline.getTime(), \"getTime() should correctly handle noon.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"teesha902":40}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"public class EventTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    public void constructor_invalidTimeRange_throwsException() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"            new Event(\"Conference\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"                    LocalDateTime.parse(\"12/3/2025 1800\", INPUT_FORMATTER),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"                    LocalDateTime.parse(\"10/3/2025 1000\", INPUT_FORMATTER));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"            assertEquals(1, 0); // Constructor should not be able to reach this line -\u003e else: fail","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        } catch (PiggyException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"            assertEquals(\"Event start time must be before end time.\", e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"    public void includesDate_withinEventPeriod_returnsTrue() throws PiggyException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"        Event event \u003d new Event(\"Conference\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"10/3/2025 1000\", INPUT_FORMATTER),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"12/3/2025 1800\", INPUT_FORMATTER));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        boolean result \u003d event.includesDate(LocalDate.parse(\"11/3/2025\", DateTimeFormatter.ofPattern(\"d/M/yyyy\")));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"    public void includesDate_withinEventPeriod_returnsFalse() throws PiggyException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"        Event event \u003d new Event(\"Conference\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"10/3/2025 1000\", INPUT_FORMATTER),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"12/3/2025 1800\", INPUT_FORMATTER));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"        boolean result \u003d event.includesDate(LocalDate.parse(\"9/3/2025\", DateTimeFormatter.ofPattern(\"d/M/yyyy\")));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"        assertEquals(false, result);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"    public void getDates_correctlyFormatsDates() throws PiggyException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"        Event event \u003d new Event(\"Conference\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"10/3/2025 1000\", INPUT_FORMATTER),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.parse(\"12/3/2025 1800\", INPUT_FORMATTER));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"        assertEquals(\"from: Monday, Mar 10 2025, to: Wednesday, Mar 12 2025\", event.getDates());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"teesha902":57}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"import exception.PiggyException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"    void setUp() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"    void isDuplicateTask_duplicateToDo() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"        ToDo todo \u003d new ToDo(\"Buy milk\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"        taskList.getAllTasks().add(todo);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"        assert taskList.isDuplicateTask(new ToDo(\"Buy milk\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"teesha902"},"content":"    void isDuplicateTask_nonDuplicateToDo() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"teesha902"},"content":"        taskList.getAllTasks().add(new ToDo(\"Buy milk\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"teesha902"},"content":"        assert !taskList.isDuplicateTask(new ToDo(\"Call mom\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"teesha902"},"content":"    void isDuplicateTask_duplicateDeadline() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"teesha902"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", LocalDateTime.of(2025, 2, 18, 23, 59));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"teesha902"},"content":"        taskList.getAllTasks().add(deadline);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"teesha902"},"content":"        assert taskList.isDuplicateTask(new Deadline(\"Submit report\", LocalDateTime.of(2025, 2, 18, 23, 59)));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"teesha902"},"content":"    void isDuplicateTask_nonDuplicateDeadline() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"teesha902"},"content":"        taskList.getAllTasks().add(new Deadline(\"Submit report\", LocalDateTime.of(2025, 2, 18, 23, 59)));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"teesha902"},"content":"        assert !taskList.isDuplicateTask(new Deadline(\"Submit assignment\", LocalDateTime.of(2025, 2, 18, 23, 59)));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"teesha902"},"content":"    void isDuplicateTask_duplicateEvent() throws PiggyException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"teesha902"},"content":"        Event event \u003d new Event(\"Team meeting\", LocalDateTime.of(2025, 2, 19, 10, 0),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.of(2025, 2, 19, 12, 0));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"teesha902"},"content":"        taskList.getAllTasks().add(event);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"teesha902"},"content":"        assert taskList.isDuplicateTask(new Event(\"Team meeting\",","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.of(2025, 2, 19, 10, 0), LocalDateTime.of(2025, 2, 19, 12, 0)));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"teesha902"},"content":"    void isDuplicateTask_nonDuplicateEvent() throws PiggyException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"teesha902"},"content":"        taskList.getAllTasks().add(new Event(\"Team meeting\", LocalDateTime.of(2025, 2, 19, 10, 0),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.of(2025, 2, 19, 12, 0)));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"teesha902"},"content":"        assert !taskList.isDuplicateTask(new Event(\"Team lunch\",","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"teesha902"},"content":"                LocalDateTime.of(2025, 2, 19, 12, 0), LocalDateTime.of(2025, 2, 19, 14, 0)));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"teesha902":65}},{"path":"src/test/java/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"package tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"public class ToDoTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"    public void dummyTest() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"teesha902":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teesha902"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"teesha902"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"teesha902"},"content":"delete a","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"teesha902"},"content":"todo","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"teesha902"},"content":"todo homework","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"teesha902"},"content":"deadline","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"teesha902"},"content":"deadline homework","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"teesha902"},"content":"deadline /by tonight","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"teesha902"},"content":"deadline hw /by tonight","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"teesha902"},"content":"event","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"teesha902"},"content":"event party /from 6pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"teesha902"},"content":"event /from 6pm /to 11pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"teesha902"},"content":"event class /from 4 /to 6","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"teesha902"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"teesha902"},"content":"mark A","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"unmark B","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"teesha902"},"content":"mark 7","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"teesha902"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"teesha902"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"teesha902"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"teesha902"},"content":"unmark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"delete 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"teesha902"},"content":"hi","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"teesha902"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"teesha902":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"teesha902"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java ../src/main/java/PiggyPlanner.java","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"teesha902"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"teesha902"},"content":"java -classpath ../bin PiggyPlanner \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"teesha902":3,"-":36}}]
