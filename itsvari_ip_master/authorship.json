[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"|--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:|","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"| ![](https://avatars.githubusercontent.com/u/13640661?s\u003d100)  |      Ashe Low       | [Github](https://github.com/itsvari)  |          [Homepage](https://itsvari.com)           |","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"# I would like to join this list. How can I help the project?","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"itsvari":7,"-":4}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"# Songbird AI","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"[![Java CI](https://github.com/itsvari/ip/actions/workflows/gradle.yml/badge.svg)](https://github.com/itsvari/ip/actions/workflows/gradle.yml)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"The individual project for [CS2103T Software Engineering](https://nusmods.com/courses/CS2103T/software-engineering),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"taken during AY24/25 Semester 2.","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"itsvari":4,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"    id(\u0027com.github.johnrengelman.shadow\u0027) version \u00277.1.2\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    gradlePluginPortal()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    implementation(\u0027io.github.mkpaz:atlantafx-base:2.0.1\u0027)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    testImplementation \u0027org.mockito:mockito-core:5.+\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:5.+\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"    archiveBaseName \u003d \"songbird\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    archiveClassifier \u003d \"v0.1.0\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"checkstyle {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"tasks.withType(JavaCompile).configureEach {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"tasks.withType(Test).configureEach {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"    systemProperty \"file.encoding\", \"UTF-8\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":36,"-":37}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"# Songbird User Guide","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"itsvari":1,"-":26}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"import songbird.Main;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"public class Launcher {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsvari":11}},{"path":"src/main/java/songbird/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    private void flip() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"    public static DialogBox getSongbirdDialog(String s, Image i) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        db.flip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        return db;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsvari":60}},{"path":"src/main/java/songbird/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import atlantafx.base.theme.CupertinoDark;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * A GUI for Songbird using FXML and AtlantaFX.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final Songbird songbird \u003d new Songbird();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"        Application.setUserAgentStylesheet(new CupertinoDark().getUserAgentStylesheet());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"            mainWindow.setSongbird(songbird);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"            Ui.setMainWindow(mainWindow);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"            stage.show();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsvari":38}},{"path":"src/main/java/songbird/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private static final Image SONGBIRD_IMAGE \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"            MainWindow.class.getResourceAsStream(\"/images/songbird_small.png\")));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    private static final Image USER_IMAGE \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"            MainWindow.class.getResourceAsStream(\"/images/user_small.png\")));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    private Songbird songbird;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    public void setSongbird(Songbird songbird) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        this.songbird \u003d songbird;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        // Store the user input in Ui before getting the response","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        Ui.setCurrentUserInput(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        songbird.getResponse(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"     * Appends the user\u0027s input to the dialog container.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    public void handleUserDialog(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, USER_IMAGE));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"     * Appends Songbird\u0027s response to the dialog container.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"     * @param response The response from Songbird.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"    public void handleSongbirdResponse(String response) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getSongbirdDialog(response, SONGBIRD_IMAGE));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsvari":73}},{"path":"src/main/java/songbird/Songbird.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.command.Command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdStorageException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import songbird.parser.Parser;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import songbird.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" * Represents the Songbird chatbot.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"public class Songbird {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     * Constructs the Songbird chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    public Songbird() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"            Storage storage \u003d new Storage(\"./data/tasklistDB\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"            List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"            // provide an update if tasks exist","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"            if (!loadedTasks.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"                Ui.respond(\"Found \" + loadedTasks.size() + \" previously-saved task(s).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"            tasks \u003d new TaskList(loadedTasks, storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            this.parser \u003d new Parser(tasks);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdStorageException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"            Ui.error(\"Failed to initialize storage: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"            System.exit(1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"     * Initializes the Songbird chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        Songbird songbird \u003d new Songbird();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        songbird.init();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"     * Initializes the Songbird chatbot.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"     * Songbird greets the user and reads the user\u0027s command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"     * This method should be called once at the start of the program.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    private void init() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"        ui.greet();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        showTodayReminder();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"    public void getResponse(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"            Command commandObject \u003d parser.parse(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"            commandObject.execute();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"            Ui.error(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"     * Shows a reminder for tasks that are due or occurring on the current date as a reminder whenever Songbird is","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"     * initialized.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"    private void showTodayReminder() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksDueToday \u003d tasks.getTasksByDate(today);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"        if (!tasksDueToday.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"REMINDER :: You have task(s) happening today (\" + today + \"):\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"            int counter \u003d 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"            for (Task task : tasksDueToday) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"                Ui.respond(counter + \". \" + task.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"                counter++;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"itsvari":94}},{"path":"src/main/java/songbird/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * Represents the Bye command that exits the program.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * Inherits from the Command class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @see Command","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"     * Constructs the Bye command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"     * Initializes the Bye command with the type, friendly name, and description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    public ByeCommand() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"        super(CommandType.BYE, \"bye\", \"Exits Songbird.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     * Executes the Bye command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        Ui.respond(\"Goodbye. Remember: I\u0027m always listening.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        System.exit(0);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":31}},{"path":"src/main/java/songbird/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents a command that the user can input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" * The command is responsible for executing the user\u0027s input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * The command is also responsible for providing a friendly name and description to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * The command is an abstract class that is inherited by specific command classes.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    private final CommandType commandType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    private final String friendlyName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    private final String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"     * Constructs the Command class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     * Initializes the command with the given type, friendly name, and description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     * @param commandType  The type of the command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * @param friendlyName The friendly name of the command, shown to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     * @param description  The description of the command, shown to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    public Command(CommandType commandType, String friendlyName, String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        this.friendlyName \u003d friendlyName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"    // GETTERS","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    public CommandType getType() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"        return commandType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    public String getFriendlyName() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        return friendlyName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        return description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    // ABSTRACT METHODS","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     * Executes the command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    public abstract void execute();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":50}},{"path":"src/main/java/songbird/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdInvalidCommandException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * Represents the different types of commands that the user can input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"public enum CommandType {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"    BYE,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    LIST,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    TODO,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    EVENT,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    MARK,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    UNMARK,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    DELETE,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    DUE,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    FIND;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     * Returns the CommandType corresponding to the given string.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     * The string is case-insensitive.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     * @param command The user-input command to be converted to a CommandType.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"     * @return The corresponding CommandType.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdInvalidCommandException If the string does not match any known type.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"    public static CommandType fromString(String command) throws SongbirdInvalidCommandException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        return switch (command.toLowerCase()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"            case \"bye\" -\u003e BYE;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"            case \"list\" -\u003e LIST;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"            case \"mark\" -\u003e MARK;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"            case \"unmark\" -\u003e UNMARK;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            case \"todo\" -\u003e TODO;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"            case \"deadline\" -\u003e DEADLINE;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"            case \"event\" -\u003e EVENT;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            case \"delete\" -\u003e DELETE;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"            case \"due\" -\u003e DUE;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"            case \"find\" -\u003e FIND;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"            default -\u003e throw new SongbirdInvalidCommandException();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        };","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":46}},{"path":"src/main/java/songbird/command/DeadlineAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.DeadlineTask;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * Represents a command that adds a Deadline task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * The DeadlineAdd command is used to add a Deadline task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * The command requires additional input from the user, which is the description of the Deadline task to be added, as","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * well as the deadline of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":" * @see Command","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":" * @see DeadlineTask","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"public class DeadlineAddCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    private final String taskDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     * Creates a new DeadlineAddCommand with the given task description and deadline.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     * @param tasks           The TaskList instance to which the task is to be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * @param deadline        The deadline of the task to be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    public DeadlineAddCommand(TaskList tasks, String taskDescription, LocalDateTime deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        super(CommandType.DEADLINE, \"deadline\", \"Adds a new Deadline task to the task list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"     * Executes the DeadlineAdd command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * Adds a new Deadline task to the task list and provides the user with a response.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        Task addedTask \u003d tasks.addTask(new DeadlineTask(taskDescription, deadline));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        Ui.respond(\"Deadline task added:\\n\" + addedTask, tasks.getTaskCountMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":49}},{"path":"src/main/java/songbird/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * Lists tasks that are due on a specified date. Only applies to Deadlines and Events.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     * Constructs a new DueCommand with the specified date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     * @param tasks The TaskList instance to be used by the DueCommand.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     * @param date  The date to filter tasks by.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    public DueCommand(TaskList tasks, LocalDate date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        super(CommandType.DUE, \"due\", \"Lists tasks that are due on a specified date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     * Executes the Due command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     * Lists tasks that are due on the specified date and displays them to the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksDue \u003d tasks.getTasksByDate(date);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        if (tasksDue.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"No tasks are due on \" + date + \".\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"You have \" + tasksDue.size() + \" tasks due on \" + date + \":\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"            int counter \u003d 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"            for (Task task : tasksDue) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"                Ui.respond(counter + \". \" + task.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"                counter++;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":50}},{"path":"src/main/java/songbird/command/EventAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.EventTask;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * Represents a command that adds an Event task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * The EventAdd command is used to add an Event task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * The command requires additional input from the user, which is the description of the Event task to be added, as","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * well as the starting and ending time of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":" * @see Command","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":" * @see EventTask","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"public class EventAddCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    private final String taskDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime eventStart;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime eventEnd;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"     * Constructs the EventAddCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     * Initializes the command with the given task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * @param tasks           The TaskList instance to which the task is to be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     * @param taskDescription The description of the event task to be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     * @param eventStart      The starting time of the event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     * @param eventEnd        The ending time of the event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    public EventAddCommand(TaskList tasks, String taskDescription, LocalDateTime eventStart, LocalDateTime eventEnd) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        super(CommandType.EVENT, \"event\", \"Adds a new Event task to the task list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     * Executes the EventAdd command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     * Adds a new Event task to the task list and provides the user with a response.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        Task addedTask \u003d tasks.addTask(new EventTask(taskDescription, eventStart, eventEnd));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        Ui.respond(\"Event task added:\\n\" + addedTask, tasks.getTaskCountMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":53}},{"path":"src/main/java/songbird/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * Represents the command to find tasks that contain a given keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"     * Constructs for the FindCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"     * Initializes the command with the given keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * @param tasks The task list to search for tasks in.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    public FindCommand(TaskList tasks, String keyword) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"        super(CommandType.FIND, \"Find\", \"Finds tasks that contain the given keyword (case-insensitive).\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     * Executes the Find command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Searches the task list for tasks that contain the keyword. If found, the tasks are displayed to the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     * If no tasks are found, a message is displayed to the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        // search task list for tasks that contain the keyword","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e foundTasks \u003d tasks.getTasksByKeyword(keyword);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"No tasks found with the keyword: \" + keyword);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"Found \" + foundTasks.size() + \" tasks containing the keyword: \" + keyword + \":\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"            int counter \u003d 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"            for (Task task : foundTasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"                Ui.respond(counter + \". \" + task.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"                counter++;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":50}},{"path":"src/main/java/songbird/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * Represents a command that lists all saved tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" * The List command is used to display all saved tasks to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * The command does not require any additional input from the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * @see Command","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     * Constructs the ListCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * Initializes the command with the given TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * @param tasks The TaskList to be used by the command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        super(CommandType.LIST, \"list\", \"Lists all saved tasks.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     * Executes the List command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Prints the list of saved tasks to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        Ui.respond(tasks.toString());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":37}},{"path":"src/main/java/songbird/command/TaskDeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdNonExistentTaskException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"public class TaskDeleteCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     * Constructs the TaskDeleteCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * Initializes the Delete command with the type, friendly name, and description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    public TaskDeleteCommand(TaskList tasks, int taskIndex) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        super(CommandType.DELETE, \"delete\", \"Deletes a task from the task list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Executes the Delete command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            Task deletedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"Task deleted:\\n\" + deletedTask, tasks.getTaskCountMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdNonExistentTaskException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            Ui.error(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":43}},{"path":"src/main/java/songbird/command/TaskMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdNonExistentTaskException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"public class TaskMarkCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     * Constructs the MarkCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * Initializes the Mark command with the type, friendly name, and description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * @param taskIndex The index of the task to be marked as done, 0-indexed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    public TaskMarkCommand(TaskList tasks, int taskIndex) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        super(CommandType.MARK, \"mark\", \"Marks a task as done.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Executes the Mark command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            Task retrievedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"            retrievedTask.setTaskDone();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"Task marked as done:\\n\" + retrievedTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            tasks.saveList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdNonExistentTaskException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"            Ui.error(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":45}},{"path":"src/main/java/songbird/command/TaskUnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdNonExistentTaskException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"public class TaskUnmarkCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     * Constructs the UnmarkCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * Initializes the Unmark command with the type, friendly name, and description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * @param taskIndex The index of the task to be marked as not done, 0-indexed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    public TaskUnmarkCommand(TaskList tasks, int taskIndex) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        super(CommandType.UNMARK, \"unmark\", \"Marks a task as not done.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Executes the Unmark command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            Task retrievedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"            retrievedTask.setTaskNotDone();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"Task marked as not done:\\n\" + retrievedTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdNonExistentTaskException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"            Ui.error(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":44}},{"path":"src/main/java/songbird/command/ToDoAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.task.ToDoTask;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * Represents a command that adds a ToDoTask to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * The ToDoAdd command is used to add a ToDoTask to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * The command requires additional input from the user, which is the description of the ToDoTask to be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class ToDoAddCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    private final String taskDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     * Constructs the TaskAddCommand class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * Initializes the command with the given task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    public ToDoAddCommand(TaskList tasks, String taskDescription) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        super(CommandType.TODO, \"todo\", \"Adds a new ToDo task to the task list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     * Executes the ToDoAdd command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     * Adds a new ToDoTask to the task list and provides the user with a response.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    public void execute() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        Task addedTask \u003d tasks.addTask(new ToDoTask(taskDescription));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        Ui.respond(\"ToDo task added:\\n\" + addedTask, tasks.getTaskCountMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":41}},{"path":"src/main/java/songbird/exception/SongbirdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents an exception that is thrown when an error occurs in the Songbird program.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"public class SongbirdException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"     * Constructs the SongbirdException class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"     * Initializes the exception with the given message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    public SongbirdException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":19}},{"path":"src/main/java/songbird/exception/SongbirdInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents an exception that is thrown when an invalid command is entered by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"public class SongbirdInvalidCommandException extends SongbirdException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"     * Constructs the SongbirdInvalidCommandException class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"     * Initializes the exception with a default message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    public SongbirdInvalidCommandException() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"        super(\"That\u0027s not a valid command. Please try again.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":17}},{"path":"src/main/java/songbird/exception/SongbirdMalformedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents an exception that is thrown when a malformed command is entered by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"public class SongbirdMalformedCommandException extends SongbirdException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"     * Constructs the SongbirdMalformedCommandException class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"     * Initializes the exception with the given message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    public SongbirdMalformedCommandException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"        super(\"That command was not formatted correctly: \" + message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":19}},{"path":"src/main/java/songbird/exception/SongbirdNonExistentTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.exception;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents an exception that is thrown when a task does not exist in the TaskList.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"public class SongbirdNonExistentTaskException extends SongbirdException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"     * Constructs the SongbirdNonExistentTaskException class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"     * Initializes the exception with a default message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    public SongbirdNonExistentTaskException() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"        super(\"That task couldn\u0027t be found. Please try again.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":17}},{"path":"src/main/java/songbird/exception/SongbirdStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.exception;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents an exception that is thrown when an error occurs in the storage of the Songbird program.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"public class SongbirdStorageException extends SongbirdException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"     * Constructs the SongbirdStorageException class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"     * Initializes the exception with the given message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    public SongbirdStorageException(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"        super(\"Storage error: \" + message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"itsvari":16}},{"path":"src/main/java/songbird/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdMalformedCommandException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * Helper class to parse date/time strings into LocalDate or LocalDateTime objects.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * Allows multiple input formats. Outputs are always in ISO date/time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    private static final String[] DATE_TIME_PATTERNS \u003d {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd h a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd h a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy h a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy h a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy h a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy h a\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"    };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"    private static final String[] DATE_PATTERNS \u003d {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"        \"yyyy-MM-dd\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"        \"yyyy/MM/dd\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        \"dd-MM-yyyy\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"        \"dd/MM/yyyy\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"        \"MM/dd/yyyy\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        \"MM-dd-yyyy\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"    };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"    private static final String[] TIME_PATTERNS \u003d {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"        \"HH:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"        \"HHmm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        \"H:mm\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"        \"HH\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"        \"H\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"        \"hh:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"        \"hh:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"        \"h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"        \"h:mm a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        \"hh a\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"        \"h a\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"    };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"     * Parses the input string into a LocalDateTime object, trying multiple formats.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"     * Handles several cases:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"     * 1. Full date-time string (e.g. \"2025-09-30 14:00\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"     * 2, Date-only string (e.g. \"2025-09-30\") - time will default to 23:59","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"     * 3. Time-only string (e.g. \"14:00\") - date will default to current date","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"     * 4. Special keywords \"today\" and \"tomorrow\" - time will default to 23:59","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"     * Supports both 24-hour and 12-hour time formats.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"     * @param input The input string to be parsed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"     * @return The LocalDateTime object parsed from the input string.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdMalformedCommandException If the input string cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    public static LocalDateTime parseDateTime(String input) throws SongbirdMalformedCommandException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        // try full date-time patterns","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"        for (String pattern : DATE_TIME_PATTERNS) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"                return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"                // ignore and try next pattern","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"        // try parsing as time only (default to today\u0027s date)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"        for (String pattern : TIME_PATTERNS) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"                LocalTime time \u003d LocalTime.parse(input, DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"                return LocalDateTime.of(LocalDate.now(), time);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"                // ignore and try next pattern","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"        // try date-only patterns (default to 23:59)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"            LocalDate date \u003d parseDate(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"            return date.atTime(23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdMalformedCommandException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"            throw new SongbirdMalformedCommandException(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"                    \"Unable to parse date/time: \" + input + \"\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"                            + \"Valid formats include:\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"                            + \"- Full date and time (e.g., 2024-03-15 14:30)\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"                            + \"- Date only (e.g., 2024-03-15)\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"                            + \"- Time only (e.g., 14:30)\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"     * Parses a string into a LocalDate, trying multiple formats.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"     * @param input The string containing date information.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"     * @return A LocalDate object.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdMalformedCommandException if no valid format can parse the input.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"    public static LocalDate parseDate(String input) throws SongbirdMalformedCommandException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"        // first try explicit date patterns","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"        for (String pattern : DATE_PATTERNS) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"                return LocalDate.parse(input, DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"                // ignore and try next pattern","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"        // handle special keywords","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"        return switch (input.toLowerCase()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"            case \"today\" -\u003e LocalDate.now();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"            case \"tomorrow\" -\u003e LocalDate.now().plusDays(1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"            default -\u003e throw new SongbirdMalformedCommandException(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"                    \"Unable to parse date: \" + input + \"\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"                            + \"Valid formats include:\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"                            + \"- yyyy-MM-dd (e.g., 2024-03-15)\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"                            + \"- yyyy/MM/dd (e.g., 2024/03/15)\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"                            + \"- Special keywords: today, tomorrow\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"        };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":188}},{"path":"src/main/java/songbird/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.parser;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import songbird.command.ByeCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import songbird.command.Command;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import songbird.command.CommandType;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import songbird.command.DeadlineAddCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import songbird.command.DueCommand;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import songbird.command.EventAddCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import songbird.command.FindCommand;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import songbird.command.ListCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import songbird.command.TaskDeleteCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import songbird.command.TaskMarkCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import songbird.command.TaskUnmarkCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"import songbird.command.ToDoAddCommand;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdMalformedCommandException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"import songbird.task.TaskList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":" * Represents a parser that parses user input into commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":" * The parser is responsible for creating the appropriate command object based on the user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"public class Parser {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     * Constructs the Parser class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"     * @param tasks The TaskList object that stores the user\u0027s tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * Parses the user input into a command object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     * The command object is created based on the user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     * @return The command object that corresponds to the user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    public Command parse(String input) throws SongbirdException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        String[] inputArray \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        CommandType commandType \u003d CommandType.fromString(inputArray[0]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        return switch (commandType) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"            case LIST -\u003e new ListCommand(tasks);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"            case BYE -\u003e new ByeCommand();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"            case DEADLINE, EVENT, TODO -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"                // Check if the task description is empty","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"                if (inputArray.length \u003c 2 || inputArray[1].isBlank()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"                yield handleTaskAddCommands(commandType, inputArray[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"            case FIND -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"                // Check if the keyword is empty","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"                if (inputArray.length \u003c 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"You must specify a keyword to search for.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"                yield new FindCommand(tasks, inputArray[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"            case MARK, UNMARK -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"                // Check if the task number is empty","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"                if (inputArray.length \u003c 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"You must specify a task number to modify.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"                int index \u003d Integer.parseInt(inputArray[1]) - 1; // convert to 0-based indexing for internal use","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"                yield handleMarkingCommands(commandType, tasks, index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"            case DELETE -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"                // Check if the task number is empty","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"                if (inputArray.length \u003c 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"You must specify a task number to delete.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"                int index \u003d Integer.parseInt(inputArray[1]) - 1; // convert to 0-based indexing for internal use","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"                yield new TaskDeleteCommand(tasks, index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"            case DUE -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"                // Check if the date is empty","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"                if (inputArray.length \u003c 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"You must specify a date, e.g. \u0027due 2025-01-17\u0027.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"                LocalDate date \u003d DateTimeParser.parseDate(inputArray[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"                yield new DueCommand(tasks, date);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"        };","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"     * Handles marking and unmarking commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"     * The method creates the appropriate command object based on the command type. Should only be called for marking","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"     * and unmarking commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"     * @param commandType The type of command to be executed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"     * @param tasks       The TaskList object that stores the user\u0027s tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"     * @param index       The index of the task to be marked or unmarked, 0-indexed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"     * @return The command object that corresponds to the user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    private Command handleMarkingCommands(CommandType commandType, TaskList tasks, int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"        return switch (commandType) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"            case MARK -\u003e new TaskMarkCommand(tasks, index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"            case UNMARK -\u003e new TaskUnmarkCommand(tasks, index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"            default -\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"                    throw new IllegalStateException(\"Unexpected command type: \" + commandType); // should never get here","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"        };","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"     * Handles commands related to adding tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"     * @param commandType    The type of command to be executed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"     * @param taskParameters The parameters of the task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"     * @return The command object that corresponds to the user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdException If the task parameters are empty or malformed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"    private Command handleTaskAddCommands(CommandType commandType, String taskParameters) throws SongbirdException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"        return switch (commandType) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"            case TODO -\u003e new ToDoAddCommand(tasks, taskParameters);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"            case DEADLINE -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"                // must be in format: \u003cDESCRIPTION\u003e /by \u003cDEADLINE\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"                String[] parts \u003d taskParameters.split(\" /by \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"                // Check if the deadline task has a deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"                if (parts.length \u003c 2 || parts[1].isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"The deadline task must have a deadline, formatted as \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"                            + \"\u0027/by YYYY-MM-DD\u0027 (e.g. 2025-01-30).\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"                String description \u003d parts[0].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"                LocalDateTime deadline \u003d DateTimeParser.parseDateTime(parts[1].trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"                yield new DeadlineAddCommand(tasks, description, deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"            case EVENT -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"                String eventDescription;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"                String eventStartString;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"                String eventEndString;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"                // must be in format: \u003cDESCRIPTION\u003e /from \u003cSTART\u003e /to \u003cEND\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"                if (!taskParameters.contains(\" /from \") || !taskParameters.contains(\" /to \")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"                    throw new SongbirdMalformedCommandException(\"The event task must have a start and end time, \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"                            + \"formatted as \u0027/from YYYY-MM-DD HH:MM /to YYYY-MM-DD HH:MM\u0027.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"                // Split the taskParameters string","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"                String[] fromParts \u003d taskParameters.split(\" /from \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"                String[] toParts;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"                // extract the description, start, and end times, no matter the order","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"                if (fromParts[1].contains(\" /to \")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"                    // if /from comes before /to","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"                    eventDescription \u003d fromParts[0].trim();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"                    toParts \u003d fromParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"                    eventStartString \u003d toParts[0].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"                    // if /to comes before /from","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"                    eventStartString \u003d fromParts[1].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"                    toParts \u003d fromParts[0].split(\" /to \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"                    eventDescription \u003d toParts[0].trim();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"                eventEndString \u003d toParts[1].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"                LocalDateTime eventStart \u003d DateTimeParser.parseDateTime(eventStartString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"                LocalDateTime eventEnd \u003d DateTimeParser.parseDateTime(eventEndString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"                yield new EventAddCommand(tasks, eventDescription, eventStart, eventEnd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"            default -\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"                    throw new IllegalStateException(\"Unexpected command type: \" + commandType); // should never get here","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"        };","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":185}},{"path":"src/main/java/songbird/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdStorageException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":" * Handles the loading and saving of TaskList data to and from persistent storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":" * Uses Java\u0027s built-in SerDes to store the task objects.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"public class Storage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    private final File databaseFile;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     * Constructs a new Storage object with the given file path.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     * If the file path does not exist, the directory will be created.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     * If the directory cannot be created, a SongbirdStorageException is thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"     * @param filePath The file path to the storage file","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdStorageException If the directory cannot be created","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"    public Storage(String filePath) throws SongbirdStorageException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        File directory \u003d new File(filePath).getParentFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"        this.databaseFile \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        // create directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            throw new SongbirdStorageException(\"Failed to create directory: \" + directory.getPath());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * Loads the list of tasks from persistent storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     * If the file doesn\u0027t exist, returns an empty list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     * If there are any errors reading from the file, returns an empty list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     * @return List of tasks loaded from persistent storage","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        if (!databaseFile.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"No existing task list found. Creating new empty task list...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(databaseFile))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"            return (List\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"            Ui.error(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"Creating new empty task list...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"            Ui.error(\"Error loading task data: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"            Ui.respond(\"Creating new empty task list...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"     * Saves the list of tasks to persistent storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"     * This will overwrite any existing data in the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"     * If there are any errors writing to the file, a SongbirdStorageException is thrown.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"     * @param tasks The list of tasks to save to persistent storage","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdStorageException If there are any errors writing to the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    public void save(List\u003cTask\u003e tasks) throws SongbirdStorageException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(databaseFile))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"            throw new SongbirdStorageException(\"Error saving to file: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"itsvari":83}},{"path":"src/main/java/songbird/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * Represents a Deadline task in the TaskList.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" * A Deadline task is a task with a deadline date/time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * It is denoted by a [D] prefix in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * It contains a description and a deadline date/time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * Example: [D][ ] submit corporate espionage report (by: 2025-10-30T23:59)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * Constructs a new DeadlineTask with a given description and deadline date/time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     * @param deadline    The deadline of the Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        super(TaskType.DEADLINE, description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Returns the deadline of the Deadline task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     * @return The deadline of the Deadline task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        return deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        String formatted \u003d deadline.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        return \"[D]\" + super.toString() + \" (deadline: \" + formatted + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":49}},{"path":"src/main/java/songbird/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * Represents an Event task in the TaskList.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" * An Event task is a task with a starting and ending date/time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * It is denoted by a [E] prefix in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * It contains a description, a starting date/time and an ending date/time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * Example: [E][ ] black market arms deal (from: 2025-09-30T14:00 to: 2025-09-30T16:00)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime eventStart;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime eventEnd;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     * Constructs the EventTask class. Initializes the task with the given description and event time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     * @param eventStart  The event starting time of the Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     * @param eventEnd    The event ending time of the Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    public EventTask(String description, LocalDateTime eventStart, LocalDateTime eventEnd) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     * Returns the starting time of the Event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"     * @return The starting time of the Event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    public LocalDateTime getEventStart() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        return eventStart;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     * Returns the ending time of the Event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     * @return The ending time of the Event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"    public LocalDateTime getEventEnd() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        return eventEnd;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        String start \u003d eventStart.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        String end \u003d eventEnd.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":62}},{"path":"src/main/java/songbird/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.io.Serial;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":" * Represents a Task that the user wants to save.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" * Tasks can either be done or not done, and must have a description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    @Serial","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    protected final TaskType taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    protected final String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * Constructs the Task class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     * Initializes the Task with a description, which cannot be changed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    public Task(TaskType taskType, String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"     * @return The description of the Task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        return description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     * Sets the Task as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    public void setTaskDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"     * Sets the Task as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    public void setTaskNotDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"     * The string includes the status icon (X for done, space for not done) and the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"     * @return A String representation of the Task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        String statusIcon \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"        return \"[\" + statusIcon + \"] \" + this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":67}},{"path":"src/main/java/songbird/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdNonExistentTaskException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdStorageException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import songbird.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import songbird.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * Represents a list of tasks that the user has saved.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" * The TaskList class is responsible for storing and managing the user\u0027s tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":" * @see Task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"public class TaskList {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     * Creates a TaskList with no initial tasks and the specified storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"     * @param storage The Storage instance to be used by the TaskList for persistence.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"     * Creates a TaskList with the specified initial tasks and storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"     * @param initialTasks The initial tasks to be added to the TaskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"     * @param storage      The Storage instance to be used by the TaskList for persistence.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    public TaskList(List\u003cTask\u003e initialTasks, Storage storage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(initialTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"     * @return The task that was added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        this.saveList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        return task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"     * Deletes the specified task from the task list by index, if valid. Otherwise, throws a","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"     * SongbirdNonExistentTaskException.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdNonExistentTaskException when the task is not found.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"    public Task deleteTask(int index) throws SongbirdNonExistentTaskException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"            throw new SongbirdNonExistentTaskException();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        Task deletedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        this.saveList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        return deletedTask;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"     * Saves the updated task list to persistent storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"     * If there are any errors saving the task list, an error message is displayed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"    public void saveList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"            storage.save(getAll());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdStorageException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"            Ui.error(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"     * Returns the specified task from the task list by index, if valid. Otherwise, throws a","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"     * SongbirdNonExistentTaskException.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"     * @return The specified task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdNonExistentTaskException when the task is not found.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"    public Task getTask(int index) throws SongbirdNonExistentTaskException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"            throw new SongbirdNonExistentTaskException();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"     * Returns all tasks in the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"     * @return A copy of the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"    List\u003cTask\u003e getAll() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"        return new ArrayList\u003c\u003e(tasks); // return a copy to maintain encapsulation","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"     * Returns the total size of the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"     * Returns a count of the number of tasks in the TaskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"     * @return A message indicating the number of tasks in the TaskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"    public String getTaskCountMessage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"        return \"You now have \" + getSize() + \" task(s).\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"     * Returns tasks that occur on the specified date:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"     * - For Deadline tasks, the deadline must be on the specified date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"     * - For Event tasks, the event must start or end on the specified date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"     * If there are no tasks that match the criteria, an empty list is returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"     * @param date The date to filter tasks by.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"     *             The time component of the date is ignored.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"     * @return A list of tasks that occur on the specified date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"    public List\u003cTask\u003e getTasksByDate(LocalDate date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"        return this.tasks.stream()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"                    if (task instanceof DeadlineTask dt) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"                        return dt.getDeadline().toLocalDate().isEqual(date);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"                    } else if (task instanceof EventTask et) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"                        LocalDate start \u003d et.getEventStart().toLocalDate();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"                        LocalDate end \u003d et.getEventEnd().toLocalDate();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"                        // check if current date is between start and end (inclusive)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"                        return !date.isBefore(start) \u0026\u0026 !date.isAfter(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"                    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"                    // ignore other task types","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"                    return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"                })","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"     * Returns tasks that contain the specified keyword in their description (case-insensitive).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"     * If there are no tasks that match the criteria, an empty list is returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"     * @return A list of tasks that contain the specified keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"    public List\u003cTask\u003e getTasksByKeyword(String keyword) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"        return this.tasks.stream()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"     * Returns a String representation of all the tasks in the TaskList.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"     * @return A String representation of all the tasks in the TaskList.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"        // handle case where there are no tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"            return \"You have no saved tasks.\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"        StringBuilder output \u003d new StringBuilder(\"Your saved tasks are:\\n\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"        String tasksString \u003d this.tasks.stream()","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"                .map(task -\u003e (this.tasks.indexOf(task) + 1) + \". \" + task.toString())","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"        output.append(tasksString);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"        return output.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":189}},{"path":"src/main/java/songbird/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents the type of Task that the user wants to save.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" * The TaskType enum is used to easily verify the type of Task that the user wants to save.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"    EVENT,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    TODO","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":11}},{"path":"src/main/java/songbird/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":" * Represents a ToDoTask.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"     * Constructs the ToDoTask class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"     * Initializes the task with the given description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":26}},{"path":"src/main/java/songbird/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.ui;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import songbird.MainWindow;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":" * Handles the user interface of the Songbird chatbot, including input and output.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"public class Ui {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    private static final String ASCII_ART_LOGO \u003d \"\"\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"               _____                   __    _          __","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"              / ___/____  ____  ____ _/ /_  (_)________/ /","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"              \\\\__ \\\\/ __ \\\\/ __ \\\\/ __ `/ __ \\\\/ / ___/ __  /","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"             ___/ / /_/ / / / / /_/ / /_/ / / /  / /_/ /","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"            /____/\\\\____/_/ /_/\\\\__, /_.___/_/_/   \\\\__,_/","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"                             /____/\"\"\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    private static String currentUserInput \u003d null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    private final Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     * Greets the user with the Songbird logo and a welcome message.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     * This method should be called once at the start of","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"     * the program.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    public void greet() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        respond(ASCII_ART_LOGO,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"                \"Songbird(TM) AI by VariTech Heavy Industries, (C) 3025. All rights reserved.\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"                \"We know exactly what you\u0027re thinking. Don\u0027t worry, we won\u0027t judge.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"     * Sets the MainWindow for the Ui to respond to.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"     * @param window The MainWindow to respond to.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    public static void setMainWindow(MainWindow window) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        mainWindow \u003d window;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     * Store\u0027s the user\u0027s input for later use.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"    public static void setCurrentUserInput(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        currentUserInput \u003d input;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"     * Responds to the user with the given messages.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"     * Calls the MainWindow to display the messages. This is an MVP solution and should be refactored","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"     * with a more elegant solution in the future.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"     * @param messages The messages to respond with.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    public static void respond(String... messages) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"        // if there\u0027s stored user input, display it first","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        if (currentUserInput !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"            mainWindow.handleUserDialog(currentUserInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"            currentUserInput \u003d null; // clear stored input","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        // display response messages","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"            mainWindow.handleSongbirdResponse(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"     * Responds to the user with an error message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"     * @param messages The error messages to respond with.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"    public static void error(String... messages) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"            respond(\"ERROR :: \" + message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"itsvari":85}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsvari":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"            fx:controller\u003d\"songbird.MainWindow\"\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"        /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"                defaultButton\u003d\"true\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsvari":55}},{"path":"src/test/java/songbird/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdStorageException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"import songbird.task.DeadlineTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"import songbird.task.EventTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"import songbird.task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"import songbird.task.ToDoTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":" * Tests the Storage class in the songbird.storage package.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":" * The Storage class is responsible for loading and saving TaskList data to and from persistent storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":" *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":" * @author Ashe Low","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":" * @version CS2103T AY24/25 Semester 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @TempDir","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    Path tempDir;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    private Path testFilePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"     * Sets up the Storage object before each test using a temporary file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * This ensures that each test has its own isolated environment.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdStorageException If there is an error initializing the Storage object.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"    public void setUp() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        testFilePath \u003d tempDir.resolve(\"test_tasklistDB\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        storage \u003d new Storage(testFilePath.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"     * Cleans up the test file after each test to ensure test isolation.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"     * Note: With @TempDir, manual cleanup is typically unnecessary as JUnit handles it.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    @AfterEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"    public void tearDown() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        File file \u003d testFilePath.toFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"                // Ensure file handle is released by forcing GC and waiting a bit","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"                System.gc();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"                Thread.sleep(100);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"                boolean isDeleted \u003d file.delete();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"                assertTrue(isDeleted, \"Failed to delete test file during tearDown: \" + testFilePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                Thread.currentThread().interrupt();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"     * Tests saving and loading a non-empty list of tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"     * Ensures that all tasks are persisted and loaded correctly.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"    public void testSaveAndLoad_tasksPersistedCorrectly() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(new ToDoTask(\"Test ToDo\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(new DeadlineTask(\"Test Deadline\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 10, 30, 23, 59)));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(new EventTask(\"Test Event\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 9, 30, 14, 0),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 9, 30, 16, 0)));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"        storage.save(tasksToSave);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksToSave.size(), loadedTasks.size(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"                \"Expected the same number of tasks after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"            assertEquals(tasksToSave.get(i).toString(), loadedTasks.get(i).toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"                    \"Expected the same task description after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"     * Tests saving and loading an empty task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"     * Ensures that saving an empty list results in an empty list upon loading.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"    public void testSaveAndLoad_emptyTaskList_returnsEmptyList() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e emptyTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"        storage.save(emptyTasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        assertTrue(loadedTasks.isEmpty(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"                \"Expected an empty list after saving and loading an empty task list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"     * Tests saving and loading tasks with special characters in their descriptions.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"     * Ensures that special characters are preserved correctly.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"    public void testSaveAndLoad_tasksWithSpecialCharacters() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(new ToDoTask(\"Task with emojis 😊🚀\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(new DeadlineTask(\"Task with newline\\nand tab\\tcharacters\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 12, 25, 12, 0)));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(new EventTask(\"Task with Unicode characters: 測試, тест, اختبار\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 11, 1, 9, 0),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 11, 1, 17, 0)));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"        storage.save(tasksToSave);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksToSave.size(), loadedTasks.size(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"                \"Expected the same number of tasks after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"        for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"            assertEquals(tasksToSave.get(i).toString(), loadedTasks.get(i).toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"                    \"Expected the same task description with special characters after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"     * Tests saving and loading tasks with different isDone states.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"     * Ensures that the completion status of tasks is preserved.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"    public void testSaveAndLoad_tasksWithDifferentIsDoneStates() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"        ToDoTask todo \u003d new ToDoTask(\"Incomplete ToDo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"        ToDoTask todoDone \u003d new ToDoTask(\"Completed ToDo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"        todoDone.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"Incomplete Deadline\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 10, 30, 23, 59));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"        DeadlineTask deadlineDone \u003d new DeadlineTask(\"Completed Deadline\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 12, 31, 23, 59));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"        deadlineDone.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(todo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(todoDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"        tasksToSave.add(deadlineDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"        storage.save(tasksToSave);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksToSave.size(), loadedTasks.size(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"                \"Expected the same number of tasks after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"        for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"            assertEquals(tasksToSave.get(i).toString(), loadedTasks.get(i).toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"                    \"Expected the same task description and isDone state after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"     * Tests saving and loading multiple times to ensure data integrity over multiple cycles.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"    public void testMultipleSaveAndLoadCycles() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksCycle1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"        tasksCycle1.add(new ToDoTask(\"First Cycle ToDo\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"        storage.save(tasksCycle1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e loadedCycle1 \u003d storage.load();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksCycle1.size(), loadedCycle1.size(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"                \"Cycle 1: Expected the same number of tasks after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksCycle1.get(0).toString(), loadedCycle1.get(0).toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"                \"Cycle 1: Expected the same task description after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksCycle2 \u003d new ArrayList\u003c\u003e(loadedCycle1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"        tasksCycle2.add(new DeadlineTask(\"Second Cycle Deadline\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2026, 1, 1, 0, 0)));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"        storage.save(tasksCycle2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e loadedCycle2 \u003d storage.load();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksCycle2.size(), loadedCycle2.size(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsvari"},"content":"                \"Cycle 2: Expected the same number of tasks after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsvari"},"content":"        assertEquals(tasksCycle2.get(1).toString(), loadedCycle2.get(1).toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsvari"},"content":"                \"Cycle 2: Expected the same second task description after loading.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"itsvari"},"content":"     * Tests saving to a read-only file to simulate a save failure.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"itsvari"},"content":"     * Expects a SongbirdStorageException to be thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"itsvari"},"content":"    public void testSave_errorDuringSave_throwsSongbirdStorageException() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"itsvari"},"content":"        // Initialize with a valid path","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsvari"},"content":"        Storage faultyStorage \u003d new Storage(testFilePath.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsvari"},"content":"        File faultyFile \u003d testFilePath.toFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsvari"},"content":"            // Ensure the file exists","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsvari"},"content":"            if (!faultyFile.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"itsvari"},"content":"                boolean created \u003d faultyFile.createNewFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsvari"},"content":"                assertTrue(created, \"Failed to create test file.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsvari"},"content":"            // Make the file read-only to simulate a save failure","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"itsvari"},"content":"            boolean setReadOnly \u003d faultyFile.setReadOnly();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"itsvari"},"content":"            assertTrue(setReadOnly, \"Failed to set the test file to read-only.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"itsvari"},"content":"            // Attempt to save tasks, expecting a SongbirdStorageException","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"itsvari"},"content":"            List\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"itsvari"},"content":"            tasksToSave.add(new ToDoTask(\"Test Task\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"itsvari"},"content":"            assertThrows(SongbirdStorageException.class, () -\u003e faultyStorage.save(tasksToSave),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"itsvari"},"content":"                    \"Expected a SongbirdStorageException to be thrown when saving to a read-only file.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"itsvari"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"itsvari"},"content":"            fail(\"IOException occurred while setting up the test: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"itsvari"},"content":"        } finally {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"itsvari"},"content":"            // Reset file permissions to allow cleanup","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"itsvari"},"content":"            if (faultyFile.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"itsvari"},"content":"                boolean setWritable \u003d faultyFile.setWritable(true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"itsvari"},"content":"                if (!setWritable) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"itsvari"},"content":"                    System.err.println(\"Warning: Failed to reset file permissions for \" + faultyFile.getPath());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"itsvari"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":238}},{"path":"src/test/java/songbird/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * Tests the DeadlineTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    private DeadlineTask deadlineTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime deadline \u003d LocalDateTime.of(2025, 10, 30, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"     * Sets up the DeadlineTask object before each test.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        deadlineTask \u003d new DeadlineTask(\"Submit report\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"     * Tests the constructor of the DeadlineTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     * The constructor should correctly initialize the DeadlineTask object with the specified description, deadline,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * and task type.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    public void testConstructor_validInputs_correctInitialization() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"Submit report\", deadlineTask.description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        assertEquals(TaskType.DEADLINE, deadlineTask.taskType);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        assertEquals(deadline, deadlineTask.getDeadline());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        assertFalse(deadlineTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"     * Tests the setTaskDone method of the DeadlineTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"     * The method should correctly mark the task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    public void testSetTaskDone_taskInitiallyNotDone_taskMarkedAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        deadlineTask.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        assertTrue(deadlineTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"     * Tests the setTaskNotDone method of the DeadlineTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"     * The method should correctly mark the task as not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"     * This test is done after the task is initially marked as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"    public void testSetTaskNotDone_taskInitiallyDone_taskMarkedAsNotDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        deadlineTask.setTaskDone(); // First mark it as done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        deadlineTask.setTaskNotDone(); // Then mark it as not done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        assertFalse(deadlineTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"     * Tests the toString method of the DeadlineTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"     * The method should return a string representation of the DeadlineTask object in the correct format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"     * The status is represented by a cross [X] if the task is done, and a space [ ] if the task is not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"    public void testToString_taskNotDone_correctStringRepresentation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        String formattedDeadline \u003d deadline.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[D][ ] Submit report (deadline: \" + formattedDeadline + \")\", deadlineTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"     * Tests the toString method of the DeadlineTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"     * The method should return a string representation of the DeadlineTask object in the correct format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"     * The status is represented by a cross [X] if the task is done, and a space [ ] if the task is not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"    public void testToString_taskDone_correctStringRepresentation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        String formattedDeadline \u003d deadline.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"        deadlineTask.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[D][X] Submit report (deadline: \" + formattedDeadline + \")\", deadlineTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":85}},{"path":"src/test/java/songbird/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" * Tests the EventTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"public class EventTaskTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    private EventTask eventTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime eventStart \u003d LocalDateTime.of(2025, 9, 30, 14, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    private final LocalDateTime eventEnd \u003d LocalDateTime.of(2025, 9, 30, 16, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"     * Sets up the EventTask object before each test.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        eventTask \u003d new EventTask(\"Black market arms deal\", eventStart, eventEnd);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"     * Tests the constructor of the EventTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * The constructor should correctly initialize the EventTask object with the specified description, event start,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"     * event end, and task type.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void testConstructor_validInputs_correctInitialization() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"Black market arms deal\", eventTask.description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        assertEquals(TaskType.EVENT, eventTask.taskType);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        assertEquals(eventStart, eventTask.getEventStart());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        assertEquals(eventEnd, eventTask.getEventEnd());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        assertFalse(eventTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"     * Tests the setTaskDone method of the EventTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"     * The method should correctly mark the task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    public void testSetTaskDone_taskInitiallyNotDone_taskMarkedAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        eventTask.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        assertTrue(eventTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"     * Tests the setTaskNotDone method of the EventTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"     * The method should correctly mark the task as not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"    public void testSetTaskNotDone_taskInitiallyDone_taskMarkedAsNotDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        eventTask.setTaskDone(); // First mark it as done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        eventTask.setTaskNotDone(); // Then mark it as not done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        assertFalse(eventTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"     * Tests the toString method of the EventTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"     * The method should return the correct string representation of the EventTask object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"     * The string representation should include the task type, completion status, description, and event start and end.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"     * The completion status should be represented by [X] if the task is done, and [ ] if the task is not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"     * The task type should be represented by [E].","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"     * The description should be the same as the description provided during initialization.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"     * The event start and end should be formatted in ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"     * The string representation should be correct for both done and not done tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"    public void testToString_taskNotDone_correctStringRepresentation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"        String formattedStart \u003d eventStart.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        String formattedEnd \u003d eventEnd.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[E][ ] Black market arms deal (from: \" + formattedStart + \" to: \" + formattedEnd + \")\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"                eventTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        eventTask.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[E][X] Black market arms deal (from: \" + formattedStart + \" to: \" + formattedEnd + \")\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"                eventTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":84}},{"path":"src/test/java/songbird/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import static org.mockito.Mockito.anyList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import static org.mockito.Mockito.times;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"import org.mockito.ArgumentCaptor;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdNonExistentTaskException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"import songbird.exception.SongbirdStorageException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"import songbird.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":" * Unit tests for the TaskList class.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":" * Tests the functionality of managing tasks including adding, deleting,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":" * retrieving, and filtering tasks by date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    private Storage mockStorage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"     * Sets up the test environment before each test method.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"     * Creates a mock Storage object and initializes an empty TaskList.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        // Mock the Storage dependency","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        // Initialize TaskList with empty initial tasks","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        taskList \u003d new TaskList(mockStorage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"     * Tests adding a task to the TaskList.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"     * Verifies that the task is correctly added and storage is updated.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdStorageException If there is an error saving the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"    @SuppressWarnings(\"unchecked\") // Suppress unchecked cast warning for mockito.anyList()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    public void testAddTask() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        Task addedTask \u003d taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        assertEquals(task, addedTask, \"The added task should match the input task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, taskList.getSize(), \"TaskList size should be 1 after adding a task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        // Verify that storage.save was called with the correct task list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"        ArgumentCaptor\u003cList\u003cTask\u003e\u003e captor \u003d ArgumentCaptor.forClass(List.class);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        verify(mockStorage).save(captor.capture());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e savedTasks \u003d captor.getValue();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, savedTasks.size(), \"Saved task list should contain one task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"        assertEquals(task, savedTasks.get(0), \"Saved task should match the added task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"     * Tests deleting a task at a valid index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"     * Verifies that the correct task is deleted and storage is updated.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdStorageException If there is an error saving the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"    public void testDeleteTaskValidIndex() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"        Task task1 \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"        Task task2 \u003d new DeadlineTask(\"Submit assignment\", LocalDateTime.now().plusDays(1));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, taskList.getSize(), \"TaskList should have 2 tasks before deletion.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        Task deletedTask \u003d null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"            deletedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdNonExistentTaskException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"            fail(\"Exception should not be thrown for a valid index.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"        assertEquals(task1, deletedTask, \"Deleted task should be the first task added.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, taskList.getSize(), \"TaskList size should be 1 after deletion.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"        // Verify that storage.save was called three times (twice for adds, once for delete)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"        verify(mockStorage, times(3)).save(anyList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"     * Tests deleting a task at an invalid index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"     * Verifies that the appropriate exception is thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    public void testDeleteTaskInvalidIndex() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, taskList.getSize(), \"TaskList should have 1 task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"        assertThrows(SongbirdNonExistentTaskException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"            taskList.deleteTask(1); // Invalid index","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"        }, \"Deleting with an invalid index should throw SongbirdNonExistentTaskException.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"        // Ensure size remains unchanged","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, taskList.getSize(), \"TaskList size should remain 1 after failed deletion.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving a task at valid indices.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"     * Verifies that the correct tasks are retrieved.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdNonExistentTaskException If the task index is invalid.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"    public void testGetTaskValidIndex() throws SongbirdNonExistentTaskException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"        Task task1 \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"        Task task2 \u003d new EventTask(\"Attend meeting\", LocalDateTime.now(), LocalDateTime.now().plusHours(2));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"        Task retrievedTask1 \u003d taskList.getTask(0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"        Task retrievedTask2 \u003d taskList.getTask(1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"        assertEquals(task1, retrievedTask1, \"Retrieved task should match the first task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"        assertEquals(task2, retrievedTask2, \"Retrieved task should match the second task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving a task at invalid indices.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"     * Verifies that the appropriate exception is thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"    public void testGetTaskInvalidIndex() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"        assertThrows(SongbirdNonExistentTaskException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"            taskList.getTask(-1); // Negative index","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"        }, \"Getting a task with negative index should throw SongbirdNonExistentTaskException.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"        assertThrows(SongbirdNonExistentTaskException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"            taskList.getTask(1); // Index equal to size","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"        }, \"Getting a task with index equal to size should throw SongbirdNonExistentTaskException.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"     * Tests saving the task list successfully.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"     * Verifies that the storage.save method is called with correct arguments.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"     * @throws SongbirdStorageException If there is an error saving the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"    @SuppressWarnings(\"unchecked\") // Suppress unchecked cast warning for mockito.anyList()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"    public void testSaveListSuccess() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"        taskList.saveList(); // Manually invoke saveList","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"        verify(mockStorage, times(2)).save(anyList()); // Once for addTask, once for saveList","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"        // To further verify, capture the argument","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"        ArgumentCaptor\u003cList\u003cTask\u003e\u003e captor \u003d ArgumentCaptor.forClass(List.class);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"        verify(mockStorage, times(2)).save(captor.capture());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e savedTasks \u003d captor.getAllValues().get(1); // The second save is from saveList","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, savedTasks.size(), \"Saved task list should contain one task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsvari"},"content":"        assertEquals(task, savedTasks.get(0), \"Saved task should match the added task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"itsvari"},"content":"     * Tests the task count message generation.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"itsvari"},"content":"     * Verifies correct messages for different numbers of tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"itsvari"},"content":"    public void testGetTaskCountMessage() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"You now have 0 task(s).\", taskList.getTaskCountMessage(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"itsvari"},"content":"                \"Initial task count message should indicate 0 tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"        Task task1 \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"You now have 1 task(s).\", taskList.getTaskCountMessage(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"                \"Task count message should indicate 1 task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsvari"},"content":"        Task task2 \u003d new DeadlineTask(\"Submit assignment\", LocalDateTime.now().plusDays(1));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"You now have 2 task(s).\", taskList.getTaskCountMessage(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsvari"},"content":"                \"Task count message should indicate 2 tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date when the list is empty.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"itsvari"},"content":"     * Verifies that an empty list is returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_noTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"itsvari"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTasksByDate(date);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.isEmpty(), \"getTasksByDate should return an empty list when there are no tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date with only ToDoTasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"itsvari"},"content":"     * Verifies that ToDoTasks are not included in date-filtered results.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_onlyToDoTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(new ToDoTask(\"Read a book\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(new ToDoTask(\"Write code\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"itsvari"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTasksByDate(date);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.isEmpty(), \"ToDoTasks should not be included in getTasksByDate results.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date with a deadline task matching the target date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"itsvari"},"content":"     * Verifies that matching deadline tasks are included in results.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_deadlineTaskMatchingDate() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"itsvari"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, 10, 30, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"itsvari"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(\"Submit report\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"itsvari"},"content":"        LocalDate targetDate \u003d deadline.toLocalDate();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTasksByDate(targetDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, tasksOnDate.size(), \"There should be one task matching the deadline date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.contains(deadlineTask), \"The DeadlineTask should be included in the results.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date with a deadline task not matching the target date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"itsvari"},"content":"     * Verifies that non-matching deadline tasks are excluded from results.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"itsvari"},"content":"     * The target date is set to the day after the deadline.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_deadlineTaskNonMatchingDate() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"itsvari"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, 10, 30, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"itsvari"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(\"Submit report\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"itsvari"},"content":"        LocalDate targetDate \u003d deadline.toLocalDate().plusDays(1); // Next day","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTasksByDate(targetDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.isEmpty(), \"No tasks should match the non-deadline date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date with an event task overlapping the target date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"itsvari"},"content":"     * Verifies that overlapping event tasks are included in results.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"itsvari"},"content":"     * The target date is set to the start date of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"itsvari"},"content":"     * The EventTask spans from 2pm to 4pm on the target date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_eventTaskOverlappingDate() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"itsvari"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 9, 30, 14, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"itsvari"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 9, 30, 16, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"itsvari"},"content":"        EventTask eventTask \u003d new EventTask(\"Attend conference\", start, end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"itsvari"},"content":"        LocalDate targetDate \u003d LocalDate.of(2025, 9, 30);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTasksByDate(targetDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, tasksOnDate.size(), \"EventTask overlapping the date should be included.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.contains(eventTask), \"The EventTask should be included in the results.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date with an event task spanning multiple days.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"itsvari"},"content":"     * Verifies correct handling of multi-day events.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_eventTaskSpanningMultipleDays() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"itsvari"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 12, 31, 22, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"itsvari"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2026, 1, 1, 2, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"itsvari"},"content":"        EventTask eventTask \u003d new EventTask(\"New Year Party\", start, end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"itsvari"},"content":"        // Test on the first day","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"itsvari"},"content":"        LocalDate firstDay \u003d LocalDate.of(2025, 12, 31);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnFirstDay \u003d taskList.getTasksByDate(firstDay);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, tasksOnFirstDay.size(), \"EventTask should be included on the start date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnFirstDay.contains(eventTask), \"The EventTask should be included on the start date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"itsvari"},"content":"        // Test on the second day","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"itsvari"},"content":"        LocalDate secondDay \u003d LocalDate.of(2026, 1, 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnSecondDay \u003d taskList.getTasksByDate(secondDay);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, tasksOnSecondDay.size(), \"EventTask should be included on the end date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnSecondDay.contains(eventTask), \"The EventTask should be included on the end date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"itsvari"},"content":"        // Test on a day outside the event duration","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"itsvari"},"content":"        LocalDate outsideDay \u003d LocalDate.of(2026, 1, 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnOutsideDay \u003d taskList.getTasksByDate(outsideDay);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnOutsideDay.isEmpty(), \"EventTask should not be included on a day outside its duration.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by date with a mix of different task types.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"itsvari"},"content":"     * Verifies correct filtering of tasks based on date criteria.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByDate_mixedTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"itsvari"},"content":"        // ToDoTask - should not be included","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"itsvari"},"content":"        Task todo \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"itsvari"},"content":"        // DeadlineTask - matches date","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"itsvari"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, 10, 30, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"itsvari"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(\"Submit report\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"itsvari"},"content":"        // EventTask - spans the date","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"itsvari"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 10, 30, 10, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"itsvari"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 10, 30, 12, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"itsvari"},"content":"        EventTask eventTask \u003d new EventTask(\"Team Meeting\", start, end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"itsvari"},"content":"        // EventTask - does not include the date","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"itsvari"},"content":"        LocalDateTime start2 \u003d LocalDateTime.of(2025, 11, 1, 9, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"itsvari"},"content":"        LocalDateTime end2 \u003d LocalDateTime.of(2025, 11, 1, 11, 0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"itsvari"},"content":"        EventTask eventTask2 \u003d new EventTask(\"Workshop\", start2, end2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(eventTask2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"itsvari"},"content":"        LocalDate targetDate \u003d LocalDate.of(2025, 10, 30);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTasksByDate(targetDate);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, tasksOnDate.size(), \"Should return DeadlineTask and EventTask that match the date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.contains(deadlineTask), \"DeadlineTask should be included.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksOnDate.contains(eventTask), \"EventTask should be included.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"itsvari"},"content":"        assertFalse(tasksOnDate.contains(todo), \"ToDoTask should not be included.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"itsvari"},"content":"        assertFalse(tasksOnDate.contains(eventTask2), \"EventTask not matching the date should not be included.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"itsvari"},"content":"     * Tests the string representation of an empty task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"itsvari"},"content":"     * Verifies correct message for empty list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"itsvari"},"content":"    public void testToStringEmptyTaskList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"itsvari"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"itsvari"},"content":"        String result \u003d taskList.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"You have no saved tasks.\", result, \"toString should indicate no saved tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"itsvari"},"content":"     * Tests the string representation of a task list containing tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"itsvari"},"content":"     * Verifies correct formatting of task list output.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"itsvari"},"content":"    public void testToStringWithTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"itsvari"},"content":"        Task todo \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"itsvari"},"content":"        Task deadline \u003d new DeadlineTask(\"Submit report\", LocalDateTime.of(2025, 10, 30, 23, 59));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"itsvari"},"content":"        Task event \u003d new EventTask(\"Team Meeting\", LocalDateTime.of(2025, 10, 30, 10, 0),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"itsvari"},"content":"                LocalDateTime.of(2025, 10, 30, 12, 0));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"itsvari"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"itsvari"},"content":"                Your saved tasks are:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"itsvari"},"content":"                1. [T][ ] Read a book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"itsvari"},"content":"                2. [D][ ] Submit report (deadline: 2025-10-30T23:59:00)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"itsvari"},"content":"                3. [E][ ] Team Meeting (from: 2025-10-30T10:00:00 to: 2025-10-30T12:00:00)\"\"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"itsvari"},"content":"        String result \u003d taskList.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"itsvari"},"content":"        assertEquals(expectedOutput, result, \"toString should list all tasks with correct formatting.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"itsvari"},"content":"     * Tests adding duplicate tasks to the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"itsvari"},"content":"     * Verifies that duplicate tasks are allowed and handled correctly.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"itsvari"},"content":"    public void testAddDuplicateTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"itsvari"},"content":"        Task task1 \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"itsvari"},"content":"        Task task2 \u003d new ToDoTask(\"Read a book\"); // Duplicate description","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, taskList.getSize(), \"TaskList should allow duplicate tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"itsvari"},"content":"            assertEquals(task1, taskList.getTask(0), \"First task should be task1.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"itsvari"},"content":"            assertEquals(task2, taskList.getTask(1), \"Second task should be task2.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"itsvari"},"content":"        } catch (SongbirdNonExistentTaskException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"itsvari"},"content":"            fail(\"Exception should not be thrown for valid indices.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"itsvari"},"content":"     * Tests marking a task as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"itsvari"},"content":"     * Verifies that the task\u0027s status is updated and storage is called.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"itsvari"},"content":"    public void testMarkTaskAsDone() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"itsvari"},"content":"        assertFalse(task.isDone, \"Task should initially be not done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"itsvari"},"content":"        task.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"itsvari"},"content":"        taskList.saveList(); // Save the state after marking done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"itsvari"},"content":"        assertTrue(task.isDone, \"Task should be marked as done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"itsvari"},"content":"        // Verify that storage.save was called twice (add and save)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"itsvari"},"content":"        verify(mockStorage, times(2)).save(anyList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"itsvari"},"content":"     * Tests marking a task as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"itsvari"},"content":"     * Verifies that the task\u0027s status is updated and storage is called.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"itsvari"},"content":"    public void testMarkTaskAsNotDone() throws SongbirdStorageException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"itsvari"},"content":"        task.setTaskDone(); // Initially set as done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"itsvari"},"content":"        assertTrue(task.isDone, \"Task should initially be done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"itsvari"},"content":"        task.setTaskNotDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"itsvari"},"content":"        taskList.saveList(); // Save the state after marking not done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"itsvari"},"content":"        assertFalse(task.isDone, \"Task should be marked as not done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"itsvari"},"content":"        // Verify that storage.save was called twice (add and save)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"itsvari"},"content":"        verify(mockStorage, times(2)).save(anyList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"itsvari"},"content":"     * Tests the encapsulation of the getAll method.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"itsvari"},"content":"     * Verifies that modifications to the returned list don\u0027t affect the original list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"itsvari"},"content":"    public void testGetAllEncapsulation() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"itsvari"},"content":"        Task task \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e allTasks \u003d taskList.getAll();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"itsvari"},"content":"        // Attempt to modify the returned list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"itsvari"},"content":"        allTasks.add(new ToDoTask(\"New Task\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, taskList.getSize(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"itsvari"},"content":"                \"Modifying the returned list should not affect the original TaskList.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by keyword when the list is empty.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"itsvari"},"content":"     * Verifies that an empty list is returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByKeyword_noTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksByKeyword(\"book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksWithKeyword.isEmpty(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"itsvari"},"content":"                \"getTasksByKeyword should return an empty list when there are no tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by keyword with no matching tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"itsvari"},"content":"     * Verifies that an empty list is returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByKeyword_noMatchingTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(new ToDoTask(\"Read a book\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(new ToDoTask(\"Write code\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksByKeyword(\"exercise\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksWithKeyword.isEmpty(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"itsvari"},"content":"                \"getTasksByKeyword should return an empty list when there are no matching tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by keyword with matching tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"itsvari"},"content":"     * Verifies that the correct tasks are returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByKeyword_matchingTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"itsvari"},"content":"        Task task1 \u003d new ToDoTask(\"Read a book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"itsvari"},"content":"        Task task2 \u003d new ToDoTask(\"Write code\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"itsvari"},"content":"        Task task3 \u003d new ToDoTask(\"Read another book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksByKeyword(\"book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, tasksWithKeyword.size(), \"getTasksByKeyword should return two tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksWithKeyword.contains(task1), \"The list should contain the first task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksWithKeyword.contains(task3), \"The list should contain the third task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"itsvari"},"content":"     * Tests retrieving tasks by keyword with case-insensitive matching.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"itsvari"},"content":"     * Verifies that the correct tasks are returned.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"itsvari"},"content":"    public void testGetTasksByKeyword_caseInsensitive() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"itsvari"},"content":"        // Arrange","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"itsvari"},"content":"        Task task1 \u003d new ToDoTask(\"Read a Book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"itsvari"},"content":"        Task task2 \u003d new ToDoTask(\"Write code\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"itsvari"},"content":"        Task task3 \u003d new ToDoTask(\"Read another book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"itsvari"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"itsvari"},"content":"        // Act","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"itsvari"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksByKeyword(\"BOOK\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"itsvari"},"content":"        // Assert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, tasksWithKeyword.size(), \"getTasksByKeyword should return two tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksWithKeyword.contains(task1), \"The list should contain the first task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"itsvari"},"content":"        assertTrue(tasksWithKeyword.contains(task3), \"The list should contain the third task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":593}},{"path":"src/test/java/songbird/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package songbird.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" * Tests the ToDoTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    private ToDoTask todoTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"     * Sets up the ToDoTask object before each test.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"        todoTask \u003d new ToDoTask(\"Test ToDo Task\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"     * Tests the constructor of the ToDoTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"     * The constructor should correctly initialize the ToDoTask object with the specified description and task type.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    public void constructor_initializesFieldsCorrectly() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"Test ToDo Task\", todoTask.description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        assertEquals(TaskType.TODO, todoTask.taskType);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        assertFalse(todoTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"     * Tests the setTaskDone method of the ToDoTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"     * The method should correctly mark the task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    public void setTaskDone_marksTaskAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        todoTask.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        assertTrue(todoTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"     * Tests the setTaskNotDone method of the ToDoTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"     * The method should correctly mark the task as not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"    public void setTaskNotDone_marksTaskAsNotDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        todoTask.setTaskDone(); // First mark it as done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        todoTask.setTaskNotDone(); // Then mark it as not done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        assertFalse(todoTask.isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"     * Tests the toString method of the ToDoTask class.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"     * The method should return the correct string representation of the ToDoTask object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"     * The string representation should include the task type, completion status, and description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"     * The completion status should be represented by [X] if the task is done, and [ ] if the task is not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"     * The task type should be represented by [T].","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"     * The description should be the same as the description provided during initialization.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"     * The string representation should be correct for both done and not done tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"    public void toString_returnsCorrectStringRepresentation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[T][ ] Test ToDo Task\", todoTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"        todoTask.setTaskDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[T][X] Test ToDo Task\", todoTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsvari":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"todo Hack into MegaCorp mainframe","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"deadline Steal cybernetic blueprints /by 2300 hours","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"event Infiltrate NeuroTech facility /from 0200 hours /to 0400 hours","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"delete","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"delete 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"delete 10","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"deadline Submit corporate espionage report","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"deadline Delete security footage /by when the guards change shift","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"event Underground netrunner meetup /from midnight /to","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"event Cyber-arm maintenance /to 1500 hours /from 1400 hours","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"event Black market deal /from the usual spot /to the backup location","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"mark 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"mark 10","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"unmark 15","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"invalid_command","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"REM compile the code into the bin folder, recursively finding all .java files","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ^","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"    ..\\src\\main\\java\\songbird\\*.java ^","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"    ..\\src\\main\\java\\songbird\\command\\*.java ^","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    ..\\src\\main\\java\\songbird\\exception\\*.java ^","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    ..\\src\\main\\java\\songbird\\parser\\*.java ^","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    ..\\src\\main\\java\\songbird\\task\\*.java ^","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    ..\\src\\main\\java\\songbird\\ui\\*.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"java -classpath ..\\bin songbird.Songbird \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    echo Test result: FAILED","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    exit /b 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":") ELSE (","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    echo Test result: PASSED","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    exit /b 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":")","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"itsvari":16,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src/main/java -name \"*.java\")","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"java -classpath ../bin songbird.Songbird \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"itsvari":2,"-":36}}]
