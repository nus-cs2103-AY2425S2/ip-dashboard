[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"    mainClass.set(\"lolok.Launcher\")","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"    archiveBaseName \u003d \"lolok\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":24,"-":39}},{"path":"data/lolok_data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"E| |Kickoff Meeting|2025-12-31, 10:00|2025-12-31, 12:00","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"E| |Sprint Sync|2025-12-31, 09:00|2025-12-31, 10:00","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"D| |Submit Report|2025-12-31, 18:00","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"T| |Review Proposal","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"T| |Prepare Q4 Budget","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"D| |Complete Budget|2025-01-15, 17:00","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"T|X|Check Emails","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"T| |CS2103T quizz","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"D| |Finish CS2103T quiz|2025-02-16, 22:00","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"zihung20":9}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"# Lolok User Guide","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"![A sample usage of the chatbot](./Ui.png)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"**Lolok** is a chatbot that helps you record your daily tasks and perform basic operations such as adding, marking, and finding tasks. It\u0027s lightweight, simple, and easy to use.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"## Features","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"### List Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"- Use the `list` command to display all tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"### Adding Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"Lolok supports three types of tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"#### 1. Todo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"- **Format:** `todo TASK_DESCRIPTION`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"- **Example:** `todo Finish quiz`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"#### 2. Deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"- **Format:** `deadline TASK_DESCRIPTION /by yyyy-MM-dd, HH:mm`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"- **Example:** `deadline Finish CS2103T quiz /by 2025-02-16, 22:00`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"#### 3. Event","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"- **Format:** `event TASK_DESCRIPTION /from yyyy-MM-dd, HH:mm /to yyyy-MM-dd, HH:mm`  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"  (Order of `/from` and `/to` does not matter)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"- **Example:** `event CS2103T lecture /from 2025-02-21, 16:00 /to 2025-02-21, 18:00`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"**Successful Add Confirmation:**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"```plaintext","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"[D][ ] Finish CS2103T quiz (by: Feb 16 2025, 22:00)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"Now you have 2 tasks in your list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"\u003e - All commands are case-sensitive (e.g., use `todo` not `Todo`)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"\u003e - You are not allowed to add **_duplicate_** tasks, e.g., tasks with the **same description** and **same date/time** (if applicable).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"\u003e - Date/time must follow strict format: `yyyy-MM-dd, HH:mm` (e.g., `2025-02-21, 16:00`)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"### Mark/Unmark Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"- **Format:** `mark TASK_INDEX` or `unmark TASK_INDEX`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"- **Example:** `mark 1` (Marks the first task in the list as done)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"\u003e [!NOTE] ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"\u003e Task indexes correspond to numbers shown in the `list` command output.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"### Find Task","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"- **Format:** `find TASK_KEYWORD`","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"- **Example:** `find meeting` (Finds the tasks that has description `meeting`)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"### Delete Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"- **Format:** `delete TASK_INDEX`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"- **Example:** `delete 2` (Deletes the second task in the list)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"### Save and Exit","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"- Use `bye` to save tasks and exit","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"- **Warning:** Manually closing the window (e.g., clicking X) will NOT save your data","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"### Error Handling","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"- Invalid commands or incorrect date formats will trigger error messages","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"- Error notifications appear in red dialog boxes","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"zihung20":58,"-":15}},{"path":"src/main/java/lolok/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":" * A dialog box class that handles the dialog between the user and the chatbot,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":" * including displaying error messages and managing text input/output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    @FXML private TextFlow dialog;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    @FXML private ImageView displayPicture;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"        // Set text and image","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        Text textNode \u003d new Text(text);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        dialog.getChildren().add(textNode);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"        textNode.getStyleClass().add(isUser ? \"user-text\" : \"bot-text\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"        // Style configuration","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        this.getStyleClass().add(isUser ? \"user-message\" : \"bot-message\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"        HBox.setHgrow(dialog, Priority.ALWAYS);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"        // Circular avatar","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"        Circle clip \u003d new Circle(20, 20, 20);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"    private void flip() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"    public static DialogBox getLolokDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"        db.flip();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"        if (isError) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"            db.getStyleClass().add(\"error-message\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"        return db;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":73}},{"path":"src/main/java/lolok/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"public class Launcher {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":12}},{"path":"src/main/java/lolok/Lolok.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import lolok.command.Command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import lolok.exception.InvalidCommandException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import lolok.exception.LolokException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import lolok.storage.Storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"import lolok.task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"import lolok.ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":" * main class of the chatbot lolok","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"public class Lolok {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"     * Creates an instance of the Lolok chatbot that loads and stores data using the given file path.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"     * @param path the file path where data is stored","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    public Lolok(String path) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"        readData(path);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"     * Greets the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"     * @param name The name of the chatbot, e.g., \"lolok\" for this case.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"     * @return The string representation of the greeting message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"    public String greet(String name) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"        String greetMessage \u003d \"Hello! I\u0027m \" + name + \". \";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        greetMessage +\u003d \"What can I do for you?\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        return greetMessage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"     * Reads data from the specified file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"     * @param path the file path to read data from","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    private void readData(String path) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"        taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"    private void exit() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        storage.saveData(taskList.getList(), false);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        Ui.printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream byteArrayOutputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"        PrintStream ps \u003d redirectSystemOutput(byteArrayOutputStream);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"        String response;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"            Command command \u003d new Command(input.split(\" \"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"            command.executeCommand(taskList);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"            if (command.isExit()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"                this.exit();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(e.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"            response \u003d resetSystemOutput(ps, originalOut, byteArrayOutputStream);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        return response;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"     * Redirects the system output to a PrintStream that captures the output to a ByteArrayOutputStream.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"     * @param byteArrayOutputStream the ByteArrayOutputStream to capture the output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"     * @return the PrintStream that captures the system output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"    private PrintStream redirectSystemOutput(ByteArrayOutputStream byteArrayOutputStream) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"        PrintStream ps \u003d new PrintStream(byteArrayOutputStream);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"        System.setOut(ps);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"        return ps;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"     * Resets the system output to the original PrintStream and retrieves the captured output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"     * @param printStream the PrintStream that was used for redirecting output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"     * @param originalOut the original system output (usually System.out).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zihung20"},"content":"     * @param baos the ByteArrayOutputStream that captured the output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zihung20"},"content":"     * @return the captured output as a string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zihung20"},"content":"    private String resetSystemOutput(PrintStream printStream, PrintStream originalOut, ByteArrayOutputStream baos) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zihung20"},"content":"        printStream.flush();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zihung20"},"content":"        String response \u003d baos.toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zihung20"},"content":"        baos.reset();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zihung20"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zihung20"},"content":"        return response;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zihung20"},"content":"    private void startTest() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zihung20"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zihung20"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zihung20"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zihung20"},"content":"            try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zihung20"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zihung20"},"content":"                if (input.equals(\"exit\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zihung20"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zihung20"},"content":"                }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zihung20"},"content":"                String response \u003d getResponse(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zihung20"},"content":"                System.out.print(response);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zihung20"},"content":"            } catch (LolokException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zihung20"},"content":"                Ui.printErrorMessage(e.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zihung20"},"content":"        this.exit();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":122}},{"path":"src/main/java/lolok/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":" * Main logic for GUI and window","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    private final Lolok lolok \u003d new Lolok(\"./data/lolok_data.txt\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"        initialize(stage);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"        fxmlLoader.\u003cMainWindow\u003egetController().setLolok(lolok);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        stage.show();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"        fxmlLoader.\u003cMainWindow\u003egetController().greetToUser();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    private void initialize(Stage stage) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"            stage.setTitle(\"Chatbot Lolok\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/icon.png\")));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printInitializeMessage(e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":38}},{"path":"src/main/java/lolok/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    private Lolok lolok;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    private final Image lolokImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lolok.jpg\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"    /** Injects the Lolok instance */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"    public void setLolok(Lolok l) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"        lolok \u003d l;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"     * Prints an initializing message when starting the app, such as loading app data.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    public void printInitializeMessage(String message) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"                DialogBox.getLolokDialog(message, lolokImage, false)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"        );","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"     * Creates a greeting message for the user when they start the app.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"    public void greetToUser() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"                DialogBox.getLolokDialog(lolok.greet(\"Lolok\"), lolokImage, false)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Lolok\u0027s reply and then appends them to","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        String response \u003d lolok.getResponse(input).trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"                DialogBox.getLolokDialog(response, lolokImage, response.contains(\"Exception\"))","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":71}},{"path":"src/main/java/lolok/command/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import lolok.exception.InvalidCommandException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import lolok.exception.InvalidDataException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":" * An enumeration of the action commands that can be performed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":" * Commands are grouped by their functional category.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"public enum Action {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    // Navigation commands","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"    LIST(0),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    BYE(0),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    // Task state management commands","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    MARK(1),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    UNMARK(1),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    DELETE(1),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    FIND(1),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"    // Task creation commands","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    TODO(1, false),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"    DEADLINE(2, true),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    EVENT(3, true);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    // Represents the number of arguments each command can accept","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    private final int argumentCount;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    private final boolean hasKeyword;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"    Action(int argumentCount) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"        this(argumentCount, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"    Action(int argumentCount, boolean hasKeyword) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"        this.argumentCount \u003d argumentCount;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        this.hasKeyword \u003d hasKeyword;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"    public int getArgumentCount() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"        return argumentCount;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    public boolean hasKeyword() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"        return hasKeyword;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"     * Validates whether the number of arguments is correct for this action.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"     * @param argCount The number of arguments provided","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"     * @return true if the argument count matches what\u0027s expected for this action","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"    public boolean isValidArgumentCount(int argCount) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        return argCount \u003d\u003d argumentCount;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"     * Parses a string into the corresponding Enum action type for data storage.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"     * @param type The string representation of the action type.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"     * @return The corresponding Action type.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"     * @throws InvalidDataException If the provided string does not match any known action type.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"    public static Action parseData(String type) throws InvalidDataException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"        case \"T\" -\u003e Action.TODO;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"        case \"D\" -\u003e Action.DEADLINE;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"        case \"E\" -\u003e Action.EVENT;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"        default -\u003e throw new InvalidDataException(\"Unknown Action: \" + type);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"        };","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"     * Parses a string command type into its corresponding enum action.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"     * @param type The string representing the command type, usually the first word of the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"     * @return The corresponding action enum representing the command action.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"     * @throws InvalidCommandException If the provided command is not recognized.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"    public static Action parseCommand(String type) throws InvalidCommandException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"        return switch (type.toLowerCase()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"        case \"bye\" -\u003e Action.BYE;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"        case \"list\" -\u003e Action.LIST;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"        case \"mark\" -\u003e Action.MARK;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"        case \"unmark\" -\u003e Action.UNMARK;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"        case \"find\" -\u003e Action.FIND;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"        case \"delete\" -\u003e Action.DELETE;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"        case \"todo\" -\u003e Action.TODO;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"        case \"deadline\" -\u003e Action.DEADLINE;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"        case \"event\" -\u003e Action.EVENT;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"        default -\u003e throw new InvalidCommandException(\"Invalid Command. Don\u0027t know what \u0027\" + type + \"\u0027 means\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"        };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":93}},{"path":"src/main/java/lolok/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"//code refined by claude","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"package lolok.command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import lolok.exception.IncorrectArgumentNumberException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import lolok.exception.InvalidCommandException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import lolok.exception.LolokException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"import lolok.task.Deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"import lolok.task.Event;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"import lolok.task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"import lolok.task.Todo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"import lolok.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":" * Represents a command that executes and processes the given command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"public class Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"    private final String[] blocks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    private final Action type;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"     * Constructs a new instance of a command that processes the given arguments.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"     * syntax: command description /keyword argument1 /keyword argument2 ...","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"     * @param block an array of strings, where each index represents an argument","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"     * @throws InvalidCommandException if the command cannot be parsed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"    public Command(String[] block) throws InvalidCommandException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"        if (block.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"            throw new InvalidCommandException(\"Empty command\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        this.blocks \u003d block;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"        type \u003d Action.parseCommand(block[0]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"     * Gets argument array based on command type and expected number of arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"     * @param count Expected number of arguments","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"     * @param type The action type","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"     * @return An array of arguments in standard positions","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"     * @throws IncorrectArgumentNumberException if argument count doesn\u0027t match expected","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"    private String[] getArgument(int count, Action type) throws IncorrectArgumentNumberException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"        // There must be at least one argument for multiple argument commands","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"        assert count \u003e 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"        // type should be instanceof Action, if not, valid value is only null","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"        assert type !\u003d null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        // Check if minimum arguments are present","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        if (blocks.length \u003c 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"            throw new IncorrectArgumentNumberException(\"Missing arguments: expected \" + count","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"                    + \", got \" + (blocks.length - 1));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"        if (type.hasKeyword()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"            return getArgumentWithKeyword(count);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"            assert count \u003d\u003d 1 : \"Commands without keywords should only have 1 argument\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"            return new String[]{getDescription()};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"     * Retrieves arguments that are explicitly associated with keywords and places them in standardized positions.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"     * @param numberOfArguments The expected number of arguments.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"     * @return An array of strings representing the arguments in their correct positions.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"     * @throws IncorrectArgumentNumberException If the number of provided arguments does not match the expected count","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"     *         or if the number of keyword arguments is incorrect.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"    private String[] getArgumentWithKeyword(int numberOfArguments) throws IncorrectArgumentNumberException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        Map\u003cString, Keyword\u003e map \u003d parseKeywordArguments(numberOfArguments);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"        return assembleKeywordArguments(numberOfArguments, map);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"     * Parses the command blocks to extract keyword-argument pairs.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"     * @param expectedArgumentCount The expected number of arguments","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"     * @return A map of argument values to their corresponding keywords","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"     * @throws IncorrectArgumentNumberException if argument count doesn\u0027t match expected","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"    private Map\u003cString, Keyword\u003e parseKeywordArguments(int expectedArgumentCount)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"            throws IncorrectArgumentNumberException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"        Map\u003cString, Keyword\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"        // Find the first keyword","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"        int index \u003d 2;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zihung20"},"content":"        while (index \u003c blocks.length \u0026\u0026 Keyword.parseKeyword(blocks[index]) \u003d\u003d Keyword.UNKNOWN) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zihung20"},"content":"            index++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zihung20"},"content":"        // If we reached the end without finding a keyword, all text is description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zihung20"},"content":"        if (index \u003e\u003d blocks.length \u0026\u0026 expectedArgumentCount \u003e 1) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zihung20"},"content":"            throw new IncorrectArgumentNumberException(\"Missing keyword arguments: expected \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zihung20"},"content":"                    + (expectedArgumentCount - 1) + \" keywords\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zihung20"},"content":"        Keyword previousKeyword \u003d null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zihung20"},"content":"        if (index \u003c blocks.length) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zihung20"},"content":"            previousKeyword \u003d Keyword.parseKeyword(blocks[index]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zihung20"},"content":"        index++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zihung20"},"content":"        // Process remaining arguments","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zihung20"},"content":"        while (index \u003c blocks.length) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zihung20"},"content":"            Keyword current \u003d Keyword.parseKeyword(blocks[index]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zihung20"},"content":"            if (current !\u003d Keyword.UNKNOWN) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zihung20"},"content":"                // We found a new keyword, save the accumulated argument with previous keyword","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zihung20"},"content":"                map.put(builder.toString().trim(), previousKeyword);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zihung20"},"content":"                previousKeyword \u003d current;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zihung20"},"content":"                builder \u003d new StringBuilder();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zihung20"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zihung20"},"content":"                // Add current word to argument string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zihung20"},"content":"                if (!builder.isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zihung20"},"content":"                    builder.append(\" \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zihung20"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zihung20"},"content":"                builder.append(blocks[index]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zihung20"},"content":"            index++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zihung20"},"content":"        // Add the last argument if exists","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zihung20"},"content":"        if (!builder.isEmpty() \u0026\u0026 previousKeyword !\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zihung20"},"content":"            map.put(builder.toString().trim(), previousKeyword);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zihung20"},"content":"        // Validate we got the expected number of keyword arguments","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zihung20"},"content":"        if (map.size() !\u003d expectedArgumentCount - 1) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zihung20"},"content":"            throw new IncorrectArgumentNumberException(\"Incorrect number of keyword arguments: expected \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zihung20"},"content":"                    + (expectedArgumentCount - 1) + \", got \" + map.size());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zihung20"},"content":"        return map;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zihung20"},"content":"     * Builds the final array of arguments from the parsed map.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zihung20"},"content":"     * @param numberOfArguments The total number of arguments expected","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zihung20"},"content":"     * @param map The map of arguments to keywords","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zihung20"},"content":"     * @return The final array of arguments in standard positions","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zihung20"},"content":"    private String[] assembleKeywordArguments(int numberOfArguments, Map\u003cString, Keyword\u003e map) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zihung20"},"content":"        String[] result \u003d new String[numberOfArguments];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zihung20"},"content":"        result[0] \u003d getDescription();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zihung20"},"content":"        for (Map.Entry\u003cString, Keyword\u003e entry : map.entrySet()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zihung20"},"content":"            int position \u003d entry.getValue().getPosition();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zihung20"},"content":"            if (position \u003e\u003d 0 \u0026\u0026 position \u003c numberOfArguments) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zihung20"},"content":"                result[position] \u003d entry.getKey();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zihung20"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zihung20"},"content":"     * Extracts the description part of the command (text before the first keyword).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zihung20"},"content":"     * @return The description string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zihung20"},"content":"    private String getDescription() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zihung20"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zihung20"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zihung20"},"content":"        while (i \u003c blocks.length \u0026\u0026 Keyword.parseKeyword(blocks[i]) \u003d\u003d Keyword.UNKNOWN) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zihung20"},"content":"            if (!builder.isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zihung20"},"content":"                builder.append(\" \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zihung20"},"content":"            builder.append(blocks[i]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zihung20"},"content":"            i++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zihung20"},"content":"        return builder.toString().trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zihung20"},"content":"     * Executes the command accordingly, using the environment passed as parameters.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zihung20"},"content":"     * @param taskList the TaskList instance to process the command","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zihung20"},"content":"    public void executeCommand(TaskList taskList) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zihung20"},"content":"            switch (type) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zihung20"},"content":"            case BYE:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zihung20"},"content":"                isExit \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zihung20"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zihung20"},"content":"            case LIST:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zihung20"},"content":"                taskList.printList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zihung20"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zihung20"},"content":"            default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zihung20"},"content":"                executeMultipleArgumentCommand(taskList);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zihung20"},"content":"        } catch (LolokException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zihung20"},"content":"            Ui.printMessage(\"Error executing command: \" + e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zihung20"},"content":"     * Executes commands that require one or more arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zihung20"},"content":"     * @param taskList The TaskList to operate on","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zihung20"},"content":"    private void executeMultipleArgumentCommand(TaskList taskList) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zihung20"},"content":"        assert type !\u003d null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zihung20"},"content":"            String[] arg \u003d getArgument(type.getArgumentCount(), type);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zihung20"},"content":"            switch (type) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zihung20"},"content":"            case MARK, UNMARK -\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zihung20"},"content":"                try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zihung20"},"content":"                    int taskIndex \u003d Integer.parseInt(arg[0]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zihung20"},"content":"                    taskList.markTask(taskIndex, type \u003d\u003d Action.MARK);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zihung20"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zihung20"},"content":"                    throw new InvalidCommandException(\"Task index must be a number: \" + arg[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zihung20"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zihung20"},"content":"            case DELETE -\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zihung20"},"content":"                try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zihung20"},"content":"                    int taskIndex \u003d Integer.parseInt(arg[0]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zihung20"},"content":"                    taskList.deleteTask(taskIndex);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zihung20"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zihung20"},"content":"                    throw new InvalidCommandException(\"Task index must be a number: \" + arg[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zihung20"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zihung20"},"content":"            case TODO -\u003e taskList.addToList(new Todo(arg[0]));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zihung20"},"content":"            case DEADLINE -\u003e taskList.addToList(new Deadline(arg[0], arg[1]));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zihung20"},"content":"            case EVENT -\u003e taskList.addToList(new Event(arg[0], arg[1], arg[2]));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zihung20"},"content":"            case FIND -\u003e taskList.searchTask(arg[0]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zihung20"},"content":"            default -\u003e throw new InvalidCommandException(\"Invalid Command. Don\u0027t know what \u0027\" + blocks[0] + \"\u0027 means\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zihung20"},"content":"        } catch (InvalidCommandException | IncorrectArgumentNumberException | DateTimeParseException","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zihung20"},"content":"                 | IllegalArgumentException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(e.toString());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zihung20"},"content":"     * Returns true if this command is an exit command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zihung20"},"content":"     * @return true if the command is an exit command, otherwise false","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zihung20"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zihung20"},"content":"        return isExit;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":253}},{"path":"src/main/java/lolok/command/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":" * Represents standard argument positions when parsing and executing commands.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":" * Each keyword maps to a specific position in the argument array.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"public enum Keyword {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    FROM(1, \"/from\"),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"    TO(2, \"/to\"),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    BY(1, \"/by\"),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    UNKNOWN(-1, \"\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    // Static map for efficient keyword lookup by text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    private static final Map\u003cString, Keyword\u003e keywordMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    private final int position;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    private final String textRepresentation;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    static {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"        for (Keyword keyword : values()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"            if (!keyword.textRepresentation.isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"                keywordMap.put(keyword.textRepresentation, keyword);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"     * Constructs a keyword with its standard position.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"     * @param position The standard position in the argument array","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"     * @param textRepresentation How this keyword appears in commands (e.g., \"/by\")","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"    Keyword(int position, String textRepresentation) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        this.position \u003d position;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"        this.textRepresentation \u003d textRepresentation;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"     * Gets the standard position for this keyword.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"     * @return The position index where arguments for this keyword should go","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    public int getPosition() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        return position;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"     * Parses the given string into a corresponding Keyword enum that represents","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"     * the position of the standard command when executing.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"     * @param string The string to parse, represents the keyword in the typed command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"     * @return Keyword enum that corresponds to the parsed keyword string","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"    public static Keyword parseKeyword(String string) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"        return keywordMap.getOrDefault(string.toLowerCase(), UNKNOWN);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"zihung20":58}},{"path":"src/main/java/lolok/exception/IncorrectArgumentNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * Throws an exception when the number of arguments provided by the user is incorrect.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class IncorrectArgumentNumberException extends LolokException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"    public IncorrectArgumentNumberException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":10}},{"path":"src/main/java/lolok/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * Throws an exception when the command provided by the user is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class InvalidCommandException extends LolokException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"     * Creates an exception that indicates the command provided by the user is invalid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"     * @param commandString the string of the command provided by the user","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"    public InvalidCommandException(String commandString) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"        super(commandString);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":15}},{"path":"src/main/java/lolok/exception/InvalidDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * throw exception if the argument is not good or the data store in the file cannot be interpret","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class InvalidDataException extends LolokException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"    public InvalidDataException(String message) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"        super(message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"zihung20":10}},{"path":"src/main/java/lolok/exception/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.exception;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * Throws an exception if the keyword provided by the user is invalid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class InvalidKeywordException extends LolokException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"    public InvalidKeywordException(String message) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"        super(message);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"zihung20":10}},{"path":"src/main/java/lolok/exception/LolokException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * An exception related to errors caused by chatbot.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class LolokException extends RuntimeException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"     * Creates an exception object related to the chatbot.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    public LolokException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"        return \"LolokException: \" + getMessage();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":21}},{"path":"src/main/java/lolok/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import lolok.task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"import lolok.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":" * Represents a storage that can store or load data from a file path.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"     * Creates a Storage instance that handles loading and saving data to the specified file path.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"     * @param filePath the file path for storing and retrieving data","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"     * Loads the data and returns a list of strings, each representing a task in a specific format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"     * @return a list of strings, where each string represents a task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"    public List\u003cString\u003e loadData() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"            if (!Files.exists(path.getParent())) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"                Files.createFile(path);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"                Ui.printMessage(\"File not found, creating new file at \" + filePath);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"            Ui.printMessage(\"Reading file from \" + filePath + \"...\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"            return Files.readAllLines(path);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(\"We can\u0027t read data from the path: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"            return List.of();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"     * Saves the data to the file path defined in this instance.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"     * @param tasks the list of tasks to be saved to the file","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"     * @param append true if the data should be appended to the existing file","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"    public void saveData(List\u003cTask\u003e tasks, boolean append) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"        Ui.printMessage(\"Saving tasks...\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"        //FileWriter create file when it does not exist","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, append)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"                fw.write(t.toFormatString() + System.lineSeparator());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(\"Something wrong when saving the file\" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"zihung20":68}},{"path":"src/main/java/lolok/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":" * Represents a deadline task with a deadline time.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"     * Constructs a Deadline instance, which is a subclass of Task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"     * @param description the description of the deadline event","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"     * @param date the date of the deadline event, formatted as \"yyyy-MM-dd, HH:mm\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"     * @throws IllegalArgumentException if description is null or empty","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"     * @throws DateTimeParseException if the date format is invalid","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        if (date \u003d\u003d null || date.trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"            throw new IllegalArgumentException(\"Deadline date cannot be null or empty\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"            DateTimeFormatter parseFormat \u003d DateTimeFormatter.ofPattern(DATA_DATETIME_FORMAT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"            by \u003d LocalDateTime.parse(date, parseFormat);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"            throw new DateTimeParseException(\"Invalid date format. Expected format: \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"                    + DATA_DATETIME_FORMAT, e.getParsedString(), e.getErrorIndex());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"    public String toFormatString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"        return \"D|\" + super.toFormatString() + \"|\" + by.format(DateTimeFormatter.ofPattern(DATA_DATETIME_FORMAT));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"                + by.format(DateTimeFormatter.ofPattern(OUTPUT_DATETIME_FORMAT)) + \")\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"        if (obj instanceof Deadline temp) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"            return super.equals(temp) \u0026\u0026 temp.by.equals(this.by);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        return false;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"        return by;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":59}},{"path":"src/main/java/lolok/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":" * Represents an event task with a start time and an end time.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"     * Constructs an instance of Event, which is a subclass of Task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"     * @param from the start time of the event, formatted as \"yyyy-MM-dd, HH:mm\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"     * @param to the end time of the event, formatted as \"yyyy-MM-dd, HH:mm\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"     * @throws IllegalArgumentException if description, from, or to is null or empty","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"     * @throws DateTimeParseException if the date format is invalid","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"     * @throws IllegalArgumentException if the end time is before the start time","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"        if (from \u003d\u003d null || from.trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"            throw new IllegalArgumentException(\"Event start time cannot be null or empty\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"        if (to \u003d\u003d null || to.trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"            throw new IllegalArgumentException(\"Event end time cannot be null or empty\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"            DateTimeFormatter parseFormat \u003d DateTimeFormatter.ofPattern(DATA_DATETIME_FORMAT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"            this.from \u003d LocalDateTime.parse(from, parseFormat);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"            this.to \u003d LocalDateTime.parse(to, parseFormat);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"            if (this.to.isBefore(this.from)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"                throw new IllegalArgumentException(\"Event end time cannot be before start time\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"            throw new DateTimeParseException(\"Invalid date format. Expected format: \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"                    + DATA_DATETIME_FORMAT, e.getParsedString(), e.getErrorIndex());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"    public String toFormatString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"        return \"E|\" + super.toFormatString() + \"|\" + from.format(DateTimeFormatter.ofPattern(DATA_DATETIME_FORMAT))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"                + \"|\" + to.format(DateTimeFormatter.ofPattern(DATA_DATETIME_FORMAT));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(OUTPUT_DATETIME_FORMAT))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(OUTPUT_DATETIME_FORMAT)) + \")\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"        if (obj instanceof Event temp) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"            return super.equals(temp) \u0026\u0026 temp.from.equals(this.from) \u0026\u0026 temp.to.equals(this.to);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"        return false;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":68}},{"path":"src/main/java/lolok/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":" *  Represents a task with common properties and behaviors","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"    public static final String OUTPUT_DATETIME_FORMAT \u003d \"MMM d yyyy, HH:mm\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"    public static final String DATA_DATETIME_FORMAT \u003d \"yyyy-MM-dd, HH:mm\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    private final String description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"     * @throws IllegalArgumentException if description is null or empty","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"            throw new IllegalArgumentException(\"Task description cannot be null or empty\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"     * Checks if the task description contains the specified keyword.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"     * @return true if the description contains the keyword, false otherwise","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"    public boolean matchKeyword(String keyword) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"        if (keyword \u003d\u003d null) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"            return false;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        return isDone ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"     * @return the task description","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        return description;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"     * Returns a formatted string that follows a standard format, e.g., \"x|x|...\".","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"     * @return a formatted string for storing data","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"    public String toFormatString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"        return getStatusIcon() + \"|\" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"     * Returns a human-readable string representation of the task, e.g., \"[X] example task\".","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"     * @return a human-readable string representation of the task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"        if (obj instanceof Task temp) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"            return Objects.equals(temp.description, this.description);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"        return false;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":82}},{"path":"src/main/java/lolok/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import lolok.command.Action;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import lolok.exception.IncorrectArgumentNumberException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import lolok.exception.InvalidDataException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"import lolok.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":" * Represents a list of tasks with functionality to add, print, mark, and delete tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"     * Creates an instance of a list of tasks that can perform adding, printing, marking, and deleting.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"     * @param stringList a list of formatted strings to convert to task instances","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    public TaskList(List\u003cString\u003e stringList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        for (String s : stringList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"            loadTask(s);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"     * Loads a task into the task list, which represents a list of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"     * @param taskString - String representation of a task,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"     *                     formatted as `[Type]|[Status]|[Name]|[Argument1]|[Argument2]|...`","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"    private void loadTask(String taskString) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"            String[] stringArray \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"            if (stringArray[0].equals(\"C\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"                //comment, do nothing","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"                return;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"            Action action \u003d Action.parseData(stringArray[0]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"            if (action.getArgumentCount() + 2 !\u003d stringArray.length) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"                throw new IncorrectArgumentNumberException(\"Incorrect argument numbers for action: \" + taskString);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"            Task addTask \u003d switch (action) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"            case TODO -\u003e new Todo(stringArray[2]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"            case DEADLINE -\u003e new Deadline(stringArray[2], stringArray[3]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"            case EVENT -\u003e new Event(stringArray[2], stringArray[3], stringArray[4]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"            default -\u003e throw new InvalidDataException(\"Unknown action: \" + action);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"            };","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"            list.add(addTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"            addTask.setDone(stringArray[1].equals(\"X\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        } catch (InvalidDataException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(\"Some errors occur while reading data. \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        } catch (IllegalArgumentException | DateTimeParseException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(e.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"     * Adds the task instance to the list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"     * @param task the task to be added to the list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"        if (isDuplicate(task)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"            Ui.printMessage(task.toString(), \"The task is duplicated and we don\u0027t allow duplicate task\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"            return;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"        list.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.%n\", list.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"    private boolean isDuplicate(Task task) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        return list.stream().anyMatch(t -\u003e t.equals(task));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"     * Prints the tasks in the list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"    public void printList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"        IntStream.range(0, list.size())","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"                 .forEach(i -\u003e builder.append(String.format(\"%d. %s \\n\", (i + 1), list.get(i).toString())));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"        Ui.printMessage(builder.toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"     * Deletes the task from the list, with the index starting from 1.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zihung20"},"content":"        index \u003d index - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zihung20"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zihung20"},"content":"            list.remove(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zihung20"},"content":"            String message \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zihung20"},"content":"            String taskAmount \u003d String.format(\"Now you have %d tasks in the list.\", list.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zihung20"},"content":"            Ui.printMessage(message + task.toString() + \"\\n\" + taskAmount);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zihung20"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zihung20"},"content":"            Ui.printErrorMessage(\"Index \" + (index + 1) + \" is invalid or doesn\u0027t have any task.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zihung20"},"content":"     * Marks the task in the list as done or undone, starting from index 1.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zihung20"},"content":"     * @param index  the index of the task to be marked","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zihung20"},"content":"     * @param isDone true to mark the task as done, false to mark it as undone","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zihung20"},"content":"    public void markTask(int index, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zihung20"},"content":"        index--;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zihung20"},"content":"        Task task \u003d this.list.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zihung20"},"content":"        task.setDone(isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zihung20"},"content":"        String message \u003d isDone ? \"Nice! I\u0027ve marked this task as done:\" : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zihung20"},"content":"        Ui.printMessage(message + \"\\n\" + task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zihung20"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zihung20"},"content":"        return list;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zihung20"},"content":"     * Searches and prints the tasks that match the provided keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zihung20"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zihung20"},"content":"    public void searchTask(String keyword) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zihung20"},"content":"        List\u003cTask\u003e ans \u003d list.stream().filter(task -\u003e task.matchKeyword(keyword)).toList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zihung20"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zihung20"},"content":"        IntStream.range(0, ans.size())","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zihung20"},"content":"                 .forEach(i -\u003e builder.append(String.format(\"%d. %s \\n\", (i + 1), ans.get(i).toString())));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zihung20"},"content":"        Ui.printMessage(builder.toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"zihung20":135}},{"path":"src/main/java/lolok/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * Represents a Todo class that models a task with no specific deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"     * Constructs a Todo instance, which is a subclass of Task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"     * @throws IllegalArgumentException if description is null or empty","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    public String toFormatString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"        return \"T|\" + super.toFormatString();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"            return true;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        if (!(obj instanceof Todo)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"            return false;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"        return super.equals(obj);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zihung20":38}},{"path":"src/main/java/lolok/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":" * Represents the UI class that handles all print messages and UI-related methods.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"     * Prints each message on a new line","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"     * @param messages - A variable number of messages to be printed, each appearing on a separate line","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    public static void printMessage(String... messages) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"            System.out.println(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"     * Prints an error message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"     * @param error - The error message to be printed","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    public static void printErrorMessage(String error) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        System.out.println(\"Some errors happened...\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"        System.out.println(error);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"zihung20":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"\u003c!--debug by ChatGPT--\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" spacing\u003d\"5.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    \u003cTextFlow fx:id\u003d\"dialog\" textAlignment\u003d\"RIGHT\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"400\" minWidth\u003d\"300\" prefHeight\u003d\"700\" prefWidth\u003d\"600\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lolok.MainWindow\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" styleClass\u003d\"modern-scroll\" vbarPolicy\u003d\"AS_NEEDED\" AnchorPane.bottomAnchor\u003d\"60\" AnchorPane.leftAnchor\u003d\"3.0\" AnchorPane.rightAnchor\u003d\"3.0\" AnchorPane.topAnchor\u003d\"0\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"8\" styleClass\u003d\"dialog-vbox\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.2\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"38.0\" prefWidth\u003d\"526.0\" promptText\u003d\"Type command...\" styleClass\u003d\"modern-input\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.leftAnchor\u003d\"3.0\" AnchorPane.rightAnchor\u003d\"71.0\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"            \u003cfont\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"                \u003cFont name\u003d\"Segoe UI\"/\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"            \u003c/font\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"        \u003cButton fx:id\u003d\"sendButton\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"38\" prefWidth\u003d\"64.0\" styleClass\u003d\"modern-button\" text\u003d\"➤\" AnchorPane.bottomAnchor\u003d\"3.0\" AnchorPane.rightAnchor\u003d\"2.0\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"            \u003cfont\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"                \u003cFont name\u003d\"Segoe UI Semibold\" size\u003d\"16\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"            \u003c/font\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"zihung20":35}},{"path":"src/test/java/lolok/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import lolok.exception.InvalidCommandException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"public class CommandTest {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"    public void testEmptyCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"        // new String[]{} is not same as split","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new Command(\"\".split(\" \")));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    public void testInvalidCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"        String[] input \u003d \"wrong command\".split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new Command(input));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"zihung20":21}},{"path":"src/test/java/lolok/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    private final String path \u003d \"./data/lolok_data.txt\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    private final Storage test \u003d new Storage(path);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"    public void testLoadContent() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"        List\u003cString\u003e expected \u003d Files.readAllLines(Path.of(path));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"        assertEquals(expected, test.loadData());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"zihung20":21}},{"path":"src/test/java/lolok/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"// Test cases generated using Claude and refined manually.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"class DeadlineTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    private final String date \u003d \"2023-01-15, 14:30\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    void constructorValid() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(Task.DATA_DATETIME_FORMAT);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"        assertEquals(expectedDateTime, deadline.getBy());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    void constructorNullDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"            new Deadline(null, date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().contains(\"description cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"    void constructorNullDate() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"            new Deadline(\"Submit report\", null);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().contains(\"date cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"    void constructorInvalidDateFormat() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"            new Deadline(\"Submit report\", \"2023/01/15 14:30\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid date format\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"    void toFormatString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"D| |Submit report|2023-01-15, 14:30\", deadline.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"        deadline.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"D|X|Submit report|2023-01-15, 14:30\", deadline.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"    void toStringTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"[D][ ] Submit report (by: Jan 15 2023, 14:30)\", deadline.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"        deadline.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"[D][X] Submit report (by: Jan 15 2023, 14:30)\", deadline.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"    void equalsTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"        Deadline deadline1 \u003d new Deadline(\"Submit report\", date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"        Deadline deadline2 \u003d new Deadline(\"Submit report\", date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"        Deadline deadline3 \u003d new Deadline(\"Submit report\", \"2023-01-16, 14:30\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"        Deadline deadline4 \u003d new Deadline(\"Different task\", date);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        Task otherTask \u003d new Todo(\"Submit report\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"        // Test equality","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"        assertEquals(deadline1, deadline2, \"Deadlines with same description and date should be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(deadline1, deadline3, \"Deadlines with different dates should not be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(deadline1, deadline4, \"Deadlines with different descriptions should not be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(deadline1, otherTask, \"Deadline should not be equal to a different task type\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(null, deadline1, \"Deadline should not be equal to null\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"zihung20":85}},{"path":"src/test/java/lolok/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"class EventTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    private final String description \u003d \"Team Meeting\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"    private final String fromDate \u003d \"2025-02-15, 14:30\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    private final String toDate \u003d \"2025-02-16, 13:30\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    void constructorNullDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"            new Event(null, fromDate, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().contains(\"description cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    void constructorNullDate() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"            new Event(description, null, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"        Exception exception1 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"            new Event(description, fromDate, null);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().toLowerCase().contains(\"cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception1.getMessage().toLowerCase().contains(\"cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"    void constructorInvalidDateFormat() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        Exception exception1 \u003d assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"            new Event(description, \"2025/01/15 14:30\", toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"        Exception exception2 \u003d assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"            new Event(description, fromDate, \"2025/04/15 14:30\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception1.getMessage().toLowerCase().contains(\"invalid date format\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception2.getMessage().toLowerCase().contains(\"invalid date format\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"    void constructorEndDateBeforeStarDate() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"        Exception exception1 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"            new Event(description, toDate, fromDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception1.getMessage().contains(\"end time cannot be before start time\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"    void toFormatStringTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"        Event event \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"        assertEquals(String.format(\"E| |%s|%s|%s\", description, fromDate, toDate), event.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"        event.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"        assertEquals(String.format(\"E|X|%s|%s|%s\", description, fromDate, toDate), event.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"    void toStringTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"        Event event \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"        String fromDateString \u003d \"Feb 15 2025, 14:30\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"        String toDateString \u003d \"Feb 16 2025, 13:30\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"        assertEquals(String.format(\"[E][ ] %s (from: %s to: %s)\", description, fromDateString, toDateString),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"                event.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"        event.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        assertEquals(String.format(\"[E][X] %s (from: %s to: %s)\", description, fromDateString, toDateString),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"                event.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"    void equalsTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"        Event event1 \u003d new Event(\"Team meeting\", fromDate, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"        Event event2 \u003d new Event(\"Team meeting\", fromDate, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"        Event event3 \u003d new Event(\"Team meeting\", \"2023-01-16, 14:00\", \"2023-01-19, 16:30\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"        Event event5 \u003d new Event(\"Different meeting\", fromDate, toDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"        Task otherTask \u003d new Todo(\"Team meeting\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"        assertEquals(event1, event2, \"Events with same description and dates should be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(event1, event3, \"Events with different from dates should not be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(event1, event5, \"Events with different descriptions should not be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(event1, otherTask, \"Event should not be equal to a different task type\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(null, event1, \"Event should not be equal to null\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zihung20":95}},{"path":"src/test/java/lolok/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"import lolok.exception.IncorrectArgumentNumberException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"// Test cases generated using Claude and refined manually.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"    void testConstructorWithValidStringList() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"        List\u003cString\u003e validStringList \u003d Arrays.asList(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"                \"T| |Read book\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"                \"D| |Submit report|2023-01-15, 14:30\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"                \"E| |Team meeting|2023-01-15, 14:00|2023-01-15, 15:30\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"        TaskList taskList \u003d new TaskList(validStringList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        assertInstanceOf(Todo.class, tasks.get(0));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"        assertInstanceOf(Deadline.class, tasks.get(1));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"        assertInstanceOf(Event.class, tasks.get(2));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"Read book\", tasks.get(0).getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"Submit report\", tasks.get(1).getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"Team meeting\", tasks.get(2).getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"    void testConstructorWithInvalidTaskString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"        // Save the original System.err","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        PrintStream originalErr \u003d System.err;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"            List\u003cString\u003e invalidStringList \u003d Arrays.asList(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"                    \"T| |Valid todo\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"                    \"X| |Invalid task type\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"                    \"D| |Missing deadline date\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"            );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"            Exception exception \u003d assertThrows(IncorrectArgumentNumberException.class, () -\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"                    new TaskList(invalidStringList));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"            assertTrue(exception.getMessage().contains(\"Incorrect argument numbers\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.err","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"            System.setErr(originalErr);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"    void testAddToListWithValidTask() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"        Task todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        taskList.addToList(todo);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"        assertEquals(todo.getDescription(), tasks.get(0).getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"    void testAddToListWithDuplicateTask() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"            Task todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(todo);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(todo);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zihung20"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zihung20"},"content":"            assertEquals(1, tasks.size(), \"Duplicate task should not be added\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zihung20"},"content":"            // Verify duplicate message was printed","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"The task is duplicated\"),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zihung20"},"content":"                    \"Duplicate task message should be displayed\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zihung20"},"content":"    void testPrintListWithTasks() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Deadline(\"Submit report\", \"2023-01-15, 14:30\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zihung20"},"content":"            outContent.reset(); // Clear previous output from addToList","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zihung20"},"content":"            taskList.printList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"1. [T][ ] Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"2. [D][ ] Submit report\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zihung20"},"content":"    void testDeleteTaskValid() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Deadline(\"Submit report\", \"2023-01-15, 14:30\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zihung20"},"content":"            outContent.reset(); // Clear previous output","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zihung20"},"content":"            taskList.deleteTask(1); // Delete first task","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zihung20"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zihung20"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zihung20"},"content":"            assertInstanceOf(Deadline.class, tasks.get(0));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"Noted. I\u0027ve removed this task:\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"[T][ ] Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"Now you have 1 tasks in the list.\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zihung20"},"content":"    void testDeleteTaskInvalidIndex() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zihung20"},"content":"        // Save the original System.err","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zihung20"},"content":"        PrintStream originalErr \u003d System.err;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(errContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zihung20"},"content":"            taskList.deleteTask(2); // Invalid index","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zihung20"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zihung20"},"content":"            assertEquals(1, tasks.size(), \"Task should not be deleted for invalid index\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zihung20"},"content":"            String errorOutput \u003d errContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zihung20"},"content":"            System.out.println(\"Index 2 is invalid or doesn\u0027t have any task.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zihung20"},"content":"            assertTrue(errorOutput.contains(\"Index 2 is invalid or doesn\u0027t have any task.\"),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zihung20"},"content":"                    \"Error message for invalid index should be displayed\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.err","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zihung20"},"content":"            System.setErr(originalErr);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zihung20"},"content":"    void testMarkTaskAsDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zihung20"},"content":"            outContent.reset(); // Clear previous output","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zihung20"},"content":"            taskList.markTask(1, true); // Mark as done","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zihung20"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zihung20"},"content":"            assertEquals(\"X\", tasks.get(0).getStatusIcon());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"Nice! I\u0027ve marked this task as done:\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"[T][X] Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zihung20"},"content":"    void testMarkTaskAsNotDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zihung20"},"content":"            Task todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zihung20"},"content":"            todo.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(todo);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zihung20"},"content":"            outContent.reset(); // Clear previous output","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zihung20"},"content":"            taskList.markTask(1, false); // Mark as not done","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zihung20"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zihung20"},"content":"            assertEquals(\" \", tasks.get(0).getStatusIcon());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"OK, I\u0027ve marked this task as not done yet:\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"[T][ ] Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zihung20"},"content":"    void testSearchTaskWithMatches() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Read Java book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Watch movie\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Deadline(\"Java assignment\", \"2023-01-15, 14:30\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zihung20"},"content":"            outContent.reset(); // Clear previous output","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zihung20"},"content":"            taskList.searchTask(\"Java\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"1. [T][ ] Read Java book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"2. [D][ ] Java assignment\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"zihung20"},"content":"            assertFalse(output.contains(\"Watch movie\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"zihung20"},"content":"    void testSearchTaskWithNoMatches() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"zihung20"},"content":"        // Save the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"zihung20"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"zihung20"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"zihung20"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"zihung20"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"zihung20"},"content":"            taskList.addToList(new Todo(\"Watch movie\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"zihung20"},"content":"            outContent.reset(); // Clear previous output","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"zihung20"},"content":"            taskList.searchTask(\"homework\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"zihung20"},"content":"            String output \u003d outContent.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"zihung20"},"content":"            assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"zihung20"},"content":"            // Output should not contain any task listings","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"zihung20"},"content":"            assertFalse(output.contains(\"Read book\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"zihung20"},"content":"            assertFalse(output.contains(\"Watch movie\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"zihung20"},"content":"        } finally {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"zihung20"},"content":"            // Restore the original System.out","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"zihung20"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"zihung20"},"content":"    void testLoadingTasksWithCorrectDoneStatus() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"zihung20"},"content":"        List\u003cString\u003e stringList \u003d Arrays.asList(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"zihung20"},"content":"                \"T|X|Read book\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"zihung20"},"content":"                \"D| |Submit report|2023-01-15, 14:30\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"zihung20"},"content":"                \"E|X|Team meeting|2023-01-15, 14:00|2023-01-15, 15:30\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"zihung20"},"content":"        );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"zihung20"},"content":"        TaskList taskList \u003d new TaskList(stringList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"zihung20"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"zihung20"},"content":"        System.out.println(\" \" + tasks.get(0) + tasks.get(1) + tasks.get(2));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"zihung20"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"X\", tasks.get(0).getStatusIcon(), \"Todo should be marked as done\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"zihung20"},"content":"        assertEquals(\" \", tasks.get(1).getStatusIcon(), \"Deadline should be marked as not done\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"X\", tasks.get(2).getStatusIcon(), \"Event should be marked as done\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"zihung20"},"content":"    void testLoadTaskWithComment() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"zihung20"},"content":"        List\u003cString\u003e stringList \u003d Arrays.asList(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"zihung20"},"content":"                \"C|This is a comment\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"zihung20"},"content":"                \"T| |Read book\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"zihung20"},"content":"        );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"zihung20"},"content":"        TaskList taskList \u003d new TaskList(stringList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"zihung20"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"zihung20"},"content":"        assertEquals(1, tasks.size(), \"Comments should be ignored when loading tasks\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"zihung20"},"content":"        assertInstanceOf(Todo.class, tasks.get(0));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"zihung20":317}},{"path":"src/test/java/lolok/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"// Test cases generated using Claude and refined manually.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"class TaskTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    // Create a concrete implementation for testing abstract Task class","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"    private static class TestTask extends Task {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"        public TestTask(String description) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"            super(description);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"        @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"        public String toFormatString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"            return \"TEST|\" + super.toFormatString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    void constructorValid() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"Test task\", task.getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"    void constructorWithNullOrEmptyDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"            new TestTask(null);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().contains(\"cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"        Exception exception2 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"            new TestTask(\"\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception2.getMessage().contains(\"cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"    void setDoneAndGetStatusIcon() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"        assertEquals(\" \", task.getStatusIcon(), \"New task should not be done\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"        task.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"X\", task.getStatusIcon(), \"Task should be marked as done\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"        task.setDone(false);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        assertEquals(\" \", task.getStatusIcon(), \"Task should be marked as not done\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"    void toFormatString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"TEST| |Test task\", task.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zihung20"},"content":"        task.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"TEST|X|Test task\", task.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zihung20"},"content":"    void toStringTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"[ ] Test task\", task.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zihung20"},"content":"        task.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"[X] Test task\", task.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zihung20"},"content":"    void matchKeywordPositive() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Buy milk from the supermarket\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zihung20"},"content":"        assertTrue(task.matchKeyword(\"milk\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zihung20"},"content":"        assertTrue(task.matchKeyword(\"super\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zihung20"},"content":"        assertTrue(task.matchKeyword(\"supermarket\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zihung20"},"content":"    void matchKeywordNegative() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Buy milk from the supermarket\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zihung20"},"content":"        assertFalse(task.matchKeyword(\"eggs\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zihung20"},"content":"        assertFalse(task.matchKeyword(\"grocery\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zihung20"},"content":"    void matchKeywordCaseInsensitive() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Buy MILK from the supermarket\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zihung20"},"content":"        assertTrue(task.matchKeyword(\"milk\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zihung20"},"content":"        assertTrue(task.matchKeyword(\"MILK\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zihung20"},"content":"        assertTrue(task.matchKeyword(\"Milk\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zihung20"},"content":"    void matchKeywordWithNull() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zihung20"},"content":"        Task task \u003d new TestTask(\"Buy milk from the supermarket\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zihung20"},"content":"        assertFalse(task.matchKeyword(null));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zihung20"},"content":"    void equalsTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zihung20"},"content":"        Task task1 \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zihung20"},"content":"        Task task2 \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zihung20"},"content":"        Task task3 \u003d new TestTask(\"Different task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zihung20"},"content":"        // Test equality","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zihung20"},"content":"        assertEquals(task1, task2, \"Tasks with same description should be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(task1, task3, \"Tasks with different descriptions should not be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(null, task1, \"Task should not be equal to null\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(\"Test task\", task1, \"Task should not be equal to a different type\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zihung20":115}},{"path":"src/test/java/lolok/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"package lolok.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"// Test cases generated using Claude and refined manually.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"class TodoTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zihung20"},"content":"    void constructorValid() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zihung20"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"Read book\", todo.getDescription());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zihung20"},"content":"    void constructorInvalid() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zihung20"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zihung20"},"content":"            new Todo(null);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zihung20"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zihung20"},"content":"        assertTrue(exception.getMessage().contains(\"cannot be null or empty\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zihung20"},"content":"    void toFormatString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zihung20"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"T| |Read book\", todo.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zihung20"},"content":"        todo.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"T|X|Read book\", todo.toFormatString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zihung20"},"content":"    void toStringTest() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zihung20"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"[T][ ] Read book\", todo.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zihung20"},"content":"        todo.setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zihung20"},"content":"        assertEquals(\"[T][X] Read book\", todo.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zihung20"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zihung20"},"content":"    void equalsAndHashCode() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zihung20"},"content":"        Todo todo1 \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zihung20"},"content":"        Todo todo2 \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zihung20"},"content":"        Todo todo3 \u003d new Todo(\"Write report\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zihung20"},"content":"        Task otherTask \u003d new Deadline(\"Read book\", \"2023-01-01, 12:00\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zihung20"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zihung20"},"content":"        // Test equality","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zihung20"},"content":"        assertEquals(todo1, todo2, \"Todos with same description should be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(todo1, todo3, \"Todos with different descriptions should not be equal\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(todo1, otherTask, \"Todo should not be equal to a different task type\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(null, todo1, \"Todo should not be equal to null\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zihung20"},"content":"        assertNotEquals(\"Read book\", todo1, \"Todo should not be equal to a string\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zihung20"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zihung20"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zihung20":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zihung20"},"content":"list","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zihung20"},"content":"todo borrow book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zihung20"},"content":"deadline return book /by 2025-02-15, 14:30","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zihung20"},"content":"event project meeting /from 2025-02-15, 14:30 /to 2025-02-15, 17:30","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zihung20"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zihung20"},"content":"mark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zihung20"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zihung20"},"content":"delete 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zihung20"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"zihung20":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zihung20"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\lolok\\Lolok.java","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zihung20"},"content":"java -classpath ..\\bin lolok.Lolok \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"zihung20":2,"-":19}}]
