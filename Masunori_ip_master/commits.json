{"authorDailyContributionsMap":{"Masunori":[{"date":"2025-01-21","commitResults":[{"hash":"6bbb2c11bb1fe84dce41fcc80da9e9380dca22ad","isMergeCommit":false,"messageTitle":"Rename and add greeting to main class.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"755e63517e03d21070db9d048c702cbfc68bfd84","isMergeCommit":false,"messageTitle":"-Customise greeting - Add \u0027echo\u0027 function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":6}}},{"hash":"737ef375c08f3fcf7e6e4510dc702cc421e11564","isMergeCommit":false,"messageTitle":"Reformat the chatbot into an object that exposes two methods: - public Mirai(): Constructor. - public void startConversation(): initiate a conversation with the Mirai object.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":13}}}]},{"date":"2025-01-22","commitResults":[{"hash":"4afd7328bab1836bfcffc0537b0aa2580a7b0cdb","isMergeCommit":false,"messageTitle":"Update behaviour for Mirai: - bye: Goodbye the user and terminate the conversation. - list: List all text in the conversation, except the specified commands (bye, list) - default: Store the text.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":4}}}]},{"date":"2025-01-23","commitResults":[{"hash":"5b0b77e331b5bae4a359f29843130d494d95f427","isMergeCommit":false,"messageTitle":"- Added a Task class to abstract a task that is done/undone. - Added a Command interface to abstract a user command from the CLI. - Replace the if/else for command using a HashMap that maps from user command (String) to the action (Command). - A Command takes in a varargs of type String, and return a boolean, a signal to whether to terminate the conversation. - Added two tasks: markTask for the \u0027mark\u0027 command and unmarkTask for the \u0027unmark\u0027 command.","messageBody":"","tags":["Task-Subclasses"],"fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":17}}},{"hash":"506a6fc90098db1f03c519ce74496531d1a968ea","isMergeCommit":false,"messageTitle":"Add three subclasses for Task class: - ToDo: encapsulates a Task with no date/time attached. - Deadline: encapsulates a Task with a deadline as a date/time. - Event: encapsulates a Task with start date/time and end date/time.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"58d3e90fe1fb499b3c63e533fa83582f30fc32be","isMergeCommit":false,"messageTitle":"Add three subclasses for Task class: - ToDo: encapsulates a Task with no date/time attached. - Deadline: encapsulates a Task with a deadline as a date/time. - Event: encapsulates a Task with start date/time and end date/time.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":2}}},{"hash":"59b3b255143d4961216f3df370a3515501569edb","isMergeCommit":false,"messageTitle":"Add three new methods: - addToDo: add a to-do type task to the task list - addDeadline: add a deadline type task to the task list - addEvent: add an event type task to the task list Add three new commands: todo, deadline, event Remove a method: addToList.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":8}}},{"hash":"a68ed44e5abdd5aceaa33c89501a746c2a1abbf4","isMergeCommit":false,"messageTitle":"Stop tracking test files in text-ui-test and now ignore all executables (.class files)","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":0,"deletions":38}}},{"hash":"bfb26ee88d90a3ccf68d82346ea735986bf0f520","isMergeCommit":false,"messageTitle":"Add error handling","messageBody":"","tags":["fix-formatting"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"java":{"insertions":120,"deletions":43},"bat":{"insertions":21,"deletions":0},"sh":{"insertions":38,"deletions":0}}},{"hash":"e5b3696fc4f3bb818cb1bb6aca1e1e9330f43c17","isMergeCommit":false,"messageTitle":"Fix minor string formatting for error handling in addEvent.","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":2,"deletions":2}}},{"hash":"ecbbb1b8d8098dd293cba273cbb8767c70b44719","isMergeCommit":false,"messageTitle":"Untrack all files in test-ui-test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":20},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":0,"deletions":38}}},{"hash":"d90bacc06526bf8a37dcc73df96c0ab8390bceda","isMergeCommit":false,"messageTitle":"Add deleteTask method to delete a task. The chatbot now supports the \u0027delete\u0027 command.","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}}]},{"date":"2025-01-30","commitResults":[{"hash":"36db71ee28c88cf3266e5fe376d0ac86b9a1b901","isMergeCommit":false,"messageTitle":"Task class: add toNoteForm method for logging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"04f497529109196ceb6092b125c359f08df161f8","isMergeCommit":false,"messageTitle":"Mirai.java: add log-to-file feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":186,"deletions":33}}}]},{"date":"2025-01-31","commitResults":[{"hash":"e9131abab89daa04373c7f38ea4062fd2ca94fa4","isMergeCommit":false,"messageTitle":"Split Mirai class into UI, storage, parser, task list","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":703,"deletions":425}}},{"hash":"31ff9e9555662b98b354d1ef161f4ffd97e42672","isMergeCommit":false,"messageTitle":"Refactor all date-time strings to LocalDateTime","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":146,"deletions":22}}},{"hash":"35d15138e30dafc8442b53dd9f9faa350a5447f9","isMergeCommit":false,"messageTitle":"Rearrange classes into ui, tasks and utility packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"bf091871197bcb062e7180df736494ac8343c600","isMergeCommit":false,"messageTitle":"Rearrange classes into ui, tasks and utility packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":63}}},{"hash":"20d1e4251ae56ca9461410a466a691d0a82922b8","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"740add71fa1093dbdaeb1a33521e37cc9f313b41","isMergeCommit":false,"messageTitle":"Add Gradle support","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":12,"deletions":2},"java":{"insertions":122,"deletions":50}}},{"hash":"95bd1acdfd70a91eac3aadc6778db7e107347ec6","isMergeCommit":false,"messageTitle":"Add JUnit tests fo Task and TaskList","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":161,"deletions":7}}},{"hash":"dc3c08971a892db7ab6d0ec37542ad5b0a1673f2","isMergeCommit":false,"messageTitle":"Create a .jar file for the chatbot application","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"b99515716851bb5283ddff81291b51f77dc9c8ea","isMergeCommit":false,"messageTitle":"Add \u0027find\u0027 command to find all tasks based on keyword","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":23}}},{"hash":"420139274409654b38268c1f621c4d6809f5d108","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"03c11b9ec9a72a90f42dc0e92905c9bb57c1a1e1","isMergeCommit":false,"messageTitle":"Fix JavaDoc typo","messageBody":"","tags":["A-JUnit","A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":19}}}]},{"date":"2025-02-06","commitResults":[{"hash":"57fca380610934421ae1216f5d9206c9573754cb","isMergeCommit":false,"messageTitle":"TaskListTest: rearrange import statements to follow style","messageBody":"","tags":["GUI"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"972eb5d73f3581b3893d28dd16407f88629fcd85","isMergeCommit":false,"messageTitle":"Replace CLI with GUI","messageBody":"The CLI is not intuitive for people unfamiliar with CLI\n\nLet\u0027s implement a GUI using JavaFX and store them in mirai.ui package,\nwhich will replace the original Ui class in the CLI version.\nRefactor Command functional interface to return a message instead of a\nflag to end or continue the conversation. Update methods in Parser\nimplementing this Command interface.\n\nThis is because the GUI does not need a loop to maintain the\nconversation, unlike the CLI that contains a while loop under the hood\nand needs a boolean flag to continue or terminate the loop. Instead\nof the UI class printing the message to the terminal, a Command\ndirectly returns the String message to feed into the DialogBox.\n","tags":["Level-10","A-Varargs"],"fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":65,"deletions":0},"java":{"insertions":359,"deletions":275}}},{"hash":"8f553ab98ebe2324f651b3c4c728473e47054bb2","isMergeCommit":false,"messageTitle":"Delete Ui.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":119}}}]},{"date":"2025-02-11","commitResults":[{"hash":"d0d9404e1f37c05e5f6f355de282c08c039374e5","isMergeCommit":false,"messageTitle":"Fix event parsing to use correct dates from text file","messageBody":"","tags":["A-Streams","A-CodeQuality","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2025-02-13","commitResults":[{"hash":"4380eadd615fb9460a9a2be23413893d48933d39","isMergeCommit":false,"messageTitle":"Add assertions to TaskList","messageBody":"Operations on TaskList such as delete, mark or unmark do not\nhandle when the task index is not within the list range.\n\nEven though the programmers have implemented pre-conditional\nchecks, the assertions will help detect errors if mistakes\ncan slip through.\n\nLet\u0027s add assertions to delete, mark, unmark and getTask.\n\nWe use Java assert instead of JUnit assert for its\nsimplicity and less overhead (questionable).\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"bce5603639be34a4e36b9c29782e3ba4270782f9","isMergeCommit":false,"messageTitle":"Add assertions to TaskList","messageBody":"Operations on TaskList such as delete, mark or unmark do not\nhandle when the task index is not within the list range.\n\nEven though the programmers have implemented pre-conditional\nchecks, the assertions will help detect errors if mistakes\ncan slip through.\n\nLet\u0027s add assertions to delete, mark, unmark and getTask.\n\nWe use Java assert instead of JUnit assert for its\nsimplicity and less overhead (questionable).\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"9940127f34812dbc285a315508af56d70e0a5dbb","isMergeCommit":false,"messageTitle":"Refactor Parser.java","messageBody":"The Parser.java class contains two methods addDeadline and\naddEvent, which are currently too long and contain low-level\nstatements bundled together. This makes the code harder to\nunderstand.\n\nBreaking these two methods down based on functional groups will\nallow better code readability and modularity.\n\nThe Parser\u0027s listAllSupportedCommands only lists commands without\nany other information.\n\nListing the usage for each command will be more user-friendly, as the\nuser will know what to do.\n\nLet\u0027s,\n* break down the methods into three phases: parsing arguments,\nparsing date-time, and generating task. Parsing arguments and\nparsing date-time have been delegated to smaller methods that handle\nthe parses.\n* implement a map from commands to message, where\nlistAllSupportedCommands can read from.\n","fileTypesAndContributionMap":{"java":{"insertions":161,"deletions":95}}},{"hash":"61ef5036667dab86fec6e2adc86da80498046696","isMergeCommit":true,"messageTitle":"Merge pull request #1 from Masunori/branch-A-Assertions","messageBody":"Branch A-Assertions","fileTypesAndContributionMap":{}},{"hash":"3a72d337fca40ba7479da452bd68fde199122e20","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"eb8bf30e545629cf1399c7453f68109743e53334","isMergeCommit":true,"messageTitle":"Merge pull request #4 from Masunori/branch-A-CodeQuality","messageBody":"Branch A-CodeQuality","fileTypesAndContributionMap":{}},{"hash":"6805b09c0e7adde099038b8abfa7ba6eb68a8e81","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"","tags":["A-CI"],"fileTypesAndContributionMap":{}},{"hash":"95e67cf88248cd9defc995cbfa02dc1aceffa48c","isMergeCommit":false,"messageTitle":"Add .yml to set up GitHub Actions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2025-02-14","commitResults":[{"hash":"d0b9b392018bc7ab9e18314b923e5963ce632ae9","isMergeCommit":false,"messageTitle":"Support flexible search","messageBody":"The \u0027find\u0027 command strictly checks for string matching to filter\nout relevant tasks.\n\nA more flexible search that instead, sort all events in order or\nrelevance will still display relevant results if the user forgets\nthe correct task description or makes a typo.\n\nLet\u0027s\n* implement a flexible search algorithm involving edit distance\n* implement a new command called \u0027flexfind\u0027 in the Parser class\nthat uses this edit distance algorithm\n\nThe edit distance is used because of its simplicity to implement,\nyet highly effective for simple matching.\n\nRefer to the specific implementation at Task::computeCloseness\nmethod.\n","fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":2}}},{"hash":"c1c214fe5a2c28d8a46cec80c9c616e1d468a702","isMergeCommit":false,"messageTitle":"Fix code to adhere to checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"3ba19b8f09baf9557358bd0b3806d2dca531fd14","isMergeCommit":true,"messageTitle":"Merge pull request #8 from Masunori/branch-BCD-Extension","messageBody":"Branch bcd extension","fileTypesAndContributionMap":{}}]},{"date":"2025-02-19","commitResults":[{"hash":"940d996d7f5748f647b42161f44af4c5831a7232","isMergeCommit":false,"messageTitle":"Improve GUI and flexfind algorithm","messageBody":"The GUI is generic.\n\nChoosing another colour theme for the GUI will make it less generic\nand show that there is a certain theme associated with the chatbot.\n\nLet\u0027s add styling to the JavaFX components.\n\nCSS is used for styling because it concentrates all styling into\none file and style changes will be easier. Blue theme is used\nbecause the imagined avatar of Mirai is a girl with blue hair and\neyes.\n\nNext, the flexfind algorithm has a flaw. For each keyword, it\nperforms edit distance calculation and return the distance from\nthe closest word. For n keywords, the closeness is the sum of\nn edit distances. However, when flexfinding with \u0027r\u0027, \u0027wake up\u0027\nranks higher than \u0027read book\u0027 because \u0027r\u0027 is closer to \u0027up\u0027 than\n\u0027read\u0027.\n\nThe improved algorithm must also account for inclusion, rather than\njust edit distance to the closest word.\n\nLet\u0027s add another logic layer to the algorithm, where if a description\nword contains a key word, edit distance is straight up 0.\n","fileTypesAndContributionMap":{"fxml":{"insertions":44,"deletions":0},"java":{"insertions":66,"deletions":22}}},{"hash":"f8803ed14cd09619eea68f558408d922bd51c4df","isMergeCommit":false,"messageTitle":"Fix styling issues","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"4443d62ceabb834f4298a6d35c4d73cd4a9a9cda","isMergeCommit":true,"messageTitle":"Merge pull request #11 from Masunori/branch-A-BetterGui","messageBody":"Branch a better gui","fileTypesAndContributionMap":{}},{"hash":"6989b0a9f5930e577776e8a3487e13d586c164f9","isMergeCommit":false,"messageTitle":"Fix styling issues","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"a71d35e82fbf5911fee288f7a5c4397ca136196b","isMergeCommit":true,"messageTitle":"Merge pull request #12 from Masunori/branch-A-BetterGui","messageBody":"Fix styling issues","fileTypesAndContributionMap":{}},{"hash":"4cba0f08dab4b9b95ca1738b212bab1f7bc79762","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":92,"deletions":26}}},{"hash":"5b667cf1a0ef02ed2ec58cca411a36dcaffc0d2a","isMergeCommit":false,"messageTitle":"Add application title and correct Message.java\u0027s grammar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1b793ac0a27f94b03395899c5d6214f7707d3b55","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/Masunori/ip","messageBody":"","tags":["A-TextUiTesting","A-Release","A-FullCommitMessage"],"fileTypesAndContributionMap":{}},{"hash":"a82994feebcd5a58c10527d8e72accbb10f25222","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"01dd9b888d975ac3e19519b4bc972fb5eef06945","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2025-02-20","commitResults":[{"hash":"5f78d27d031d939571cdab6ba3c3dbcb3d74c00b","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"Masunori":{"java":1440,"md":86,"fxml":109,"sh":0,"bat":0,"gradle":28,"txt":0}},"authorContributionVariance":{"Masunori":107432.52},"authorDisplayNameMap":{"Masunori":"CS2103T-W13-4 DUON.. DUC"}}
