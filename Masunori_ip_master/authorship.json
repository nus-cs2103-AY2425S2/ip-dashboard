[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"# User Guide for Mirai","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"\u003e \"Come on! It is just 8 in the morning...\"\\","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"\u003e \"As long as I am here, you will not return to that sedentary lifestyle again.\"\\","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"\u003e \"Ugh, fine... Wait, you are not fictional?\"\\","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"\u003e \"Well, not anymore ðŸ˜‰\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"Thanks for using Mirai, a (beautiful and intelligent assistant, as well as a) **desktop chatbot application** that helps you track your tasks and makes your life easier!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"Mirai is optimised for use via a **Command Line Interface** (CLI), while stil having the benefits of a **Graphical User Interface** (GUI). If you can type fast, Mirai will","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"get your job done much faster than traditional GUI applications.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"![Mirai chatbot application interface](docs/Ui.png)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"In case you wonder about Mirai\u0027s background story, visit our story [here](https://www.meganovel.com/story/A-Backpack-a-Gun-and-a-Codex_31000344924/Prologue_2762250)!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"# Quick Start","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"1. Ensure you have Java `17` or above installed in your computer. **Mac users** please ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"2. Download the latest `mirai.jar` file from [here](https://github.com/Masunori/ip/releases/download/A-Release/mirai.jar).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Mirai. From here on, assume that you store your file at `C:/Users/Username`.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"4. Open a command terminal, then key in the following:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"```sh","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"cd C:/Users/User","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"java -jar addressbook.jar","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"You should see the interface that looks like below.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"![Mirai chatbot application welcome interface](docs/Welcome.png)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"5. Type a command in the command box, and press **Enter** or click on the Send button to send a message to Mirai. Some necessary commands are below:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"   - `list`: Lists all tasks.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"   - `todo sleep`: Adds a to-do task with the description \"sleep\" into the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"   - `deadline submit homework /by 2025-02-20 1559`: Adds a deadline task with description \"submit homework\" and deadline 15:59, 20th February 2025 into the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"   - `event meeting /from 2025-02-20 1600 /to 2025-02-20 1800`: Adds an event with description \"meeting\" and lasts from 16:00 to 18:00, 20th February, 2025 into the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"   - `bye`: Exits Mirai chatbot application.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"6. Refer to the Commands section below for all supported commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"# Commands","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"\u003e [!NOTE]","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"\u003e - Words in square brackets are parameters to be supplied by the user.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"\u003e   e.g. in `todo [description]`, `[description]` is a parameter the user has to supply, such as `todo sleep`.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"\u003e   ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"\u003e - For commands that involve datetimes, Mirai supports the following date formats:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YYYY HHmm`, such as `31/01/2025 1559`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YYYY HH:mm`, such as `31/01/2025 15:59`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YY HHmm`, such as `31/01/25 1559`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YY HH:mm`, such as `31/01/25 15:59`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"\u003e   - `YYYY-MM-DD HHmm`, such as `2025-01-31 1559`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"\u003e   - `YYYY-MM-DD HH:mm`, such as `2025-01-31 15:59`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"\u003e  ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"\u003e - For commands that involve indexes, to know the index of a task, use the `list` command, and look until you see the index of your desired task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"| Keyword | What it does | How to use it |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"| ------- | ------------ | ------------- |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"| `bye`   | Exits Mirai chatbot application. | `bye` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"| `deadline` | Adds a deadline task into the task list. | `deadline [description] /by [datetime]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"| `delete` | Deletes a task from the storage with the specified index. | `delete [index]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"| `event` | Adds an event task into the task list. | `event [description] /from [start datetime] /to [end datetime]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"| `find` | Finds a task based on a word/words. Note that everything after the `find` keyword will be treated as one block.\u003cbr\u003e\u003cbr\u003e For example, `find read book` will retrieve all tasks containing the `read book` phrase exactly. | `find [keyword(s)]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"| `flexfind` | Sorts all tasks based on the decreasing level of revelance to the keyword(s). Each word is treated separately.\u003cbr\u003e\u003cbr\u003e For example `flexfind read book` will check for closeness of the task description with respect to `read` and `book` separately, so `flexfind book read` will also produce the same results, even if it does not make as much semantic meaning. | `flexfind [keyword(s)]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"| `help` | Lists all commands that Mirai supports. | `help` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"| `list` | Lists all tasks in the task list. | `list` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"| `mark` | Marks a task with a specified index as done. | `mark [index]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"| `todo` | Adds a to-do task into the task list. | `todo [description]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"| `unmark` | Marks a task with a specified index as incompleted. | `unmark [index]` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"# Non-command features","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"### Saving data","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"Mirai\u0027s data is saved in the hard disk automatically after any command that alters the data. You do not need to save manually!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"### Editing the data file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"Task data is saved in a `.txt` file named `mirai.txt`, at `[address of the .jar file]/data/mirai.txt`. Here, tasks are formatted as","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"| Task type | Syntax | Example |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"| --------- | ------ | ------- |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"| Todo      | `T \\| 0 \\| task description` | `T \\| 0 \\| sleep` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"| Deadline  | `D \\| 0 \\| task description \\| YYYY-MM-DDTHH:mm` | `D \\| 1 \\| submit homework \\| 2025-02-20T23:59` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"| Event     | `E \\| 0 \\| task description \\| YYYY-MM-DDTHH:mm \\| YYYY-MM-DDTHH:mm` | `E \\| 0 \\| meeting \\| 2025-02-21T16:00 \\| 2025-02-21T18:00` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"Here, content blocks are separated by vertical bars (`|`).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"- (**COMMON**) The first content block is the task identifier (`T` for todo, `D` for deadline, and `E` for events)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"- (**COMMON**) The second content block is the completion status of the task (`0` for incompleted, `1` for done)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"- (**COMMON**) The third content block is the task description. Task descriptions can be more than 1 word, separated with space","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"- (**Exclusive to DEADLINE and EVENT**) The fourth content block is the date-time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"  - For a deadline task, it is the deadline date-time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"  - For an event task, it is the date-time that the event starts.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"- (**Exclusive to EVENT**) The fifth content block is the date-time that an event task ends.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"Advanced users are welcome to directly update the data by editing this data file.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"# FAQ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"**Q**: How do I transfer my data to another computer.\\","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"**A**: Install `mirai.jar` in the other computer. Overwrite the empty `mirai.jar` data file it creates with the file in your current computer. ","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Masunori":86,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"    mainClass.set(\"mirai.ui.Launcher\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"    archiveBaseName \u003d \"mirai\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    archiveFileName \u003d \u0027mirai.jar\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"java {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"checkstyle {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":28,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"# User Guide for Mirai","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"\u003e \"Come on! It is just 8 in the morning...\"\\","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"\u003e \"As long as I am here, you will not return to that sedentary lifestyle again.\"\\","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"\u003e \"Ugh, fine... Wait, you are not fictional?\"\\","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"\u003e \"Well, not anymore ðŸ˜‰\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"Thanks for using Mirai, a (beautiful and intelligent assistant, as well as a) **desktop chatbot application** that helps you track your tasks and makes your life easier!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"Mirai is optimised for use via a **Command Line Interface** (CLI), while still having the benefits of a **Graphical User Interface** (GUI). If you can type fast, Mirai will","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"get your job done much faster than traditional GUI applications.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"![Mirai chatbot application interface](Ui.png)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"In case you wonder about Mirai\u0027s background story, visit our story [here](https://www.meganovel.com/story/A-Backpack-a-Gun-and-a-Codex_31000344924/Prologue_2762250)!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"# Quick Start","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"1. Ensure you have Java `17` or above installed in your computer. **Mac users** please ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"2. Download the latest `mirai.jar` file from [here](https://github.com/Masunori/ip/releases/download/A-Release/mirai.jar).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Mirai. From here on, assume that you store your file at `C:/Users/Username`.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"4. Open a command terminal, then key in the following:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"cd C:/Users/Username","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"java -jar mirai.jar","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"You should see the interface that looks like below.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"![Mirai chatbot application welcome interface](Welcome.png)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"5. Type a command in the command box, and press **Enter** or click on the Send button to send a message to Mirai. Some necessary commands are below:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"   - `list`: Lists all tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"   - `todo sleep`: Adds a to-do task with the description \"sleep\" into the task list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"   - `deadline submit homework /by 2025-02-20 1559`: Adds a deadline task with description \"submit homework\" and deadline 15:59, 20th February 2025 into the task list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"   - `event meeting /from 2025-02-20 1600 /to 2025-02-20 1800`: Adds an event with description \"meeting\" and lasts from 16:00 to 18:00, 20th February, 2025 into the task list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"   - `bye`: Exits Mirai chatbot application.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"6. Refer to the Commands section below for all supported commands.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"# Commands","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"\u003e [!NOTE]","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"\u003e - Words in square brackets are parameters to be supplied by the user.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"\u003e   e.g. in `todo [description]`, `[description]` is a parameter the user has to supply, such as `todo sleep`.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"\u003e   ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"\u003e - For commands that involve datetimes, Mirai supports the following date formats:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YYYY HHmm`, such as `31/01/2025 1559`","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YYYY HH:mm`, such as `31/01/2025 15:59`","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YY HHmm`, such as `31/01/25 1559`","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"\u003e   - `DD/MM/YY HH:mm`, such as `31/01/25 15:59`","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"\u003e   - `YYYY-MM-DD HHmm`, such as `2025-01-31 1559`","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"\u003e   - `YYYY-MM-DD HH:mm`, such as `2025-01-31 15:59`","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"\u003e  ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"\u003e - For commands that involve indexes, to know the index of a task, use the `list` command, and look until you see the index of your desired task.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"| Keyword | What it does                                                                                                                                                                                                                                       | How to use it |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"| ------- |----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| ------------- |","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"| `bye`   | Exits Mirai chatbot application.                                                                                                                                                                                                                   | `bye` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"| `deadline` | Adds a deadline task into the task list.                                                                                                                                                                                                           | `deadline [description] /by [datetime]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"| `delete` | Deletes a task from the storage with the specified index.                                                                                                                                                                                          | `delete [index]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"| `event` | Adds an event task into the task list.                                                                                                                                                                                                             | `event [description] /from [start datetime] /to [end datetime]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"| `find` | Finds a task based on a word/words. Note that everything after the `find` keyword will be treated as one block.\u003cbr\u003e\u003cbr\u003e For example, `find read book` will retrieve all tasks containing the `read book` phrase exactly.                           | `find [keyword(s)]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"| `flexfind` | Sorts all tasks based on the closeness to the keyword(s). Word ordering is not important.\u003cbr\u003e\u003cbr\u003e For example `flexfind read book` and `flexfind book read` will also produce the same results, even if it does not make as much semantic meaning. | `flexfind [keyword(s)]` |","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"| `help` | Lists all commands that Mirai supports.                                                                                                                                                                                                            | `help` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"| `list` | Lists all tasks in the task list.                                                                                                                                                                                                                  | `list` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"| `mark` | Marks a task with a specified index as done.                                                                                                                                                                                                       | `mark [index]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"| `todo` | Adds a to-do task into the task list.                                                                                                                                                                                                              | `todo [description]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"| `unmark` | Marks a task with a specified index as incompleted.                                                                                                                                                                                                | `unmark [index]` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"# Non-command features","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"### Saving data","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"Mirai\u0027s data is saved in the hard disk automatically after any command that alters the data. You do not need to save manually!","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"### Editing the data file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"Task data is saved in a `.txt` file named `mirai.txt`, at `[address of the .jar file]/data/mirai.txt`. Here, tasks are formatted as","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"| Task type | Syntax | Example |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"| --------- | ------ | ------- |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"| Todo      | `T \\| 0 \\| task description` | `T \\| 0 \\| sleep` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"| Deadline  | `D \\| 0 \\| task description \\| YYYY-MM-DDTHH:mm` | `D \\| 1 \\| submit homework \\| 2025-02-20T23:59` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"| Event     | `E \\| 0 \\| task description \\| YYYY-MM-DDTHH:mm \\| YYYY-MM-DDTHH:mm` | `E \\| 0 \\| meeting \\| 2025-02-21T16:00 \\| 2025-02-21T18:00` |","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"Here, content blocks are separated by vertical bars (`|`).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"- (**COMMON**) The first content block is the task identifier (`T` for todo, `D` for deadline, and `E` for events)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"- (**COMMON**) The second content block is the completion status of the task (`0` for incompleted, `1` for done)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"- (**COMMON**) The third content block is the task description. Task descriptions can be more than 1 word, separated with space","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"- (**Exclusive to DEADLINE and EVENT**) The fourth content block is the date-time.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"  - For a deadline task, it is the deadline date-time.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"  - For an event task, it is the date-time that the event starts.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"- (**Exclusive to EVENT**) The fifth content block is the date-time that an event task ends.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"Advanced users are welcome to directly update the data by editing this data file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"# FAQ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"**Q**: How do I transfer my data to another computer.\\","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"**A**: Install `mirai.jar` in the other computer. Overwrite the empty `mirai.jar` data file it creates with the file in your current computer. ","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"Masunori":78,"-":15}},{"path":"src/main/java/mirai/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     * Initialises a deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * @param description The description of the task with deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param deadline The deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"                super.toString(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY, HHmm\")));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    public String toNoteForm() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"                this.description,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"                this.deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":36}},{"path":"src/main/java/mirai/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * Initialises an event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param description The description of the event-type task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     * @param startTime The start time of the event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     * @param endTime The end time of the event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[E]%s (from: %s, to: %s)\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"                super.toString(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY, HHmm\")),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY, HHmm\")));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    public String toNoteForm() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"                this.description,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"                this.startTime,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"                this.endTime);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":42}},{"path":"src/main/java/mirai/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Utility;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task that can be done or not done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     * Initialises a task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * @param description The task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"     * @return \u003ccode\u003eX\u003c/code\u003e if done, blank if undone","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"     * Marks the task as undone","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"     * Checks if the task description contains a certain string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"     * @param keyword The string to check for containment","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if the task description contains the keyword, \u003ccode\u003efalse\u003c/code\u003e otherwise","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"     * Converts the task into a note form to store in a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"     * @return A string representation of the task, store-able in a file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    public abstract String toNoteForm();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"     * Computes the closeness of the task\u0027s description to the user\u0027s keyword.\u003cbr\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"     * This returns 0 if the keyword is contained within the task\u0027s description. Else, split the keywords and","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"     * description into two String arrays and perform matching for each keyword word.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"     * @param keyword The user\u0027s keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"     * @return the closeness of the task\u0027s description to the user\u0027s keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"    public double computeCloseness(String keyword) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"        String[] keywordWords \u003d keyword.split(\"\\\\s+\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"        String[] descriptionWords \u003d this.description.split(\"\\\\s+\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"        double distance \u003d 0;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"        // for each keyword word, compute the smallest edit distance to any of the description word","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"        for (String kw : keywordWords) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"            double minDistanceToKw \u003d Double.MAX_VALUE;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"            for (String dw : descriptionWords) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"                if (dw.contains(kw)) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"                    minDistanceToKw \u003d 0;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"                    break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"                minDistanceToKw \u003d Math.min(minDistanceToKw, Utility.getEditDistance(dw, kw));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"            // sum the smallest edit distances for each keyword word up","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"            distance +\u003d minDistanceToKw;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"        return distance;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":96}},{"path":"src/main/java/mirai/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task without any date/time attached.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"     * Initialises a task to be done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"     * @param description The to-do task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    public String toNoteForm() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        return String.format(\"T | %d | %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"                this.description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":26}},{"path":"src/main/java/mirai/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":" * The DialogBox class encapsulates a box of dialog containing the user\u0027s image and text message.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    protected Label dialog;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    protected ImageView displayPicture;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    /** An enumeration-type that signals to the DialogBox the source of the message */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    protected enum Subject {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"        USER, MIRAI","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    protected DialogBox(String text, Image img, Subject subject) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"            String resource \u003d subject \u003d\u003d Subject.USER","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"                    ? \"/view/UserDialogBox.fxml\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"                    : subject \u003d\u003d Subject.MIRAI","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"                    ? \"/view/MiraiDialogBox.fxml\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"                    : \"/view/DialogBox.fxml\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(resource));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"        dialog.getStyleClass().add(\"user-dialog-box-text\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"        // make the profile image circular","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"        displayPicture.setClip(new Circle(30, 30, 30));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"     * Creates a dialog box that represents the user\u0027s message.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"     * @param s The user\u0027s message/command","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"     * @param i The user\u0027s profile picture","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"     * @return a user\u0027s dialog component","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"    public static UserDialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"        return new UserDialogBox(s, i);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"     * Creates a dialog box that represents Mirai\u0027s message.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"     * @param s Mirai\u0027s message","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"     * @param i Mirai\u0027s profile picture","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"     * @return Mirai\u0027s dialog component","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"    public static MiraiDialogBox getMiraiDialog(String s, Image i) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"        return new MiraiDialogBox(s, i);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":74}},{"path":"src/main/java/mirai/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * A launcher class to work around classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":12}},{"path":"src/main/java/mirai/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":" * The Main class encapsulates a JavaFX application, in this case the Mirai chatbot application.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    private Mirai mirai \u003d new Mirai(\"./data/mirai.txt\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"     * Starts the application.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     * @param stage The stage to mount","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/stylesheet.css\").toExternalForm());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"            stage.setTitle(\"Mirai\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"            stage.setResizable(false);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMirai(mirai); // inject the Mirai instance","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":37}},{"path":"src/main/java/mirai/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Message;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    private Mirai mirai;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    private Image userImage \u003d new Image(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"    private Image miraiImage \u003d new Image(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    /** Initialize the chatbot interface. */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"                DialogBox.getMiraiDialog(Message.GREETING, miraiImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"        dialogContainer.getStyleClass().add(\"dialog-container\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"    /** Injects the Mirai instance */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    public void setMirai(Mirai m) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"        this.mirai \u003d m;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Mirai\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"        String response \u003d mirai.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"                DialogBox.getMiraiDialog(response, miraiImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":64}},{"path":"src/main/java/mirai/ui/Mirai.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import mirai.utility.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":" * The Mirai class encapsulates a chatbot named Mirai.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"public class Mirai {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     * Initialises the chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"     * @param filePath The path of the file to store the list of tasks. If the file does not exist, silently create one.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    public Mirai(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"     * Gets a response from Mirai based on the user\u0027s text message.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"     * @param commandLine The user\u0027s command","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"     * @return Mirai\u0027s response","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public String getResponse(String commandLine) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        Command command \u003d this.parser.parse(commandLine);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        return command.execute(commandLine.split(\"\\\\s+\"), this.tasks, this.storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Masunori":40}},{"path":"src/main/java/mirai/ui/MiraiDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * The MiraiDiagloBox encapsulates a dialog box that comes from Mirai.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"public class MiraiDialogBox extends DialogBox {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"    protected MiraiDialogBox(String text, Image i) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"        super(text, i, Subject.MIRAI);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Masunori":12}},{"path":"src/main/java/mirai/ui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * The UserDialogBox encapsulates a dialog box that comes from the user.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"public class UserDialogBox extends DialogBox {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"    protected UserDialogBox(String text, Image i) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"        super(text, i, Subject.USER);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Masunori":12}},{"path":"src/main/java/mirai/utility/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":" * The Command interface encapsulates a user command.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * \u003cstrong\u003eNote:\u003c/strong\u003e This is a functional interface whose functional method is","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * \u003ccode\u003eexecute(String[], TaskList, Storage)\u003c/code\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"@FunctionalInterface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"public interface Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"     * Executes the command. The execution can interact with the list of tasks and the storage.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     * @return Mirai\u0027s response, based on the user\u0027s command specified by args","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    public String execute(String[] args, TaskList tasks, Storage storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":19}},{"path":"src/main/java/mirai/utility/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * An utility class containing message templates used throughout the Mirai chatbot.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class Message {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    public static final String GREETING \u003d","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"            \"For now, just bear with this Elysia picture until I find a better avatar...\\n\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"            + \"Hello! I\u0027m Mirai, your beautiful and intelligent personal assistant!\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"            + \"Now then, what can I do for you?\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    public static final String GOODBYE \u003d","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"            \"Bye. Mirai hopes to see you again soon!\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"            + \"Application closing...\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    public static final String SUPPORTED_DATETIME_FORMATS \u003d","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"            \"Mirai supports the following date-time formats:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"            + \"\u003e\u003e\u003e DD/MM/YYYY HHmm, such as 31/01/2025 1559\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"            + \"\u003e\u003e\u003e DD/MM/YYYY HH:mm, such as 31/01/2025 15:59\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"            + \"\u003e\u003e\u003e DD/MM/YY HHmm, such as 31/01/25 1559\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"            + \"\u003e\u003e\u003e DD/MM/YY HH:mm, such as 31/01/25 15:59\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"            + \"\u003e\u003e\u003e YYYY-MM-DD HHmm, such as 2025-01-31 1559\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"            + \"\u003e\u003e\u003e YYYY-MM-DD HH:mm, such as 2025-01-31 15:59\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"    public static final String STORAGE_FILE_CREATION_ERROR \u003d","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"            \"OOPS!!! Mirai cannot load data from your storage...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"            + \"Mirai will create an empty task list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"    public static final String ERROR \u003d \"OOPS!!! \";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    public static final Map\u003cString, String\u003e COMMAND_DESCRIPTION \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"            put(\"bye\", \"Syntax: bye\\nExits the Mirai chatbot application.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"            put(\"deadline\", \"Syntax: deadline [description] /by [date]\\nStores a deadline task.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"            put(\"delete\", \"Syntax: delete [index]\\nDeletes a task from the storage.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"            put(\"event\", \"Syntax: event [description] /from [date] to [date]\\nStores an event task.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"            put(\"find\", \"Syntax: find [keyword]\\nFinds a task based on a word/words. Note that everything after \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"                    + \"the \u0027find\u0027 keyword will be considered as one block for finding.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"            put(\"flexfind\", \"Syntax: flexfind [keyword]\\nSort all tasks based on the relevance to the keyword.\\n\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"            put(\"help\", \"Syntax: help\\nLists all commands that Mirai supports.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"            put(\"list\", \"Syntax: list\\nLists all tasks currently stored by Mirai.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"            put(\"mark\", \"Syntax: mark [index]\\nMarks a task as done.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"            put(\"todo\", \"Syntax: todo [description]\\nStores a to-do task.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"            put(\"unmark\", \"Syntax: unmark [index]\\nMarks a task as uncompleted.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    };","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"    public static String getNumOfTasks(int numOfTasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"        return String.format(\"Now you have %d task%s in the list\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"                numOfTasks,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"                numOfTasks \u003c\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":56}},{"path":"src/main/java/mirai/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import java.util.Locale;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":" * The Parser class encapsulates a parser to interpret the user\u0027s command lines.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"    /** A map to map user commands to specific actions of the chatbot */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    private final Map\u003cString, Command\u003e commandMap;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"     * Initialises a parser.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    public Parser() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        this.commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"bye\", this::endConversation);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"deadline\", this::addDeadline);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"delete\", this::deleteTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"event\", this::addEvent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"find\", this::findTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"flexfind\", this::flexibleFindTasks);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"help\", this::listAllSupportedCommands);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"list\", this::listAllTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"mark\", this::markTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"todo\", this::addTodo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"unmark\", this::unmarkTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"UNKNOWN_COMMAND\", this::handleUnknownCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"     * Ends the conversation and closes the application after 2 seconds.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"     * @return a goodbye message","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    private String endConversation(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"        PauseTransition delayClosure \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"        delayClosure.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"        delayClosure.play();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        return Message.GOODBYE;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"     * @return the message to tell the user the task addition is successful/failing","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"    private String addTodo(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"Mirai does not understand a to-do task with no content...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"                    + \"You can tell Mirai your to-do task by the syntax \u0027todo [task]\u0027!\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"        ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"        tasks.addTask(toDo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"        storage.logNewTask(toDo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"                + \"  \" + toDo + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"                + Message.getNumOfTasks(tasks.getSize());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"     * Parses a user\u0027s date-time string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"     * @param dateTime The user\u0027s date-time string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"     * @return a LocalDateTime representation of the user\u0027s date-time","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"    private static LocalDateTime parseUserDateTime(String dateTime) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) // 31/01/2025 1559","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) // 31/01/2025 15:59","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\")) // 31/01/25 1559","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\")) // 31/01/25 15:59","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) // 2025-01-31 1559","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) // 2025-01-31 15:59","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Masunori"},"content":"     * Finds the index of a keyword among the arguments.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Masunori"},"content":"     * @param args The arguments","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Masunori"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Masunori"},"content":"     * @param fromInclusive The index to search from (inclusive)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Masunori"},"content":"     * @param toExclusive The index to terminate search (terminate before this index)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Masunori"},"content":"     * @return The index of the keyword, -1 if the keyword does not exist in the range.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Masunori"},"content":"    private int findIndex(String[] args, String keyword, int fromInclusive, int toExclusive) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Masunori"},"content":"            if (args[i].equals(keyword)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Masunori"},"content":"                return i;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Masunori"},"content":"        return -1;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Masunori"},"content":"     * Extracts the arguments necessary to construct a deadline.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Masunori"},"content":"     * @param args The arguments","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Masunori"},"content":"     * @return An array containing two Strings: the description and the deadline date","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Masunori"},"content":"    private String[] extractDeadlineArgs(String[] args) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Masunori"},"content":"        int byIndex \u003d findIndex(args, \"/by\", 0, args.length);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Masunori"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Masunori"},"content":"            return new String[] {null, null};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Masunori"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, byIndex));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Masunori"},"content":"        String deadline \u003d String.join(\" \", Arrays.copyOfRange(args, byIndex + 1, args.length));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Masunori"},"content":"        return new String[] {description, deadline};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Masunori"},"content":"     * Parses a date-time string.\u003cbr\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Masunori"},"content":"     * \u003cb\u003eNote:\u003c/b\u003e This is a wrapper over Parser::parseUserDateTime","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Masunori"},"content":"     * within a try-catch block.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Masunori"},"content":"     * @param timeValue The date-time string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Masunori"},"content":"     * @return The LocalDateTime object if the string parse is successful. Else, null.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Masunori"},"content":"    private LocalDateTime parseDateTime(String timeValue) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Masunori"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Masunori"},"content":"            return Parser.parseUserDateTime(timeValue);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Masunori"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Masunori"},"content":"            return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Masunori"},"content":"     * Adds a Deadline task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Masunori"},"content":"     * @return the message to tell the user the task addition is successful/failing","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Masunori"},"content":"    private String addDeadline(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Masunori"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"Mirai does not understand a deadline with no content...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Masunori"},"content":"                + \"You can tell Mirai your deadline by the syntax \u0027deadline [task] /by [deadline]\u0027!\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Masunori"},"content":"                + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Masunori"},"content":"        String[] deadlineArgs \u003d extractDeadlineArgs(args);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Masunori"},"content":"        String description \u003d deadlineArgs[0];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Masunori"},"content":"        String deadline \u003d deadlineArgs[1];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Masunori"},"content":"        LocalDateTime deadlineTime \u003d parseDateTime(deadline);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Masunori"},"content":"        if (deadlineTime \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"Mirai does not understand your deadline...\\n\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Masunori"},"content":"                    + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Masunori"},"content":"        Deadline task \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Masunori"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Masunori"},"content":"        storage.logNewTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Masunori"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Masunori"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Masunori"},"content":"                + Message.getNumOfTasks(tasks.getSize());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Masunori"},"content":"     * Extracts the arguments necessary to construct an Event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Masunori"},"content":"     * @param args The arguments","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Masunori"},"content":"     * @return An array containing three Strings: the description, the start time and the end time","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Masunori"},"content":"    private String[] extractEventArgs(String[] args) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Masunori"},"content":"        int fromIndex \u003d findIndex(args, \"/from\", 0, args.length);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Masunori"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Masunori"},"content":"            return new String[] {null, null, null};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Masunori"},"content":"        int toIndex \u003d findIndex(args, \"/to\", fromIndex + 1, args.length);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Masunori"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, fromIndex));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Masunori"},"content":"        String startTimeString \u003d String.join(\" \", Arrays.copyOfRange(args, fromIndex + 1, toIndex));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Masunori"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Masunori"},"content":"            return new String[] {description, startTimeString, null};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Masunori"},"content":"        String endTimeIndex \u003d String.join(\" \", Arrays.copyOfRange(args, toIndex + 1, args.length));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Masunori"},"content":"        return new String[] {description, startTimeString, endTimeIndex};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Masunori"},"content":"     * Adds an Event task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Masunori"},"content":"     * @return the message to tell the user the task addition is successful/failing","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Masunori"},"content":"    private String addEvent(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Masunori"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"Mirai does not understand an event with no content...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Masunori"},"content":"                    + \"You can tell Mirai your event by the syntax \u0027event [task] /from [start time] /to [end time]\u0027!\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Masunori"},"content":"                    + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Masunori"},"content":"        String[] timeStrings \u003d extractEventArgs(args);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Masunori"},"content":"        String description \u003d timeStrings[0];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Masunori"},"content":"        String startTimeString \u003d timeStrings[1];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Masunori"},"content":"        String endTimeString \u003d timeStrings[2];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Masunori"},"content":"        if (startTimeString \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"You forgot to specify your start time...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Masunori"},"content":"                    + \"You can tell Mirai your event by the syntax \u0027event [task] /from [start time] /to [end time]\u0027!\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Masunori"},"content":"                    + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Masunori"},"content":"        if (endTimeString \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Masunori"},"content":"            return \"You forgot to specify your end time...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Masunori"},"content":"                    + \"You can tell Mirai your event by the syntax \u0027event [task] /from [start time] /to [end time]\u0027!\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Masunori"},"content":"                    + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Masunori"},"content":"        LocalDateTime startTime \u003d parseDateTime(startTimeString);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Masunori"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"Mirai does not understand your start time...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Masunori"},"content":"                    + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Masunori"},"content":"        LocalDateTime endTime \u003d parseDateTime(endTimeString);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Masunori"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"Mirai does not understand your end time...\\n\" + Message.SUPPORTED_DATETIME_FORMATS;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Masunori"},"content":"        Event task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Masunori"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Masunori"},"content":"        storage.logNewTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Masunori"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Masunori"},"content":"                + \"  \" + task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Masunori"},"content":"     * Lists all tasks to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Masunori"},"content":"     * @return the message string of all user\u0027s tasks","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Masunori"},"content":"    private String listAllTasks(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Masunori"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Masunori"},"content":"            result.append(i + 1).append(\u0027.\u0027).append(tasks.getTask(i).toString()).append(\u0027\\n\u0027);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Masunori"},"content":"        return result.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Masunori"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Masunori"},"content":"     * @return the message showing user the marked task, or an error message","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Masunori"},"content":"    private String markTask(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Masunori"},"content":"        int taskIndex \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003c 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"It looks like you have keyed in a non-positive index...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Masunori"},"content":"                    + \"Mirai stores your tasks with positive indexes. Please specify a positive index!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"It looks like you have keyed in a too large index...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Masunori"},"content":"                    + \"You are only having \" + tasks.getSize()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Masunori"},"content":"                    + \" task(s) in your list. Please specify an index smaller than this!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Masunori"},"content":"        tasks.markTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Masunori"},"content":"        storage.relogAllTasks(tasks.getTaskList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Masunori"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Masunori"},"content":"                + \"  \" + tasks.getTask(taskIndex - 1).toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Masunori"},"content":"     * Marks a task as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Masunori"},"content":"     * @return the message showing user the unmarked task, or an error message","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Masunori"},"content":"    private String unmarkTask(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Masunori"},"content":"        int taskIndex \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003c 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"It looks like you have keyed in a non-positive index...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Masunori"},"content":"                    + \"Mirai stores your tasks with positive indexes. Please specify a positive index!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"It looks like you have keyed in a too large index...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Masunori"},"content":"                    + \"You are only having \" + tasks.getSize()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Masunori"},"content":"                    + \" task(s) in your list. Please specify an index smaller than this!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Masunori"},"content":"        tasks.unmarkTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Masunori"},"content":"        storage.relogAllTasks(tasks.getTaskList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Masunori"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Masunori"},"content":"                + \"  \" + tasks.getTask(taskIndex - 1).toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Masunori"},"content":"     * Informs the user that the command is undefined.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Masunori"},"content":"     * @return an error message telling the user that the command is undefined","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Masunori"},"content":"    private String handleUnknownCommand(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Masunori"},"content":"        return \"Sorry, Mirai does not understand what you mean...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Masunori"},"content":"                + \"Please type \u0027help\u0027 to know what commands Mirai can understand!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Masunori"},"content":"     * Lists all commands supported by the chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Masunori"},"content":"     * @return a message string to list all supported commands","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Masunori"},"content":"    private String listAllSupportedCommands(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Masunori"},"content":"        StringBuilder message \u003d new StringBuilder(\"Mirai currently supports the following commands:\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Masunori"},"content":"        for (Map.Entry\u003cString, String\u003e command : Message.COMMAND_DESCRIPTION.entrySet()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Masunori"},"content":"            message.append(String.format(\"\u003e\u003e\u003e %s:\\n%s\", command.getKey(), command.getValue())).append(\u0027\\n\u0027);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Masunori"},"content":"        return message.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Masunori"},"content":"     * Removes a task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Masunori"},"content":"     * @return a message to tell the user the deleted task, or an error message","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Masunori"},"content":"    private String deleteTask(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Masunori"},"content":"        int taskIndex \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003c 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"It looks like you have keyed in a non-positive index...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Masunori"},"content":"                    + \"Mirai stores your tasks with positive indexes. Please specify a positive index!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Masunori"},"content":"            return Message.ERROR + \"It looks like you have keyed in a too large index...\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Masunori"},"content":"                    + \"You are only having \" + tasks.getSize()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Masunori"},"content":"                    + \" task(s) in your list. Please specify an index smaller than this!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Masunori"},"content":"        Task removedTask \u003d tasks.getTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Masunori"},"content":"        tasks.deleteTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Masunori"},"content":"        storage.relogAllTasks(tasks.getTaskList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Masunori"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Masunori"},"content":"                + \"  \" + removedTask.toString()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Masunori"},"content":"                + Message.getNumOfTasks(tasks.getSize());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Masunori"},"content":"     * Displays to the user all tasks matching a given keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Masunori"},"content":"     * @return a message showing the user all tasks with the matching keyword","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Masunori"},"content":"    public String findTasks(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Masunori"},"content":"        String keyword \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Masunori"},"content":"        TaskList filteredTaskList \u003d tasks.filterBasedOnKeyword(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Masunori"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.getSize(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Masunori"},"content":"            message.append(i + 1).append(\u0027.\u0027).append(filteredTaskList.getTask(i).toString()).append(\u0027\\n\u0027);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Masunori"},"content":"        return message.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Masunori"},"content":"     * Displays to the user all tasks based on relevance to a keyword. The relevance algorithm is available in the","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Masunori"},"content":"     * method \u003ccode\u003eTask::computeCloseness(String)\u003c/code\u003e.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Masunori"},"content":"     * @return a message showing the user all tasks with the matching keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Masunori"},"content":"    public String flexibleFindTasks(String[] args, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Masunori"},"content":"        String keyword \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Masunori"},"content":"        TaskList filteredTaskList \u003d tasks.sortSearchResults(keyword);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Masunori"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are your tasks in order of relevance:\\n\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.getSize(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Masunori"},"content":"            message.append(i + 1)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Masunori"},"content":"                    .append(\u0027.\u0027)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Masunori"},"content":"                    .append(filteredTaskList.getTask(i).toString())","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Masunori"},"content":"                    .append(\u0027\\n\u0027);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Masunori"},"content":"        return message.toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Masunori"},"content":"     * Parses the user\u0027s command line and return the corresponding executable command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Masunori"},"content":"     * @param command The user\u0027s command line","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Masunori"},"content":"     * @return an executable Command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Masunori"},"content":"    public Command parse(String command) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Masunori"},"content":"        String[] args \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Masunori"},"content":"        String keyword \u003d args[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Masunori"},"content":"        if (this.commandMap.containsKey(keyword)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Masunori"},"content":"            return this.commandMap.get(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Masunori"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Masunori"},"content":"            return this.commandMap.get(\"UNKNOWN_COMMAND\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":455}},{"path":"src/main/java/mirai/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":" * The Storage class encapsulates a storage of user\u0027s list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    private final File file;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"     * Initialises a task storage. Note that if the file does not exist, this will silently create the file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"     *     (and the folders).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"     * @param filePath The path to the file to store the tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"     * Loads the tasks from the file whose path is specified during initialization.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"     * @return a list containing the tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"     * @throws IOException if an I/O error occurred during the file creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        this.file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        this.file.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"        try (Scanner scanner \u003d new Scanner(this.file)) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"                String[] taskContent \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"                Task task \u003d switch (taskContent[0]) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"                case \"T\" -\u003e new ToDo(taskContent[2]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"                case \"D\" -\u003e new Deadline(taskContent[2],","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"                        LocalDateTime.parse(taskContent[3]));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"                case \"E\" -\u003e new Event(taskContent[2],","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"                        LocalDateTime.parse(taskContent[3]),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"                        LocalDateTime.parse(taskContent[4]));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"                default -\u003e null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"                };","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"                    continue;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"                if (taskContent[1].equals(\"1\")) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"                taskList.add(task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"        return taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"     * Logs a new task to the file whose path is specified during initialization.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"     * @param task The task to be logged","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"    public void logNewTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"        try (FileWriter writer \u003d new FileWriter(this.file, true)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"            writer.write(task.toNoteForm() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"     * Overwrites the storage file using a new list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"     * @param tasks the list of tasks to be used for overwriting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"    public void relogAllTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"        // delete all content from the old file to ensure a clear file before overwriting","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"        try (FileWriter contentDeleter \u003d new FileWriter(this.file)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"            contentDeleter.write(\"\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"        // add content from the new list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"        try (FileWriter writer \u003d new FileWriter(this.file, true)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"                writer.write(task.toNoteForm() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":105}},{"path":"src/main/java/mirai/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":" * The TaskList class encapsulates a list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     * Initialises a new list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"     * Initialises a list of tasks from another list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"     * @param taskList the list of tasks to reference from","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"     * @param task The task to be added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        assert(task !\u003d null);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"        this.taskList.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"     * Removes a task from the list according to the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"     * @param taskIndex The index of the task to be removed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"        assert(0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c this.getSize());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"        this.taskList.remove(taskIndex);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"     * Marks a task from the task list as done, according to the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"     * @param taskIndex The index of the task to be marked as done","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"        assert(0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c this.getSize());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"        this.taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"     * Marks a task from the task list as undone, according to the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"     * @param taskIndex The index of the task to be marked as undone","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        assert(0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c this.getSize());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"        this.taskList.get(taskIndex).markAsUndone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"     * Returns the number of tasks currently stored in this task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"     * @return the number of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"     * Returns the list of tasks using Java\u0027s List.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"        return new ArrayList\u003c\u003e(this.taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"     * Returns the task at the specified index. Tasks are numbered based on the order of insertion.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"     * @param index The index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"     * @return The task at the index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"        assert(0 \u003c\u003d index \u0026\u0026 index \u003c this.getSize());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"     * Returns a TaskList only including tasks that contain a certain string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"     * @param keyword the string to check for containment","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"     * @return a TaskList of tasks with the string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"    public TaskList filterBasedOnKeyword(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"                results.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Masunori"},"content":"        return results;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Masunori"},"content":"     * Returns a TaskList where search results are ordered based on its closeness to a given keyword.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Masunori"},"content":"     * @param keyword The user\u0027s keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Masunori"},"content":"     * @return The sorted TaskList","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Masunori"},"content":"    public TaskList sortSearchResults(String keyword) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Masunori"},"content":"        TaskList sortedTasks \u003d new TaskList(this.taskList);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Masunori"},"content":"        sortedTasks.taskList.sort(Comparator.comparingDouble(t -\u003e t.computeCloseness(keyword)));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Masunori"},"content":"        return sortedTasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":121}},{"path":"src/main/java/mirai/utility/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":" * A utility class to implement utility methods that other classes may use.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"public class Utility {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"     * Calculates recursively the edit distance between the substrings [0, i1) of word 1 and [0, i2) of word 2.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"     * This is a helper method to the dynamic programming approach of the getEditDistance method.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"     * @param word1 The first word","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"     * @param word2 The second word","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     * @param i1 The end index of the [0, i1) substring of word 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * @param i2 The end index of the [0, i2) substring of word 2","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param dp The 2-dimensional array for dynamic programming","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     * @return The edit distance for the substrings [0, i1) of word and [0, i2) of word2","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    private static int getEditDistanceHelper(String word1, String word2, int i1, int i2, int[][] dp) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"        if (i1 \u003c 0 || i2 \u003c 0) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"            return word1.length() + word2.length();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"        if (dp[i1][i2] !\u003d -1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"            return dp[i1][i2];","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"        if (word1.charAt(i1) \u003d\u003d word2.charAt(i2)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"            dp[i1][i2] \u003d getEditDistanceHelper(word1, word2, i1 - 1, i2 - 1, dp);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"            return dp[i1][i2];","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"        int distance \u003d Math.min(getEditDistanceHelper(word1, word2, i1 - 1, i2, dp) + 1,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"                Math.min(getEditDistanceHelper(word1, word2, i1, i2 - 1, dp) + 1,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"                        getEditDistanceHelper(word1, word2, i1 - 1, i2 - 1, dp) + 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"                )","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        dp[i1][i2] \u003d distance;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        return distance;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"     * Returns the edit distance between two words.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"     * The \u003cb\u003eedit distance\u003c/b\u003e between two words is the smallest number of","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"     * operations on the first word to get to the second word. The operations include:\u003cbr\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"     *     \u003cli\u003eReplace a letter of the original word with another letter.\u003c/li\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"     *     \u003cli\u003eRemove a letter from the original word.\u003c/li\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"     *     \u003cli\u003eAdd a letter to the original word.\u003c/li\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"     * @param word1 The first word","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"     * @param word2 The second word","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"     * @return The edit distance between two words","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"    public static double getEditDistance(String word1, String word2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        int l1 \u003d word1.length();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"        int l2 \u003d word2.length();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"        word1 \u003d \" \" + word1;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        word2 \u003d \" \" + word2;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"        int[][] dp \u003d new int[l1 + 1][l2 + 1];","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"        for (int r \u003d 0; r \u003c\u003d l1; r++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"            for (int c \u003d 0; c \u003c\u003d l2; c++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"                dp[r][c] \u003d r \u003d\u003d 0","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"                        ? c","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"                        : c \u003d\u003d 0","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"                        ? r","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"                        : -1;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"        return getEditDistanceHelper(word1, word2, l1, l2, dp);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Masunori":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"            fx:controller\u003d\"mirai.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Masunori":43}},{"path":"src/main/resources/view/MiraiDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Masunori":22}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Masunori":22}},{"path":"src/test/java/mirai/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    public void toDoToString_readBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"        Task toDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[T][ ] read book\", toDo.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    public void toDoToString_readBookMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"        Task toDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"        toDo.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[T][X] read book\", toDo.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"    public void toDoToNoteForm_readBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"        Task toDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"T | 0 | read book\", toDo.toNoteForm());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    public void deadlineToString_returnBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        Task deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2025-01-31T15:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 31 2025, 1559)\", deadline.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public void deadlineToString_returnBookMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        Task deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2025-01-31T15:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[D][X] return book (by: Jan 31 2025, 1559)\", deadline.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"    public void deadlineToNoteForm_returnBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"        Task deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2025-01-31T15:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"D | 0 | return book | 2025-01-31T15:59\", deadline.toNoteForm());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"    public void eventToString_meetingUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        Task event \u003d new Event(\"meeting\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T16:00\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T18:00\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[E][ ] meeting (from: Jan 31 2025, 1600, to: Jan 31 2025, 1800)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"    public void eventToString_meetingMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        Task event \u003d new Event(\"meeting\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T16:00\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T18:00\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"        event.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[E][X] meeting (from: Jan 31 2025, 1600, to: Jan 31 2025, 1800)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"    public void eventToNoteForm_returnBookMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"        Task event \u003d new Event(\"meeting\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T16:00\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T18:00\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"        event.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"E | 1 | meeting | 2025-01-31T16:00 | 2025-01-31T18:00\", event.toNoteForm());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":73}},{"path":"src/test/java/mirai/utility/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.MethodOrderer;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.TestMethodOrder;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"@TestMethodOrder(MethodOrderer.OrderAnnotation.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    private static int count \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     * The DummyTask class encapsulates a dummy task used for testing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    private static class DummyTask extends Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"         * Initialises a dummy task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"         */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"        public DummyTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"            super(\"Dummy task \" + count);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"            count++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"        @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"            return \"[DUMMY]\" + super.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"        public String toNoteForm() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"            return \"[DUMMY]\" + this.description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"    @BeforeAll","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    public static void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"    @Order(1)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    public void addTask_addThreeTasks_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"        taskList.addTask(new DummyTask());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        taskList.addTask(new DummyTask());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"        taskList.addTask(new DummyTask());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 2\", taskList.getTask(1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 3\", taskList.getTask(2).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"    @Order(2)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"    public void markTask_markTask1_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][X] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"    @Order(3)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"    public void unmarkTask_unmarkTask1_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"    @Order(4)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"    public void deleteTask_deleteTask3_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 2\", taskList.getTask(1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":82}}]
