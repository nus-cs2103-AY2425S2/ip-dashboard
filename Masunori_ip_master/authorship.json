[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"    mainClass.set(\"mirai.ui.Mirai\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    archiveBaseName \u003d \"mirai\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"    archiveFileName \u003d \u0027mirai.jar\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"java {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"checkstyle {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":13,"-":39}},{"path":"src/main/java/mirai/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     * Initialises a deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * @param description The description of the task with deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param deadline The deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"                super.toString(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY, HHmm\")));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    public String toNoteForm() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"                this.description,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"                this.deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":36}},{"path":"src/main/java/mirai/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * Initialises an event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param description The description of the event-type task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     * @param startTime The start time of the event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     * @param endTime The end time of the event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[E]%s (from: %s, to: %s)\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"                super.toString(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY, HHmm\")),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY, HHmm\")));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    public String toNoteForm() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"                this.description,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"                this.startTime,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"                this.endTime);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":42}},{"path":"src/main/java/mirai/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task that can be done or not done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"     * Initialises a task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"     * @param description The task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"     * @return \u003ccode\u003eX\u003c/code\u003e if done, blank if undone","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"     * Marks the task as undone","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"     * Checks if the task description contains a certain string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"     * @param keyword The string to check for containment","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if the task description contains the keyword, \u003ccode\u003efalse\u003c/code\u003e otherwise","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"     * Converts the task into a note form to store in a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"     * @return A string representation of the task, store-able in a file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"    public abstract String toNoteForm();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":60}},{"path":"src/main/java/mirai/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":" * Encapsulates a task without any date/time attached.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"     * Initialises a task to be done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"     * @param description The to-do task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    public String toNoteForm() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        return String.format(\"T | %d | %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"                this.description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Masunori":26}},{"path":"src/main/java/mirai/ui/Mirai.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import mirai.utility.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import mirai.utility.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":" * The Mirai class encapsulates a chatbot named Mirai.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"public class Mirai {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     * Initialises the chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"     * @param filePath The path of the file to store the list of tasks. If the file does not exist, silently create one.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    public Mirai(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"            this.ui.printLoadingError();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"     * Initiates a conversation with the chatbot.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"    public void startConversation() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        this.ui.printGreeting();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        boolean isContinuing \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"        while (isContinuing) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"            String commandLine \u003d ui.readCommand();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"            Command command \u003d this.parser.parse(commandLine);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"            isContinuing \u003d command.execute(commandLine.split(\"\\\\s+\"), this.tasks, this.ui, this.storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        Mirai mirai \u003d new Mirai(\"./data/mirai.txt\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"        mirai.startConversation();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Masunori":53}},{"path":"src/main/java/mirai/utility/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":" * The Command interface encapsulates a user command.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * \u003cstrong\u003eNote:\u003c/strong\u003e This is a functional interface whose functional method is","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" * \u003ccode\u003eexecute(String[], TaskList, Ui, Storage)\u003c/code\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"@FunctionalInterface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"public interface Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"     * Executes the command. The execution can interact with the list of mirai.tasks, the UI, and the storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of mirai.tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal, where \u003ccode\u003etrue\u003c/code\u003e means to continue the conversation,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"     *     and \u003ccode\u003efalse\u003c/code\u003e means to end the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    public boolean execute(String[] args, TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":21}},{"path":"src/main/java/mirai/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import java.util.Locale;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":" * The Parser class encapsulates a parser to interpret the user\u0027s command lines.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    /** A map to map user commands to specific actions of the chatbot */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    private final Map\u003cString, Command\u003e commandMap;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"     * Initialises a parser.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    public Parser() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        this.commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"bye\", this::endConversation);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"deadline\", this::addDeadline);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"delete\", this::deleteTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"event\", this::addEvent);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"find\", this::findTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"help\", this::listAllSupportedCommands);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"list\", this::listAllTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"mark\", this::markTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"todo\", this::addTodo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"unmark\", this::unmarkTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        commandMap.put(\"UNKNOWN_COMMAND\", this::handleUnknownCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"     * Ends the conversation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to end the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"    private boolean endConversation(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"        ui.printGoodbye();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"        return false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    private boolean addTodo(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"            ui.printError(\"Mirai does not understand a to-do task with no content...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"                            \"You can tell Mirai your to-do task by the syntax \u0027todo [task]\u0027!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"            ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"            tasks.addTask(toDo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"            storage.logNewTask(toDo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"            ui.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"                    \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"                    \"  \" + toDo,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"                    ui.getNumberOfTasksString(tasks.getSize())","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"     * Parses a user\u0027s date-time string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"     * @param dateTime The user\u0027s date-time string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"     * @return a LocalDateTime representation of the user\u0027s date-time","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"    public static LocalDateTime parseUserDateTime(String dateTime) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) // 31/01/2025 1559","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) // 31/01/2025 15:59","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\")) // 31/01/25 1559","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\")) // 31/01/25 15:59","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) // 2025-01-31 1559","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) // 2025-01-31 15:59","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Masunori"},"content":"     * Adds a Deadline task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Masunori"},"content":"    private boolean addDeadline(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Masunori"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Masunori"},"content":"                    \"Mirai does not understand a deadline with no content...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Masunori"},"content":"                    \"You can tell Mirai your deadline by the syntax \u0027deadline [task] /by [deadline]\u0027!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Masunori"},"content":"            ui.printSupportedDateTimeFormats();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Masunori"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Masunori"},"content":"            int byIndex \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Masunori"},"content":"            while (byIndex \u003c args.length \u0026\u0026 !args[byIndex].equals(\"/by\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Masunori"},"content":"                byIndex++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Masunori"},"content":"            if (byIndex \u003d\u003d args.length) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Masunori"},"content":"                ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Masunori"},"content":"                        \"You forgot to add your deadline...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Masunori"},"content":"                        \"You can tell Mirai your deadline by the syntax \u0027deadline [task] /by [deadline]\u0027!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Masunori"},"content":"                ui.printSupportedDateTimeFormats();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Masunori"},"content":"                return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Masunori"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, byIndex));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Masunori"},"content":"            String deadline \u003d String.join(\" \", Arrays.copyOfRange(args, byIndex + 1, args.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Masunori"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Masunori"},"content":"                LocalDateTime deadlineTime \u003d Parser.parseUserDateTime(deadline);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Masunori"},"content":"                Deadline task \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Masunori"},"content":"                tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Masunori"},"content":"                storage.logNewTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Masunori"},"content":"                ui.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Masunori"},"content":"                        \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Masunori"},"content":"                        \"  \" + task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Masunori"},"content":"                        ui.getNumberOfTasksString(tasks.getSize())","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Masunori"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Masunori"},"content":"                ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Masunori"},"content":"                        \"Mirai does not understand your deadline...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Masunori"},"content":"                        \"Please specify your deadline in one of the following formats:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YYYY HHmm, such as 31/01/2025 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YYYY HH:mm, such as 31/01/2025 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YY HHmm, such as 31/01/25 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YY HH:mm, such as 31/01/25 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e YYYY-MM-DD HHmm, such as 2025-01-31 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e YYYY-MM-DD HH:mm, such as 2025-01-31 15:59\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Masunori"},"content":"     * Adds an Event task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Masunori"},"content":"    private boolean addEvent(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Masunori"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Masunori"},"content":"                    \"Mirai does not understand an event with no content...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Masunori"},"content":"                    \"You can tell Mirai your event by the syntax \u0027event [task] /from [start time] /to [end time]\u0027!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Masunori"},"content":"            ui.printSupportedDateTimeFormats();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Masunori"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Masunori"},"content":"            int fromIndex \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Masunori"},"content":"            while (fromIndex \u003c args.length \u0026\u0026 !args[fromIndex].equals(\"/from\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Masunori"},"content":"                fromIndex++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Masunori"},"content":"            if (fromIndex \u003d\u003d args.length) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Masunori"},"content":"                ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Masunori"},"content":"                        \"You forgot to specify your start time...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Masunori"},"content":"                        \"You can tell Mirai your event by the syntax \u0027event [task] /from [start time] /to [end time]\u0027!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Masunori"},"content":"                ui.printSupportedDateTimeFormats();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Masunori"},"content":"                return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Masunori"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, fromIndex));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Masunori"},"content":"            int toIndex \u003d fromIndex + 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Masunori"},"content":"            while (toIndex \u003c args.length \u0026\u0026 !args[toIndex].equals(\"/to\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Masunori"},"content":"                toIndex++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Masunori"},"content":"            if (toIndex \u003d\u003d args.length) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Masunori"},"content":"                ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Masunori"},"content":"                        \"You forgot to specify your end time...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Masunori"},"content":"                        \"You can tell Mirai your event by the syntax \u0027event [task] /from [start time] /to [end time]\u0027!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Masunori"},"content":"                ui.printSupportedDateTimeFormats();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Masunori"},"content":"                return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Masunori"},"content":"            String startTimeString \u003d String.join(\" \", Arrays.copyOfRange(args, fromIndex + 1, toIndex));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Masunori"},"content":"            String endTimeString \u003d String.join(\" \", Arrays.copyOfRange(args, toIndex + 1, args.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Masunori"},"content":"            LocalDateTime startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Masunori"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Masunori"},"content":"                startTime \u003d Parser.parseUserDateTime(startTimeString);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Masunori"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Masunori"},"content":"                ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Masunori"},"content":"                        \"Mirai does not understand your start time...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Masunori"},"content":"                        \"Please specify your start time in one of the following formats:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YYYY HHmm, such as 31/01/2025 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YYYY HH:mm, such as 31/01/2025 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YY HHmm, such as 31/01/25 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YY HH:mm, such as 31/01/25 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e YYYY-MM-DD HHmm, such as 2025-01-31 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e YYYY-MM-DD HH:mm, such as 2025-01-31 15:59\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Masunori"},"content":"                return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Masunori"},"content":"            LocalDateTime endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Masunori"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Masunori"},"content":"                endTime \u003d Parser.parseUserDateTime(endTimeString);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Masunori"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Masunori"},"content":"                ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Masunori"},"content":"                        \"Mirai does not understand your end time...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Masunori"},"content":"                        \"Please specify your end time in one of the following formats:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YYYY HHmm, such as 31/01/2025 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YYYY HH:mm, such as 31/01/2025 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YY HHmm, such as 31/01/25 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e DD/MM/YY HH:mm, such as 31/01/25 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e YYYY-MM-DD HHmm, such as 2025-01-31 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Masunori"},"content":"                        \"\u003e\u003e\u003e YYYY-MM-DD HH:mm, such as 2025-01-31 15:59\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Masunori"},"content":"                );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Masunori"},"content":"                return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Masunori"},"content":"            Event task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Masunori"},"content":"            tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Masunori"},"content":"            storage.logNewTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Masunori"},"content":"            ui.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Masunori"},"content":"                    \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Masunori"},"content":"                    \"  \" + task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Masunori"},"content":"                    ui.getNumberOfTasksString(tasks.getSize())","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Masunori"},"content":"     * Lists all tasks to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Masunori"},"content":"    private boolean listAllTasks(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Masunori"},"content":"        String[] taskStrings \u003d new String[tasks.getSize() + 1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Masunori"},"content":"        taskStrings[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Masunori"},"content":"            taskStrings[i + 1] \u003d (i + 1) + \".\" + tasks.getTask(i).toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Masunori"},"content":"        ui.printResponse(taskStrings);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Masunori"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Masunori"},"content":"    private boolean markTask(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Masunori"},"content":"        int taskIndex \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003c 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Masunori"},"content":"                    \"It looks like you have keyed in a non-positive index...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Masunori"},"content":"                    \"Mirai stores your tasks with positive indexes. Please specify a positive index!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Masunori"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Masunori"},"content":"                    \"It looks like you have keyed in a too large index...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Masunori"},"content":"                    \"You are only having \" + tasks.getSize()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Masunori"},"content":"                            + \" tasks in your list. Please specify an index smaller than this!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Masunori"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Masunori"},"content":"        tasks.markTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Masunori"},"content":"        storage.relogAllTasks(tasks.getTaskList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Masunori"},"content":"        ui.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Masunori"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Masunori"},"content":"                \"  \" + tasks.getTask(taskIndex - 1).toString()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Masunori"},"content":"     * Marks a task as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Masunori"},"content":"    private boolean unmarkTask(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Masunori"},"content":"        int taskIndex \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003c 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Masunori"},"content":"                    \"It looks like you have keyed in a non-positive index...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Masunori"},"content":"                    \"Mirai stores your tasks with positive indexes. Please specify a positive index!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Masunori"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Masunori"},"content":"                    \"It looks like you have keyed in a too large index...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Masunori"},"content":"                    \"You are only having \" + tasks.getSize()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Masunori"},"content":"                            + \" tasks in your list. Please specify an index smaller than this!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Masunori"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Masunori"},"content":"        tasks.unmarkTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Masunori"},"content":"        storage.relogAllTasks(tasks.getTaskList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Masunori"},"content":"        ui.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Masunori"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Masunori"},"content":"                \"  \" + tasks.getTask(taskIndex - 1).toString()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Masunori"},"content":"     * Informs the user that the command is undefined.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Masunori"},"content":"    private boolean handleUnknownCommand(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Masunori"},"content":"        ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Masunori"},"content":"                \"Sorry, Mirai does not understand what you mean...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Masunori"},"content":"                \"Please type \u0027help\u0027 to know what commands Mirai can understand!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Masunori"},"content":"     * Lists all commands supported by the chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Masunori"},"content":"    private boolean listAllSupportedCommands(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Masunori"},"content":"        String[] commands \u003d new String[this.commandMap.size() + 1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Masunori"},"content":"        commands[0] \u003d \"Mirai currently supports the following commands:\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Masunori"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Masunori"},"content":"        for (String keyword : this.commandMap.keySet()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Masunori"},"content":"            commands[index++] \u003d keyword;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Masunori"},"content":"        ui.printResponse(commands);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Masunori"},"content":"     * Removes a task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Masunori"},"content":"    private boolean deleteTask(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Masunori"},"content":"        int taskIndex \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003c 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Masunori"},"content":"                    \"It looks like you have keyed in a non-positive index...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Masunori"},"content":"                    \"Mirai stores your tasks with positive indexes. Please specify a positive index!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Masunori"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Masunori"},"content":"        if (taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Masunori"},"content":"            ui.printError(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Masunori"},"content":"                    \"It looks like you have keyed in a too large index...\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Masunori"},"content":"                    \"You are only having \" + tasks.getSize()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Masunori"},"content":"                            + \" tasks in your list. Please specify an index smaller than this!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Masunori"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Masunori"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Masunori"},"content":"        Task removedTask \u003d tasks.getTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Masunori"},"content":"        tasks.deleteTask(taskIndex - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Masunori"},"content":"        storage.relogAllTasks(tasks.getTaskList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Masunori"},"content":"        ui.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Masunori"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Masunori"},"content":"                \"  \" + removedTask.toString(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Masunori"},"content":"                ui.getNumberOfTasksString(tasks.getSize())","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Masunori"},"content":"     * Displays to the user all tasks matching a given keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Masunori"},"content":"     * @param args The user command, which is already split (by space) into an array","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Masunori"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Masunori"},"content":"     * @param ui The user interface","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Masunori"},"content":"     * @param storage The task storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Masunori"},"content":"     * @return a boolean signal to continue the conversation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Masunori"},"content":"    public boolean findTasks(String[] args, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Masunori"},"content":"        String keyword \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Masunori"},"content":"        TaskList filteredTaskList \u003d tasks.filterBasedOnKeyword(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Masunori"},"content":"        String[] taskStrings \u003d new String[filteredTaskList.getSize() + 1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Masunori"},"content":"        taskStrings[0] \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.getSize(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Masunori"},"content":"            taskStrings[i + 1] \u003d (i + 1) + \".\" + filteredTaskList.getTask(i).toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Masunori"},"content":"        ui.printResponse(taskStrings);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Masunori"},"content":"        return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Masunori"},"content":"     * Parses the user\u0027s command line and return the corresponding executable command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Masunori"},"content":"     * @param command The user\u0027s command line","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Masunori"},"content":"     * @return an executable Command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Masunori"},"content":"    public Command parse(String command) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Masunori"},"content":"        String[] args \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Masunori"},"content":"        String keyword \u003d args[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Masunori"},"content":"        if (this.commandMap.containsKey(keyword)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Masunori"},"content":"            return this.commandMap.get(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Masunori"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Masunori"},"content":"            return this.commandMap.get(\"UNKNOWN_COMMAND\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":481}},{"path":"src/main/java/mirai/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":" * The Storage class encapsulates a storage of user\u0027s list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"    private final File file;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"     * Initialises a task storage. Note that if the file does not exist, this will silently create the file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"     *     (and the folders).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"     * @param filePath The path to the file to store the tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"     * Loads the tasks from the file whose path is specified during initialization.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"     * @return a list containing the tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"     * @throws IOException if an I/O error occurred during the file creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        this.file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        this.file.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"            String[] taskContent \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"            switch (taskContent[0]) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"            case \"T\" -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"                Task toDoTask \u003d new ToDo(taskContent[2]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"                if (taskContent[1].equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"                    toDoTask.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"                taskList.add(toDoTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"                Task deadlineTask \u003d new Deadline(taskContent[2],","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"                        LocalDateTime.parse(\"2025-01-31T23:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"                if (taskContent[1].equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"                    deadlineTask.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"                taskList.add(deadlineTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"                Task eventTask \u003d new Event(taskContent[2],","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"                        LocalDateTime.parse(\"2025-01-31T23:59\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"                        LocalDateTime.parse(\"2025-01-31T23:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"                if (taskContent[1].equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"                    eventTask.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"                taskList.add(eventTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"            default -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"                // do nothing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"        scanner.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"        return taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"     * Logs a new task to the file whose path is specified during initialization.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"     * @param task The task to be logged","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"    public void logNewTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"        try (FileWriter writer \u003d new FileWriter(this.file, true)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"            writer.write(task.toNoteForm() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"     * Overwrites the storage file using a new list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"     * @param tasks the list of tasks to be used for overwriting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"    public void relogAllTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"        // delete all content from the old file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"        try (FileWriter contentDeleter \u003d new FileWriter(this.file)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"            contentDeleter.write(\"\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Masunori"},"content":"        // add content from the new list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Masunori"},"content":"        try (FileWriter writer \u003d new FileWriter(this.file, true)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Masunori"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Masunori"},"content":"                writer.write(task.toNoteForm() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Masunori"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Masunori"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":115}},{"path":"src/main/java/mirai/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":" * The TaskList class encapsulates a list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"     * Initialises a new list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"     * Initialises a list of tasks from another list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"     * @param taskList the list of tasks to reference from","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"     * @param task The task to be added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"        this.taskList.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"     * Removes a task from the list according to the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"     * @param taskIndex The index of the task to be removed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"        this.taskList.remove(taskIndex);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"     * Marks a task from the task list as done, according to the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"     * @param taskIndex The index of the task to be marked as done","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        this.taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"     * Marks a task from the task list as undone, according to the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"     * @param taskIndex The index of the task to be marked as undone","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        this.taskList.get(taskIndex).markAsUndone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"     * Returns the number of tasks currently stored in this task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"     * @return the number of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"     * Returns the list of tasks using Java\u0027s List.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"        return new ArrayList\u003c\u003e(this.taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"     * Returns the task at the specified index. Tasks are numbered based on the order of insertion.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"     * @param index The index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"     * @return The task at the index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"     * Returns a TaskList only including tasks that contain a certain string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"     * @param keyword the string to check for containment","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"     * @return a TaskList of tasks with the string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"    public TaskList filterBasedOnKeyword(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"                results.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"        return results;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":102}},{"path":"src/main/java/mirai/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":" * The Ui class encapsulates the user interface. The user interacts with the chatbot only at this point.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"public class Ui {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    /** The message the user will see upon initializing a conversation */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"    private final String greeting \u003d \"     Hello! I\u0027m Mirai, your beautiful and intelligent personal assistant!\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"            + \"     Now then, what can I do for you?\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    /** The message the user will see upon ending the conversation */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    private final String goodbye \u003d \"     Bye. Mirai hopes to see you again soon!\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     * Initialises a user interface.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    public Ui() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"     * Displays a line to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"    public void printLine() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"     * Displays each message on a new line to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"     * @param messages The messages","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public void printResponse(String... messages) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"            System.out.println(\"     \" + message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"     * Displays the greeting message to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"    public void printGreeting() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"    public void printGoodbye() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"        this.scanner.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"     * Returns a string to tell the user the number of mirai.tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"     * @param numberOfTasks The number of mirai.tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"     * @return a string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"    public String getNumberOfTasksString(int numberOfTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"        return String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"                numberOfTasks,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"                numberOfTasks \u003c\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"     * Read the next line from the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"     * @return The command the user enters","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Masunori"},"content":"     * Shows the loading error message to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Masunori"},"content":"    public void printLoadingError() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Masunori"},"content":"        System.out.println(\"     OOPS!!! Mirai cannot load data from your storage...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Masunori"},"content":"        System.out.println(\"     Mirai will create an empty task list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Masunori"},"content":"     * Displays the error message to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Masunori"},"content":"    public void printError(String... message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Masunori"},"content":"        System.out.println(\"     OOPS!!! \" + message[0]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Masunori"},"content":"        for (int i \u003d 1; i \u003c message.length; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Masunori"},"content":"            System.out.println(\"     \" + message[i]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Masunori"},"content":"        this.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Masunori"},"content":"     * Displays to the user the list of supported date-time formats for date-related commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Masunori"},"content":"    public void printSupportedDateTimeFormats() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Masunori"},"content":"        this.printResponse(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Masunori"},"content":"                \"Mirai supports the following date-time formats:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Masunori"},"content":"                \"\u003e\u003e\u003e DD/MM/YYYY HHmm, such as 31/01/2025 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Masunori"},"content":"                \"\u003e\u003e\u003e DD/MM/YYYY HH:mm, such as 31/01/2025 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Masunori"},"content":"                \"\u003e\u003e\u003e DD/MM/YY HHmm, such as 31/01/25 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Masunori"},"content":"                \"\u003e\u003e\u003e DD/MM/YY HH:mm, such as 31/01/25 15:59\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Masunori"},"content":"                \"\u003e\u003e\u003e YYYY-MM-DD HHmm, such as 2025-01-31 1559\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Masunori"},"content":"                \"\u003e\u003e\u003e YYYY-MM-DD HH:mm, such as 2025-01-31 15:59\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Masunori"},"content":"        );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":118}},{"path":"src/test/java/mirai/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"    public void toDoToString_readBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"        Task toDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[T][ ] read book\", toDo.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"    public void toDoToString_readBookMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"        Task toDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"        toDo.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[T][X] read book\", toDo.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"    public void toDoToNoteForm_readBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"        Task toDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"T | 0 | read book\", toDo.toNoteForm());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"    public void deadlineToString_returnBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        Task deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2025-01-31T15:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 31 2025, 1559)\", deadline.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"    public void deadlineToString_returnBookMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"        Task deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2025-01-31T15:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[D][X] return book (by: Jan 31 2025, 1559)\", deadline.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"    public void deadlineToNoteForm_returnBookUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"        Task deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2025-01-31T15:59\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"D | 0 | return book | 2025-01-31T15:59\", deadline.toNoteForm());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"    public void eventToString_meetingUnmarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        Task event \u003d new Event(\"meeting\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T16:00\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T18:00\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[E][ ] meeting (from: Jan 31 2025, 1600, to: Jan 31 2025, 1800)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"    public void eventToString_meetingMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"        Task event \u003d new Event(\"meeting\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T16:00\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T18:00\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"        event.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[E][X] meeting (from: Jan 31 2025, 1600, to: Jan 31 2025, 1800)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"    public void eventToNoteForm_returnBookMarked_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"        Task event \u003d new Event(\"meeting\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T16:00\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"                LocalDateTime.parse(\"2025-01-31T18:00\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"        event.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"E | 1 | meeting | 2025-01-31T16:00 | 2025-01-31T18:00\", event.toNoteForm());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":73}},{"path":"src/test/java/mirai/utility/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masunori"},"content":"package mirai.utility;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Masunori"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.MethodOrderer;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Masunori"},"content":"import org.junit.jupiter.api.TestMethodOrder;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Masunori"},"content":"import mirai.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Masunori"},"content":"@TestMethodOrder(MethodOrderer.OrderAnnotation.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Masunori"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Masunori"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Masunori"},"content":"    private static int count \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Masunori"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Masunori"},"content":"     * The DummyTask class encapsulates a dummy task used for testing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Masunori"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Masunori"},"content":"    private static class DummyTask extends Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Masunori"},"content":"        /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Masunori"},"content":"         * Initialises a dummy task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Masunori"},"content":"         */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Masunori"},"content":"        public DummyTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Masunori"},"content":"            super(\"Dummy task \" + count);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Masunori"},"content":"            count++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Masunori"},"content":"        @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Masunori"},"content":"        public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Masunori"},"content":"            return \"[DUMMY]\" + super.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Masunori"},"content":"        @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Masunori"},"content":"        public String toNoteForm() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Masunori"},"content":"            return \"[DUMMY]\" + this.description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Masunori"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Masunori"},"content":"    @BeforeAll","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Masunori"},"content":"    public static void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Masunori"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Masunori"},"content":"    @Order(1)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Masunori"},"content":"    public void addTask_addThreeTasks_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Masunori"},"content":"        taskList.addTask(new DummyTask());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Masunori"},"content":"        taskList.addTask(new DummyTask());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Masunori"},"content":"        taskList.addTask(new DummyTask());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Masunori"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 2\", taskList.getTask(1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 3\", taskList.getTask(2).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Masunori"},"content":"    @Order(2)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Masunori"},"content":"    public void markTask_markTask1_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Masunori"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Masunori"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][X] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Masunori"},"content":"    @Order(3)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Masunori"},"content":"    public void unmarkTask_unmarkTask1_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Masunori"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Masunori"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Masunori"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Masunori"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Masunori"},"content":"    @Order(4)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Masunori"},"content":"    public void deleteTask_deleteTask3_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Masunori"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Masunori"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Masunori"},"content":"        assertEquals(\"[DUMMY][ ] Dummy task 2\", taskList.getTask(1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Masunori"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Masunori"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Masunori":82}}]
