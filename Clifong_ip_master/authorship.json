[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"    mainClass.set(\"Acheron.Acheron\")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"    archiveBaseName \u003d \"Acheron\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Clifong":2,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"T|O|fight","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"T|O|fight nikador","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"D|O|fight or flight|2002-12-12","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"E|O|war on earth|1999-12-02|2000-12-02","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"E|O|fight penacony|1999-12-02|2000-12-02","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Clifong":5}},{"path":"src/main/java/Acheron/Acheron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"import Acheron.Storage.StorageManager;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.UI.UI;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"import Acheron.Utility.CommandParser;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":" * Represents the chatbot","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Acheron {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    private UI ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"     * Constructor of the class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"     * @param storagePath Indicates where the file is being saved to","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"    public Acheron(String storagePath) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"            ui \u003d new UI();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"            storageManager \u003d new StorageManager(storagePath, taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"            commandParser \u003d new CommandParser(storageManager, taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"            System.out.println(e);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"     * A method that is alwways run when the class is run","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"     * @param args args supplied to the class if any","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"        new Acheron(\"./data/duke.txt\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"Clifong":34,"-":4}},{"path":"src/main/java/Acheron/Exceptions/BadDateExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown only if the input date is not of the format YYYY-MM-DD","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"public class BadDateExceptions extends Exceptions {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"     * Override the toString() method so a custom error message is printed out if needed","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"     * @return Custom string message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"        return \"Date is wrongly formatted! Make sure it follows the YYYY-MM-DD format\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":16}},{"path":"src/main/java/Acheron/Exceptions/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown if the saved file is corruped","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"public class CorruptedFileException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"     * Override the toString() method so a custom error message is printed out if needed","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"     * @return Custom string message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"        return \"Corrupted file. Cannot read data\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":16}},{"path":"src/main/java/Acheron/Exceptions/DeadlineExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown if an input is wrongly formatted or incomplete","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" * when trying to create a deadline task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"public class DeadlineExceptions extends  Exceptions {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"     * Override the toString() method so a custom error message is printed out if neede","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     * @return Custom string message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"        return \"Check your deadline input.\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"                \"Make sure the text follows the format\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"                \"deadline [Some text] /by [sometext]\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"                \"(Note that the [ ] is not needed! E.g deadline guide souls /by Tuesday\";","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":20}},{"path":"src/main/java/Acheron/Exceptions/EventExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown if an input is wrongly formatted or incomplete","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" * when trying to create a deadline task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"public class EventExceptions extends Exceptions {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"     * Override the toString() method so a custom error message is printed out if neede","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     * @return Custom string message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"        return \"Check your event input.\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"                \"Make sure the text follows the format\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"                \"event [Some text] /from [Some text] /to [Some text]\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"                \"(Note that the [ ] is not needed! E.g event investigate /from Monday /to Friday\";","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":20}},{"path":"src/main/java/Acheron/Exceptions/Exceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown if an input is wrongly formatted or incomplete","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" * when trying to create a deadline task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"public class Exceptions extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"        return \"Something went wrong. Perhaps your command is wrong?\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":13}},{"path":"src/main/java/Acheron/Exceptions/TaskExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown if attempting to create a Task object","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" * with wrongly formatted inputs. This is usually only used for testing","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"public class TaskExceptions extends Exceptions{","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"     * Override the toString() method so a custom error message is printed out if neede","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     * @return Custom string message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"        return \"Tasks cannot have null name!\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Clifong":17}},{"path":"src/main/java/Acheron/Exceptions/ToDoExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * This exception is thrown if an input is wrongly formatted or incomplete","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" * when trying to create a to do task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"public class ToDoExceptions extends Exceptions {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"     * Override the toString() method so a custom error message is printed out if neede","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     * @return Custom string message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"        return \"Check your to do input.\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"                \"Make sure the text follows the format\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"                \"todo [Some text]\\n\" +","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"                \"(Note that the [ ] is not needed! E.g todo eat peach\";","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":20}},{"path":"src/main/java/Acheron/Storage/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.TaskWriter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"import java.io.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":" * The storage manager class is responsible for handling anything pertaining to","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":" * changing or reading from the saved file. It also created the required folder and file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"public class StorageManager {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"    private String storagePath;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"     * Constructor for the storage manager","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"     * @param storagePath The path where the saved file is saved to","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"     * @param taskList The task list object which will be populated with task from the saved file if any","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"     * @throws Exception Trhow an exception related to wrongly provided path or other exceptions","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"    public StorageManager(String storagePath, TaskList taskList) throws Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"        if (Files.notExists(Path.of(storagePath).getParent())) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"            new File(String.valueOf(Path.of(storagePath).getParent())).mkdir();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"        if (Files.notExists(Path.of(storagePath))) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"                Path file \u003d Paths.get(storagePath);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"                Files.createFile(file);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"                System.out.println(\"Failed to create folder. Check you file permissions\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"                throw e;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(storagePath));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"            String line \u003d fileReader.readLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"                TaskWriter.createSavedTask(line, taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"                line \u003d fileReader.readLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"            System.out.println(e);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Clifong"},"content":"     * Update the saved file with all the existing task\u0027s contents","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Clifong"},"content":"     * @param taskList The task list object contains all existing tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Clifong"},"content":"     * @throws Exception Throws any exception picked up in any sub methods","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Clifong"},"content":"    public void updateSavedFile(TaskList taskList) throws Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Clifong"},"content":"            BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(this.storagePath, false));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Clifong"},"content":"            fileWriter.write(taskList.getAllTasksContent());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Clifong"},"content":"            fileWriter.close();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Clifong"},"content":"            throw e;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":68}},{"path":"src/main/java/Acheron/Tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Exceptions.TaskExceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"import Acheron.Utility.DateFormatter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":" * Represents a deadlines task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    private LocalDate end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"     * Constructor for the deadlines class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"     * @param name The name of the tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"     * @param done Whether the tasks is done or not. Required when generating tasks from the saved file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"     * @param end When the tasks\u0027 deadline is","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"     * @throws TaskExceptions Throws an exception if a wrong input is supplied","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"    public Deadlines(String name, boolean done, String end) throws TaskExceptions {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"        super(name, done);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"     * Overrides the to string method with a custom version","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"     * @return A string format of what the task should produce","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateFormatter.formatDate(end) + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"     * Used to generate the string content of the task for saving","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"     * @param last Indicates if the task is the last task in the task list object. Needed so the","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"     *             file writer does not add an unecessary new line which can cause file corruption","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"     * @return The content of the task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"    public String saveTask(boolean last) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"        return \"D\" + super.saveTask(last) + \"|\" + end.toString() + (last ? \"\" : \"\\n\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":46}},{"path":"src/main/java/Acheron/Tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Exceptions.TaskExceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"import Acheron.Utility.DateFormatter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":" * Represents a events task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"public class Events extends Tasks {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    private LocalDate from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"    private LocalDate to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"     * Constructor for the event class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"     * @param name The name of the tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"     * @param done Whether the tasks is done or not. Required when generating tasks from the saved file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"     * @param from When the task starts","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"     * @param to WHen the task ends","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"     * @throws TaskExceptions Throws an exception if a wrong input is supplied","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"    public Events(String name, boolean done, String from, String to) throws TaskExceptions {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"        super(name, done);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"     * Overrides the to string method with a custom version","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"     * @return A string format of what the task should produce","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateFormatter.formatDate(from) + \" to: \" + DateFormatter.formatDate(to) + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"     * Used to generate the string content of the task for saving","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"     * @param last Indicates if the task is the last task in the task list object. Needed so the","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"     *             file writer does not add an unecessary new line which can cause file corruption","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"     * @return The content of the task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"    public String saveTask(boolean last) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"        return  \"E\" + super.saveTask(last) + \"|\" + from.toString() + \"|\" + to.toString() + (last ? \"\" : \"\\n\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":50}},{"path":"src/main/java/Acheron/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.UI.UI;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":" * Represents the an object that stores all tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"public class TaskList {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    private ArrayList\u003cTasks\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"     * Adds a task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"     * @param task A task to be added","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"    public void addTask(Tasks task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"        addTaskFromStorage(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"        UI.displayText(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"                task +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"                \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"                \"Now you have \" + tasks.size() +\" tasks in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"     * Adds a task based on data in the saved file. A distinction is needed so the text displayed","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"     * is different","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"     * @param task A task to be added","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"    public void addTaskFromStorage(Tasks task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"     * Remove the ith task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"     * @param i The position of the task in the array list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"    public void removeTask(int i) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"        Tasks removeTask \u003d tasks.get(i);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"        tasks.remove(i);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"        UI.displayText(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"                removeTask +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"                \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"                \"Now you have \" + tasks.size() +\" tasks in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"     * Mark the ith task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"     * @param i The position of the task in the array list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Clifong"},"content":"    public void markTask(int i) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Clifong"},"content":"        tasks.get(i).mark();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Clifong"},"content":"        UI.displayText(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(i));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Clifong"},"content":"     * Unmark the ith task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Clifong"},"content":"     * @param i The position of the task in the array list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Clifong"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Clifong"},"content":"        tasks.get(i).unmark();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Clifong"},"content":"        UI.displayText(\"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.get(i));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Clifong"},"content":"     Overrides the to string method with a custom version","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Clifong"},"content":"     * @return A string format of  the task list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Clifong"},"content":"        String listOfTasks \u003d \"\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Clifong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Clifong"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Clifong"},"content":"                listOfTasks +\u003d String.format(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Clifong"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Clifong"},"content":"                listOfTasks +\u003d String.format(\"%d. %s\", i + 1, tasks.get(i));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Clifong"},"content":"        return \"Here are the tasks in your list:\\n\" + listOfTasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Clifong"},"content":"     * Used to extract out all the contents of the existing tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Clifong"},"content":"     * @return All the contents of the existing tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Clifong"},"content":"    public String getAllTasksContent() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Clifong"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Clifong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Clifong"},"content":"            String savedContent \u003d tasks.get(i).saveTask(i \u003d\u003d tasks.size() - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Clifong"},"content":"            stringBuilder.append(savedContent);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Clifong"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Clifong"},"content":"    public void findAllTaskWithKeyword(String keyword) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Clifong"},"content":"        ArrayList\u003cTasks\u003e rightTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Clifong"},"content":"        for (Tasks task : this.tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Clifong"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Clifong"},"content":"                rightTask.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Clifong"},"content":"        String listOfTasks \u003d \"\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Clifong"},"content":"        for (int i \u003d 0; i \u003c rightTask.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Clifong"},"content":"            if (i \u003c rightTask.size() - 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Clifong"},"content":"                listOfTasks +\u003d String.format(\"%d. %s\\n\", i + 1, rightTask.get(i));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Clifong"},"content":"            } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Clifong"},"content":"                listOfTasks +\u003d String.format(\"%d. %s\", i + 1, rightTask.get(i));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Clifong"},"content":"        UI.displayText(\"Here are the matching tasks in your list:\\n\" + listOfTasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":112}},{"path":"src/main/java/Acheron/Tasks/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Exceptions.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" * A class that does work to extract the required information out of any input","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":" * pertaining to the creatioon of any task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"public class TaskWriter {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     * Creates a task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"     * @param input The text input by the user","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"     * @param taskList The task list object","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"     * @throws Exception Throws any errors that occur in some of the usbmethods","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"    public static void createTask(String input,TaskList taskList) throws Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"        //Generic adding of tasls","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"        Tasks newTask \u003d null;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"        input \u003d input.strip();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"        if (input.contains(\"todo\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"                if (input.equals(\"todo\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"                    throw new ToDoExceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"                String taskName \u003d input.substring(input.indexOf(\" \") + 1, input.length());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"                newTask \u003d new ToDos(taskName, false);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"                throw new ToDoExceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"                String taskWithDate \u003d input.substring(input.indexOf(\u0027 \u0027) + 1, input.length());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"                String taskName \u003d taskWithDate.substring(0, taskWithDate.indexOf(\"/by\") - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"                String deadline \u003d taskWithDate.substring(taskWithDate.indexOf(\"by\") + 3, taskWithDate.length());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"                if (!dataValidator(deadline)) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"                    throw new BadDateExceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"                newTask \u003d new Deadlines(taskName, false, deadline);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"            } catch (BadDateExceptions e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"                throw e;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"            catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"                throw new EventExceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"                String taskWithDate \u003d input.substring(input.indexOf(\u0027 \u0027) + 1, input.length());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"                String taskName \u003d taskWithDate.substring(0, taskWithDate.indexOf(\"/from\") - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"                String from \u003d taskWithDate.substring(taskWithDate.indexOf(\"from\") + 5, taskWithDate.indexOf(\"/to\") - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Clifong"},"content":"                String to \u003d taskWithDate.substring(taskWithDate.indexOf(\"to\") + 3, taskWithDate.length());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Clifong"},"content":"                if (!dataValidator(from) || !dataValidator(to)) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Clifong"},"content":"                    throw new BadDateExceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Clifong"},"content":"                newTask \u003d new Events(taskName, false, from, to);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Clifong"},"content":"            } catch (BadDateExceptions e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Clifong"},"content":"                throw e;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Clifong"},"content":"            catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Clifong"},"content":"                throw new EventExceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Clifong"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Clifong"},"content":"            throw new Exceptions();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Clifong"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Clifong"},"content":"     * A utility method to check if the date in the input is correctly formatted","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Clifong"},"content":"     * @param date A date we are checking","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Clifong"},"content":"     * @return True if the date is correctly formatted. Otherwise false","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Clifong"},"content":"    private static boolean dataValidator(String date) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Clifong"},"content":"        if (!date.contains(\"-\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Clifong"},"content":"            return false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Clifong"},"content":"        String[] split \u003d date.split(\"-\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Clifong"},"content":"        if (split.length !\u003d 3) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Clifong"},"content":"            return false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Clifong"},"content":"        if (split[0].length() !\u003d 4 || split[1].length() !\u003d 2 || split[2].length() !\u003d 2) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Clifong"},"content":"            return false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Clifong"},"content":"        return true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Clifong"},"content":"     * A method to create a task from the saved file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Clifong"},"content":"     * @param input A text from the saved file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Clifong"},"content":"     * @param taskList A task list object","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Clifong"},"content":"     * @throws Exception Throws any errors that occur in some of the usbmethods","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Clifong"},"content":"    public static void createSavedTask(String input, TaskList taskList) throws Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Clifong"},"content":"            String[] split \u003d input.split(\"\\\\|\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Clifong"},"content":"            boolean done \u003d split[1].equals(\"X\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Clifong"},"content":"            String taskName \u003d split[2];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Clifong"},"content":"            if (split[0].equals(\"T\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Clifong"},"content":"                taskList.addTaskFromStorage(new ToDos(taskName, done));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Clifong"},"content":"            } else if (split[0].equals(\"D\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Clifong"},"content":"                String by \u003d split[3];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Clifong"},"content":"                taskList.addTaskFromStorage(new Deadlines(taskName, done, by));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Clifong"},"content":"            } else if (split[0].equals(\"E\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Clifong"},"content":"                String from \u003d split[3];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Clifong"},"content":"                String to \u003d split[4];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Clifong"},"content":"                taskList.addTaskFromStorage(new Events(taskName, done, from, to));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Clifong"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Clifong"},"content":"                throw new CorruptedFileException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Clifong"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":114}},{"path":"src/main/java/Acheron/Tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Exceptions.TaskExceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" * Abstratc class for all tasks which contain the minimal fields and methods","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":" * subclass habe","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"public abstract class Tasks {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"    private boolean done;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    private String name;","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"     * A constructor for the Tasks class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"     * @param name Te name of the task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"     * @param done Whether the tasks is done or not. Required when generating tasks from the saved file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"     * @throws TaskExceptions An error if invalid input is fed into the constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"    public Tasks(String name, boolean done) throws TaskExceptions {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"            throw new TaskExceptions();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"     Overrides the to string method with a custom version","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"     * @return A string format of the task object","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"        if (done) {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"            return \"[X] %s\"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"                    .formatted(this.name);","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"        } else {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"            return \"[] %s\".formatted(this.name);","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"     * A method to mark that a task is done","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"    public void mark() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"        this.done \u003d true;","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"     * A method to unmark an already done task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Clifong"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Clifong"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Clifong"},"content":"     * Used to generate the string content of the task for saving","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Clifong"},"content":"     * @param last Indicates if the task is the last task in the task list object. Needed so the","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Clifong"},"content":"     *             file writer does not add an unecessary new line which can cause file corruption","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Clifong"},"content":"     * @return The content of the task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Clifong"},"content":"    public String saveTask(boolean last) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Clifong"},"content":"        if (done) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Clifong"},"content":"            return \"|\" + \"X\" + \"|\" + name;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Clifong"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Clifong"},"content":"            return \"|\" + \"O\" + \"|\" + name;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Clifong"},"content":"    };","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Clifong"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Clifong"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":73}},{"path":"src/main/java/Acheron/Tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Exceptions.TaskExceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.Tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":" * Represents a events task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"public class ToDos extends Tasks {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     * Constructor for the todo class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"     * @param name The name of the tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"     * @param done Whether the tasks is done or not. Required when generating tasks from the saved file","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"     * @throws TaskExceptions Throws an exception if a wrong input is supplied","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"    public ToDos(String name, boolean done) throws TaskExceptions {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"        super(name, done);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"     * Overrides the to string method with a custom version","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"     * @return A string format of what the task should produce","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"    public String toString() {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"     * Used to generate the string content of the task for saving","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"     * @param last Indicates if the task is the last task in the task list object. Needed so the","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"     *             file writer does not add an unecessary new line which can cause file corruption","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"     * @return The content of the task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"    public String saveTask(boolean last) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"        return \"T\" + super.saveTask(last) + (last ? \"\" : \"\\n\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":40}},{"path":"src/main/java/Acheron/UI/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.UI;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":" * Represents the UI display","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"public class UI {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"    private static String genericTask \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"                                 \"%s\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"                                 \"____________________________________________________________\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"     * A constructor of the UI class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"    public UI() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"        String logo \u003d \" Hello! I\u0027m Acheron\\n\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"                    + \" What can I do for you?\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"        displayText(logo);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"     * A method used to display the text on the terminal or in the UI","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"     * @param text The text to be shown","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"    public static void displayText(String text) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"        System.out.println(genericTask.formatted(text));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":28}},{"path":"src/main/java/Acheron/Utility/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Utility;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Storage.StorageManager;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.TaskWriter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"import Acheron.UI.UI;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":" * A utility class used to parse the user\u0027s input correctly","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"public class CommandParser {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"     * A constructor of the class","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"     * @param storageManager A storage manager instace","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"     * @param taskList A task list instance","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"    public CommandParser(StorageManager storageManager, TaskList taskList) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"            while (true) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"                String input \u003d \"\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"                try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"                    input \u003d bufferedReader.readLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"                    System.out.println(\"Something went wrong!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"                    break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"                //Marking and umarking","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"                if (input.contains(\"mark\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"                    String[] split \u003d input.split(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"                    int num \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"                    if (split[0].equals(\"unmark\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"                        taskList.unmarkTask(num);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"                    } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"                        taskList.markTask(num);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"                    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"                    storageManager.updateSavedFile(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"                    continue;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"                //Finding","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"                if (input.contains(\"find\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"                    int space \u003d input.indexOf(\" \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"                    String keyword \u003d input.substring(space + 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Clifong"},"content":"                    taskList.findAllTaskWithKeyword(keyword);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Clifong"},"content":"                    continue;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Clifong"},"content":"                //Bye","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Clifong"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Clifong"},"content":"                    UI.displayText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Clifong"},"content":"                    break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Clifong"},"content":"                //list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Clifong"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Clifong"},"content":"                    UI.displayText(taskList.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Clifong"},"content":"                    continue;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Clifong"},"content":"                //delete","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Clifong"},"content":"                if (input.contains(\"delete\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Clifong"},"content":"                    String[] split \u003d input.split(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Clifong"},"content":"                    int num \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Clifong"},"content":"                    taskList.removeTask(num);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Clifong"},"content":"                    storageManager.updateSavedFile(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Clifong"},"content":"                    continue;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Clifong"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Clifong"},"content":"                //add task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Clifong"},"content":"                TaskWriter.createTask(input, taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Clifong"},"content":"                storageManager.updateSavedFile(taskList);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Clifong"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Clifong"},"content":"            System.out.println(e);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":84}},{"path":"src/main/java/Acheron/Utility/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Utility;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":" * A utility class to format the date correctly when trying to display them","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"public class DateFormatter {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"     * Takes in a date object and create a custom display for them","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"     * @param date A date object","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"     * @return A custom string text representing the date","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"        String stringDate \u003d String.valueOf(date);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"        String day \u003d stringDate.substring(stringDate.length() - 2);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"        String month \u003d String.valueOf(date.getMonth());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"        String year \u003d String.valueOf(date.getYear());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"        return \"%s %s %s\".formatted(month, day, year);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Clifong":22}},{"path":"src/test/java/Acheron/Storage/StorageWriterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.TaskList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.Tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"import Acheron.Tasks.ToDos;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"public class StorageWriterTest {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"    static final String NONEXISTTENTPATHERROR \u003d  \"java.lang.NullPointerException:\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"            \"Cannot invoke \\\"java.nio.file.Path.getFileSystem()\\\" because \\\"path\\\" is null\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"    static final String NONSENSICALTASKERROR \u003d \"Tasks cannot have null name!\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    public void StorageManagerNonexistentPath(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"            StorageManager storageManager \u003d new StorageManager(\"\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"            storageManager.updateSavedFile(new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"            assertEquals(NONEXISTTENTPATHERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"    public void StorageManagerNonsensicalTask(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"            taskList.addTask(new ToDos(null, false));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"            StorageManager storageManager \u003d new StorageManager(\"./data/duke.txt\", taskList);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"            storageManager.updateSavedFile(taskList);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"            assertEquals(NONSENSICALTASKERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Clifong":35}},{"path":"src/test/java/Acheron/Tasks/TaskWriterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"package Acheron.Tasks;  //same package as the class being tested","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Clifong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Clifong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Clifong"},"content":"public class TaskWriterTest {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Clifong"},"content":"    static final String TODOEMPTYSPACEERROR \u003d \"Check your to do input.\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Clifong"},"content":"            \"Make sure the text follows the format\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Clifong"},"content":"            \"todo [Some text]\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Clifong"},"content":"            \"(Note that the [ ] is not needed! E.g todo eat peach\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Clifong"},"content":"    static final String TODOEMPTYERROR \u003d \"Check your to do input.\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Clifong"},"content":"            \"Make sure the text follows the format\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Clifong"},"content":"            \"todo [Some text]\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Clifong"},"content":"            \"(Note that the [ ] is not needed! E.g todo eat peach\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Clifong"},"content":"    static final String DEADLINEWRONGGFORMATERROR \u003d \"Date is wrongly formatted!\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Clifong"},"content":"            \"Make sure it follows the YYYY-MM-DD format\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Clifong"},"content":"    static final String DEADLINEWRONGLENGTHBUTRIGHTFORMATERROR \u003d \"Date is wrongly\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Clifong"},"content":"            \"formatted! Make sure it follows the YYYY-MM-DD format\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"    static final String EVENTWRONGERROR \u003d \"Date is wrongly\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Clifong"},"content":"            \"formatted! Make sure it follows the YYYY-MM-DD format\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Clifong"},"content":"    static final String CORRUPTEDFILEERROR \u003d \"Corrupted file. Cannot read data\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterTodoEmptySpace(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createTask(\"todo \", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Clifong"},"content":"            assertEquals(TODOEMPTYSPACEERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterTodoEmpty(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createTask(\"todo\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Clifong"},"content":"            assertEquals(TODOEMPTYERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterDeadlineWrongFormat(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createTask(\"deadline b /by 2019/02/12\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Clifong"},"content":"            assertEquals(DEADLINEWRONGGFORMATERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterDeadlineWrongLengthButRightFormat(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createTask(\"deadline b /by 2019-02-1\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Clifong"},"content":"            assertEquals(DEADLINEWRONGLENGTHBUTRIGHTFORMATERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterEventWrong(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createTask(\"deadline b /by 2019-02-1\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Clifong"},"content":"            assertEquals(EVENTWRONGERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterSavedFileTodoEmptySpace(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createSavedTask(\"todo \", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Clifong"},"content":"            assertEquals(CORRUPTEDFILEERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterSavedFileTodoEmpty(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createSavedTask(\"todo\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Clifong"},"content":"            assertEquals(CORRUPTEDFILEERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterSavedFileDeadlineWrongFormat(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createSavedTask(\"deadline b /by 2019/02/12\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Clifong"},"content":"            assertEquals(CORRUPTEDFILEERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterSavedFileDeadlineWrongLengthButRightFormat(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createSavedTask(\"deadline b /by 2019-02-1\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Clifong"},"content":"            assertEquals(CORRUPTEDFILEERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Clifong"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Clifong"},"content":"    @Test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Clifong"},"content":"    public void TaskWriterSavedFileEventWrong(){","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Clifong"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Clifong"},"content":"            TaskWriter.createSavedTask(\"deadline b /by 2019-02-1\", new TaskList());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Clifong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Clifong"},"content":"            assertEquals(CORRUPTEDFILEERROR, e.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Clifong"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Clifong"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Clifong"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Clifong":111}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Clifong"},"content":"todo borrow book","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Clifong":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Clifong"},"content":"java -classpath ..\\bin Acheron.Acheron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Clifong":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Clifong"},"content":"java -classpath ../bin Acheron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Clifong":1,"-":37}}]
