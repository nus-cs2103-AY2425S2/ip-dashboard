[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"checkstyle {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    mainClass.set(\"robert.Robert\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    archiveBaseName \u003d \"robert\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":7,"-":39}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"T|0|buy chess","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"bryantjandra":1}},{"path":"src/main/java/robert/Robert.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import robert.command.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import robert.parser.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import robert.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"import robert.task.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"import robert.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":" * Main class of the Robert chatbot application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"public class Robert {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"     * Creates a Robert chatbot with the specified file path for data storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"     * @param filePath The path to the file where tasks will be saved/loaded.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    public Robert(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"     * Runs the Robert chatbot until the user issues the bye command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    public void run() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"            try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"                CommandType commandWord \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"                switch (commandWord) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"                case BYE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"                    ui.showMessage(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"                    ui.showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"                case LIST:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"                    ui.showMessage(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"                        ui.showMessage(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"                case TODO:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"                    handleTodo(fullCommand.substring(\"todo\".length()).trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"                case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"                    handleDeadline(fullCommand.substring(\"deadline\".length()).trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"                case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"                    handleEvent(fullCommand.substring(\"event\".length()).trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"                case MARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"                    handleMark(fullCommand.substring(\"mark\".length()).trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryantjandra"},"content":"                case UNMARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryantjandra"},"content":"                    handleUnmark(fullCommand.substring(\"unmark\".length()).trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryantjandra"},"content":"                case DELETE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryantjandra"},"content":"                    handleDelete(fullCommand.substring(\"delete\".length()).trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryantjandra"},"content":"                case FIND:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryantjandra"},"content":"                    handleFind(fullCommand.substring(\"find\".length()).trim());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryantjandra"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryantjandra"},"content":"                case EMPTY:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryantjandra"},"content":"                    throw new RobertException(\"OOPS!!! You typed an empty command!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryantjandra"},"content":"                default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryantjandra"},"content":"                    throw new RobertException(\"OOPS!!! What do you mean by that?\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryantjandra"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryantjandra"},"content":"            } catch (RobertException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryantjandra"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryantjandra"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryantjandra"},"content":"                ui.showMessage(\"OOPS!!! Unable to save tasks!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryantjandra"},"content":"     * Handles the creation of a Todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryantjandra"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the description is empty.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving the data fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryantjandra"},"content":"    private void handleTodo(String description) throws RobertException, IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryantjandra"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! The description of a todo should not be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryantjandra"},"content":"        Todo t \u003d new Todo(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(t);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\"   \" + t);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bryantjandra"},"content":"     * Handles the creation of a Deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bryantjandra"},"content":"     * @param desc A string containing the description and date after \u0027/by\u0027.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If format is invalid or fields are empty.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving the data fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bryantjandra"},"content":"    private void handleDeadline(String desc) throws RobertException, IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bryantjandra"},"content":"        if (!desc.contains(\"/by\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! A deadline must have \u0027/by \u003ctime\u003e\u0027!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bryantjandra"},"content":"        String[] parts \u003d desc.split(\"/by\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bryantjandra"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bryantjandra"},"content":"                    \"OOPS!!! A deadline must have a description and a time after \u0027/by\u0027.\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bryantjandra"},"content":"            );","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bryantjandra"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bryantjandra"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bryantjandra"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bryantjandra"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! The time of a deadline cannot be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bryantjandra"},"content":"        Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(d);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\"   \" + d);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bryantjandra"},"content":"     * Handles the creation of an Event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bryantjandra"},"content":"     * @param desc A string containing the description and times after \u0027/from\u0027 and \u0027/to\u0027.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If format is invalid or fields are empty.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving the data fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bryantjandra"},"content":"    private void handleEvent(String desc) throws RobertException, IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bryantjandra"},"content":"        if (!desc.contains(\"/from\") || !desc.contains(\"/to\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bryantjandra"},"content":"                    \"OOPS!!! An event must have \u0027/from \u003cstart\u003e\u0027 and \u0027/to \u003cend\u003e\u0027!\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bryantjandra"},"content":"            );","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bryantjandra"},"content":"        String[] fromSplit \u003d desc.split(\"/from\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bryantjandra"},"content":"        if (fromSplit.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! Missing \u0027/from\u0027 portion for event.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bryantjandra"},"content":"        String description \u003d fromSplit[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bryantjandra"},"content":"        String startAndEnd \u003d fromSplit[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bryantjandra"},"content":"        String[] toSplit \u003d startAndEnd.split(\"/to\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bryantjandra"},"content":"        if (toSplit.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! Missing \u0027/to\u0027 portion for event.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bryantjandra"},"content":"        String startTime \u003d toSplit[0].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bryantjandra"},"content":"        String endTime \u003d toSplit[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bryantjandra"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bryantjandra"},"content":"        if (startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! The start and end times for an event cannot be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bryantjandra"},"content":"        Event e \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(e);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\"   \" + e);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bryantjandra"},"content":"     * Handles marking a task as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bryantjandra"},"content":"     * @param arg The string representing the task number to mark.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving the data fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the task number is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bryantjandra"},"content":"    private void handleMark(String arg) throws IOException, RobertException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bryantjandra"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Please specify which task to mark!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bryantjandra"},"content":"        int taskNum \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bryantjandra"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Task number is out of range!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bryantjandra"},"content":"        tasks.get(taskNum - 1).markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\"   \" + tasks.get(taskNum - 1));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bryantjandra"},"content":"     * Handles unmarking a task as not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"bryantjandra"},"content":"     * @param arg The string representing the task number to unmark.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving the data fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the task number is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"bryantjandra"},"content":"    private void handleUnmark(String arg) throws IOException, RobertException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"bryantjandra"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Please specify which task to unmark!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"bryantjandra"},"content":"        int taskNum \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"bryantjandra"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Task number is out of range!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"bryantjandra"},"content":"        tasks.get(taskNum - 1).markAsNotDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\"   \" + tasks.get(taskNum - 1));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"bryantjandra"},"content":"     * Handles deleting a task from the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"bryantjandra"},"content":"     * @param arg The string representing the task number to delete.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving the data fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the task number is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"bryantjandra"},"content":"    private void handleDelete(String arg) throws IOException, RobertException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"bryantjandra"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Please specify which task to delete!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"bryantjandra"},"content":"        int taskNum \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"bryantjandra"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Task number is out of range!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"bryantjandra"},"content":"        Task removedTask \u003d tasks.remove(taskNum - 1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\"   \" + removedTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"bryantjandra"},"content":"        ui.showMessage(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"bryantjandra"},"content":"     * Handles finding tasks whose description matches a given keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"bryantjandra"},"content":"     * @param keyword The search keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the keyword is empty.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"bryantjandra"},"content":"    private void handleFind(String keyword) throws RobertException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"bryantjandra"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"OOPS!!! The find command requires a keyword!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"bryantjandra"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"bryantjandra"},"content":"            Task current \u003d tasks.get(i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"bryantjandra"},"content":"            if (current.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"bryantjandra"},"content":"                matchedTasks.add(current);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"bryantjandra"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"bryantjandra"},"content":"            ui.showMessage(\" No tasks matched your search: \" + keyword);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"bryantjandra"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"bryantjandra"},"content":"            ui.showMessage(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"bryantjandra"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"bryantjandra"},"content":"                ui.showMessage(\" \" + (i + 1) + \".\" + matchedTasks.get(i));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"bryantjandra"},"content":"     * The main entry point. Creates a new Robert instance and runs it.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"bryantjandra"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"bryantjandra"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"bryantjandra"},"content":"        new Robert(\"data/tasks.txt\").run();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":299}},{"path":"src/main/java/robert/RobertException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents exceptions specific to the Robert chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class RobertException extends Exception {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a new RobertException with the specified message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"     * @param message The detail message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    public RobertException(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"        super(message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":15}},{"path":"src/main/java/robert/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents all recognized command types in the Robert chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public enum CommandType {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"    LIST,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    BYE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    MARK,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"    UNKNOWN,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    TODO,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    DELETE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    EVENT,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    EMPTY,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    FIND,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    UNMARK;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     * Parses the given input string and returns the matching CommandType.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     * @param input The command word (e.g., \"todo\", \"list\", \"event\").","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"     * @return The corresponding CommandType, or EMPTY if blank, or UNKNOWN if unrecognized.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    public static CommandType parseCommand(String input) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"            return EMPTY;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"            return BYE;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        case \"list\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"            return LIST;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"            return MARK;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"            return UNMARK;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"            return DELETE;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"            return TODO;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"            return DEADLINE;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        case \"event\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"            return EVENT;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"        case \"find\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"            return FIND;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        default:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"bryantjandra":52}},{"path":"src/main/java/robert/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import robert.command.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":" * Parses user commands into CommandType enums.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"     * Parses a full command string and returns the corresponding CommandType.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * @param fullCommand The full user input string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     * @return A CommandType enum representing the command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    public static CommandType parse(String fullCommand) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        if (fullCommand.trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        return CommandType.parseCommand(parts[0]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":22}},{"path":"src/main/java/robert/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":" * Deals with loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    private String filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"     * @param filePath The path of the file where tasks will be stored and loaded from.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"     * Loads tasks from the file specified by filePath.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"            f.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"            String doneFlag \u003d parts[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"                Todo t \u003d new Todo(parts[2].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"                if (doneFlag.equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"                    t.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"                tasks.add(t);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"                Deadline d \u003d new Deadline(parts[2].trim(), parts[3].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"                if (doneFlag.equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"                    d.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"                tasks.add(d);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"                Event e \u003d new Event(parts[2].trim(), parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"                if (doneFlag.equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"                    e.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"                tasks.add(e);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"     * Saves the given list of tasks to the file specified by filePath.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"     * @param tasks An ArrayList of Task objects to be saved.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryantjandra"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryantjandra"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryantjandra"},"content":"                fw.write(\"T|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryantjandra"},"content":"                        + (t.getStatusIcon().equals(\"X\") ? \"1\" : \"0\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryantjandra"},"content":"                        + \"|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryantjandra"},"content":"                        + t.getDescription()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryantjandra"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryantjandra"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryantjandra"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryantjandra"},"content":"                fw.write(\"D|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryantjandra"},"content":"                        + (d.getStatusIcon().equals(\"X\") ? \"1\" : \"0\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryantjandra"},"content":"                        + \"|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryantjandra"},"content":"                        + d.getDescription()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryantjandra"},"content":"                        + \"|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryantjandra"},"content":"                        + d.getByDate()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryantjandra"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryantjandra"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryantjandra"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryantjandra"},"content":"                fw.write(\"E|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryantjandra"},"content":"                        + (e.getStatusIcon().equals(\"X\") ? \"1\" : \"0\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryantjandra"},"content":"                        + \"|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryantjandra"},"content":"                        + e.getDescription()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryantjandra"},"content":"                        + \"|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryantjandra"},"content":"                        + e.getStartTime()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryantjandra"},"content":"                        + \"|\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryantjandra"},"content":"                        + e.getEndTime()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryantjandra"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryantjandra"},"content":"        fw.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"bryantjandra":111}},{"path":"src/main/java/robert/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":" * Represents a task that must be done before a specific date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a robert.task.Deadline task with a description and a \u0027by\u0027 date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"     * @param description The task description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"     * @param by          The deadline date (as a string).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * @throws DateTimeParseException If the provided date string cannot be parsed into a valid LocalDate.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        this.byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"        return byDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of the deadline. This includes","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"     * the status, description, and deadline date formatted as \"MMM dd yyyy\".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     * @return The string representation of the deadline in the format: [D][status] description (by: MMM dd yyyy)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"                + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":42}},{"path":"src/main/java/robert/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    protected String startTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    protected String endTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a robert.task.Event with a description, a start time, and an end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"     * @param description The event\u0027s description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"     * @param startTime        The start time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"     * @param endTime          The end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"        return startTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        return endTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of the event. This includes the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     * status, the description, and time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":43}},{"path":"src/main/java/robert/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents a single task with a description and a done-status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"    protected String description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     * Returns the status icon of the task (X if done, blank otherwise).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     * @return \"X\" if done, otherwise \" \".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"     * @return The task\u0027s description string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"        return description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of this task, including done-status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"     * @return A string representation of the task, e.g., \"[X] read book\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":61}},{"path":"src/main/java/robert/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":" * Maintains a list of Task objects and provides operations to modify them.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"     * @param t The Task to add.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"    public void add(Task t) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(t);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"     * @return The Task at that index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"     * @return The removed Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"     * Returns the current number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"    public int size() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"     * Returns the underlying list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":73}},{"path":"src/main/java/robert/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents a task without any date/time attached (a simple robert.task.Todo).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a robert.task.Todo with the specified description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     * @param description The description of the robert.task.Todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of the todo. This includes the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * status and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * @return The string representation of the todo.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":27}},{"path":"src/main/java/robert/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":" * Handles user interactions such as reading commands and showing output.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * Creates an Ui object for interacting with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    public Ui() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * Reads the next command from the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * @return A trimmed string representing the user\u0027s command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Prints a divider line to the console.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     * Shows the welcome message to the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        showLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        System.out.println(\" Hello! I\u0027m Robert\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        System.out.println(\"OOPS!!! There was an error loading your tasks.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"     * Shows a given message to the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     * @param msg The message to be printed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":58}},{"path":"src/test/java/robert/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import robert.command.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":" * Tests the Parser class.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"     * Tests if parse(\"\") returns CommandType.UNKNOWN.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    public void parse_emptyString_returnUnknown() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(CommandType.UNKNOWN, result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"     * Tests if parse(\"todo read book\") → CommandType.TODO.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    public void parse_todoCommand_returnTodo() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(CommandType.TODO, result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     * Example: parse(\"bye\") → BYE.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    public void parse_byeCommand_returnBye() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(CommandType.BYE, result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"     * Tests that parse does not return null even for random strings.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"    public void parse_randomInput_returnNotNull() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"randomstuff\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        assertNotNull(result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":50}},{"path":"src/test/java/robert/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":" * Tests the TaskList class.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     * Creates a new (empty) TaskList before each test.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Tests adding a task increases the size by 1.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    public void add_singleTask_sizeIncreases() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     * Tests remove() returns the correct task and reduces size.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"    public void remove_indexZero_returnsTaskAndReducesSize() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        Todo first \u003d new Todo(\"task1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        Todo second \u003d new Todo(\"task2\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(first);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(second);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        Task removed \u003d taskList.remove(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        assertSame(first, removed, \"Removed task should be the first one added\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(1, taskList.size(), \"TaskList size should be 1 after removal\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     * Tests get() returns the correct Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"    public void get_validIndex_returnsCorrectTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"        Todo first \u003d new Todo(\"task1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(first);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"        Task t \u003d taskList.get(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"        assertSame(first, t);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"     * Tests getTasks() returns the underlying ArrayList with correct tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"    public void getTasks_nonEmptyList_correctTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"        Todo t1 \u003d new Todo(\"t1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"        Todo t2 \u003d new Todo(\"t2\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(t1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(t2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e actualList \u003d taskList.getTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(2, actualList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(actualList.contains(t1));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(actualList.contains(t2));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":79}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"T|1|read book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"D|0|submit report|2025-01-25","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"E|0|project meeting|Monday 2pm|4pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"T|0|buy groceries","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"E|0|team outing|Sunday 10am|1pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"D|0|renew passport|2025-01-31","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"todo read book","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"deadline submit report /by 2025-01-25","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"mark 1","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"mark 2","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"unmark 2","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"todo buy groceries","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"event team outing /from Sunday 10am /to 1pm","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"deadline renew passport /by 2025-01-31","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"bye","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"java -classpath ..\\bin Robert \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"# delete previous data file if it exists","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"if [ -f \"./data/tasks.txt\" ]; then","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"# compile the code into the bin folder, recursively including all Java files","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src/main/java -name \"*.java\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"java -classpath ../bin robert.Robert \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":8,"-":35}}]
