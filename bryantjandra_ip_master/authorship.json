[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"## Main Usage: Refactoring and Fixing small bugs","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"**AI Tool Used:** ChatGPT","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"### **What AI Helped With:**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"- Provided insights on reducing nested conditionals and improving maintainability.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"- Suggested code style improvements for better clarity.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"### **Observations:**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"✅ Helped spot redundant code faster than manual inspection.  ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"✅ Suggested best practices that improved code structure.  ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"### **Overall Time Saved:**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"Estimated **[3] hours** compared to manual refactoring.","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":14}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"# Robert 🤵🔔","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"This project is based on the Duke project template, originally named after the Java mascot Duke. However, as part of my individual project for CS2103, I have renamed it to Robert, inspired by the persona of a polite and formal butler. Below are the instructions to set up and run the project.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"1. After that, locate the `src/main/java/Robert.java` file, right-click it, and choose `Run Robert.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"bryantjandra":5,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"checkstyle {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    mainClass.set(\"robert.javafx.Launcher\")","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"    archiveBaseName \u003d \"robert\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":22,"-":39}},{"path":"data/testTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"D|0|return book|2025-01-01","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"T|0|read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"D|0|return book|2025-01-01","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"T|0|read book","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"# Robert User Guide","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"![Screenshot of Robert Chatbot](/docs/Ui.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"Robert is a polite butler-themed chatbot that helps you manage various tasks (e.g., todos, deadlines, events). He responds with polite phrases—like “Certainly, sir”—and keeps track of your tasks in a local storage file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"Below are instructions on some of Robert’s key features and how to use them, along with examples of the expected outcomes.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"## Adding Todos","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"Use the `todo` command to add a basic task without any specific date or time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"todo read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. I have added this task:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"   [T][ ] read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"You now have 1 tasks in your list, sir.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"## Adding Deadlines","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"Use the `deadline` command to add a task that must be done before a specific date. Robert will then store the new deadline and update you with the total number of tasks in your list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"deadline submit report /by 2025-01-31","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. I have added this task:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"   [D][ ] submit report (by: Jan 31 2025)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"You now have 3 tasks in your list, sir.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"## Adding Events","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"Events let you specify a start time and end time for a task. Robert will keep track of these and display them appropriately when you list your tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"event project meeting /from 2025-02-01 /to 2025-02-02","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. I have added this task:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"   [E][ ] project meeting (from: 2025-02-01 to: 2025-02-02)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"You now have 4 tasks in your list, sir.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryantjandra"},"content":"## Listing Tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryantjandra"},"content":"Use the `list` command to view all tasks currently stored. Robert will enumerate them in the order they were added (unless you sorted deadlines).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. Here are the tasks in your list:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryantjandra"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryantjandra"},"content":" 2.[D][ ] submit report (by: Jan 31 2025)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryantjandra"},"content":" 3.[E][ ] project meeting (from: 2025-02-01 to: 2025-02-02)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryantjandra"},"content":" ...","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryantjandra"},"content":"## Marking a Task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryantjandra"},"content":"When a task is done, you can mark it with an `X` to indicate completion.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryantjandra"},"content":"mark \u003ctask_number\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryantjandra"},"content":"mark 1","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryantjandra"},"content":"   [T][X] read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryantjandra"},"content":"## Unmarking a Task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryantjandra"},"content":"If you marked a task by mistake or want to revert it to undone status:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bryantjandra"},"content":"unmark \u003ctask_number\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bryantjandra"},"content":"unmark 1","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bryantjandra"},"content":"   [T][ ] read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bryantjandra"},"content":"## Deleting Tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bryantjandra"},"content":"Use the `delete` command to remove a specific task from your list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bryantjandra"},"content":"delete \u003ctask_number\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bryantjandra"},"content":"delete 2","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. I\u0027ve removed this task:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bryantjandra"},"content":"   [D][ ] submit report (by: Jan 31 2025)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bryantjandra"},"content":"You now have 2 tasks in the list, sir.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bryantjandra"},"content":"## Finding Tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bryantjandra"},"content":"If you want to locate tasks by a keyword in their description:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bryantjandra"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bryantjandra"},"content":"**Example**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bryantjandra"},"content":"find report","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. Here are the matching tasks:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bryantjandra"},"content":" 1.[D][ ] submit report (by: Jan 31 2025)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bryantjandra"},"content":"## Sorting Deadlines","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bryantjandra"},"content":"Sort all existing deadlines by ascending date, placing them first in the list (followed by other tasks).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bryantjandra"},"content":"**Usage**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bryantjandra"},"content":"sort","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bryantjandra"},"content":"**Expected Outcome**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bryantjandra"},"content":"Certainly, sir. Deadlines have now been sorted by date.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bryantjandra"},"content":"Here is your newly arranged list:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bryantjandra"},"content":" 1.[D][ ] submit report (by: Jan 25 2025)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bryantjandra"},"content":" 2.[D][ ] renew passport (by: Jan 31 2025)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bryantjandra"},"content":" 3.[T][ ] read book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bryantjandra"},"content":" ...","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bryantjandra"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bryantjandra"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bryantjandra"},"content":"\u003e **Note**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bryantjandra"},"content":"\u003e - Robert informs you of any errors (e.g., invalid date formats, out-of-range task indices) with a polite, butler-style apology or explanation.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bryantjandra"},"content":"\u003e - All data is stored locally in a `data` folder by default.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bryantjandra"},"content":"\u003e - If you need to **save** or **load** tasks from a different location, modify the relevant file path in `Robert.java`.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bryantjandra"},"content":"Enjoy your conversation with **Robert**, your personal butler chatbot!","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":199,"-":16}},{"path":"src/main/java/robert/Robert.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import robert.command.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import robert.parser.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import robert.storage.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"import robert.task.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":" * Main class of the Robert chatbot application.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"public class Robert {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"     * Creates a Robert chatbot with the specified file path for data storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"     * Loads tasks from file. If loading fails, an empty TaskList is used.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"     * @param filePath The path to the file where tasks will be saved/loaded.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    public Robert(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        assert filePath !\u003d null : \"Robert constructor must have a non-null file path\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"     * Returns a \"welcome message\" and uses this immediately in the","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"     * GUI (e.g., after creating the Robert object)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"     * so that the user sees the greeting without typing anything.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"     * @return The multiline welcome message as a String.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"    public String getStartupMessage() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        return \"Good day, sir. I am Robert, your personal butler. \"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"                + \"How may I be of service today, sir?\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"     * Takes a user input string, parses it, executes the command, and returns","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     * a specified response depending on the command word.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"     * @param input Full user input string (e.g., \"todo read book\").","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"     * @return The response lines that should be displayed in the GUI.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"            CommandType commandWord \u003d Parser.parse(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"            switch (commandWord) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"            case BYE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"                sb.append(\"Farewell, sir. I hope to see you again soon!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"            case LIST:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"                sb.append(\"Certainly, sir. Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"                    sb.append(\" \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"            case TODO:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleTodo(input.substring(\"todo\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"            case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleDeadline(input.substring(\"deadline\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryantjandra"},"content":"            case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleEvent(input.substring(\"event\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryantjandra"},"content":"            case MARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleMark(input.substring(\"mark\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryantjandra"},"content":"            case UNMARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleUnmark(input.substring(\"unmark\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryantjandra"},"content":"            case DELETE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleDelete(input.substring(\"delete\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryantjandra"},"content":"            case FIND:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleFind(input.substring(\"find\".length()).trim()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryantjandra"},"content":"            case EMPTY:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryantjandra"},"content":"                throw new RobertException(\"Pardon me, sir, but it appears you typed an empty command.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryantjandra"},"content":"            case SORT:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryantjandra"},"content":"                sb.append(handleSort());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryantjandra"},"content":"                break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryantjandra"},"content":"            default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryantjandra"},"content":"                throw new RobertException(\"Pardon me, sir. I am afraid I did not understand that command.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryantjandra"},"content":"        } catch (RobertException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryantjandra"},"content":"            sb.append(e.getMessage());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryantjandra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryantjandra"},"content":"            sb.append(\"My apologies, sir. I\u0027m unable to save tasks at the moment!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryantjandra"},"content":"     * Creates and adds a new {@code Todo} task, then returns the textual response.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryantjandra"},"content":"     * @param description The description of the ToDo task (must not be empty).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryantjandra"},"content":"     * @return A string containing the lines that would have been printed previously.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the description is empty.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving tasks fails.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bryantjandra"},"content":"    private String handleTodo(String description) throws RobertException, IOException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bryantjandra"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bryantjandra"},"content":"        Todo t \u003d new Todo(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(t);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Certainly, sir. I have added this task:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"   \").append(t).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"You now have \").append(tasks.size()).append(\" tasks in your list, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bryantjandra"},"content":"     * Creates and adds a new {@code Deadline} task, then returns the textual response.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bryantjandra"},"content":"     * @param desc The raw input after the \"deadline\" keyword, e.g., \"return book /by 2025-01-01\".","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bryantjandra"},"content":"     * @return A string containing the lines that would have been printed previously.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the format is invalid or fields are empty.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving tasks fails.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bryantjandra"},"content":"    private String handleDeadline(String desc) throws RobertException, IOException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bryantjandra"},"content":"        if (!desc.contains(\"/by\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"A deadline must have \u0027/by \u003ctime\u003e\u0027.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bryantjandra"},"content":"        String[] parts \u003d desc.split(\"/by\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bryantjandra"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"A deadline must have a description and a time after \u0027/by\u0027.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bryantjandra"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bryantjandra"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bryantjandra"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bryantjandra"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"The time of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bryantjandra"},"content":"        Deadline d;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bryantjandra"},"content":"            d \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bryantjandra"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bryantjandra"},"content":"                    \"Sir, the specified deadline date is invalid. Please use the format yyyy-mm-dd.\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bryantjandra"},"content":"            );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(d);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Certainly, sir. I have added this task:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"   \").append(d).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"You now have \").append(tasks.size()).append(\" tasks in your list, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bryantjandra"},"content":"     * Creates and adds a new {@code Event} task, then returns the textual response.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bryantjandra"},"content":"     * @param desc The raw input after the \"event\" keyword, e.g., \"some event /from 2025-01-01 /to 2025-01-02\".","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bryantjandra"},"content":"     * @return A string containing the lines that would have been printed previously.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If format is invalid or fields are empty.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving tasks fails.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bryantjandra"},"content":"    private String handleEvent(String desc) throws RobertException, IOException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bryantjandra"},"content":"        if (!desc.contains(\"/from\") || !desc.contains(\"/to\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"An event must have \u0027/from \u003cstart\u003e\u0027 and \u0027/to \u003cend\u003e\u0027.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bryantjandra"},"content":"        String[] fromSplit \u003d desc.split(\"/from\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bryantjandra"},"content":"        if (fromSplit.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Missing \u0027/from\u0027 portion for the event.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bryantjandra"},"content":"        String description \u003d fromSplit[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bryantjandra"},"content":"        String startAndEnd \u003d fromSplit[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bryantjandra"},"content":"        String[] toSplit \u003d startAndEnd.split(\"/to\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bryantjandra"},"content":"        if (toSplit.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Missing \u0027/to\u0027 portion for the event.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bryantjandra"},"content":"        String startTime \u003d toSplit[0].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bryantjandra"},"content":"        String endTime \u003d toSplit[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bryantjandra"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bryantjandra"},"content":"        if (startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"The start/end times for the event cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bryantjandra"},"content":"        Event e \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(e);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Certainly, sir. I have added this task:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"   \").append(e).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"You now have \").append(tasks.size()).append(\" tasks in your list, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"bryantjandra"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"bryantjandra"},"content":"     * @param arg A string representing the task number to mark, e.g., \"2\".","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"bryantjandra"},"content":"     * @return A string response containing the lines that would have been printed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving tasks fails.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the task number is invalid or out of range.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"bryantjandra"},"content":"    private String handleMark(String arg) throws IOException, RobertException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"bryantjandra"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Please specify which task to mark.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"bryantjandra"},"content":"        int taskNum;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"bryantjandra"},"content":"            taskNum \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"bryantjandra"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Sir, \u0027\" + arg + \"\u0027 is not a valid task number.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"bryantjandra"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"That task number is out of range, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"bryantjandra"},"content":"        tasks.get(taskNum - 1).markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Certainly, sir. I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"   \").append(tasks.get(taskNum - 1));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"bryantjandra"},"content":"     * Unmarks a task (marks as not done).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"bryantjandra"},"content":"     * @param arg A string representing the task number to unmark, e.g., \"2\".","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"bryantjandra"},"content":"     * @return A string response containing the lines that would have been printed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving tasks fails.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the task number is invalid or out of range.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"bryantjandra"},"content":"    private String handleUnmark(String arg) throws IOException, RobertException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"bryantjandra"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Please specify which task to unmark.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"bryantjandra"},"content":"        int taskNum;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"bryantjandra"},"content":"            taskNum \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"bryantjandra"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Sir, \u0027\" + arg + \"\u0027 is not a valid task number.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"bryantjandra"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"That task number is out of range, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"bryantjandra"},"content":"        tasks.get(taskNum - 1).markAsNotDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Certainly, sir. I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"   \").append(tasks.get(taskNum - 1));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"bryantjandra"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"bryantjandra"},"content":"     * @param arg A string representing the task number to delete.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"bryantjandra"},"content":"     * @return A string response containing the lines that would have been printed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException     If saving tasks fails.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the task number is invalid or out of range.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"bryantjandra"},"content":"    private String handleDelete(String arg) throws IOException, RobertException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"bryantjandra"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"Please specify which task to delete.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"bryantjandra"},"content":"        int taskNum \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"bryantjandra"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"That task number is out of range, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"bryantjandra"},"content":"        Task removedTask \u003d tasks.remove(taskNum - 1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Certainly, sir. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"   \").append(removedTask).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"You now have \").append(tasks.size()).append(\" tasks in the list, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"bryantjandra"},"content":"     * Finds tasks whose description matches the given keyword.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"bryantjandra"},"content":"     * @param keyword The search keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"bryantjandra"},"content":"     * @return A string listing the matching tasks, or indicating none found.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"bryantjandra"},"content":"     * @throws RobertException If the keyword is empty.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"bryantjandra"},"content":"    private String handleFind(String keyword) throws RobertException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"bryantjandra"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"bryantjandra"},"content":"            throw new RobertException(\"The find command requires a keyword to search for, sir.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"bryantjandra"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"bryantjandra"},"content":"            Task current \u003d tasks.get(i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"bryantjandra"},"content":"            if (current.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"bryantjandra"},"content":"                matchedTasks.add(current);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"bryantjandra"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"bryantjandra"},"content":"            return \"My apologies, sir. No tasks matched your search: \" + keyword;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"bryantjandra"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"bryantjandra"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Certainly, sir. Here are the matching tasks:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"bryantjandra"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"bryantjandra"},"content":"                sb.append(\" \").append(i + 1).append(\".\").append(matchedTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"bryantjandra"},"content":"            return sb.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"bryantjandra"},"content":"     * Sorts all Deadlines by ascending date, placing them first in the list,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"bryantjandra"},"content":"     * followed by all other tasks in their current order.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"bryantjandra"},"content":"     * @return A string response indicating the new order of tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException If saving tasks fails.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"bryantjandra"},"content":"    private String handleSort() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e others \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"bryantjandra"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"bryantjandra"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"bryantjandra"},"content":"                deadlines.add(t);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"bryantjandra"},"content":"            } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"bryantjandra"},"content":"                others.add(t);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"bryantjandra"},"content":"        deadlines.sort((a, b) -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"bryantjandra"},"content":"            Deadline da \u003d (Deadline) a;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"bryantjandra"},"content":"            Deadline db \u003d (Deadline) b;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"bryantjandra"},"content":"            return da.getByDate().compareTo(db.getByDate());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"bryantjandra"},"content":"        });","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"bryantjandra"},"content":"        tasks.getTasks().clear();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"bryantjandra"},"content":"        tasks.getTasks().addAll(deadlines);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"bryantjandra"},"content":"        tasks.getTasks().addAll(others);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"bryantjandra"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Certainly, sir. Deadlines have now been sorted by date.\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"bryantjandra"},"content":"        sb.append(\"Here is your newly arranged list:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"bryantjandra"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"bryantjandra"},"content":"            sb.append(\" \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"bryantjandra"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":387}},{"path":"src/main/java/robert/RobertException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents exceptions specific to the Robert chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class RobertException extends Exception {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a new RobertException with the specified message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"     * @param message The detail message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    public RobertException(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"        super(message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":15}},{"path":"src/main/java/robert/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents all the recognized command types in the Robert chatbot.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public enum CommandType {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"    LIST,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    BYE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    MARK,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"    UNKNOWN,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    TODO,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    DELETE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    EVENT,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    EMPTY,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    FIND,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    UNMARK,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    SORT;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * Parses the given input string and returns the matching CommandType.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"     * @param input The command word (e.g., \"todo\", \"list\", \"event\").","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"     * @return The corresponding CommandType, or EMPTY if blank, or UNKNOWN if unrecognized.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    public static CommandType parseCommand(String input) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"            return EMPTY;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"            return BYE;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"        case \"list\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"            return LIST;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"            return MARK;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"            return UNMARK;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"            return DELETE;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"            return TODO;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"            return DEADLINE;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"        case \"event\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"            return EVENT;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        case \"find\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"            return FIND;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"        case \"sort\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"            return SORT;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"        default:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"bryantjandra":55}},{"path":"src/main/java/robert/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.javafx;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":" * Represents a dialog box consisting of an ImageView and a Label.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Creates a DialogBox with the specified text and image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        assert text !\u003d null : \"DialogBox text cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        assert img !\u003d null : \"DialogBox image cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        Circle clip \u003d new Circle(displayPicture.getFitWidth() / 2,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"                displayPicture.getFitHeight() / 2,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"                displayPicture.getFitWidth() / 2);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"     * Flips the dialog box such that the ImageView is on the left side.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"    private void flip() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"        db.dialog.getStyleClass().add(\"user-label\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"        return db;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"    public static DialogBox getRobertDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"        db.dialog.getStyleClass().add(\"robert-label\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"        db.flip();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"        return db;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"        db.flip();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"        db.dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryantjandra"},"content":"        return db;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"bryantjandra":83}},{"path":"src/main/java/robert/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.javafx;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"public class Launcher {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"bryantjandra":12}},{"path":"src/main/java/robert/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.javafx;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import robert.Robert;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":" * A GUI for the Robert chatbot using FXML.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    private final Robert robert \u003d new Robert(\"data/tasks.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"            stage.setTitle(\"Robert Chatbot\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"            stage.setResizable(true);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"            controller.setRobert(robert);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"            stage.show();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"bryantjandra":38}},{"path":"src/main/java/robert/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.javafx;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import robert.Robert;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":" * Controller for the main application window of the Robert chatbot.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":" * Manages the layout, initialization, and user interactions.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"public class MainWindow {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    private Robert robert;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    private Image robertImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Robert.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     * Initializes the Robert chatbot to this controller and shows the welcome message immediately.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     * @param r The Robert chatbot instance.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    public void setRobert(Robert r) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"        assert r !\u003d null : \"Robert instance cannot be null for MainWindow\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        this.robert \u003d r;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        String startup \u003d robert.getStartupMessage();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"                DialogBox.getRobertDialog(startup, robertImage)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"        );","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"     * Handles user input from the text field or \"Send\" button.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"        String response \u003d robert.getResponse(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"        if (response.startsWith(\"OOPS!!!\") || response.startsWith(\"OOPS\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"            dialogContainer.getChildren().add(DialogBox.getErrorDialog(response, robertImage));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"        } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"            dialogContainer.getChildren().add(DialogBox.getRobertDialog(response, robertImage));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"bryantjandra":67}},{"path":"src/main/java/robert/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import robert.command.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":" * Parses user commands into CommandType enums.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"     * Parses a full command string and returns the corresponding CommandType.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * @param fullCommand The full user input string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     * @return A CommandType enum representing the command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    public static CommandType parse(String fullCommand) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        assert fullCommand !\u003d null : \"Parser.parse(...) received null fullCommand\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        if (fullCommand.trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        return CommandType.parseCommand(parts[0]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":23}},{"path":"src/main/java/robert/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":" * Deals with loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    private String filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"     * @param filePath The path of the file where tasks will be stored and loaded from.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"     * Loads tasks from the file specified by filePath.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"            f.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"        try (Scanner sc \u003d new Scanner(f)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"                Task t \u003d parseTaskLine(line);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"                    tasks.add(t);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"                }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"        return tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"     * Parses a single line from storage into a Task object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"     * @param line One line from the tasks file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"     * @return The corresponding Task object (Todo/Deadline/Event), or null if line is invalid.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"    private Task parseTaskLine(String line) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"        String doneFlag \u003d parts[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"        switch (type) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"        case \"T\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"            task \u003d new Todo(parts[2].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"            break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"        case \"D\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryantjandra"},"content":"                return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryantjandra"},"content":"            task \u003d new Deadline(parts[2].trim(), parts[3].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryantjandra"},"content":"            break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryantjandra"},"content":"        case \"E\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryantjandra"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryantjandra"},"content":"                return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryantjandra"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryantjandra"},"content":"            task \u003d new Event(parts[2].trim(), parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryantjandra"},"content":"            break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryantjandra"},"content":"        default:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryantjandra"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryantjandra"},"content":"        if (\"1\".equals(doneFlag)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryantjandra"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryantjandra"},"content":"        return task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryantjandra"},"content":"     * Saves the given list of tasks to the file specified by filePath.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryantjandra"},"content":"     * @param tasks An ArrayList of Task objects to be saved.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryantjandra"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryantjandra"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryantjandra"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryantjandra"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryantjandra"},"content":"            fw.write(convertTaskToString(t) + System.lineSeparator());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryantjandra"},"content":"        fw.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryantjandra"},"content":"     * Converts a Task to a storage-friendly string representation.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryantjandra"},"content":"     * @param t A Task object (Todo, Deadline, or Event).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryantjandra"},"content":"     * @return A line to be written into the storage file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryantjandra"},"content":"    private String convertTaskToString(Task t) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryantjandra"},"content":"        String doneFlag \u003d t.getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryantjandra"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryantjandra"},"content":"            return \"T|\" + doneFlag + \"|\" + t.getDescription();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bryantjandra"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bryantjandra"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bryantjandra"},"content":"            return \"D|\" + doneFlag + \"|\" + d.getDescription() + \"|\" + d.getByDate();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bryantjandra"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bryantjandra"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bryantjandra"},"content":"            return \"E|\" + doneFlag + \"|\" + e.getDescription() + \"|\" + e.getStartTime() + \"|\" + e.getEndTime();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bryantjandra"},"content":"        } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bryantjandra"},"content":"            return \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bryantjandra"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"bryantjandra":135}},{"path":"src/main/java/robert/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":" * Represents a task that must be done before a specific date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a robert.task.Deadline task with a description and a \u0027by\u0027 date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"     * @param description The task description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"     * @param by          The deadline date (as a string).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * @throws DateTimeParseException If the provided date string cannot be parsed into a valid LocalDate.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        assert description !\u003d null : \"Deadline description cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        assert by !\u003d null : \"Deadline \u0027by\u0027 date string cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"        this.byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        return byDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of the deadline. This includes","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     * the status, description, and deadline date formatted as \"MMM dd yyyy\".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     * @return The string representation of the deadline in the format: [D][status] description (by: MMM dd yyyy)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"                + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":44}},{"path":"src/main/java/robert/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    protected String startTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    protected String endTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a robert.task.Event with a description, a start time, and an end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"     * @param description The event\u0027s description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"     * @param startTime        The start time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"     * @param endTime          The end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        assert description !\u003d null : \"Event description cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        assert startTime !\u003d null : \"Event startTime cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        assert endTime !\u003d null : \"Event endTime cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"        return startTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        return endTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of the event. This includes the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     * status, the description, and time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":46}},{"path":"src/main/java/robert/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents a single task with a description and a done-status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"    protected String description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     * Returns the status icon of the task (X if done, blank otherwise).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"     * @return \"X\" if done, otherwise \" \".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"     * @return The task\u0027s description string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"        return description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of this task, including done-status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"     * @return A string representation of the task, e.g., \"[X] read book\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":61}},{"path":"src/main/java/robert/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":" * Maintains a list of Task objects and provides operations to modify them.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"     * @param t The Task to add.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"    public void add(Task t) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"        assert t !\u003d null : \"Cannot add a null Task to TaskList\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        tasks.add(t);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"     * @return The Task at that index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"     * @return The removed Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"     * Returns the current number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"    public int size() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"     * Returns the underlying list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":74}},{"path":"src/main/java/robert/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":" * Represents a task without any date/time attached (a simple robert.task.Todo).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"     * Constructs a robert.task.Todo with the specified description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"     * @param description The description of the robert.task.Todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"     * Returns the string representation of the todo. This includes the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"     * status and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     * @return The string representation of the todo.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" stylesheets\u003d\"@DialogBox.css\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"         prefWidth\u003d\"420.0\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"        \u003cLabel fx:id\u003d\"dialog\" wrapText\u003d\"true\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"               maxWidth\u003d\"280\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"               minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\"/\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"bryantjandra":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"            fx:controller\u003d\"robert.javafx.MainWindow\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"                    layoutX\u003d\"0.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"                    layoutY\u003d\"0.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"                    prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"bryantjandra":44}},{"path":"src/test/java/robert/RobertTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":" * Tests the main Robert chatbot logic (excluding GUI).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"public class RobertTest {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    private Robert robert;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        robert \u003d new Robert(\"data/testTasks.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    public void getResponse_todoCommand_validTaskAdded() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        String response \u003d robert.getResponse(\"todo read book\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"Certainly, sir. I have added this task:\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"                \"Expected polite add-task message in response\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"read book\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"                \"Should mention the newly added task in the response\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    public void getResponse_todoWithoutDescription_showsError() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        String response \u003d robert.getResponse(\"todo\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"The description of a todo cannot be empty.\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"                \"Should show an error about empty description.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    public void getResponse_deadlineWithValidDate_showsSuccess() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        String response \u003d robert.getResponse(\"deadline return book /by 2025-01-01\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"Certainly, sir. I have added this task:\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"                \"Expected success message for valid deadline\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"return book\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"                \"Response should mention the new deadline\u0027s description\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"    public void getResponse_deadlineWithInvalidDate_showsDateError() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        String response \u003d robert.getResponse(\"deadline return book /by 2025-02-30\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"Sir, the specified deadline date is invalid.\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"                \"Should detect invalid date (Feb 30) and show an error.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"    public void getResponse_unknownCommand_showsError() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"        String response \u003d robert.getResponse(\"gibberish\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(response.contains(\"I am afraid I did not understand that command.\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"                \"Should show unknown command error\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":58}},{"path":"src/test/java/robert/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import robert.command.CommandType;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":" * Tests the Parser class.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"     * Tests if parse(\"\") returns CommandType.UNKNOWN.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    public void parse_emptyString_returnUnknown() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(CommandType.UNKNOWN, result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"     * Tests if parse(\"todo read book\") → CommandType.TODO.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    public void parse_todoCommand_returnTodo() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(CommandType.TODO, result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"     * Example: parse(\"bye\") → BYE.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    public void parse_byeCommand_returnBye() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(CommandType.BYE, result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"     * Tests that parse does not return null even for random strings.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"    public void parse_randomInput_returnNotNull() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        CommandType result \u003d Parser.parse(\"randomstuff\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        assertNotNull(result);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":50}},{"path":"src/test/java/robert/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.io.File;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Deadline;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"import robert.task.Todo;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":" * Tests the Storage class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    @TempDir","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    File tempFolder;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"    public void load_emptyFile_returnsEmptyList() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"        File emptyFile \u003d new File(tempFolder, \"testTasks.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"        emptyFile.createNewFile();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        Storage storage \u003d new Storage(emptyFile.getPath());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    public void saveAndLoad_validTasks_success() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"        File testFile \u003d new File(tempFolder, \"testTasks.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        Storage storage \u003d new Storage(testFile.getPath());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"        tasksToSave.add(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        tasksToSave.add(new Deadline(\"Submit assignment\", \"2025-01-01\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        storage.save(tasksToSave);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(\"[T][ ] Buy groceries\", loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(\"[D][ ] Submit assignment (by: Jan 1 2025)\", loadedTasks.get(1).toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"    public void load_malformedLine_ignoreOrHandleGracefully() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"        File testFile \u003d new File(tempFolder, \"testTasks.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"        Files.writeString(testFile.toPath(), \"???|???|malformed\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"        Storage storage \u003d new Storage(testFile.getPath());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":61}},{"path":"src/test/java/robert/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":" * Tests the Deadline class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    public void constructor_validDate_success() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        Deadline d \u003d new Deadline(\"Finish project\", \"2025-01-10\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(LocalDate.of(2025, 1, 10), d.getByDate());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    public void toString_showsCorrectFormat() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        Deadline d \u003d new Deadline(\"Submit report\", \"2024-12-31\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        String expected \u003d \"[D][ ] Submit report (by: Dec 31 2024)\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(expected, d.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":26}},{"path":"src/test/java/robert/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":" * Tests the Event class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"public class EventTest {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"    public void constructor_validInputs_success() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"        Event e \u003d new Event(\"Concert\", \"2025-01-01\", \"2025-01-02\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(\"2025-01-01\", e.getStartTime());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(\"2025-01-02\", e.getEndTime());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    public void toString_showsCorrectFormat() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"        Event e \u003d new Event(\"Conference\", \"2025-03-05\", \"2025-03-07\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        String expected \u003d \"[E][ ] Conference (from: 2025-03-05 to: 2025-03-07)\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(expected, e.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":25}},{"path":"src/test/java/robert/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":" * Tests the TaskList class.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"     * Creates a new (empty) TaskList before each test.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"     * Tests adding a task increases the size by 1.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"    public void add_singleTask_sizeIncreases() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"     * Tests remove() returns the correct task and reduces size.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"    public void remove_indexZero_returnsTaskAndReducesSize() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryantjandra"},"content":"        Todo first \u003d new Todo(\"task1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryantjandra"},"content":"        Todo second \u003d new Todo(\"task2\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(first);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(second);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryantjandra"},"content":"        Task removed \u003d taskList.remove(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryantjandra"},"content":"        assertSame(first, removed, \"Removed task should be the first one added\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(1, taskList.size(), \"TaskList size should be 1 after removal\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryantjandra"},"content":"     * Tests get() returns the correct Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryantjandra"},"content":"    public void get_validIndex_returnsCorrectTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryantjandra"},"content":"        Todo first \u003d new Todo(\"task1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(first);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryantjandra"},"content":"        Task t \u003d taskList.get(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryantjandra"},"content":"        assertSame(first, t);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryantjandra"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryantjandra"},"content":"     * Tests getTasks() returns the underlying ArrayList with correct tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryantjandra"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryantjandra"},"content":"    public void getTasks_nonEmptyList_correctTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryantjandra"},"content":"        Todo t1 \u003d new Todo(\"t1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryantjandra"},"content":"        Todo t2 \u003d new Todo(\"t2\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(t1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryantjandra"},"content":"        taskList.add(t2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryantjandra"},"content":"        ArrayList\u003cTask\u003e actualList \u003d taskList.getTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(2, actualList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(actualList.contains(t1));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(actualList.contains(t2));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"bryantjandra":79}},{"path":"src/test/java/robert/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"package robert.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":" * Tests the basic Task class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"public class TaskTest {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"    public void constructor_newTask_notDoneByDefault() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"        Task t \u003d new Task(\"Read book\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"        assertFalse(t.isDone, \"New Task should not be done by default\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"    public void markAsDone_changesIsDoneToTrue() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryantjandra"},"content":"        Task t \u003d new Task(\"Do laundry\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryantjandra"},"content":"        t.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryantjandra"},"content":"        assertTrue(t.isDone);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"    public void markAsNotDone_changesIsDoneToFalse() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryantjandra"},"content":"        Task t \u003d new Task(\"Do laundry\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryantjandra"},"content":"        t.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryantjandra"},"content":"        t.markAsNotDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryantjandra"},"content":"        assertFalse(t.isDone);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryantjandra"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryantjandra"},"content":"    public void toString_correctFormat() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryantjandra"},"content":"        Task t \u003d new Task(\"Sample task\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryantjandra"},"content":"        String expected \u003d \"[ ] Sample task\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryantjandra"},"content":"        assertEquals(expected, t.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryantjandra"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryantjandra"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"bryantjandra":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryantjandra"},"content":"todo read book","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryantjandra"},"content":"deadline submit report /by 2025-01-25","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryantjandra"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryantjandra"},"content":"mark 1","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryantjandra"},"content":"mark 2","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryantjandra"},"content":"unmark 2","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryantjandra"},"content":"todo buy groceries","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryantjandra"},"content":"event team outing /from Sunday 10am /to 1pm","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryantjandra"},"content":"deadline renew passport /by 2025-01-31","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryantjandra"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryantjandra"},"content":"bye","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"bryantjandra":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"java -classpath ..\\bin Robert \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryantjandra"},"content":"# delete previous data file if it exists","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryantjandra"},"content":"if [ -f \"./data/tasks.txt\" ]; then","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryantjandra"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryantjandra"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryantjandra"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryantjandra"},"content":"# compile the code into the bin folder, recursively including all Java files","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryantjandra"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src/main/java -name \"*.java\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryantjandra"},"content":"java -classpath ../bin robert.Robert \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bryantjandra":8,"-":35}}]
