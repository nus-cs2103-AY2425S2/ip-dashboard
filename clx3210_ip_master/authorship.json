[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"# Olivero project template","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"This is a project template for a greenfield Java project. It\u0027s named _Olivero_. Given below are instructions on how to use it.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"1. After that, locate the `src/main/java/olivero.Olivero.java` file, right-click it, and choose `Run olivero.Olivero.main()` (if the code editor is showing compile olivero.exceptions, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"   Howdy-do! I\u0027m Olivero, What can I do for you?","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"clx3210":7,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    mainClass.set(\"olivero.Olivero\")","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"    archiveBaseName \u003d \"olivero\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"tasks.javadoc {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"    outputs.upToDateWhen { false }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"checkstyle {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"clx3210":12,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"# Olivero User Guide","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"clx3210":1,"-":29}},{"path":"src/main/java/olivero/Olivero.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.commands.Command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.CommandParseException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageLoadException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.parsers.Parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":" * Represents the main entry point for the program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"public class Olivero {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    private final Ui textUi;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    private final Parser commandParser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * Constructs an {@code Olivero} object with the provide file path","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     * for saving data.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     * @param storagePath The path to save data files to.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    public Olivero(String storagePath) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"        this.storage \u003d new Storage(storagePath);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"        this.textUi \u003d new Ui();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"        this.commandParser \u003d new Parser();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     * Starts the entire program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     * @param args Optional command line arguments passed into the program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"        new Olivero(\"data/tasks.txt\").run();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"     * Tries to load previously saved tasks from disk if present,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"     * otherwise a new task list is used.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"    public void setupResources() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"            switch (e.getReason()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"            case DATA_CORRUPT:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"                textUi.displayError(Responses.RESPONSE_SAVE_FILE_CORRUPT);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"            case DATA_MISSING:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"                textUi.displayError(Responses.RESPONSE_SAVE_FILE_NOT_FOUND);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"            default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"     * Setups the necessary resources for the bot,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"     * then starts the bot in a loop.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"    public void run() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"        textUi.displayGreetingMessage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"        setupResources();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"        loop();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"     * Loops repeatedly to read user input, parse and execute supported commands","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"     * until user enters an exit command.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"    public void loop() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"            try {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"                String rawCommand \u003d textUi.readCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"                Command command \u003d commandParser.parse(rawCommand);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"                command.execute(taskList, textUi, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"            } catch (CommandParseException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"                textUi.displayError(e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"clx3210":92,"-":2}},{"path":"src/main/java/olivero/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":" * Ends the program execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"     * Displays an exit message to the provided ui when called.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"        ui.displayExitMessage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"        return true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":31}},{"path":"src/main/java/olivero/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":" * The base representation for executable commands to be extended from.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"     * Performs the tasks according to the behaviour of the command when called.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     * Returns a boolean flag specifying if the executing program should exit.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * @return True if this command terminates program execution; False otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":29}},{"path":"src/main/java/olivero/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.UnsupportedCommandException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":" * Represents an executable command type.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"public enum CommandType {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"    /** ToDo command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"    /** Deadline command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    /** Event command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    /** List command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    LIST(\"list\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    /** Mark command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"    /** Unmark command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    /** Delete command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"    /** Exit command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"    /** Find command type. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    FIND(\"find\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    private final String tag;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"    CommandType(String tag) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"     * Returns the enum constant of this type with the specified name,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"     * where the provided string must exactly match the value specified in","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"     * some enum value\u0027s string value. Exception is thrown if no match is found.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     * @param value The string value to match against that of existing enum values.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"     * @return The unique Enum value associated with that string\u0027s value, if any.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"     * @throws UnsupportedCommandException When {@code value} does not match any of the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"     *                                     defined enum values.","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"    public static CommandType asCommandType(String value) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"            return CommandType.valueOf(value.toUpperCase());","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"            throw new UnsupportedCommandException();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"     * Returns the lower case value tag associated with the given","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"     * enum value.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"        return this.tag;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"clx3210":68}},{"path":"src/main/java/olivero/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * Creates and stores a deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    /** Usage information for the deadline command. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_USAGE \u003d \"Example usage: \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"            + \"deadline \u003cdescription\u003e /by \u003cstart date\u003e\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    /** Display message when the \"/by\" field of the command syntax is invalid. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_INVALID_BY_TOKEN \u003d \"Did you correctly \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"            + \"specify the \u0027/by \u003cend date\u003e\u0027 of your deadline task?\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    /** Display message for an empty deadline task description. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"HUH? \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"            + \"You can\u0027t have an empty deadline task description...\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    private final Deadline deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     * Constructs the executable command to add the provided deadline task object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"     * @param deadline The deadline task object to be added to a task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"     * Adds a deadline task to the provided task list and saves it into storage medium.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"     * Displays a success message if saving is successful, otherwise a failed message is","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"     * displayed on the ui.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"            ui.displayTaskResponse(deadline, tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(Responses.RESPONSE_SAVE_FILE_FAILED);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":58}},{"path":"src/main/java/olivero/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * Deletes a specified task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * Constructs an executable command to delete the task","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     * from a provided task list at the provided task number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number of the task to be deleted from the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     * Deletes a task with the given task number and saves the resulting task list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"     * into the provided storage medium.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     * \u003cp\u003e If the taskNumber provided from the constructor is out of the range of the provided","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     * task list, an invalid task number is displayed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        int taskSize \u003d tasks.getTaskSize();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003e taskSize || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"                    String.format(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"                            Responses.RESPONSE_INVALID_TASK_NUMBER,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"                            taskNumber));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"            return;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        Task removedTask \u003d tasks.removeTaskAt(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"        ui.displayDeleteTaskResponse(removedTask, tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(Responses.RESPONSE_SAVE_FILE_FAILED);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":57}},{"path":"src/main/java/olivero/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Event;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * Creates and saves an event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    /** Usage information for the event command. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_USAGE \u003d \"Example usage: event \u003cdescription\u003e \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"            + \"/from \u003cstart date\u003e /to \u003cend date\u003e\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    /** Display message for a missing or invalid \"/from\" token in the user input. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_INVALID_FROM \u003d \"Oh no!? \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"            + \"Did you correctly specify the \u0027/from \u003cstart date\u003e\u0027 of the event?\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    /** Display message for a missing or invalid \"/to\" token in the user input. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_INVALID_TO \u003d \"Oh no!? \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"            + \"Did you correctly specify the \u0027/to \u003cend date\u003e\u0027 of \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"            + \"the event?\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    /** Display message when \"/to\" token comes before \"/from\" in the command input. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_INVALID_DATE_ORDER \u003d \"Oh no!? \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"            + \"Did you mix up the order of /from and /to?\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    /** Display message for an empty event description. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"HUH? \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"            + \"You can\u0027t have an empty Event description...\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    private final Event event;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     * Constructs an executable command to add an event task to a task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"     * @param event The event task to be added on execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"        this.event \u003d event;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     * Adds an event task specified from the constructor into the provided list of tasks","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"     * and saves it into the provided storage medium.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"            tasks.addTask(event);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"            ui.displayTaskResponse(event, tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(Responses.RESPONSE_SAVE_FILE_FAILED);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":64}},{"path":"src/main/java/olivero/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":" * Finds all tasks with description containing the specified keyword.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"    /** Display message for an empty find command description. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"Search description can\u0027t be empty...\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    /** Usage information for the find command. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: find \u003cnon-empty description\u003e\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    private static final String RESPONSE_PREFIX \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * Constructs an executable command to list all tasks with description matching the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     * provided keyword.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     * @param keyword The search string to match task descriptions against.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"        String filteredList \u003d tasks","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"                .toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"        ui.displayMessage(RESPONSE_PREFIX, filteredList);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"clx3210":40}},{"path":"src/main/java/olivero/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":" * Displays the string representations of all saved tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"     * Lists out the information of all tasks provided by the list of tasks","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"     * into the provided ui.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"        ui.displayListResponse(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":24}},{"path":"src/main/java/olivero/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":" * Marks a task as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     * Constructs an executable command to mark a task at the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * given task number in a task list as completed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated with the task to be","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     *                   marked as complete.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     * Marks a task at the given task number specified from the constructor as complete.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"     * \u003cp\u003e If the given task number is out of the range of the provided list of tasks or","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     * the task fails to save into storage, a context-specific invalid message is","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     * displayed on the provided {@code ui}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        int taskSize \u003d tasks.getTaskSize();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003e taskSize || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"                    String.format(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"                            Responses.RESPONSE_INVALID_TASK_NUMBER,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"                            taskNumber));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"            return;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        tasks.markTaskAt(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"        ui.displayMarkResponse(tasks, taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(Responses.RESPONSE_SAVE_FILE_FAILED);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":56}},{"path":"src/main/java/olivero/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.ToDo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * Creates and saves a ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    /** Usage information for the todo command. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: todo \u003cdescription\u003e\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"    /** Display message for an empty todo task description. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"You can\u0027t have an empty Todo...\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    private final ToDo toDo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * Constructs an executable command to add the given ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     * @param toDo The task to be added to a task list on command execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    public ToDoCommand(ToDo toDo) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     * Adds the given toDo task provided from the constructor","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"     * into the given list of tasks {@code task} and saves it into the {@code storage} medium.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * \u003cp\u003e Displays a success message to {@code ui} or an error response","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     * if saving to storage failed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"            tasks.addTask(toDo);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"            ui.displayTaskResponse(toDo, tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(Responses.RESPONSE_SAVE_FILE_FAILED);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":52}},{"path":"src/main/java/olivero/commands/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.commands;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":" * Un marks a given task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     * Creates an UnMarkCommand instance with the specified 1-indexed task number","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * in a task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber the task number for a task in the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    public UnMarkCommand(int taskNumber) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     * Sets the status of the specified task in the provided {@code tasks} as incomplete/undone.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     * \u003cp\u003e Updates the {@code storage} medium with the updated task list and displays","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"     * a response onto the {@code ui} provided.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     * \u003cp\u003e If the task number given is out of the range of the tasks, then an error message is displayed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     * Otherwise, if storage saving fails, then an error message is also displayed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"     * @param ui The User interface for the command to output messages to during execution.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * @param storage Storage medium for saving or loading tasks from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        int taskSize \u003d tasks.getTaskSize();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003e taskSize || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"                    String.format(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"                            Responses.RESPONSE_INVALID_TASK_NUMBER,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"                            taskNumber));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"            return;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        tasks.unmarkTaskAt(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"        ui.displayUnMarkResponse(tasks, taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"            ui.displayMessage(Responses.RESPONSE_SAVE_FILE_FAILED);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":56}},{"path":"src/main/java/olivero/common/Responses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.common;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Common display responses that will be shown to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public final class Responses {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    /** Welcome message when the program starts. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"    public static final String GREETING_MESSAGE \u003d \"Howdy-do! I\u0027m Olivero, \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    /** Display message when a save file cannot be found. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_SAVE_FILE_NOT_FOUND \u003d \"Can\u0027t seem to \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"            + \"find a previous save file..\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    /** Display message when a save file is corrupted. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_SAVE_FILE_CORRUPT \u003d \"Oh no.. your \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"            + \"previous save file may have been corrupted..\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    /** Display message when saving to disk failed. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_SAVE_FILE_FAILED \u003d \"Oh no.. \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"            + \"I can\u0027t seem to save your file..\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"    /** Display message when an expected numerical input is invalid. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_INVALID_NUMBER_FORMAT \u003d \"Did you pass \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"            + \"in a valid integer? Your input: %s\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    /** Display message when an expected date input is invalid. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_INVALID_DATE_FORMAT \u003d \"Oh... \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"            + \"Seems like you formatted your date(s) wrongly?\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"            + \"Correct date format: yyyy-mm-dd HHmm (e.g. 2019-10-15 1800)\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    /** Display message when a user input does not match any supported commands. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_UNKNOWN_COMMAND \u003d \"W-WHAT?! \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"            + \"I do not understand what you just said :(\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    /** Display message when a later date happens before an earlier date. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_INVALID_DATE_ORDER \u003d \"/from date \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"            + \"CANNOT be AFTER /to date!!\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    /** Display message when using a non-existent task number of the task list */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"    public static final String RESPONSE_INVALID_TASK_NUMBER \u003d \"No task with \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"            + \"task number %d exists..\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":47}},{"path":"src/main/java/olivero/exceptions/CommandParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.exceptions;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Signals an error when parsing a raw command input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public class CommandParseException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"     * Creates an exception object representing an exceptional command","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"     * parsing.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"     * @param message Message to be potentially displayed to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    public CommandParseException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     * Creates an exception object representing an exceptional command","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"     * parsing.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     * @param messages List of messages to be displayed separated by line separators.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    public CommandParseException(String... messages) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"        super(String.join(System.lineSeparator(), messages));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"clx3210":27}},{"path":"src/main/java/olivero/exceptions/StorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.exceptions;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Signals an error when loading a stored object from disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public class StorageLoadException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"     * Identifies the reason for the enclosing exception.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"    public enum Reason {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"        /** Enum value for missing data. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"        DATA_MISSING,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"        /** Enum value for corrupted data. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"        DATA_CORRUPT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    /** Cause of the current exception object. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    private final Reason reason;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * Constructs a throwable exception with the specified message and reason.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     * @param message Message to specify more details of the exceptional event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     * @param reason Cause of the exceptional event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    public StorageLoadException(String message, Reason reason) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * Returns an enum {@code Reason} specifying the cause of the exception.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     * @return The {@code Reason} enum.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"    public Reason getReason() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"        return reason;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":43}},{"path":"src/main/java/olivero/exceptions/StorageSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.exceptions;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Signals an error in saving data to disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public class StorageSaveException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"     * Constructs a throwable exception.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"     * @param message Message to specify more details of the exceptional event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"    public StorageSaveException(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":16}},{"path":"src/main/java/olivero/exceptions/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.exceptions;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Signals an error when parsing raw task data.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public class TaskParseException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"    public TaskParseException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"clx3210":14}},{"path":"src/main/java/olivero/exceptions/UnsupportedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.exceptions;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Signals an invalid conversion to a {@code CommandType} enum.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public class UnsupportedCommandException extends RuntimeException {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"clx3210":7}},{"path":"src/main/java/olivero/parsers/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.parsers;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * Provides utility members for datetime parsing, along with fixed formats","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" * for datetime processing and displaying.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"public final class DateParser {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"    /** Fixed format for all datetime data processing. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    public static final DateTimeFormatter INPUT_DATE_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"            .ofPattern(\"yyyy-M-d Hmm\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    /** Fixed format for displaying datetime objects onto the ui. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    public static final DateTimeFormatter DISPLAY_DATE_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"            .ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    private DateParser() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     * Parses the given input date string into a {@code LocalDateTime} object","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     * based on formatting of {@link #INPUT_DATE_FORMATTER}, and returns the parsed object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     * @param dateString The datetime string to be parsed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"     * @return The parsed {@code LocalDateTime} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * @throws DateTimeParseException If the format of the provided {@code dateString}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     *                                is invalid or does not match {@link #INPUT_DATE_FORMATTER}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"    public static LocalDateTime parseInputDate(String dateString) throws DateTimeParseException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        return LocalDateTime.parse(dateString, INPUT_DATE_FORMATTER);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"     * Returns the string representation of the provided {@code LocalDateTime} object","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"     * formatted using {@link #DISPLAY_DATE_FORMATTER}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"     * @param date The {@code LocalDateTime} object to be formatted into a string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     * @return The formatted string of the given date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"     * @throws DateTimeException If an error occurs during formatting","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"    public static String asDisplayDateString(LocalDateTime date) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"        return date.format(DISPLAY_DATE_FORMATTER);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"     * Returns the string representation of the provided {@code LocalDateTime} object","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"     * formatted using {@link #INPUT_DATE_FORMATTER}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"     * @param date The {@code LocalDateTime} object to be formatted into a string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"     * @return The formatted string of the given date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"     * @throws DateTimeException If an error occurs during formatting","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"    public static String asInputDateString(LocalDateTime date) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"        return date.format(INPUT_DATE_FORMATTER);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"clx3210":65}},{"path":"src/main/java/olivero/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.parsers;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.commands.ByeCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.commands.Command;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.commands.CommandType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"import olivero.commands.DeadlineCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"import olivero.commands.DeleteCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"import olivero.commands.EventCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"import olivero.commands.FindCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"import olivero.commands.ListCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"import olivero.commands.MarkCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"import olivero.commands.ToDoCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"import olivero.commands.UnMarkCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.CommandParseException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.UnsupportedCommandException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Event;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.ToDo;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":" * Parses commands from the user input and returns a {@code Command} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"public class Parser {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    private static final String BY_TOKEN \u003d \" /by \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    private static final String FROM_TOKEN \u003d \" /from \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    private static final String TO_TOKEN \u003d \" /to \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"    private EventCommand setupEvent(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"        int fromStartId \u003d arguments.indexOf(FROM_TOKEN);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"        if (fromStartId \u003d\u003d -1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_INVALID_FROM,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"        int fromEndId \u003d fromStartId + FROM_TOKEN.length();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"        int toStartId \u003d arguments.indexOf(TO_TOKEN);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"        if (toStartId \u003d\u003d -1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_INVALID_TO,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        // check for invalid ordering of /from and /to","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        if (toStartId \u003c fromStartId) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_INVALID_DATE_ORDER,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"        String description \u003d arguments.substring(0, fromStartId).strip();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"                    EventCommand.MESSAGE_EMPTY_DESCRIPTION);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"        int toEndId \u003d toStartId + TO_TOKEN.length();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"        String fromDateString \u003d arguments.substring(fromEndId, toStartId).strip();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"        String toDateString \u003d arguments.substring(toEndId).strip();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"        LocalDateTime fromDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"        LocalDateTime toDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"            fromDate \u003d DateParser.parseInputDate(fromDateString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"            toDate \u003d DateParser.parseInputDate(toDateString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(Responses.RESPONSE_INVALID_DATE_FORMAT);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(Responses.RESPONSE_INVALID_DATE_ORDER);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"        return new EventCommand(new Event(description, fromDate, toDate, false));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"    private DeadlineCommand setupDeadline(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"        int byStartId \u003d arguments.indexOf(BY_TOKEN);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"        if (byStartId \u003d\u003d -1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"                    DeadlineCommand.MESSAGE_INVALID_BY_TOKEN,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"                    DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"        String description \u003d arguments.substring(0, byStartId).strip();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(DeadlineCommand.MESSAGE_EMPTY_DESCRIPTION);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"        int byEndId \u003d byStartId + BY_TOKEN.length();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"        String endDateString \u003d arguments.substring(byEndId).strip();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clx3210"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clx3210"},"content":"            endDate \u003d DateParser.parseInputDate(endDateString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clx3210"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(Responses.RESPONSE_INVALID_DATE_FORMAT);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clx3210"},"content":"        return new DeadlineCommand(new Deadline(description, endDate, false));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clx3210"},"content":"    private ToDoCommand setupToDo(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clx3210"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clx3210"},"content":"                    ToDoCommand.MESSAGE_EMPTY_DESCRIPTION,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clx3210"},"content":"                    ToDoCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clx3210"},"content":"        return new ToDoCommand(new ToDo(arguments.strip(), false));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clx3210"},"content":"    private ListCommand setupList() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clx3210"},"content":"        return new ListCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clx3210"},"content":"    private MarkCommand setupMark(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clx3210"},"content":"            int taskNumber \u003d Integer.parseInt(arguments.strip());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clx3210"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clx3210"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clx3210"},"content":"                    String.format(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clx3210"},"content":"                            Responses.RESPONSE_INVALID_NUMBER_FORMAT,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clx3210"},"content":"                            arguments));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clx3210"},"content":"    private UnMarkCommand setupUnMark(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clx3210"},"content":"            int taskNumber \u003d Integer.parseInt(arguments.strip());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clx3210"},"content":"            return new UnMarkCommand(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clx3210"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clx3210"},"content":"                    String.format(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clx3210"},"content":"                            Responses.RESPONSE_INVALID_NUMBER_FORMAT,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clx3210"},"content":"                            arguments));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clx3210"},"content":"    private DeleteCommand setupDelete(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clx3210"},"content":"            int taskNumber \u003d Integer.parseInt(arguments.strip());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clx3210"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clx3210"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clx3210"},"content":"                    String.format(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clx3210"},"content":"                            Responses.RESPONSE_INVALID_NUMBER_FORMAT,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clx3210"},"content":"                            arguments));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clx3210"},"content":"    private FindCommand setupFind(String arguments) throws CommandParseException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clx3210"},"content":"        if (arguments.strip().isBlank()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clx3210"},"content":"                    FindCommand.MESSAGE_EMPTY_DESCRIPTION,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clx3210"},"content":"                    FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clx3210"},"content":"        return new FindCommand(arguments.strip());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clx3210"},"content":"    private ByeCommand setupExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clx3210"},"content":"        return new ByeCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clx3210"},"content":"     * Parses the raw user input into an executable {@code Command} object,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clx3210"},"content":"     * and returns it.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clx3210"},"content":"     * @param rawInput The user input containing the raw command string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clx3210"},"content":"     * @return An executable {@code Command} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"clx3210"},"content":"     * @throws CommandParseException If the provided user input cannot be formatted","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"clx3210"},"content":"     *                               into any of the existing supported {@code Command} types or subtypes.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"clx3210"},"content":"    public Command parse(String rawInput) throws CommandParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"clx3210"},"content":"        int idx \u003d rawInput.indexOf(\" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"clx3210"},"content":"        CommandType commandType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"clx3210"},"content":"            commandType \u003d CommandType.asCommandType(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"clx3210"},"content":"                    idx \u003e -1 ? rawInput.substring(0, idx) : rawInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"clx3210"},"content":"        } catch (UnsupportedCommandException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"clx3210"},"content":"            throw new CommandParseException(Responses.RESPONSE_UNKNOWN_COMMAND);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"clx3210"},"content":"        String argumentString \u003d idx \u003e -1 ? rawInput.substring(idx) : \"\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"clx3210"},"content":"        return switch (commandType) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"clx3210"},"content":"        case TODO -\u003e setupToDo(argumentString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"clx3210"},"content":"        case DEADLINE -\u003e setupDeadline(argumentString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"clx3210"},"content":"        case EVENT -\u003e setupEvent(argumentString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"clx3210"},"content":"        case LIST -\u003e setupList();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"clx3210"},"content":"        case MARK -\u003e setupMark(argumentString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"clx3210"},"content":"        case UNMARK -\u003e setupUnMark(argumentString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"clx3210"},"content":"        case DELETE -\u003e setupDelete(argumentString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"clx3210"},"content":"        case FIND -\u003e setupFind(argumentString);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"clx3210"},"content":"        case BYE -\u003e setupExit();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"clx3210"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":196}},{"path":"src/main/java/olivero/parsers/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.parsers;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.TaskParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Event;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.ToDo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":" * Parses raw tasks into a {@code TaskList} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"public class TaskParser {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"    /** Argument separator used in the raw data formatting to demarcate arguments of each task. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    public static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     * Returns a {@code TaskList} object that has been parsed from the raw string input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * @param rawTasks The raw string input containing the list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     * @return Parsed {@code TaskList} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     * @throws TaskParseException If the provided format of the raw tasks is invalid during parsing.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    public TaskList parse(String rawTasks) throws TaskParseException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"        if (rawTasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"            return taskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"        String[] lines \u003d rawTasks.split(System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"            String[] args \u003d line.split(Pattern.quote(SEPARATOR));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"            if (args.length \u003d\u003d 0) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"            switch (args[0]) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"            case \"T\": {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"                if (args.length !\u003d 3) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"                    throw new TaskParseException(\"Invalid arguments length for ToDo task.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"                boolean isDone \u003d Integer.parseInt(args[1]) \u003d\u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"                String description \u003d args[2];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"                taskList.addTask(new ToDo(description, isDone));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"            case \"D\": {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"                if (args.length !\u003d 4) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"                    throw new TaskParseException(\"Invalid arguments length for Deadline task.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"                boolean isDone \u003d Integer.parseInt(args[1]) \u003d\u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"                String description \u003d args[2];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"                LocalDateTime endDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"                try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"                    endDate \u003d DateParser.parseInputDate(args[3]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"                    throw new TaskParseException(\"Invalid ending date time format.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"                taskList.addTask(new Deadline(description, endDate, isDone));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"            case \"E\": {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"                if (args.length !\u003d 5) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"                    throw new TaskParseException(\"Invalid arguments length for Event task.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"                boolean isDone \u003d Integer.parseInt(args[1]) \u003d\u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"                String description \u003d args[2];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"                LocalDateTime startDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"                LocalDateTime endDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"                try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"                    startDate \u003d DateParser.parseInputDate(args[3]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"                    endDate \u003d DateParser.parseInputDate(args[4]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"                    throw new TaskParseException(\"Invalid ending date time format.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"                if (startDate.isAfter(endDate)) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"                    throw new TaskParseException(\"Start date should not be after the End date.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"                taskList.addTask(new Event(description, startDate, endDate, isDone));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"            default: {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"                throw new TaskParseException(\"Unsupported task type.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"        return taskList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"clx3210":92}},{"path":"src/main/java/olivero/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageLoadException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.StorageSaveException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.TaskParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"import olivero.parsers.TaskParser;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":" * Handles the saving and loading of {@code TaskList} into and from disk respectively.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"public class Storage {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    private final String dataPath;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    private final TaskParser taskParser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     * Constructs a storage instance to handle saving and loading of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     * @param dataPath the path to the file to be used for storing tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    public Storage(String dataPath) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"        taskParser \u003d new TaskParser();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"     * Saves a {@code TaskList} into disk at the location","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     * specified by the file path.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     * @param tasks TaskList object to be saved to disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"     * @throws StorageSaveException When the file present is a directory, or cannot be created.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"    public void save(TaskList tasks) throws StorageSaveException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"            saveData(tasks.asFormattedString());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"            throw new StorageSaveException(e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"     * Loads a {@code TaskList} from disk at the location specified","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"     * by the file path.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"     * @return TaskList object stored in the disk.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"     * @throws StorageLoadException When the data file at the specified","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"     *                              location does not exist or is corrupted.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"    public TaskList load() throws StorageLoadException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"        TaskList taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"            String contents \u003d loadFromFile();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"            taskList \u003d taskParser.parse(contents);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"            throw new StorageLoadException(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"                    e.getMessage(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"                    StorageLoadException.Reason.DATA_MISSING);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"        } catch (TaskParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"            throw new StorageLoadException(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"                    e.getMessage(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"                    StorageLoadException.Reason.DATA_CORRUPT);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"        return taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"    // TODO: throw custom exception instead of IOException","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"    private void saveData(String content) throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"        File f \u003d new File(dataPath);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"        File parent \u003d f.getParentFile();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"        // case: parent directories do not exist but cannot be created","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"        if (!parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"            throw new IOException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"        // case: file exists but is a directory","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"        if (f.exists() \u0026\u0026 f.isDirectory()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"            throw new IOException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"        // override or create a new file","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"        fw.write(content);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"        fw.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clx3210"},"content":"    private String loadFromFile() throws FileNotFoundException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clx3210"},"content":"        File f \u003d new File(dataPath);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clx3210"},"content":"        Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clx3210"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clx3210"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clx3210"},"content":"            stringBuilder.append(scanner.nextLine()).append(System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clx3210"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":102}},{"path":"src/main/java/olivero/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.tasks;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.parsers.DateParser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" * Represents a Deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     * Constructs a {@code Deadline} object with the given task description, end date","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"     * and initial completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     * @param endDate The deadline/end date of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"     * @param isDone The initial completion status of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"    public Deadline(String description, LocalDateTime endDate, boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"    public String toFormattedString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"        int doneStatus \u003d isDone() ? 1 : 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"        String dateString \u003d DateParser.asInputDateString(endDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"        return \"D\" + \" | \" + doneStatus + \" | \" + getDescription() + \" | \" + dateString;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"        String dateString \u003d DateParser.asDisplayDateString(endDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateString + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"clx3210":45}},{"path":"src/main/java/olivero/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.tasks;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.parsers.DateParser;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":" * Represents an Event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     * Constructs an Event task object containing a task description,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"     * a start date, end date and a task completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * @param description The task description of the event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     * @param startDate The starting date of the event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"     * @param endDate The end date of the event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     * @param isDone The completion status of the event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate, boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"        String endDateString \u003d DateParser.asDisplayDateString(endDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"        String startDateString \u003d DateParser.asDisplayDateString(startDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDateString","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"                + \" to: \" + endDateString + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"    public String toFormattedString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        int doneStatus \u003d isDone() ? 1 : 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        String startDateString \u003d DateParser.asInputDateString(startDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"        String endDateString \u003d DateParser.asInputDateString(endDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        return \"E\" + \" | \" + doneStatus + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"                + startDateString + \" | \" + endDateString;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"clx3210":53}},{"path":"src/main/java/olivero/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.tasks;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Represents an abstract task to be extended from.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"    private final String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"     * Constructs a default implementation of a subclass of {@code Task} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"     * @param description The task description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"     * @param isDone The task completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     * Sets the completion status of the task to the provided boolean value.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     * @param done The provided boolean value representing task completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"     * Returns true if this task is completed and false otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"     * @return Task completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"        return isDone;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"     * Returns the task description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"     * @return Task description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"        return description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"     * Returns the current {@code Task} object as a formatted string that can","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"     * be parsed or reconstructed to the original {@code Task} object or its subtypes.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"     * @return Formatted task string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"    public abstract String toFormattedString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"     * Returns the string representation of this task object or its subtype.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"     * @return Task string representation.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"clx3210":65}},{"path":"src/main/java/olivero/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.tasks;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import java.util.List;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"public class TaskList {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"     * Constructs an empty list of {@code Task} objects.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     * Constructs a task list object by copying from an existing provided","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"     * {@code TaskList} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"     * @param other The {@code TaskList} to be copied from.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"    public TaskList(TaskList other) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"        tasks \u003d new ArrayList\u003c\u003e(other.tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"    private TaskList(List\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     * Adds a new task into the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"     * Returns the description of the task at the given task number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated with some task in the list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"     * @return Task description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"     * @throws IllegalArgumentException If no tasks in the list have that task number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"    public String getTaskDescription(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"        return tasks.get(taskNumber - 1).toString();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"     * Removes the task with the given task number from the task list and","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"     * returns it.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated with the task in the list to be removed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"     * @return The removed {@code Task} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"     * @throws IllegalArgumentException If no tasks in the list have that task number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"    public Task removeTaskAt(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"        return tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"     * Marks the task with the given task number from the task list as completed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated with the task in the list to be marked.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"     * @throws IllegalArgumentException If no tasks in the list have that task number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"    public void markTaskAt(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"        tasks.get(taskNumber - 1).setDone(true);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"     * Marks the task with the given task number from the task list as incomplete.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated with the task in the list to be unmarked.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"     * @throws IllegalArgumentException If no tasks in the list have that task number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"    public void unmarkTaskAt(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clx3210"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clx3210"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clx3210"},"content":"        tasks.get(taskNumber - 1).setDone(false);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clx3210"},"content":"     * Returns the current number of tasks in the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clx3210"},"content":"     * @return Number of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clx3210"},"content":"    public int getTaskSize() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clx3210"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clx3210"},"content":"     * Returns the list of tasks in their formatted string form","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clx3210"},"content":"     * delimited with {@link System#lineSeparator()}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clx3210"},"content":"     * @return Delimited formatted task strings.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clx3210"},"content":"    public String asFormattedString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clx3210"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clx3210"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clx3210"},"content":"            stringBuilder","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clx3210"},"content":"                    .append(task.toFormattedString())","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clx3210"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clx3210"},"content":"        return stringBuilder.toString().strip();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clx3210"},"content":"     * Returns the list of tasks in their string representations","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clx3210"},"content":"     * delimited with {@link System#lineSeparator()}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clx3210"},"content":"     * @return Delimited task strings.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clx3210"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clx3210"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clx3210"},"content":"            message.append(i)","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clx3210"},"content":"                    .append(\". \")","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clx3210"},"content":"                    .append(tasks.get(i - 1))","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clx3210"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clx3210"},"content":"        return message.toString().strip();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clx3210"},"content":"     * Returns a task list of elements filtered to satisfy the given predicate.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clx3210"},"content":"     * @param predicate The filter predicate.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clx3210"},"content":"     * @return A {@code TaskList} object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clx3210"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clx3210"},"content":"        List\u003cTask\u003e filtered \u003d tasks","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clx3210"},"content":"                .stream()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clx3210"},"content":"                .filter(predicate)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clx3210"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clx3210"},"content":"        return new TaskList(filtered);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"clx3210":156}},{"path":"src/main/java/olivero/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.tasks;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"     * Constructs a ToDo task object containing the task description and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"     * @param description The task description of the {@code ToDo} task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"     * @param isDone The completion status of the {@code ToDo} task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    public String toFormattedString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"        int doneStatus \u003d isDone() ? 1 : 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"        return \"T\" + \" | \" + doneStatus + \" | \" + getDescription();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"clx3210":33}},{"path":"src/main/java/olivero/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import olivero.common.Responses;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"import olivero.tasks.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":" * Represents the User Interface for displaying and receiving","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * user inputs to and from respectively.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"public class Ui {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye-bye. See you soon!\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"    private final Scanner reader;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"     * Constructs a {@code Ui} object that takes user input from {@link System#in}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"     * and displays output to {@link System#out}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    public Ui() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"        reader \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"    public void displayGreetingMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"        displayMessage(Responses.GREETING_MESSAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"    public void displayExitMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        displayMessage(EXIT_MESSAGE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"     * Displays the response to a task command from the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"     * @param task The task to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"     * @param taskList The task list to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"    public void displayTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"        displayMessage(getTaskResponse(task, taskList));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"     * Displays the response to a delete task command from the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"     * @param task The task to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"     * @param taskList The task list to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"    public void displayDeleteTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"        displayMessage(\"OK, I\u0027ve removed this task: \\n \"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"                + task","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"                + taskList.getTaskSize() + \" task(s) in the list.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"     * Displays the response to a \u0027list\u0027 command to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"     * @param taskList The task list to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"    public void displayListResponse(TaskList taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"        displayMessage(\"Here are the tasks in your list:\\n\" + taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"     * Displays the response to a mark task command from the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"     * @param taskList The task list to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated the marked task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"    public void displayMarkResponse(TaskList taskList, int taskNumber) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"        displayMessage(\"Cool! I\u0027ve marked this task as done: \\n \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"                + taskList.getTaskDescription(taskNumber));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"     * Displays the response to an unmark task command from the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"     * @param taskList The task list to be used in the display response.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"     * @param taskNumber The task number associated the unmarked task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"    public void displayUnMarkResponse(TaskList taskList, int taskNumber) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"        displayMessage(\"Alright, I\u0027ve un-marked this task: \\n \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clx3210"},"content":"                + taskList.getTaskDescription(taskNumber));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clx3210"},"content":"    private String getTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clx3210"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clx3210"},"content":"                + \"\\nNow you have \" + taskList.getTaskSize()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clx3210"},"content":"                + \" \" + \"task(s) in the list.\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clx3210"},"content":"     * Displays error messages to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clx3210"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clx3210"},"content":"    public void displayError(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clx3210"},"content":"        displayMessage(\"Oh dear-o! \" + message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clx3210"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clx3210"},"content":"     * @param message The message to be displayed to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clx3210"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clx3210"},"content":"        System.out.println(\"\\t\" + DIVIDER);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clx3210"},"content":"        // add tabs after new line chars","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clx3210"},"content":"        String formattedMessage \u003d message.replace(\"\\n\", \"\\n\\t\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clx3210"},"content":"        System.out.println(\"\\t\" + formattedMessage + \"\\n\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clx3210"},"content":"        System.out.println(\"\\t\" + DIVIDER + \"\\n\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clx3210"},"content":"     * Displays each given message in the order they are specified,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clx3210"},"content":"     * delimited by {@link System#lineSeparator()} to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clx3210"},"content":"     * @param messages The messages to be displayed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clx3210"},"content":"    public void displayMessage(String... messages) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clx3210"},"content":"        String combinedMessage \u003d String.join(System.lineSeparator(), messages);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clx3210"},"content":"        displayMessage(combinedMessage);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clx3210"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clx3210"},"content":"     * Returns the entered user input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clx3210"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clx3210"},"content":"     * @return User input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clx3210"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clx3210"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clx3210"},"content":"        return reader.nextLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"clx3210":143}},{"path":"src/test/java/olivero/parsers/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.parsers;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"import olivero.commands.ByeCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"import olivero.commands.DeadlineCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"import olivero.commands.DeleteCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"import olivero.commands.EventCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"import olivero.commands.ListCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"import olivero.commands.MarkCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"import olivero.commands.ToDoCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"import olivero.commands.UnMarkCommand;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"import olivero.exceptions.CommandParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":" * Tests for the Parser member SUTs.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"    private static final String MESSAGE_EXPECTED_INVALID_INTEGER \u003d \"Did you pass \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"            + \"in a valid integer? Your input: %s\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"    public void parse_blankArguments_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"W-WHAT?! \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"                + \"I do not understand what you just said :(\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"        CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"                CommandParseException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"                    parser.parse(\"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"                });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"    public void parse_unsupportedCommand_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"W-WHAT?! \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"                + \"I do not understand what you just said :(\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"                CommandParseException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"                    parser.parse(\"todo12u4c14|||??::\u0027\u0027\u0027\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"                });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidDeadlineByTokenNoFrontWhitespace_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"Did you correctly \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"                + \"specify the \u0027/by \u003cend date\u003e\u0027 of your deadline task?\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"                + System.lineSeparator()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"                + \"Example usage: deadline \u003cdescription\u003e /by \u003cstart date\u003e\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"        CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"                CommandParseException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"                    parser.parse(\"deadline xx/by 202-123-3\" + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"                });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidDeadlineByTokenNoBackWhitespace_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"Did you correctly \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"                + \"specify the \u0027/by \u003cend date\u003e\u0027 of your deadline task?\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"                + System.lineSeparator()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"                + \"Example usage: deadline \u003cdescription\u003e /by \u003cstart date\u003e\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"        CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"                CommandParseException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"                    parser.parse(\"deadline xx /by202-123-3\" + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"                });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidDeadlineByTokenNoWhitespace_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"Did you correctly \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"                + \"specify the \u0027/by \u003cend date\u003e\u0027 of your deadline task?\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"                + System.lineSeparator()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"                + \"Example usage: deadline \u003cdescription\u003e /by \u003cstart date\u003e\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"        CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"                CommandParseException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"                    parser.parse(\"deadline xx/by1\" + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clx3210"},"content":"                });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidDeadlineByDateFormat_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"Oh... Seems like you formatted your date(s) wrongly?\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clx3210"},"content":"                + System.lineSeparator()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clx3210"},"content":"                + \"Correct date format: yyyy-mm-dd HHmm (e.g. 2019-10-15 1800)\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clx3210"},"content":"        CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clx3210"},"content":"                CommandParseException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clx3210"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clx3210"},"content":"                    parser.parse(\"deadline xx /by 202-123-3\" + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clx3210"},"content":"                });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clx3210"},"content":"    public void parse_validDeadlineFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clx3210"},"content":"                    DeadlineCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"deadline do this that /by 2025-1-2 1600\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clx3210"},"content":"    public void parse_validEventFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clx3210"},"content":"                    EventCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"event do this \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clx3210"},"content":"                            + \"that /from 2025-1-2 1600 /to 2025-1-3 000\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clx3210"},"content":"    public void parse_validTodoFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clx3210"},"content":"                    ToDoCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"todo read book\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clx3210"},"content":"    public void parse_validListFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clx3210"},"content":"                    ListCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"list\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clx3210"},"content":"    public void parse_validMarkFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clx3210"},"content":"                    MarkCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"mark 1\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidMarkTaskNumber_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clx3210"},"content":"        String[] invalidArgs \u003d {\" \", \"   \", \" a\", \" ^b\", \" -\", \" 1rhi1c\", \" @|||@!\", \"\", \" abb |\"};","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clx3210"},"content":"        for (String arg : invalidArgs) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"clx3210"},"content":"            String expected \u003d String.format(MESSAGE_EXPECTED_INVALID_INTEGER, arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"clx3210"},"content":"            CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"clx3210"},"content":"                    CommandParseException.class, () -\u003e new Parser().parse(String.format(\"mark%s\", arg)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"clx3210"},"content":"            assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"clx3210"},"content":"    public void parse_validUnMarkFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"clx3210"},"content":"                    UnMarkCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"unmark 1\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidUnMarkTaskNumber_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"clx3210"},"content":"        String[] invalidArgs \u003d {\" \", \"   \", \" asdsasd\", \" ^b\", \" -\", \" 1rhi1c\", \" @|||@!\", \"\", \" a\"};","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"clx3210"},"content":"        for (String arg : invalidArgs) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"clx3210"},"content":"            String expected \u003d String.format(MESSAGE_EXPECTED_INVALID_INTEGER, arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"clx3210"},"content":"            CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"clx3210"},"content":"                    CommandParseException.class, () -\u003e new Parser().parse(String.format(\"unmark%s\", arg)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"clx3210"},"content":"            assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"clx3210"},"content":"    public void parse_validDeleteFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"clx3210"},"content":"                    DeleteCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"delete 1\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"clx3210"},"content":"    public void parse_invalidDeleteTaskNumber_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"clx3210"},"content":"        String[] invalidArgs \u003d {\" asd\", \" b\", \" -\", \" 1rhi1c\", \" @|||@!\", \"\", \" \", \"  \"};","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"clx3210"},"content":"        for (String arg : invalidArgs) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"clx3210"},"content":"            String expected \u003d String.format(MESSAGE_EXPECTED_INVALID_INTEGER, arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"clx3210"},"content":"            CommandParseException exception \u003d assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"clx3210"},"content":"                    CommandParseException.class, () -\u003e new Parser().parse(String.format(\"delete%s\", arg)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"clx3210"},"content":"            assertEquals(expected, exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"clx3210"},"content":"    public void parse_validByeFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"clx3210"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"clx3210"},"content":"            assertInstanceOf(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"clx3210"},"content":"                    ByeCommand.class,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"clx3210"},"content":"                    new Parser().parse(\"bye\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"clx3210"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"clx3210"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"clx3210":232}},{"path":"src/test/java/olivero/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"package olivero.tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":" * Tests for the TaskList member SUTs.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"    public void removeTaskAt_negativeTaskNumber_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d -12; i \u003c 0; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"            assertThrows(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"                    IllegalArgumentException.class, () -\u003e new TaskList().removeTaskAt(-1));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"    public void removeTaskAt_outOfBoundsTaskNumber_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"        int taskCount \u003d 20;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(new ToDo(\"Test todo item \" + i, false));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clx3210"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e taskList.removeTaskAt(21));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e taskList.removeTaskAt(100));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clx3210"},"content":"    public void removeTaskAt_validTaskNumberRemoved_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"        Task[] tasks \u003d new Task[] { new ToDo(\"Todo 1\", false), new ToDo(\"Todo 2\", false), new Deadline(\"Todo 3\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"                LocalDateTime.of(2025, 12, 1, 1, 1), false)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clx3210"},"content":"        };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clx3210"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clx3210"},"content":"        // taskList: [1, 2, 3]","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clx3210"},"content":"        assertEquals(tasks[0], taskList.removeTaskAt(1));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clx3210"},"content":"        // taskList: [2, 3]","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clx3210"},"content":"        assertEquals(tasks[2], taskList.removeTaskAt(2));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clx3210"},"content":"        // taskList: [2]","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clx3210"},"content":"        assertEquals(tasks[1], taskList.removeTaskAt(1));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clx3210"},"content":"    public void addTask_fiveTasksAdded_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clx3210"},"content":"        int taskCount \u003d 5;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(new ToDo(\"Test todo \" + i, true));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clx3210"},"content":"        assertEquals(taskList.getTaskSize(), taskCount);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clx3210"},"content":"    public void asFormattedString_threeTodosFiveEventsTwoDeadlinesAdded_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clx3210"},"content":"        String expected \u003d String.join(System.lineSeparator(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clx3210"},"content":"                \"T | 0 | Todo 1\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clx3210"},"content":"                \"T | 1 | Todo 2\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clx3210"},"content":"                \"T | 0 | Todo 3\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clx3210"},"content":"                \"E | 0 | Event 1 | 2028-1-25 2323 | 2028-2-25 2323\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clx3210"},"content":"                \"E | 1 | Event 2 | 2028-1-25 2323 | 2028-2-25 2323\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clx3210"},"content":"                \"E | 0 | Event 3 | 2028-1-25 2323 | 2028-2-25 2323\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clx3210"},"content":"                \"E | 1 | Event 4 | 2028-1-25 2323 | 2028-2-25 2323\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clx3210"},"content":"                \"E | 0 | Event 5 | 2028-1-25 2323 | 2028-2-25 2323\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clx3210"},"content":"                \"D | 0 | Deadline 1 | 2028-1-25 2323\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clx3210"},"content":"                \"D | 1 | Deadline 2 | 2028-1-25 2323\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clx3210"},"content":"        int numTodos \u003d 3;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clx3210"},"content":"        int numEvents \u003d 5;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clx3210"},"content":"        int numDeadlines \u003d 2;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clx3210"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2028, 1, 25, 23, 23);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clx3210"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2028, 2, 25, 23, 23);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d numTodos; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(new ToDo(\"Todo \" + i, i % 2 \u003d\u003d 0));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d numEvents; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clx3210"},"content":"                    new Event(\"Event \" + i,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clx3210"},"content":"                            start,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clx3210"},"content":"                            end,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clx3210"},"content":"                            i % 2 \u003d\u003d 0));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d numDeadlines; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(new Deadline(\"Deadline \" + i, start, i % 2 \u003d\u003d 0));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, taskList.asFormattedString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clx3210"},"content":"    public void asFormattedString_emptyTaskListReturnsEmptyFormattedString_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clx3210"},"content":"        assertEquals(\"\", taskList.asFormattedString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clx3210"},"content":"    public void asFormattedString_taskListWithOneTaskCorrectFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clx3210"},"content":"        String expected \u003d \"E | 1 | Event 1 | 2028-1-25 2323 | 2028-2-25 2323\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clx3210"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2028, 1, 25, 23, 23);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clx3210"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2028, 2, 25, 23, 23);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clx3210"},"content":"        taskList.addTask(new Event(\"Event 1\", start, end, true));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, taskList.asFormattedString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clx3210"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clx3210"},"content":"    public void toString_taskListWithMultipleTasksCorrectString_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clx3210"},"content":"        String expected \u003d String.join(System.lineSeparator(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clx3210"},"content":"                \"1. [T][X] Todo 1\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clx3210"},"content":"                \"2. [T][ ] Todo 2\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clx3210"},"content":"                \"3. [T][X] Todo 3\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clx3210"},"content":"                \"4. [E][X] Event 1 (from: Jan 25 2028 2323 to: Feb 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clx3210"},"content":"                \"5. [E][ ] Event 2 (from: Jan 25 2028 2323 to: Feb 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clx3210"},"content":"                \"6. [E][X] Event 3 (from: Jan 25 2028 2323 to: Feb 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clx3210"},"content":"                \"7. [E][ ] Event 4 (from: Jan 25 2028 2323 to: Feb 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clx3210"},"content":"                \"8. [E][X] Event 5 (from: Jan 25 2028 2323 to: Feb 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clx3210"},"content":"                \"9. [D][ ] Deadline 1 (by: Jan 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clx3210"},"content":"                \"10. [D][X] Deadline 2 (by: Jan 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clx3210"},"content":"                \"11. [D][ ] Deadline 3 (by: Jan 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clx3210"},"content":"                \"12. [D][X] Deadline 4 (by: Jan 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clx3210"},"content":"                \"13. [D][ ] Deadline 5 (by: Jan 25 2028 2323)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clx3210"},"content":"                \"14. [D][X] Deadline 6 (by: Jan 25 2028 2323)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clx3210"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clx3210"},"content":"        int numTodos \u003d 3;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clx3210"},"content":"        int numEvents \u003d 5;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clx3210"},"content":"        int numDeadlines \u003d 6;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clx3210"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2028, 1, 25, 23, 23);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clx3210"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2028, 2, 25, 23, 23);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d numTodos; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(new ToDo(\"Todo \" + i, i % 2 \u003d\u003d 1));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d numEvents; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clx3210"},"content":"                    new Event(\"Event \" + i,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clx3210"},"content":"                            start,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clx3210"},"content":"                            end,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clx3210"},"content":"                            i % 2 \u003d\u003d 1));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clx3210"},"content":"        for (int i \u003d 1; i \u003c\u003d numDeadlines; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clx3210"},"content":"            taskList.addTask(new Deadline(\"Deadline \" + i, start, i % 2 \u003d\u003d 0));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clx3210"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clx3210"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clx3210"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clx3210"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"clx3210":170}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clx3210"},"content":"todo borrow book","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clx3210"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clx3210"},"content":"deadline return book /by 2025-1-1 1400","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clx3210"},"content":"deadline borrow book /by 2025-1-2 100","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clx3210"},"content":"deadline borrow another book /by 2025-1-2 000","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clx3210"},"content":"deadline read book /by 2025-1-10 2359","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clx3210"},"content":"mark 1","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clx3210"},"content":"mark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clx3210"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"mark 10","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clx3210"},"content":"mark -2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clx3210"},"content":"mark 5","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clx3210"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clx3210"},"content":"event project meeting /from 2025-1-1 1000 /to 2025-1-2 1100","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clx3210"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"mark 4","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"unmark 4","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clx3210"},"content":"delete 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clx3210"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clx3210"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clx3210"},"content":"askdjasksfjaf","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"todo","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"deadline","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clx3210"},"content":"event","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"list","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"bye","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"clx3210":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clx3210"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\olivero\\*.java","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clx3210"},"content":"REM run the program, feed olivero.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clx3210"},"content":"java -classpath ..\\bin olivero.Olivero \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"clx3210":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clx3210"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/olivero/*.java","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clx3210"},"content":"java -classpath ../bin olivero.Olivero \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"clx3210":2,"-":36}}]
