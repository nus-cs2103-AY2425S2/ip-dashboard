[{"path":"src/main/data/TearIT.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"[T][X] suck cock   ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"[T][ ] fk   ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"[T][ ] die  ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"[T][X] cry  ","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"CVincent0907":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"    private final String deadline;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"    public static final String regex \u003d \"(?i)^deadline\\\\s+([^/]+)\\\\s+/by\\\\s+(.+)$\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":13}},{"path":"src/main/java/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import java.util.Objects;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"public class Echo {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"    private static final ArrayList\u003cTask\u003e TASK_ARRAY \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"    private static final String PATH \u003d \"src/main/data/TearIT.txt\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"    //This function receives TearIt.ending as String input","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    //This function prints out echo and ending message when user enter \"bye\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"    //input1: the ending messaged passed from tearIT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"    public static void echo(String ending) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"            Echo.readFromFile(Echo.PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"The file does not exist !\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"        } finally {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"        ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"        // ErrorCode added in to handle the command which is NOT TODO, DEADLINE, EVENT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"        label:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"        while (true) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"            // SHOULD ADD AN ERROR HANDLING FOR THIS (currently: list 1/ list 2 also OK... future extension maybe what if list 2: the first two are displayed) TODO","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"            // This deals with empty command or mutliple spaces without command","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"            if (input.trim().isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"                System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"                System.out.println(\"    System does not support such command. Only todo ..., deadline ..., event..., mark..., unmark..., delete... and list and bye only !\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"                String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"                String part \u003d parts[0];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"                int len \u003d parts.length;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"                switch (part.toLowerCase()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"                case \"list\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"                    Echo.list();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"                case \"mark\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"                    if (len \u003d\u003d 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    There must be an integer after mark !\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"                    } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"                        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"                            Echo.markRemark(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    The argument should be an integer!\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"                        } finally {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"                        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"                case \"unmark\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"                    if (len \u003d\u003d 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    There must be an integer after unmark !\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"                    } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"                        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"                            Echo.unmarkRemark(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    The argument should be an integer!\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"                        } finally {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"                        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"                    break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"                case \"bye\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"                    try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"                            Echo.writeToFile(Echo.PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    The data is not saved !\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"                    } finally {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"                    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"                    break label;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"                case \"delete\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"                    if (len \u003d\u003d 1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    There must be an integer after delete !\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"                    } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"                        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"                            Echo.delete(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    The argument should be an integer!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"                            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"                        } finally {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"                default:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"                    int errorCode \u003d Echo.add(input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"                    final int ERROR_CODE_UNKNOWN_COMMAND \u003d 0;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"                    final int ERROR_CODE_TODO_COMMAND \u003d -1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"                    final int ERROR_CODE_DEADLINE_COMMAND \u003d -2;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"                    final int ERROR_CODE_EVENT_COMMAND \u003d -3;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"                    // should also specify input format to user also like from ... /to .... TODO","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"                    switch (errorCode) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"                    case ERROR_CODE_UNKNOWN_COMMAND:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    System does not support such command. Only todo ..., deadline ..., event..., mark..., unmark..., delete... and list and bye only !\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"                        break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"                    case ERROR_CODE_TODO_COMMAND:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    There must be something after todo !\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"                        break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"                    case ERROR_CODE_DEADLINE_COMMAND:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    There must be something after deadline !\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"                        break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"                    case ERROR_CODE_EVENT_COMMAND:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"                        System.out.println(\"    There must be something after event !\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"                        break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"                    default:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"-------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(ending);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CVincent0907"},"content":"    // This is a list function that display all task in TASK_ARRAY upon input list/LIST or its variant","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CVincent0907"},"content":"    // input:None","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CVincent0907"},"content":"    private static void list() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CVincent0907"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + Echo.TASK_ARRAY.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CVincent0907"},"content":"    // This is an overloaded list function that use to mark and display task by receiving input","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"CVincent0907"},"content":"    // input1: task order input2: mark or unmark(true or false) input3: String msg (congratz or humiliating msg based on completion)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"CVincent0907"},"content":"    private static void list(Integer i, boolean mark, String msg) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"CVincent0907"},"content":"        if (i \u003c\u003d Task.getTaskCount() \u0026\u0026 i !\u003d 0) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"CVincent0907"},"content":"            if (mark) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CVincent0907"},"content":"                Echo.TASK_ARRAY.get(i - 1).mark();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CVincent0907"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CVincent0907"},"content":"                Echo.TASK_ARRAY.get(i - 1).unmark();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(msg + i + \" .\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"CVincent0907"},"content":"            for (int j \u003d 0; j \u003c Task.getTaskCount(); j++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"CVincent0907"},"content":"                System.out.println(\"    \" + (j + 1) + \". \" + Echo.TASK_ARRAY.get(j));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"You do not have task \" + i + \"!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"CVincent0907"},"content":"            for (int j \u003d 0; j \u003c Task.getTaskCount(); j++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CVincent0907"},"content":"                System.out.println(\"    \" + (j + 1) + \". \" + Echo.TASK_ARRAY.get(j));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"CVincent0907"},"content":"    // This function add every user input  except mark/list/bye as task to TASK_ARRAY","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"CVincent0907"},"content":"    // If none of them match.... REMEMBER to add in handle (we only handle for TODO, DEADLINE and EVENT)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"CVincent0907"},"content":"    // Receive input 1: task description input 2: task type (event, deadline, todo)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"CVincent0907"},"content":"    private static int add(String input) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"CVincent0907"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"CVincent0907"},"content":"        int len \u003d parts.length;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"CVincent0907"},"content":"        if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CVincent0907"},"content":"            if (len \u003c\u003d 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"CVincent0907"},"content":"                return -1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CVincent0907"},"content":"           Echo.extractAndCreate(input, Todo.regex, 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CVincent0907"},"content":"        } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"CVincent0907"},"content":"            if (len \u003c\u003d 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"CVincent0907"},"content":"                return -2;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"CVincent0907"},"content":"            Echo.extractAndCreate(input, Deadline.regex, 2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"CVincent0907"},"content":"        } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"CVincent0907"},"content":"            if (len \u003c\u003d 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"CVincent0907"},"content":"                return -3;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"CVincent0907"},"content":"            Echo.extractAndCreate(input, Event.regex, 3);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"CVincent0907"},"content":"            return 0;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"CVincent0907"},"content":"        String message1 \u003d String.format(\"       %s\", Echo.TASK_ARRAY.get(Task.getTaskCount()-1));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(message1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"CVincent0907"},"content":"        String message2 \u003d String.format(\"    Now you have %d tasks in the list.\", Task.getTaskCount());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(message2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CVincent0907"},"content":"        return 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CVincent0907"},"content":"    // This is a delete function where user can use it to delete task","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"CVincent0907"},"content":"    // input1: An integer","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CVincent0907"},"content":"    private static void delete(Integer i)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"CVincent0907"},"content":"            throws NumberFormatException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"CVincent0907"},"content":"        if (i \u003c\u003d Task.getTaskCount() \u0026\u0026 i !\u003d 0) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"CVincent0907"},"content":"            String message \u003d String.format(\"    %s\", Echo.TASK_ARRAY.get(i - 1).toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CVincent0907"},"content":"            Echo.TASK_ARRAY.remove(i - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"CVincent0907"},"content":"            Task.reduceTaskCount();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    Hey bro! I have removed task \" + i + \".\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"    Hey bro! You do not have task \" + i + \".\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"CVincent0907"},"content":"        String message \u003d String.format(\"    Now you have %d tasks in the list.\", Task.getTaskCount());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"    -------------------------------------------------\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"CVincent0907"},"content":"    // This function marks the ith numbered task done and display it","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"CVincent0907"},"content":"    // input1 : the order of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"CVincent0907"},"content":"    private static void markRemark(Integer i) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"CVincent0907"},"content":"        Echo.list(i, true, \"    Well Done! You finished task \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"CVincent0907"},"content":"    // This function unmarks the ith numbered task done and display it","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"CVincent0907"},"content":"    // input1 : the order of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"CVincent0907"},"content":"    private static void unmarkRemark(Integer i) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"CVincent0907"},"content":"        Echo.list(i, false, \"    Oh No! You haven\u0027t completed task \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"CVincent0907"},"content":"    // This function extract the info from user input via regex and create the corresponding task object","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"CVincent0907"},"content":"    // This function also adds taskCount for all objects created here [ie: only Deadline, Event, Todo]","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"CVincent0907"},"content":"    // input1:regex input2:userinput input3: number of needed group","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"CVincent0907"},"content":"    private static void extractAndCreate(String userInput, String regex, int groups ) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"CVincent0907"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"CVincent0907"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"CVincent0907"},"content":"        if (matcher.find()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"CVincent0907"},"content":"            if (groups \u003d\u003d 1) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"CVincent0907"},"content":"                Echo.TASK_ARRAY.add(new Todo(matcher.group(1)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"CVincent0907"},"content":"            } else if (groups \u003d\u003d 2) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"CVincent0907"},"content":"                Echo.TASK_ARRAY.add(new Deadline(matcher.group(1), matcher.group(2)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"CVincent0907"},"content":"            } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"CVincent0907"},"content":"                Echo.TASK_ARRAY.add(new Event(matcher.group(1), matcher.group(2), matcher.group(3)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"CVincent0907"},"content":"        Task.addTaskCount(); // TODO this can be done when new task created in respective task class","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"CVincent0907"},"content":"    // This function is used to extract test file string line by line into a task object","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"CVincent0907"},"content":"    // input1: task string from text file","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"CVincent0907"},"content":"    public static void extractTask(String task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"CVincent0907"},"content":"        if (!Objects.equals(task, \"\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"CVincent0907"},"content":"            // Regex for each task type","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"CVincent0907"},"content":"            Pattern todoPattern \u003d Pattern.compile(\"\\\\[T\\\\]\\\\[(X| )\\\\] (.*)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"CVincent0907"},"content":"            Pattern deadlinePattern \u003d Pattern.compile(\"\\\\[D\\\\]\\\\[(X| )\\\\] (.*) \\\\(by: (.*)\\\\)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"CVincent0907"},"content":"            Pattern eventPattern \u003d Pattern.compile(\"\\\\[E\\\\]\\\\[(X| )\\\\] (.*) \\\\(from: (.*) to: (.*)\\\\)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"CVincent0907"},"content":"            Matcher todoMatcher \u003d todoPattern.matcher(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"CVincent0907"},"content":"            Matcher deadlineMatcher \u003d deadlinePattern.matcher(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"CVincent0907"},"content":"            Matcher eventMatcher \u003d eventPattern.matcher(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"CVincent0907"},"content":"            // Match Todo task","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"CVincent0907"},"content":"            if (todoMatcher.matches()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"CVincent0907"},"content":"                boolean isDone \u003d todoMatcher.group(1).equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"CVincent0907"},"content":"                TASK_ARRAY.add(new Todo(todoMatcher.group(2)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"CVincent0907"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"CVincent0907"},"content":"                    TASK_ARRAY.get(Task.getTaskCount()).mark();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"CVincent0907"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"CVincent0907"},"content":"            // Match Deadline task","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"CVincent0907"},"content":"            if (deadlineMatcher.matches()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"CVincent0907"},"content":"                boolean isDone \u003d deadlineMatcher.group(1).equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"CVincent0907"},"content":"                TASK_ARRAY.add(new Deadline(deadlineMatcher.group(2), deadlineMatcher.group(3)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"CVincent0907"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"CVincent0907"},"content":"                    TASK_ARRAY.get(Task.getTaskCount()).mark();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"CVincent0907"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"CVincent0907"},"content":"            // Match Event task","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"CVincent0907"},"content":"            if (eventMatcher.matches()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"CVincent0907"},"content":"                boolean isDone \u003d eventMatcher.group(1).equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"CVincent0907"},"content":"                TASK_ARRAY.add(new Event(eventMatcher.group(2), eventMatcher.group(3), eventMatcher.group(4)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"CVincent0907"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"CVincent0907"},"content":"                    TASK_ARRAY.get(Task.getTaskCount()).mark();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"CVincent0907"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"CVincent0907"},"content":"            Task.addTaskCount();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"CVincent0907"},"content":"    private static void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"CVincent0907"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false); //overwrite them","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"CVincent0907"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"CVincent0907"},"content":"            fw.write(TASK_ARRAY.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"CVincent0907"},"content":"        fw.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"CVincent0907"},"content":"    private static void readFromFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"CVincent0907"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"CVincent0907"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"CVincent0907"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"CVincent0907"},"content":"            Echo.extractTask(s.nextLine());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"CVincent0907":338}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"    private final String fromTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"    private final String toTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"    // This regex DOES NOT allow from 12/7/2028 but instead 12-8-2025","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"    // NEED TO FIND WAY TO ADDRESS IT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"    public static final  String regex \u003d \"(?i)^event\\\\s+([^/]+)\\\\s+/from\\\\s+([^/]+)\\\\s+/to\\\\s+(.+)$\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    public Event(String description, String fromTime, String toTime) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",super.toString(), this.fromTime, this.toTime);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"    private final String description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"        return Task.taskCount;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    public static void addTaskCount() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"        Task.taskCount++;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"    public static void reduceTaskCount() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"        Task.taskCount--;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    public void mark() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"CVincent0907":40}},{"path":"src/main/java/TearIT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"public class TearIT {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"    private static final String opening \u003d \"\"\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"            Hello! I\u0027m TearIT.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"            What can I do for you?","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"            ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"            -------------------------------------------------\"\"\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    private static final String ending \u003d \"\"\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"            Bye. Hope to see you again soon!","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"           ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"            -------------------------------------------------\"\"\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"        TearIT.openingMessage();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"        // Echo is done here with ending message included when user enter \"bye\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"        Echo.echo(TearIT.ending);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    public static void openingMessage() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(\"-------------------------------------------------\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"        System.out.println(TearIT.opening);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"CVincent0907":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"    public static final String regex \u003d \"(?i)^todo\\\\s+(.+)$\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"       return String.format(\"[T]%s \",super.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"hi","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"deadline return book /by 7pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"event birthday party /from Mon 2pm /to Mon 5pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"mark sh","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"java -classpath ..\\bin TearIT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"CVincent0907":1,"-":20}}]
