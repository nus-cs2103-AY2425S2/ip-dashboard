[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"checkstyle {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"    mainClass.set(\"gui.Launcher\") // entry -\u003e do not need to state src/java just like package","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"    archiveBaseName \u003d \"TearIT\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"//    enableAssertions \u003d true","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"CVincent0907":22,"-":39}},{"path":"src/main/data/TearIT.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"[T][ ] read book ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"[D][ ] bath (by: Sep 17 2023 06:00 PM)","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"CVincent0907":2}},{"path":"src/main/java/TearIT/TearIT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package TearIT;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import application.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":" * TearIT.TearIT is a class that provides entry point to the user interaction simulator.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"public class TearIT {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    private static final String ending \u003d \"Bye. Hope to see you again soon! \";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"        // Assume Ui.echo() will got give null response despite any input by users","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"        // Disabled now to remove side effects during run command","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"        assert Ui.echo(TearIT.ending, input) !\u003d \"\" : \"Wrong assumption ! The return value is an empty strings\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"        return Ui.echo(TearIT.ending, input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"CVincent0907":18}},{"path":"src/main/java/application/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package application;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"import task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"import task.Tasklist;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":" * Command class contains a series of handle to manage user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"public class Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"     * Handles the \"find\" command by checking if an argument is provided, then searching","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"     *      for tasks that match the provided argument. If matching tasks are found, it appends","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"     *              a message listing the matching tasks; otherwise, it notifies the user that no matches","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"     *                      were found.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eIf the user does not provide an argument after the \"find\" command, an error message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"     *      is appended to the system response.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user\u0027s input (number of fragments).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder where system messages are appended, including","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"     *                       success or error messages related to the \"find\" command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputFragments An array of strings that represents the fragments of the","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"     *                           user\u0027s input, where the second fragment contains the search query.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"    public static void handleFindCommand(int userInputLen, StringBuilder systemResponse, String[] userInputFragments) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be an argument after find !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"        } else if (userInputLen \u003e 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be ONE integer argument after find!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"            ArrayList\u003cTask\u003e tasks \u003d Tasklist.find(userInputFragments[1]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"            if (!tasks.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(\"Here is/are the matching task(s) in your list:\\n\").append(Tasklist.list(tasks))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"            } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(\"There is not any matching tasks in your list.\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"     * Handles the \"delete\" command by checking if an integer argument (task number)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"     *      is provided. If the argument is not an integer, an error message is appended to","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"     *              the system response. If an integer is provided, it attempts to delete the task","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"     *                      at the specified index and appends the result.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eIf the user does not provide an argument after the \"delete\" command, an error","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"     *      message is appended to the system response. If the argument cannot be parsed as an","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"     *              integer, an error message specifying that the argument should be an integer is appended.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user\u0027s input (number of fragments).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder where system messages are appended, including","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"     *                       success or error messages related to the \"delete\" command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputFragments An array of strings that represents the fragments of the","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"     *                           user\u0027s input, where the second fragment contains the task number to delete.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"    public static void handleDeleteCommand(int userInputLen,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"                                           StringBuilder systemResponse, String[] userInputFragments) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be an integer after delete !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"        } else if (userInputLen \u003e 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be ONE integer argument after delete!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(Tasklist.delete(Integer.parseInt(userInputFragments[1]))).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(e.getMessage()).append(\"\\n\").append(\"The argument should be an integer!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"     * Handles the \"bye\" command, which involves saving the current data to a file and","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"     *      displaying a farewell message. If there is an issue while saving the data, an","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"     *              error message is appended to the system response. The method then pauses for a","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"     *                      brief moment before closing the application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThis method attempts to write data to the storage file, and if successful,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"     *      appends a farewell message to the system response. If an error occurs during","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"     *              the writing process, an error message is included in the system response. After","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"     *                      the operation, the application waits briefly before exiting.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder used to append system messages, including","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"     *                       error messages and the farewell message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"     * @param systemByeMsg A string containing the farewell message to be displayed","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"     *                     before exiting the program.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"     * @return A string representing the final system response after handling the \"bye\" command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"    public static String handleByeCommand(int userInputLen , StringBuilder systemResponse, String systemByeMsg) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003e 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be NO argument after bye!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"            return systemResponse.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"            Storage.writeToFile();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"Something went wrong: \").append(e.getMessage()).append(\"\\n\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"The data is not saved !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(systemByeMsg).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"        pause.play();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"     * Handles the \"unmark\" command, which is used to unmark a task as completed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"     * If the user input is invalid (missing or incorrect argument), an appropriate","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"     *      error message is appended to the system response. The method attempts to parse","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"     *              the task number from the user input and calls the \u003ccode\u003eTasklist.unmarkRemark\u003c/code\u003e method.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"     * If the argument is not an integer, a {@link NumberFormatException} is caught and","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"     *       an error message is added to the response.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThis method ensures that the user provides a valid task number (integer) after","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"     *      the \"unmark\" command. If the number is missing or invalid, it notifies the user","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"     *              with the appropriate error message. If successful, it unmarks the specified task.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user input array, used to check for missing","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"     *                     arguments.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A `StringBuilder` that accumulates and returns the system","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"     *                       responses, including error messages and confirmation messages.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputFragments The user input broken into fragments (commands and arguments),","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"     *                           used to identify the specific task number to unmark.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"    public static void handleUnmarkCommand(int userInputLen, StringBuilder systemResponse,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"                                           String[] userInputFragments) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be an integer after unmark !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"        } else if (userInputLen \u003e 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be ONE integer argument after unmark!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(Tasklist.unmarkRemark(Integer.parseInt(userInputFragments[1]))).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(e.getMessage()).append(\"\\n\").append(\"The argument should be an integer!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CVincent0907"},"content":"     * Handles the \"mark\" command, which is used to mark a task as completed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CVincent0907"},"content":"     * If the user input is invalid (missing or incorrect argument), an appropriate","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CVincent0907"},"content":"     *      error message is appended to the system response. The method attempts to parse","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CVincent0907"},"content":"     *              the task number from the user input and calls the \u003ccode\u003eTasklist.markRemark\u003c/code\u003e method.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CVincent0907"},"content":"     * If the argument is not an integer, a {@link NumberFormatException} is caught and","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CVincent0907"},"content":"     *      an error message is added to the response.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThis method ensures that the user provides a valid task number (integer) after","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"CVincent0907"},"content":"     *      the \"mark\" command. If the number is missing or invalid, it notifies the user","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"CVincent0907"},"content":"     *              with the appropriate error message. If successful, it marks the specified task as completed.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user input array, used to check for missing","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CVincent0907"},"content":"     *                     arguments.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A `StringBuilder` that accumulates and returns the system","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"CVincent0907"},"content":"     *                       responses, including error messages and confirmation messages.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputFragments The user input broken into fragments (commands and arguments),","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"CVincent0907"},"content":"     *                           used to identify the specific task number to mark.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"CVincent0907"},"content":"    public static void handleMarkCommand(int userInputLen, StringBuilder systemResponse, String[] userInputFragments) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be an integer after mark !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"CVincent0907"},"content":"        } else if (userInputLen \u003e 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be ONE integer argument after mark!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"CVincent0907"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(Tasklist.markRemark(Integer.parseInt(userInputFragments[1]))).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CVincent0907"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CVincent0907"},"content":"                systemResponse.append(e.getMessage()).append(\"\\n\").append(\"The argument should be an integer!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"CVincent0907"},"content":"     * Handles the lookup command for tasks based on a user-provided date.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"CVincent0907"},"content":"     * The method extracts the date in the form of \"dd-mm-yyyy\" from the user\u0027s input,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"CVincent0907"},"content":"     *      verifies its format, and looks for matching tasks in the schedule.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"CVincent0907"},"content":"     * If a match is found, the tasks are displayed; otherwise, a message indicating no matches is shown.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user\u0027s input array.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder to accumulate and return the system\u0027s response.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputFragments An array of user input fragments, where the second element is expected to be the date.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"CVincent0907"},"content":"    public static void handleLookUpCommand(int userInputLen, StringBuilder systemResponse, String[] userInputFragments) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be a date in the form of dd-mm-yyyy after lookup !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"CVincent0907"},"content":"            return;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003e 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be ONE date in the form of dd-mm-yyyy after lookup !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"CVincent0907"},"content":"            return;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"CVincent0907"},"content":"        final String dateRegex \u003d \"\\\\b\\\\d{2}-\\\\d{2}-\\\\d{4}\\\\b\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"CVincent0907"},"content":"        Pattern pattern \u003d Pattern.compile(dateRegex);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"CVincent0907"},"content":"        Matcher matcher \u003d pattern.matcher(userInputFragments[1]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"CVincent0907"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be a date in the form of dd-mm-yyyy after lookup !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"CVincent0907"},"content":"            return;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"CVincent0907"},"content":"        String dateToCheck \u003d matcher.group();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"CVincent0907"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Tasklist.scheduleLookUp(dateToCheck);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CVincent0907"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"Here is/are the matching task(s) according your input schedule:\\n\").append(Tasklist.list(tasks))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There is not any matching tasks in your list.\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"CVincent0907"},"content":"     * Handles the list command to display all tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"CVincent0907"},"content":"     * If the user provides any argument after \"list\", an error message is shown.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"CVincent0907"},"content":"     * Otherwise, it appends the list of tasks to the system response.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user\u0027s input array.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder to accumulate and return the system\u0027s response.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"CVincent0907"},"content":"    public static void handleListCommand(int userInputLen,StringBuilder systemResponse) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"CVincent0907"},"content":"        if (userInputLen \u003e 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"There must be NO argument after list!\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"CVincent0907"},"content":"            return;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(Tasklist.list()).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"CVincent0907":241}},{"path":"src/main/java/application/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package application;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import java.util.Locale;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import task.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import task.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"import task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"import task.Tasklist;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"import task.Todo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":" * Parser class contains methods to parse user\u0027s inputs from the command prompt or","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":" * to parse inputs from text file and convert the inputs into respective task objects","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":" * when it matches the specified regex.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"public class Parser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"     * @param userInput Input from the command prompt.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"     * @param regex     Regex expression to detect the group of possible userInput.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"     * @param taskCategory    Group number of possible userInput [1:3] inclusive.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if task is successfully created and \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     *          Status of task creation depends on the userInput and regex.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    public static boolean extractAndCreateTask(String userInput, String regex, int taskCategory) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"            return false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        final String datePattern \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"        Parser.identifyCatAndCreateTask(taskCategory, matcher, datePattern);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"        Task.addTaskCount();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"        return true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"     * Identifies the task category and creates a corresponding task (Todo, Deadline, or Event).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eDepending on the task category, it uses the provided matcher to extract task details and creates","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"     *      a new task of the appropriate type, which is then added to the task list.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"     * @param taskCategory The category of the task (1 for Todo, 2 for Deadline, 3 for Event).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"     * @param matcher The matcher object containing the task details from the input string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"     * @param datePattern The date pattern used for parsing date strings (for Deadline and Event tasks).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"    private static void identifyCatAndCreateTask(int taskCategory, Matcher matcher, String datePattern) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"        if (taskCategory \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.add(new Todo(matcher.group(1)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"        } else if (taskCategory \u003d\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"            String deadline \u003d matcher.group(2) + \"-\" + matcher.group(3)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"                    + \"-\" + matcher.group(4) + \" \" + matcher.group(5)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"                    + matcher.group(6);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.add(new Deadline(matcher.group(1), LocalDateTime.parse(deadline, formatter)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"        } else if (taskCategory \u003d\u003d 3) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"            String fromDate \u003d matcher.group(2) + \"-\" + matcher.group(3)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"                    + \"-\" + matcher.group(4) + \" \" + matcher.group(5)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"                    + matcher.group(6); // \"18-09-2024 1600\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"            String toDate \u003d matcher.group(7) + \"-\" + matcher.group(8)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"                    + \"-\" + matcher.group(9) + \" \" + matcher.group(10)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"                    + matcher.group(11); // \"18-09-2024 1900\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.add(new Event(matcher.group(1), LocalDateTime.parse(fromDate, formatter),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"                    LocalDateTime.parse(toDate, formatter)));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"     * @param task Task information retrieved from text file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if task is successfully extracted from file and \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"     *      Status of extraction will be \u003ccode\u003efalse\u003c/code\u003e whenever none of the 3 specified regex expressions","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"     *      match the task string format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"    public static boolean extractTaskFromFile(String task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"        // Regex for each task type","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"        Pattern todoPattern \u003d Pattern.compile(Todo.REGEX_2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(Deadline.DATE_TIME_REGEX_2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"        Pattern eventPattern \u003d Pattern.compile(Event.DATE_TIME_REGEX_2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"        Matcher todoMatcher \u003d todoPattern.matcher(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"        Matcher deadlineMatcher \u003d deadlinePattern.matcher(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"        Matcher eventMatcher \u003d eventPattern.matcher(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"        boolean expression \u003d todoMatcher.matches() || deadlineMatcher.matches() || eventMatcher.matches();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"        if (!expression) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"            return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"        // The happy path","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"        final String datePattern \u003d \"MMM d yyyy hh:mm a\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"        Parser.identifyCatAndExtractTask(todoMatcher, deadlineMatcher, eventMatcher, datePattern);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"        Task.addTaskCount();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"        return true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"     * Identifies and extracts task details from the provided matchers (Todo, Deadline, or Event).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThis method processes the input matchers to extract task information and creates the appropriate","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"     *      task object (Todo, Deadline, or Event), marking it as done if necessary. The task is then added","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"     *              to the task list.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"     * @param todoMatcher The matcher containing the Todo task details.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"     * @param deadlineMatcher The matcher containing the Deadline task details.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"     * @param eventMatcher The matcher containing the Event task details.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"     * @param datePattern The date format pattern used for parsing date strings for Deadline and Event tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"    private static void identifyCatAndExtractTask(Matcher todoMatcher, Matcher deadlineMatcher,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"                                                  Matcher eventMatcher, String datePattern) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"        if (todoMatcher.matches()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"            boolean isDone \u003d todoMatcher.group(1).equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.add(new Todo(todoMatcher.group(2)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"                Tasklist.mark(Task.getTaskCount());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"        } else if (deadlineMatcher.matches()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"            boolean isDone \u003d deadlineMatcher.group(1).equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"                    Locale.ENGLISH);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.add(new Deadline(deadlineMatcher.group(2),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"                    LocalDateTime.parse(deadlineMatcher.group(3), formatter)));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"                Tasklist.mark(Task.getTaskCount());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"        } else if (eventMatcher.matches()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"            boolean isDone \u003d eventMatcher.group(1).equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"                    Locale.ENGLISH);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.add(new Event(eventMatcher.group(2),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"                    LocalDateTime.parse(eventMatcher.group(3), formatter),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"                    LocalDateTime.parse(eventMatcher.group(4), formatter)));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"                Tasklist.mark(Task.getTaskCount());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CVincent0907"},"content":"            System.out.println(\"Something went wrong ! You are not allowed to change the text recorded in the file !\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"CVincent0907":148}},{"path":"src/main/java/application/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package application;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import task.Tasklist;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":" * Storage class contains methods to read from storage (e.g. files), write","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":" * to storage and also create storage when it does not exist.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"     * Writes each task\u0027s info to text file one step before exiting the system upon \"bye\" command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"     * @throws IOException Throws IOException whenever files written to is corrupted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"        FileWriter fw \u003d new FileWriter(Storage.getPath(), false); //overwrite them","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"            fw.write(Tasklist.getTaskString(i) + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"        fw.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"     * Read the text from text file and convert each line of text into its corresponding task object.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"     * @throws FileNotFoundException Throws FileNotFoundException when files read from does not exist.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"    public static void readFromFile() throws FileNotFoundException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"        File f \u003d new File(Storage.getPath());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"            boolean flag \u003d Parser.extractTaskFromFile(s.nextLine());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"     * Create a file named TearIT.txt under a created directory named data when TearIT.txt","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"     *      does not exist under current working directory.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"     * @throws IOException Throws IOException if file or directory could not be created when","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"     *                     TearIT.txt does not exist.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"    public static void createFileIfNotExists() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"        File file \u003d new File(Storage.getPath());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"        // Get the directory from the file path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"        File parentDirectory \u003d file.getParentFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"        // Ensure the directory exists (create it if it doesn\u0027t)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"        if (parentDirectory !\u003d null \u0026\u0026 !parentDirectory.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"            boolean directoryCreated \u003d parentDirectory.mkdirs(); // Creates the directory, if needed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"            if (!directoryCreated) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"                throw new IOException(\"Failed to create the directory at \" + parentDirectory.getPath());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"        // Check if the file exists and create it if not","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"            boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"            if (!fileCreated) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"                throw new IOException(\"Failed to create the file at \" + Storage.getPath());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"    private static String getPath() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"        return \"data/TearIT.txt\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"CVincent0907":82}},{"path":"src/main/java/application/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package application;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import task.Tasklist;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":" * Ui class contains function to simulate the interactions between system and user in the application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"public class Ui {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"    private static int readFromFileCount \u003d 0;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"     * Processes and handles user input for echo command. It validates the input, handles error cases,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"     *      and generates an appropriate system response. This method interacts with the storage system","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"     *              to fetch necessary data and constructs the response based on user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eIf the input is invalid, a specific error message is returned. If the input is valid,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"     * the system will return the appropriate response based on the processed input.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"     * @param args A varargs parameter that allows multiple arguments to be passed. The second argument","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"     *             (args[1]) represents the actual user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"     * @return A string containing the system response, which could either be an error message or","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"     *         a valid system response based on the input. If the user input is empty or invalid,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     *         an error message is returned.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    public static String echo(String... args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"        StringBuilder systemResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"        String readFromStorageErrorMsg \u003d readFromStorage(systemResponse);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"        if (readFromStorageErrorMsg !\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"            return readFromStorageErrorMsg;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        String userInput \u003d args[1];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"System does not support such command. Only todo ..., \")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"deadline ..., event..., mark..., unmark..., delete..., find ... list\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"... lookup and bye only !\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"            return systemResponse.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"        String[] userInputFragments \u003d userInput.split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"        int userInputLen \u003d userInputFragments.length;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"        String errorMsg \u003d handleUserInput(args, userInputFragments, systemResponse, userInputLen, userInput);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"        if (errorMsg !\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"            return errorMsg;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"     * Handles the processing of user input and generates the appropriate system response","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"     *      based on the command specified in the user input. This method supports various commands","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"     *              such as \"list\", \"mark\", \"unmark\", \"bye\", \"delete\", \"find\", \"lookup\" and delegates the","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"     *                      handling of specific commands to corresponding helper methods.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"     * If the command is not recognized, it defaults to adding a task to the task list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"     * @param args An array of arguments passed to the method. The first element (args[0])","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"     *             is used for handling the \"bye\" command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputFragments An array of fragments obtained by splitting the user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"     *                           The first element of this array is used to identify the command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder object where the system response will be appended.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"     *                       It is updated throughout the method depending on the command processed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"     * @param userInputLen The length of the user input, used for validating commands that require arguments.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"     * @param userInput The complete user input as a single string, used for processing the command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"     * @return A string containing the error message (if any) for unsupported commands,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"     *         or null if the command is processed successfully.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"    private static String handleUserInput(String[] args, String[] userInputFragments,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"                                          StringBuilder systemResponse, int userInputLen, String userInput) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"        switch (userInputFragments[0].toLowerCase()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"        case \"list\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"            Command.handleListCommand(userInputLen,systemResponse);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"            Command.handleMarkCommand(userInputLen, systemResponse, userInputFragments);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"            Command.handleUnmarkCommand(userInputLen, systemResponse, userInputFragments);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"            String systemByeMsg \u003d args[0];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"            return Command.handleByeCommand(userInputLen, systemResponse, systemByeMsg);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"            Command.handleDeleteCommand(userInputLen, systemResponse, userInputFragments);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"        case \"find\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"            Command.handleFindCommand(userInputLen, systemResponse, userInputFragments);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"        case \"lookup\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"            Command.handleLookUpCommand(userInputLen, systemResponse, userInputFragments);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"        default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(Tasklist.add(userInput)).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"        return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"     * Attempts to read data from storage and handle any errors that might occur during","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"     *      the reading process. If the data cannot be read because the file does not exist,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"     *              it attempts to create the file and then proceed with reading. This method is only","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"     *                      executed the first time the program runs, as it checks the count of file reads.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eIf an error occurs during file creation, the error message is appended to the","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"     *      system response. If the reading or file creation process is successful, the method","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"     *              proceeds without returning any errors.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"     * @param systemResponse A StringBuilder where error or success messages are appended.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"     *                       It will contain an error message if file creation fails,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"     *                       or null if the operation succeeds.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"     * @return A string containing an error message if any issues occur during file reading","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"     *         or creation, or null if there are no errors.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"    private static String readFromStorage(StringBuilder systemResponse) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"        Ui.readFromFileCount++;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"        if (Ui.readFromFileCount \u003d\u003d 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"                Storage.readFromFile();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"                try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"                    Storage.createFileIfNotExists();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"                } catch (IOException e1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CVincent0907"},"content":"                    systemResponse.append(\"Error creating the file: \").append(e1.getMessage()).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"                    return systemResponse.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CVincent0907"},"content":"                }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CVincent0907"},"content":"        return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":153}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    private Label nameLabel;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    private DialogBox(String text, Image img, String character) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"            //  Set controller to DialogBox but in the nickname of ROOT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"        nameLabel.setText(character);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"        return new DialogBox(text, img, \"You\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"    public static DialogBox getTearItDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"        var db \u003d new DialogBox(text, img, \"TearIT\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"        db.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"        return db;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":63}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":" * Launcher class provides an entry point to the program","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":13}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import TearIT.TearIT;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":" * A GUI for TearIT using FXML.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"    private TearIT tearIT \u003d new TearIT();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"            //  Load in FXML file to tweak the visual of Java GUI corresponding to the Java controller","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"            //  (component) we define in Java class","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"            Image icon \u003d new Image(getClass().getResourceAsStream(\"/images/sunset.jpeg\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"            //  Set controller to Main Window","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"            //  Set entry point to backend TearIT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTearIT(tearIT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"            stage.setTitle(\"TearIT\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":42}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import TearIT.TearIT;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"    @FXML // Use to reference this element regardless of visibility from FXML folder","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    // FXML is for the view like root App of React","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"    private TearIT tearIT;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Susano.jpeg\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/TearIT.jpeg\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"     * Initializes the control elements on the stage when it first renders","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"        Label label \u003d new Label(\"Welcome to TearIT, enter anything to keep start...\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"        label.setStyle(\"-fx-font-weight: bold;\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"        dialogContainer.getChildren().add(label);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"    /** Injects the TearIT.TearIT instance */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"    public void setTearIT(TearIT t) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"        tearIT \u003d t;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"        String response \u003d tearIT.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"                DialogBox.getTearItDialog(response, dukeImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":66}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":" * Deadline class is one of the task type class extended from abstract class \u003ccode\u003eTask.java\u003c/code\u003e.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"    public static final String DATE_TIME_REGEX_1 \u003d","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"            \"deadline\\\\s+(.*?)\\\\s+/by\\\\s+(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(\\\\d{4})\\\\s\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"                    + \"+(00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23)([0-5][0-9])\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"    // regex to recognize full date time 12-08-2027 1800 2027 and 1800 must be 4 digits","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"    public static final String DATE_TIME_REGEX_2 \u003d \"\\\\[D\\\\]\\\\[(X| )\\\\] (.*?) \\\\\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"            + \"(by: (\\\\w+ \\\\d{1,2} \\\\d{4} \\\\d{1,2}:\\\\d{2} [APMapm]{2})\\\\)\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"     * Checks if the task\u0027s deadline matches the provided date in the \"dd-MM-yyyy\" format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"     * @param date The date to compare against the task\u0027s deadline.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     * @return {@code true} if the task\u0027s deadline matches the provided date; {@code false} otherwise.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    public boolean isDeadlineMatch(String date) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"        return this.deadline.format(dateFormatter).equals(date);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":39}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":" * Event class is one of the task type class extended from abstract class \u003ccode\u003eTask.java\u003c/code\u003e.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    public static final String DATE_TIME_REGEX_1 \u003d","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"            \"event\\\\s+(.*?)\\\\s+/from\\\\s+(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(\\\\d{4})\\\\s+\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"                    + \"(00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23)([0-5][0-9])\\\\s\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"                    + \"+/to\\\\s+(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(\\\\d{4})\\\\s\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"                    + \"+(00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23)([0-5][0-9])\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    public static final String DATE_TIME_REGEX_2 \u003d \"\\\\[E\\\\]\\\\[(X| )\\\\] (.*?) \\\\\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"            + \"(from: (\\\\w+ \\\\d{1,2} \\\\d{4} \\\\d{1,2}:\\\\d{2} [APMapm]{2}) \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"            + \"to: (\\\\w+ \\\\d{1,2} \\\\d{4} \\\\d{1,2}:\\\\d{2} [APMapm]{2})\\\\)\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    private final LocalDateTime fromDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"    private final LocalDateTime toDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    public Event(String description, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"     * Checks if either the task\u0027s from date or to date matches the provided date in the \"dd-MM-yyyy\" format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"     * @param date The date to compare against the task\u0027s from and to dates.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"     * @return {@code true} if either the from date or to date matches the provided date; {@code false} otherwise.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"    public boolean isFromDateOrByDateMatch(String date) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"        return this.fromDate.format(dateFormatter).equals(date)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"                || this.toDate.format(dateFormatter).equals(date);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"                this.fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")),","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"                this.toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":" * Task class is an abstract class where task types class like \u003ccode\u003eTodo.java\u003c/code\u003e,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":" * \u003ccode\u003eDeadline.java\u003c/code\u003e, \u003ccode\u003eEvent.java\u003c/code\u003e extended from.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    private final String description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"     * @return the total number of tasks that are successfully created.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"        return Task.taskCount;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     * Increase the total number of tasks upon successful creation by one.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    public static void addTaskCount() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"        Task.taskCount++;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"     * Reduce the total number of tasks upon task deletion by one.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"    public static void reduceTaskCount() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"        Task.taskCount--;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"     * Set the task isDone status to \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"    public void mark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"     * Set the task isDone status to \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"    public String getLowerCaseDescription() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"        return this.description.toLowerCase();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"CVincent0907":67}},{"path":"src/main/java/task/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"import application.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":" * Tasklist class contains methods to deal with the tasklist such as add, delete, list and etc.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"public class Tasklist {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"    private static final ArrayList\u003cTask\u003e TASK_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"     * Adds a new task based on the provided user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThis method splits the input string into parts, determines the number of fragments,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"     *      and passes the input and its length to the {@link Tasklist#getAddTaskMessage(String, int)}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"     *              method to generate a corresponding message for adding the task.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThe method ensures that the input is properly processed and that the correct message is","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"     *      returned based on the task creation status.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"     * @param input The full user input string containing the task description and possible","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"     *              details (e.g., due date, time).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"     * @return A message string indicating the result of the task addition,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     *         including any relevant details or error messages.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"    public static String add(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"        int len \u003d parts.length;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"        return Tasklist.getAddTaskMessage(input, len);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"     * Adds a task object directly to the task list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"     * This method appends the provided {@link Task} object (e.g., {@link Todo}, {@link Deadline}, or {@link Event})","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"     *      to the task list without any additional processing or validation.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"     * @param task The {@link Task} object to be added to the task list. It should be a valid task instance such as","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"     *             {@link Todo}, {@link Deadline}, or {@link Event}.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"    public static void add(Task task) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"        Tasklist.TASK_LIST.add(task);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"     * Generates a message for adding a new task based on the user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eThis method processes the input to determine the type of task (todo, deadline, or event)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"     *      and calls the appropriate parsing method. It then returns a message indicating","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"     *              the success or failure of task creation.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"     * @param input The user input string containing the task details.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"     * @param inputCommandLen The number of parts in the input, used to check if additional arguments are provided.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"     * @return A message string indicating the result of adding the task or an error reminder.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"    private static String getAddTaskMessage(String input, int inputCommandLen) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"        boolean taskCreationStatusFlag;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"        if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"            final String TODO_EMPTY_ARGUMENT_REMINDER \u003d \"There must be something after \\\"todo\\\"!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"            String emptyArgMsg \u003d Tasklist.checkEmptyArgCommand(inputCommandLen, TODO_EMPTY_ARGUMENT_REMINDER);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"            if (emptyArgMsg !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"                return emptyArgMsg;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"            taskCreationStatusFlag \u003d Parser.extractAndCreateTask(input, Todo.REGEX_1, 1);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"        } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"            final String DEADLINE_EMPTY_ARGUMENT_REMINDER \u003d \"There must be something after \\\"deadline\\\"!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"            String emptyArgMsg \u003d Tasklist.checkEmptyArgCommand(inputCommandLen, DEADLINE_EMPTY_ARGUMENT_REMINDER);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"            if (emptyArgMsg !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"                return emptyArgMsg;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"            taskCreationStatusFlag \u003d Parser.extractAndCreateTask(input, Deadline.DATE_TIME_REGEX_1, 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"        } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"            final String EVENT_EMPTY_ARGUMENT_REMINDER \u003d \"There must be something after \\\"event\\\"!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"            String emptyArgMsg \u003d Tasklist.checkEmptyArgCommand(inputCommandLen, EVENT_EMPTY_ARGUMENT_REMINDER);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"            if (emptyArgMsg !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"                return emptyArgMsg;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"            taskCreationStatusFlag \u003d Parser.extractAndCreateTask(input, Event.DATE_TIME_REGEX_1, 3);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"            final String OUT_OF_SERVICE_REMINDER \u003d \"System does not support such command. Only todo ..., deadline ...,\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"                    + \" event..., mark..., unmark..., delete..., find..., list..., lookup... and bye!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"            return OUT_OF_SERVICE_REMINDER;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"        return Tasklist.getTaskCreationMessage(taskCreationStatusFlag);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"    private static String checkEmptyArgCommand(int inputCommandLen, String msg) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"        if (inputCommandLen \u003c\u003d 1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"            return msg;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"        return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"     * Generates a message indicating the result of a task creation attempt.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eIf the task creation is successful, it returns a message confirming the addition of the task","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"     *      and displaying the updated task list count. If the task creation fails, it returns an error message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"     *              with the correct input formats for todo, deadline, and event tasks.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"     * @param taskCreationStatusFlag A flag indicating the success or failure of task creation.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"     *        If false, an error message with input format guidelines is returned;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"     *        if true, a success message is returned.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"     * @return A message indicating the result of the task creation process.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"    private static String getTaskCreationMessage(boolean taskCreationStatusFlag) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"        // Happy path refactoring","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"        StringBuilder systemResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"        if (!taskCreationStatusFlag) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"    Input format is incorrect.\\n\")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"    todo input format :todo XX\\n\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"    deadline input format :deadline XX /by dd-mm-yyyy hhmm\\n\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"    event input format :event XX /from dd-mm-yyyy hhmm /to dd-mm-yyyy hhmm\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"            return systemResponse.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(\"   \").append(Tasklist.TASK_LIST.get(Task.getTaskCount() - 1)).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(\"Now you have \").append(Task.getTaskCount()).append(\" tasks in the list.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"     * Deletes a task from the task list based on the given task number.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003eIf the task number is valid, the task is removed from the list,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"     *      and a confirmation message is returned along with the updated task count.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"     *              If the task number is invalid, an error message is returned.\u003c/p\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"     * @param taskNumber The index of the task to be deleted (1-based).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"     * @return A message confirming the deletion or indicating an invalid task number,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"     *         along with the updated task count.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"    public static String delete(Integer taskNumber) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"        StringBuilder systemResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"        boolean isValidTaskNumber \u003d taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d Task.getTaskCount();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CVincent0907"},"content":"        if (isValidTaskNumber) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"            String taskInfo \u003d Tasklist.getDeletedTaskInfo(taskNumber);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"Hey bro! I have removed task \").append(taskNumber).append(\".\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(taskInfo).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"Hey bro! You do not have task \").append(taskNumber).append(\".\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(\"Now you have \").append(Task.getTaskCount()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CVincent0907"},"content":"    private static String getDeletedTaskInfo(Integer taskNumber) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CVincent0907"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CVincent0907"},"content":"        String taskInfo \u003d Tasklist.TASK_LIST.get(taskIndex).toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CVincent0907"},"content":"        Tasklist.TASK_LIST.remove(taskIndex);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CVincent0907"},"content":"        Task.reduceTaskCount();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"CVincent0907"},"content":"        return taskInfo;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CVincent0907"},"content":"     * Returns all tasks in the task list as a formatted string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CVincent0907"},"content":"     * This method constructs a numbered list of all tasks currently stored","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"CVincent0907"},"content":"     *      in the task list and returns it as a single formatted string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"CVincent0907"},"content":"     * @return A formatted string representing the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"CVincent0907"},"content":"    public static String list() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"CVincent0907"},"content":"        StringBuilder systemResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"CVincent0907"},"content":"        systemResponse.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CVincent0907"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append((i + 1)).append(\". \")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CVincent0907"},"content":"                    .append(Tasklist.TASK_LIST.get(i))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CVincent0907"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"CVincent0907"},"content":"     * Marks or unmarks a task in the task list and returns the updated list as a string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"CVincent0907"},"content":"     * This method updates the completion status of a specified task and returns a message,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"CVincent0907"},"content":"     *      followed by the updated task list. If the specified task does not exist, it returns an","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"CVincent0907"},"content":"     *          error message and still includes the current task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"CVincent0907"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"CVincent0907"},"content":"     * @param taskNumber The 1-based position of the task to isTaskMarked or unmark. It must be greater than 0","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CVincent0907"},"content":"     *                   and less than or equal to the total number of tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"CVincent0907"},"content":"     * @param isTaskMarked {@code true} to isTaskMarked the task as completed, or {@code false} to unmark it.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CVincent0907"},"content":"     * @param msg  A custom message to display after marking/unmarking the task. This can include","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CVincent0907"},"content":"     *             congratulatory or humorous remarks based on the task\u0027s status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CVincent0907"},"content":"     * @return A formatted string containing the message and the updated list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"CVincent0907"},"content":"    public static String list(Integer taskNumber, boolean isTaskMarked, String msg) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CVincent0907"},"content":"        StringBuilder systemResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"CVincent0907"},"content":"        boolean isValidTaskNumber \u003d taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d Task.getTaskCount();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"CVincent0907"},"content":"        if (isValidTaskNumber) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.markExtractedTask(isTaskMarked, taskNumber);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(msg).append(taskNumber).append(\" .\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"You do not have task \").append(taskNumber).append(\"!\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"CVincent0907"},"content":"        for (int j \u003d 0; j \u003c Task.getTaskCount(); j++) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(j + 1).append(\". \").append(Tasklist.TASK_LIST.get(j)).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CVincent0907"},"content":"    private static void markExtractedTask(boolean isTaskMarked, int taskNumber) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CVincent0907"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CVincent0907"},"content":"        if (isTaskMarked) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.mark(taskIndex);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CVincent0907"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.unmark(taskIndex);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"CVincent0907"},"content":"     * This method generates a string representation of the given list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"CVincent0907"},"content":"     * It formats the list by numbering each task and appending the string","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"CVincent0907"},"content":"     * representation of each task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"CVincent0907"},"content":"     * @param taskList The list of tasks to be listed. This must be a non-null","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CVincent0907"},"content":"     *                 ArrayList of Task objects.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"CVincent0907"},"content":"     * @return A string that contains all tasks in the list, formatted with their","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"CVincent0907"},"content":"     *         respective indices.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"CVincent0907"},"content":"    public static String list(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"CVincent0907"},"content":"        StringBuilder systemResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"CVincent0907"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"CVincent0907"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"CVincent0907"},"content":"            systemResponse.append(\"    \").append(taskIndex).append(\". \").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"CVincent0907"},"content":"            taskIndex++;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"CVincent0907"},"content":"        return systemResponse.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"CVincent0907"},"content":"     * Marks the specified task as done and displays it along with a congratulatory remark.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"CVincent0907"},"content":"     * @param taskIndex The 1-based position of the task to mark as done. It must be greater than 0 and less","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"CVincent0907"},"content":"     *                  than or equal to the total number of tasks in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"CVincent0907"},"content":"    public static String markRemark(Integer taskIndex) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"CVincent0907"},"content":"        return Tasklist.list(taskIndex, true, \"    Well Done! You finished task \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"CVincent0907"},"content":"     * Unmarks the specified task as done and displays it along with a message of disappointment.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"CVincent0907"},"content":"     * @param taskIndex The 1-based position of the task to unmark. It must be greater than 0 and less","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"CVincent0907"},"content":"     *                  than or equal to the total number of tasks in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"CVincent0907"},"content":"    public static String unmarkRemark(Integer taskIndex) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"CVincent0907"},"content":"        return Tasklist.list(taskIndex, false, \"    Oh No! You haven\u0027t completed task \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"CVincent0907"},"content":"     * Marks the specified task as done without displaying any message or list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"CVincent0907"},"content":"     * This method is used when tasks are being loaded from a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"CVincent0907"},"content":"     * @param taskIndex The 0-based index of the task to mark as done. It must be a valid index within","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"CVincent0907"},"content":"     *                  the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"CVincent0907"},"content":"    public static void mark(int taskIndex) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"CVincent0907"},"content":"        Tasklist.TASK_LIST.get(taskIndex).mark();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"CVincent0907"},"content":"     * Unmarks the specified task as done without displaying any message or list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"CVincent0907"},"content":"     * This method is used when tasks are being loaded from a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"CVincent0907"},"content":"     * @param taskIndex The 0-based index of the task to unmark as not done. It must be a valid index","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"CVincent0907"},"content":"     *                  within the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"CVincent0907"},"content":"    public static void unmark(int taskIndex) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"CVincent0907"},"content":"        Tasklist.TASK_LIST.get(taskIndex).unmark();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"CVincent0907"},"content":"     * Searches for tasks that contain the given keyword in their descriptions.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"CVincent0907"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"CVincent0907"},"content":"     * This function iterates over all tasks in the task list and adds the tasks","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"CVincent0907"},"content":"     *      whose description contains the provided keyword (case-insensitive) to a new list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"CVincent0907"},"content":"     * @param userInput the keyword to search for in task descriptions","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"CVincent0907"},"content":"     * @return an ArrayList containing the tasks that match the keyword","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"CVincent0907"},"content":"    public static ArrayList\u003cTask\u003e find(String userInput) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"CVincent0907"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"CVincent0907"},"content":"        for (Task t : TASK_LIST) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"CVincent0907"},"content":"            if (t.getLowerCaseDescription().contains(userInput.toLowerCase())) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"CVincent0907"},"content":"                lst.add(t);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"CVincent0907"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"CVincent0907"},"content":"        return lst;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"CVincent0907"},"content":"     * Retrieves the string representation of the specified task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"CVincent0907"},"content":"     * @param taskIndex The 0-based index of the task to retrieve. It must be a valid index within the","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"CVincent0907"},"content":"     *                  task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"CVincent0907"},"content":"     * @return A string representation of the specified task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"CVincent0907"},"content":"    public static String getTaskString(int taskIndex) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"CVincent0907"},"content":"        return Tasklist.TASK_LIST.get(taskIndex).toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"CVincent0907"},"content":"     * Finds and returns a list of tasks that match the specified date.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"CVincent0907"},"content":"     * The date is checked against deadlines for Deadline tasks and","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"CVincent0907"},"content":"     * start/end dates for Event tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"CVincent0907"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"CVincent0907"},"content":"     * @param dateToCheck The date in \"dd-MM-yyyy\" format to look up tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"CVincent0907"},"content":"     * @return An ArrayList of tasks that match the specified date.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"CVincent0907"},"content":"    public static ArrayList\u003cTask\u003e scheduleLookUp(String dateToCheck) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"CVincent0907"},"content":"        return Tasklist.TASK_LIST.stream()","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"CVincent0907"},"content":"                .filter(t -\u003e (t instanceof Deadline \u0026\u0026 ((Deadline) t).isDeadlineMatch(dateToCheck))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"CVincent0907"},"content":"                        || (t instanceof Event \u0026\u0026 ((Event) t).isFromDateOrByDateMatch(dateToCheck)))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"CVincent0907"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"CVincent0907":340}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":" * Todo class is one of the task type class extended from abstract class \u003ccode\u003eTask.java\u003c/code\u003e.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"    public static final String REGEX_1 \u003d \"(?i)^todo\\\\s+(.+)$\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"    public static final String REGEX_2 \u003d \"\\\\[T\\\\]\\\\[(X| )\\\\] (.*)\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"        return String.format(\"[T]%s \", super.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: violet;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"        \u003cVBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"            \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" graphicTextGap\u003d\"0.0\" style\u003d\"-fx-font-weight: bold; -fx-font-size: 12px;\" text\u003d\"Name\" textAlignment\u003d\"CENTER\" textOverrun\u003d\"WORD_ELLIPSIS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"            \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-font-style: Roboto;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"                \u003cfont\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"                    \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"                \u003c/font\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"                    \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"                \u003cGlow level\u003d\"0.51\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"            \u003c/effect\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"            \u003cclip\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"                \u003cCircle centerX\u003d\"45.0\" centerY\u003d\"45.0\" radius\u003d\"45.0\" /\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":40}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-border-style: solid; -fx-background-color: lime green;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: yellow; -fx-border-style: solid;\" text\u003d\"Send\" textFill\u003d\"#2c47b5\" AnchorPane.bottomAnchor\u003d\"0.7999999999999972\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: blue;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.799999999999955\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: pink;\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"CVincent0907":23}},{"path":"src/test/java/test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import application.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"import task.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"import task.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":"import task.Todo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":" * This class contains unit tests for the Parser class methods.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":" * The tests validate the functionality of extracting and creating tasks from","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":" * both user input and saved files using formatted and unformatted strings.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":" *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":" * \u003cp\u003eTest Naming Convention:\u003c/p\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":" * Tests follow the convention: methodName_inputType_expectedOutput","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method correctly extracts and creates a Todo task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"     * from a properly formatted user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_toDoInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"        assertTrue(Parser.extractAndCreateTask(\"todo Read Book\", Todo.REGEX_1, 1));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method correctly extracts and creates a Deadline task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"     * from a properly formatted user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_deadlineInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"        assertTrue(Parser.extractAndCreateTask(\"deadline task /by 18-09-2023 1800\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"                Deadline.DATE_TIME_REGEX_1, 2));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method correctly extracts and creates an Event task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"     * from a properly formatted user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_eventInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"        assertTrue(Parser.extractAndCreateTask(\"event sport /from 18-09-2023 1800 /to 20-08-2024 1930\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"                Event.DATE_TIME_REGEX_1, 3));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract and create a Deadline task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"     * from an improperly formatted user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_deadlineInputUnformat_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractAndCreateTask(\"deadline sport/ by 17:00\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"                Deadline.DATE_TIME_REGEX_1, 2));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract and create a Deadline task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"     * from a user input string with invalid date format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_deadlineInputInvalid_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractAndCreateTask(\"deadline sport /by 19-13-2025 1830\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"                Deadline.DATE_TIME_REGEX_1, 2));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract and create an Event task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"     * from an improperly formatted user input string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_eventInputUnformat_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractAndCreateTask(\"event sport/from 18-09-2023 1800 /to 20-13-2024 1930\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"                Event.DATE_TIME_REGEX_1, 3));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract and create an Event task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"     * from a user input string with invalid date values.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"    public void extractAndCreateTask_eventInputInvalid_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractAndCreateTask(\"event sport /from 18-09-2023 1800 /to 20-13-2024 1930\",","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"                Event.DATE_TIME_REGEX_1, 3));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method correctly extracts a Todo task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"     * from a properly formatted string saved in a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"    public void extractTaskFromFile_todoInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"        assertTrue(Parser.extractTaskFromFile(\"[T][ ] read book\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method correctly extracts a Deadline task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"     * from a properly formatted string saved in a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"    public void extractTaskFromFile_deadlineInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"        assertTrue(Parser.extractTaskFromFile(\"[D][X] bath (by: Sep 17 2023 06:00 PM)\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method correctly extracts an Event task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"     * from a properly formatted string saved in a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"    public void extractTaskFromFile_eventInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"        assertTrue(Parser.extractTaskFromFile(\"[E][X] bath (from: Sep 17 2023 06:00 PM to: Oct 18 2025 11:59 AM)\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract a Todo task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"     * from an improperly formatted string saved in a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"    public void extractTaskFromFile_todoInputUnformat_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractTaskFromFile(\"[T][] read book\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract a Deadline task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"     * from an improperly formatted string saved in a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"    public void extractTaskFromFile_deadlineInputUnformat_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractTaskFromFile(\"[D][X] bath (by:Sep 17 2023 06:00 PM)\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"     * Tests if the method fails to extract an Event task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"     * from an improperly formatted string saved in a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"    public void extractTaskFromFile_eventInputUnformat_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CVincent0907"},"content":"        assertFalse(Parser.extractTaskFromFile(\"[E][X] bath (from: Sep 17 2023 06:00PM to: Oct 18 2025 11:59 AM)\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"CVincent0907":146}},{"path":"src/test/java/test/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"package test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"import task.Tasklist;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CVincent0907"},"content":" * TasklistTest is a JUnit test class that verifies the functionality of the Tasklist class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":" * It contains tests for adding, deleting, and handling invalid inputs for tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CVincent0907"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":"public class TasklistTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a todo task without arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating that something must be provided after \"todo\".","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    public void add_toDoNoArg_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(\"There must be something after \\\"todo\\\"!\", Tasklist.add(\"todo \"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a todo task with valid arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CVincent0907"},"content":"     * Expects success with the task being added and a success message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"    public void add_toDoValidArg_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\n   [T][ ] read book \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CVincent0907"},"content":"                + \"\\nNow you have 3 tasks in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(expectedOutput, Tasklist.add(\"todo read book\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a deadline task without arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating that something must be provided after \"deadline\".","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"    public void add_deadlineNoArg_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(\"There must be something after \\\"deadline\\\"!\", Tasklist.add(\"deadline \"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a deadline task with valid arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"     * Expects success with the task being added and a success message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"    public void add_deadlineValidArg_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\n   \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"                + \"[D][ ] read book (by: Aug 12 2024 06:00 PM)\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"                + \"Now you have 2 tasks in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(expectedOutput, Tasklist.add(\"deadline read book /by 12-08-2024 1800\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a deadline task with invalid arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating incorrect input format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"    public void add_deadlineInvalidArg_fail() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":"        String expectedError \u003d \"    Input format is incorrect.\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"                + \"    todo input format :todo XX\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"                + \"    deadline input format :deadline XX /by dd-mm-yyyy hhmm\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"                + \"    event input format :event XX /from dd-mm-yyyy hhmm /to dd-mm-yyyy hhmm\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(expectedError, Tasklist.add(\"deadline read book /by12-08-2024 1800\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding an event task without arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating that something must be provided after \"event\".","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"    public void add_eventNoArg_fail() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(\"There must be something after \\\"event\\\"!\", Tasklist.add(\"event \"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding an event task with valid arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"     * Expects success with the task being added and a success message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CVincent0907"},"content":"    public void add_eventValidArg_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CVincent0907"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\n   \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"                + \"[E][ ] sport (from: Aug 12 2024 06:00 PM to: Aug 13 2024 06:00 PM)\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(expectedOutput, Tasklist.add(\"event sport /from 12-08-2024 1800 /to 13-08-2024 1800\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding an event task with invalid arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating incorrect input format.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"    public void add_eventInvalidArg_fail() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"        String expectedError \u003d \"    Input format is incorrect.\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"                + \"    todo input format :todo XX\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"                + \"    deadline input format :deadline XX /by dd-mm-yyyy hhmm\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CVincent0907"},"content":"                + \"    event input format :event XX /from dd-mm-yyyy hhmm /to dd-mm-yyyy hhmm\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(expectedError, Tasklist.add(\"event sport /from12-08-2024 1800 /to 13-08-2024 1800\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a task with an empty or invalid command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating invalid command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"    public void add_eventInvalidCommand_fail_1() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(\"System does not support such command. Only todo ..., deadline ..., event..., \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CVincent0907"},"content":"                + \"mark..., unmark..., delete..., find..., list..., lookup... and bye!\", Tasklist.add(\" \"));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"     * Tests adding a task with an unrecognized command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"     * Expects a failure message indicating unrecognized command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"    public void add_eventInvalidCommand_fail_2() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CVincent0907"},"content":"        assertEquals(\"System does not support such command. Only todo ..., deadline ..., event...,\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"                + \" mark..., unmark..., delete..., find..., list..., lookup... and bye!\", Tasklist.add(\"hahaha\"));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"     * Tests deleting a task with an invalid input of type String.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CVincent0907"},"content":"     * Expects a NumberFormatException.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CVincent0907"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CVincent0907"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CVincent0907"},"content":"    public void delete_invalidInputTypeString_fail_2() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CVincent0907"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CVincent0907"},"content":"            String input \u003d \"hahaha\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CVincent0907"},"content":"            Tasklist.delete(Integer.parseInt(input));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"            fail(\"Expected NumberFormatException was not thrown\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CVincent0907"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CVincent0907"},"content":"            assertEquals(\"For input string: \\\"hahaha\\\"\", e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CVincent0907"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CVincent0907"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"CVincent0907":141}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CVincent0907"},"content":"hi","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CVincent0907"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CVincent0907"},"content":"deadline return book /by 7pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CVincent0907"},"content":"event birthday party /from Mon 2pm /to Mon 5pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CVincent0907"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CVincent0907"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CVincent0907"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CVincent0907"},"content":"mark sh","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CVincent0907"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":"java -classpath ..\\bin TearIT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"CVincent0907":1,"-":20}}]
