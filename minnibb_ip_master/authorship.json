[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"    mainClass.set(\"luke.Luke\")","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"    archiveBaseName \u003d \"luke\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"minnibb":2,"-":39}},{"path":"data/luke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"T | 1 | read book","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"D | 0 | return book | sunday","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"T | 0 | read book","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":"D | 0 | homework | Dec 12 2020, 4PM","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":"T | 0 | stuff","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":"D | 0 | work | Dec 12 2021, 7PM","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":6}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":" * Main class for the Luke task manager application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":" * Handles the command loop and processing of user inputs.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":"public class Luke {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"minnibb"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"minnibb"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"minnibb"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"minnibb"},"content":"     * Creates a new Luke task manager instance.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"minnibb"},"content":"     * @param filePath Path to the save file","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"minnibb"},"content":"    public Luke(String filePath) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"minnibb"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"minnibb"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"minnibb"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"minnibb"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"minnibb"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"minnibb"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"minnibb"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"minnibb"},"content":"     * Starts the command loop.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"    public void run() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"minnibb"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"minnibb"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"minnibb"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"minnibb"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"minnibb"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"minnibb"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"minnibb"},"content":"                    ui.showBye();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"minnibb"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"minnibb"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"minnibb"},"content":"                    listTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"minnibb"},"content":"                } else if (input.startsWith(\"mark \") || input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"minnibb"},"content":"                    handleMarkCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"minnibb"},"content":"                } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"minnibb"},"content":"                    handleTodoCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"minnibb"},"content":"                } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"minnibb"},"content":"                    handleDeadlineCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"minnibb"},"content":"                } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"minnibb"},"content":"                    handleEventCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"minnibb"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"minnibb"},"content":"                    handleDeleteCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"minnibb"},"content":"                } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"minnibb"},"content":"                    handleFindCommand(input);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"minnibb"},"content":"                } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"minnibb"},"content":"                    ui.showError(\"I don\u0027t know what that means! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"minnibb"},"content":"                }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"minnibb"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"minnibb"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"minnibb"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"minnibb"},"content":"     * Lists all tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"minnibb"},"content":"    private void listTasks() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"minnibb"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"minnibb"},"content":"            System.out.println(\"No tasks in your list!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"minnibb"},"content":"            return;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"minnibb"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"minnibb"},"content":"            System.out.println((i + 1) + \".\" + tasks.getTask(i).toString());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"minnibb"},"content":"     * Handles mark and unmark commands.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"minnibb"},"content":"     * @param input Command string","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If command format is invalid","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"minnibb"},"content":"    private void handleMarkCommand(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"minnibb"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please indicate which task to mark! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"minnibb"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"minnibb"},"content":"            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"minnibb"},"content":"            if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"minnibb"},"content":"                throw new LukeException(\"That task number does not exist! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"minnibb"},"content":"            if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"minnibb"},"content":"                tasks.markTaskAsDone(taskNum);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"minnibb"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"minnibb"},"content":"            } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"minnibb"},"content":"                tasks.markTaskAsNotDone(taskNum);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"minnibb"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"minnibb"},"content":"            System.out.println(tasks.getTask(taskNum));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"minnibb"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"minnibb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please give me a valid task number! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"minnibb"},"content":"     * Handles todo command.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"minnibb"},"content":"     * @param input Command string","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If command format is invalid","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"minnibb"},"content":"    private void handleTodoCommand(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"minnibb"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please tell me what to do! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"minnibb"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"minnibb"},"content":"        Task newTask \u003d new Task(description, \"T\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"minnibb"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Noted. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"minnibb"},"content":"        System.out.println(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"minnibb"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"minnibb"},"content":"     * Handles deadline command.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"minnibb"},"content":"     * @param input Command string","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If command format is invalid","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"minnibb"},"content":"    private void handleDeadlineCommand(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"minnibb"},"content":"        Task newTask \u003d Parser.parseDeadline(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"minnibb"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Noted. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"minnibb"},"content":"        System.out.println(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"minnibb"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"minnibb"},"content":"     * Handles event command.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"minnibb"},"content":"     * @param input Command string","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If command format is invalid","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"minnibb"},"content":"    private void handleEventCommand(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"minnibb"},"content":"        Task newTask \u003d Parser.parseEvent(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"minnibb"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Noted. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"minnibb"},"content":"        System.out.println(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"minnibb"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"minnibb"},"content":"     * Handles delete command.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"minnibb"},"content":"     * @param input Command string","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If command format is invalid","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"minnibb"},"content":"    private void handleDeleteCommand(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"minnibb"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please tell me which task to delete! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"minnibb"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"minnibb"},"content":"            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"minnibb"},"content":"            if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"minnibb"},"content":"                throw new LukeException(\"That task number does not exist! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"minnibb"},"content":"            Task deletedTask \u003d tasks.getTask(taskNum);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"minnibb"},"content":"            tasks.deleteTask(taskNum);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"minnibb"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"minnibb"},"content":"            System.out.println(deletedTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"minnibb"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"minnibb"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"minnibb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please give me a valid task number! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"minnibb"},"content":"     * Handles find command to search for tasks containing keywords.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"minnibb"},"content":"     * @param input Command string","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If command format is invalid","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"minnibb"},"content":"    private void handleFindCommand(String input) throws LukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"minnibb"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please enter a keyword to search for! Try again.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"minnibb"},"content":"        String keyword \u003d input.substring(5).trim().toLowerCase();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"minnibb"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"minnibb"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"minnibb"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"minnibb"},"content":"            String description \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"minnibb"},"content":"            if (description.contains(keyword)) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"minnibb"},"content":"                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"minnibb"},"content":"                found \u003d true;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"minnibb"},"content":"        if (!found) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"minnibb"},"content":"            System.out.println(\"No matching tasks found!\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"minnibb"},"content":"     * Main entry point of the application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"minnibb"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"minnibb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"minnibb"},"content":"        new Luke(\"data/luke.txt\").run();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"minnibb":224}},{"path":"src/main/java/luke/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":"    public LukeException(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":"        super(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":7}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":" * Parser class that converts user commands into Task objects.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":" * Handles the formatting and validation of input strings.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":"public class Parser {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"minnibb"},"content":"     * Parses a deadline command and creates a deadline task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"minnibb"},"content":"     * @param input User input in the format \"deadline TASK /by DATE TIME\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"minnibb"},"content":"     * @return A new deadline Task object","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If input format is wrong","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"minnibb"},"content":"    public static Task parseDeadline(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"minnibb"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"minnibb"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please tell me the deadline using /by after a task! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"minnibb"},"content":"        String task \u003d parts[0];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"minnibb"},"content":"        String dateTime \u003d parts[1];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"minnibb"},"content":"        String[] dateParts \u003d dateTime.split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"minnibb"},"content":"        if (dateParts.length !\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please use format: day/month/year time (e.g., 2/12/2019 1800)\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"minnibb"},"content":"        String[] date \u003d dateParts[0].split(\"/\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"minnibb"},"content":"        String time \u003d dateParts[1];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"minnibb"},"content":"        String formattedDate \u003d formatDateTime(date, time);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"minnibb"},"content":"        Task newTask \u003d new Task(task, \"D\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"minnibb"},"content":"        newTask.setTime(formattedDate);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"minnibb"},"content":"        return newTask;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"minnibb"},"content":"     * Parses an event command and creates an event task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"minnibb"},"content":"     * @param input User input in the format \"event TASK /from DATE TIME /to END_TIME\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"minnibb"},"content":"     * @return A new event Task object","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If input format is wrong","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"minnibb"},"content":"    public static Task parseEvent(String input) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"minnibb"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please tell me the time using /from and /to! Try again.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"minnibb"},"content":"        String[] parts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"minnibb"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"minnibb"},"content":"        String task \u003d parts[0];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"minnibb"},"content":"        String dateTime \u003d timeParts[0];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"minnibb"},"content":"        String[] dateParts \u003d dateTime.split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"minnibb"},"content":"        if (dateParts.length !\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Please use format: day/month/year time (e.g., 2/12/2019 1400)\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"minnibb"},"content":"        String[] date \u003d dateParts[0].split(\"/\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"minnibb"},"content":"        String time \u003d dateParts[1];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"minnibb"},"content":"        String formattedDate \u003d formatDateTime(date, time);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"minnibb"},"content":"        Task newTask \u003d new Task(task, \"E\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"minnibb"},"content":"        newTask.setTime(formattedDate);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"minnibb"},"content":"        return newTask;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"minnibb"},"content":"     * Formats date and time into a readable string.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"minnibb"},"content":"     * @param date Array with [day, month, year]","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"minnibb"},"content":"     * @param time Time in 24-hour format (e.g., \"1800\")","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"minnibb"},"content":"     * @return Formatted date string like \"Jan 1 2023, 6PM\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"minnibb"},"content":"    private static String formatDateTime(String[] date, String time) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"minnibb"},"content":"        String monthName \u003d getMonthName(date[1]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"minnibb"},"content":"        String formattedTime \u003d formatTime(time);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"minnibb"},"content":"        return monthName + \" \" + date[0] + \" \" + date[2] + \", \" + formattedTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"minnibb"},"content":"     * Converts a month number to its name.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"minnibb"},"content":"     * @param monthNumber Month as string (\"1\" to \"12\")","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"minnibb"},"content":"     * @return Short month name (e.g., \"Jan\")","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"minnibb"},"content":"    private static String getMonthName(String monthNumber) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"minnibb"},"content":"        switch (monthNumber) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"minnibb"},"content":"            case \"1\": return \"Jan\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"minnibb"},"content":"            case \"2\": return \"Feb\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"minnibb"},"content":"            case \"3\": return \"Mar\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"minnibb"},"content":"            case \"4\": return \"Apr\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"minnibb"},"content":"            case \"5\": return \"May\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"minnibb"},"content":"            case \"6\": return \"Jun\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"minnibb"},"content":"            case \"7\": return \"Jul\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"minnibb"},"content":"            case \"8\": return \"Aug\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"minnibb"},"content":"            case \"9\": return \"Sep\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"minnibb"},"content":"            case \"10\": return \"Oct\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"minnibb"},"content":"            case \"11\": return \"Nov\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"minnibb"},"content":"            case \"12\": return \"Dec\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"minnibb"},"content":"            default: return monthNumber;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"minnibb"},"content":"     * Converts 24-hour time to 12-hour AM/PM format.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"minnibb"},"content":"     * @param time Time in 24-hour format","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"minnibb"},"content":"     * @return Time with AM/PM suffix","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"minnibb"},"content":"    private static String formatTime(String time) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"minnibb"},"content":"        int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"minnibb"},"content":"        if (hour \u003c 0 || hour \u003e 23) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"minnibb"},"content":"            return time;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"minnibb"},"content":"        return (hour \u003c\u003d 12 ? hour : hour - 12) + (hour \u003c 12 ? \"AM\" : \"PM\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":117}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"import java.io.File;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"minnibb"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"minnibb"},"content":" * Handles saving and loading tasks from file.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"minnibb"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"minnibb"},"content":"public class Storage {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"minnibb"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"minnibb"},"content":"     * Creates a storage handler with specified file path.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"minnibb"},"content":"     * Makes a data folder if it doesn\u0027t exist yet.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"minnibb"},"content":"     * @param filePath Path to the save file","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"minnibb"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"minnibb"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"minnibb"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"minnibb"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"minnibb"},"content":"            directory.mkdir();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"minnibb"},"content":"     * Loads tasks from the save file.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"minnibb"},"content":"     * @return List of tasks from the file","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If file can\u0027t be read","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"    public ArrayList\u003cTask\u003e load() throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"minnibb"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"minnibb"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"minnibb"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"minnibb"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"minnibb"},"content":"                return tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"minnibb"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"minnibb"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"minnibb"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"minnibb"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"minnibb"},"content":"                Task task \u003d new Task(parts[2], parts[0]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"minnibb"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"minnibb"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"minnibb"},"content":"                }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"minnibb"},"content":"                if (parts.length \u003e 3) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"minnibb"},"content":"                    task.setTime(parts[3]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"minnibb"},"content":"                }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"minnibb"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"minnibb"},"content":"            fileScanner.close();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"minnibb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Something went wrong loading the file!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"minnibb"},"content":"        return tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"minnibb"},"content":"     * Saves tasks to the save file.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"minnibb"},"content":"     * @param tasks List of tasks to save","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"minnibb"},"content":"     * @throws LukeException If file can\u0027t be written","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"minnibb"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws LukeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"minnibb"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"minnibb"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"minnibb"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"minnibb"},"content":"                writer.write(task.getType() + \" | \" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"minnibb"},"content":"                        (task.isDone() ? \"1\" : \"0\") + \" | \" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"minnibb"},"content":"                        task.getDescription() +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"minnibb"},"content":"                        (task.getTime().isEmpty() ? \"\" : \" | \" + task.getTime()) +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"minnibb"},"content":"                        \"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"minnibb"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"minnibb"},"content":"            writer.close();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"minnibb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"minnibb"},"content":"            throw new LukeException(\"Something went wrong saving the file!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":85}},{"path":"src/main/java/luke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":" * Represents a task in Luke.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":" * Can be a todo, deadline, or event.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":"public class Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"minnibb"},"content":"    private String description;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"minnibb"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"minnibb"},"content":"    private String type;  // \"T\", \"D\", or \"E\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"minnibb"},"content":"    private String time;  // For deadlines and events","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"minnibb"},"content":"     * Creates a new task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"minnibb"},"content":"     * @param description What the task is about","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"minnibb"},"content":"     * @param type Type of task: \"T\" (todo), \"D\" (deadline), \"E\" (event)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"minnibb"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"minnibb"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"minnibb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"minnibb"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"minnibb"},"content":"        this.time \u003d \"\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"minnibb"},"content":"     * Gets the task description.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"minnibb"},"content":"     * @return Task description","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"minnibb"},"content":"        return description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"minnibb"},"content":"     * Checks if task is completed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"minnibb"},"content":"     * @return true if done, false otherwise","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"minnibb"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"minnibb"},"content":"        return isDone;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"minnibb"},"content":"     * Gets the task type.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"minnibb"},"content":"     * @return \"T\", \"D\", or \"E\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"minnibb"},"content":"    public String getType() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"minnibb"},"content":"        return type;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"minnibb"},"content":"     * Gets the task time/date.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"minnibb"},"content":"     * @return Time string for the task","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"minnibb"},"content":"    public String getTime() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"minnibb"},"content":"        return time;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"minnibb"},"content":"     * Sets the task time/date.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"minnibb"},"content":"     * @param time Time string to set","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"minnibb"},"content":"    public void setTime(String time) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"minnibb"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"minnibb"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"minnibb"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"minnibb"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"minnibb"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"minnibb"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"minnibb"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"minnibb"},"content":"     * Formats the task as a string.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"minnibb"},"content":"     * @return String with task type, status, description and time","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"minnibb"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"minnibb"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"minnibb"},"content":"        String status \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"minnibb"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"minnibb"},"content":"            return \"[T]\" + status + \" \" + description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"minnibb"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"minnibb"},"content":"            return \"[D]\" + status + \" \" + description + \" (by: \" + time + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"minnibb"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"minnibb"},"content":"            return \"[E]\" + status + \" \" + description + \" (from: \" + time + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"minnibb"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":101}},{"path":"src/main/java/luke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":" * Manages a list of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"minnibb"},"content":"public class TaskList {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"minnibb"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"minnibb"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"minnibb"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"minnibb"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"minnibb"},"content":"     * Creates a task list with existing tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"minnibb"},"content":"     * @param tasks The list of tasks to start with","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"minnibb"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"minnibb"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"minnibb"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"minnibb"},"content":"     * @param task The task to add","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"minnibb"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"minnibb"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"minnibb"},"content":"     * Removes a task from the list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"minnibb"},"content":"     * @param index The index of the task to remove","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"minnibb"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"minnibb"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"minnibb"},"content":"     * Gets a specific task from the list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"minnibb"},"content":"     * @param index The index of the task to get","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"minnibb"},"content":"     * @return The task at the specified index","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"minnibb"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"minnibb"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"minnibb"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"minnibb"},"content":"     * @return The number of tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"minnibb"},"content":"    public int size() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"minnibb"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"minnibb"},"content":"     * Gets all tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"minnibb"},"content":"     * @return List of all tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"minnibb"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"minnibb"},"content":"        return tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"minnibb"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"minnibb"},"content":"     * @param index The index of the task to mark as done","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"minnibb"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"minnibb"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"minnibb"},"content":"     * Marks a task as not done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"minnibb"},"content":"     * @param index The index of the task to mark as not done","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"minnibb"},"content":"    public void markTaskAsNotDone(int index) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"minnibb"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":90}},{"path":"src/main/java/luke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minnibb"},"content":"package luke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"minnibb"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"minnibb"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"minnibb"},"content":" * Handles user interaction","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"minnibb"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"minnibb"},"content":"public class Ui {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"minnibb"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"minnibb"},"content":"     * Creates a new UI handler.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"minnibb"},"content":"    public Ui() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"minnibb"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"minnibb"},"content":"     * Reads a command from the user.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"minnibb"},"content":"     * @return The command entered by the user","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"minnibb"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"minnibb"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"minnibb"},"content":"     * Shows the welcome message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"minnibb"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"minnibb"},"content":"        showLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Hello! I\u0027m Luke\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"minnibb"},"content":"        showLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"minnibb"},"content":"     * Shows a separator line.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"minnibb"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"minnibb"},"content":"     * Shows an error message for file loading issues.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"minnibb"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Something went wrong loading the file!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"minnibb"},"content":"     * Shows an error message for file saving issues.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"minnibb"},"content":"    public void showSavingError() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Something went wrong saving the file!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"minnibb"},"content":"     * Shows an error message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"minnibb"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"minnibb"},"content":"     * @param message The error message to display","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"minnibb"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"minnibb"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"minnibb"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"minnibb"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"minnibb"},"content":"     * Shows the goodbye message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"minnibb"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"minnibb"},"content":"    public void showBye() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"minnibb"},"content":"        System.out.println(\"Bye. Hope to see you again!!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"minnibb"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"minnibb"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"minnibb":73}}]
