[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04T13:40:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-04T13:40:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:40:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"checkstyle {","lastModifiedDate":"2025-02-04T13:40:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04T13:40:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    mainClass.set(\"adam.javafx.Launcher\")","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"    archiveBaseName \u003d \"adam\"","lastModifiedDate":"2025-01-29T22:20:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-08T21:50:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"kai824":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"# Adam User Guide","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"![Screenshot of GUI](Ui.png)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"Need any help to keep track of your tasks? Gigachad Adam is here to help!","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"It is easy to use, controlled entirely with text commands.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"## Commands","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"### Adding Tasks","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"There are 4 types of tasks: Todos, Deadlines, Events, and Fixed Duration tasks. Tasks added will stay added, even after exiting and re-launching the app.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"#### Todo","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"A **Todo** is a task with only a description. This should be for simple tasks with no timeframe.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"Syntax: `todo [description]`","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"##### _Example:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"todo Buy milk","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"##### _Expected Response:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":" [T][ ] Buy milk","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"#### Deadline","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"A **Deadline** is a task with a description, and a deadline in the form of a date, given in `DD-MM-YYYY` format.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"Syntax: `deadline [description] /by DD-MM-YYYY`","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"##### _Example:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"deadline reply prof\u0027s email /by 25-02-2025","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"##### _Expected Response:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":" [D][ ] reply prof\u0027s email (by: 25 Feb 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"#### Events","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"An **Event** is a task with a description, as well as a start and end date (inclusive), both given in the format of `DD-MM-YYYY`. Note it is implicitly assumed that the start date will not be after the end date.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"Syntax: `event [description] /from DD-MM-YYYY /to DD-MM-YYYY`","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"##### _Example:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"event recess week /from 22-02-2025 /to 02-03-2025","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"##### _Expected Response:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":" [E][ ] recess week (from: 22 Feb 2025 to: 02 Mar 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"#### Fixed Duration","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"A **Fixed Duration** is a task that that would need a fixed duration to complete. For instance, attempt CS2103 past practice paper.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"Syntax:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"fixed [description] /takes [expected duration]","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"The expected duration will be given in terms of hours and minutes, such as `1h 30m`.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"##### _Example:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"fixed Attempt cs2103 2425s1 paper /takes 1h 30m","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"##### _Expected Response:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":" [F][ ] Attempt cs2103 2425s1 paper (Duration: 1h 30m)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"### Listing tasks","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kai824"},"content":"After having some tasks in the system, you can simply list them with the command `list`.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kai824"},"content":"#### _Example output:_","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kai824"},"content":" 1. [T][ ] buy milk","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kai824"},"content":" 2. [D][ ] reply prof\u0027s email (by: 25 Feb 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kai824"},"content":" 3. [E][ ] recess week (from: 22 Feb 2025 to: 02 Mar 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kai824"},"content":" 4. [F][ ] Attempt cs2103 2425s1 paper (Duration: 1h 30m)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kai824"},"content":"You can also specify a date with the `listOn` command. Simply write `listOn DD-MM-YYYY`","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kai824"},"content":"For instance, with `listOn 25-02-2025`, we get:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kai824"},"content":" 2. [D][ ] reply prof\u0027s email (by: 25 Feb 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kai824"},"content":" 3. [E][ ] recess week (from: 22 Feb 2025 to: 02 Mar 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kai824"},"content":"listed with the indices in the full list","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kai824"},"content":"### Marking and unmarking","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kai824"},"content":"To mark tasks as done or not done, just use `mark [index]` or `unmark [index]`, where index refers to the index of the task in the full list (starting from 1).","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kai824"},"content":"For instance, `mark 1` would get:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kai824"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kai824"},"content":" [T][X] buy milk","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kai824"},"content":"If we then did `unmark 1`, we would get:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kai824"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kai824"},"content":" [T][ ] buy milk","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kai824"},"content":"### Deleting tasks","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kai824"},"content":"To delete a task, use `delete [index]` similar to marking and unmarking a task.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kai824"},"content":"For instance, `delete 1` would get:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kai824"},"content":"OK, I\u0027ve deleted this task:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kai824"},"content":"[T][ ] buy milk","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kai824"},"content":"Note that remaining tasks will be re-indexed starting from 1.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kai824"},"content":"### Finding tasks","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kai824"},"content":"Tasks can be searched for by simple substring queries. `find [query string]` lists all tasks that have the query string appear in the description. For instance, `find re` would get:","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kai824"},"content":" 1. [D][ ] reply prof\u0027s email (by: 25 Feb 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kai824"},"content":" 2. [E][ ] recess week (from: 22 Feb 2025 to: 02 Mar 2025)","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kai824"},"content":"```","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kai824"},"content":"As \"*re*ply prof\u0027s email\" and \"*re*cess week\"","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kai824"},"content":"### Exiting the app","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kai824"},"content":"You can end the conversation by using the command: `bye`.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kai824"},"content":"Alternatively, you can also close the window. The app will still exit normally.","lastModifiedDate":"2025-02-19T23:55:24","isFullCredit":false}],"authorContributionMap":{"kai824":126,"-":16}},{"path":"src/main/java/adam/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.tasks.Task;","lastModifiedDate":"2025-01-29T22:13:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    /** The new task to add */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    private Task newTask;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     * Constructor for an AddCommand.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     * @param input The input to create the task from.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while creating the task.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    public AddCommand(String input) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"        this.newTask \u003d Task.of(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"            Task.of(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"            return true;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"            return false;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     * Adds the new task to the task list and outputs the task to the user.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        manager.addTask(this.newTask);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        return \"Got it. I\u0027ve added this task:\\n \" + this.newTask;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":52}},{"path":"src/main/java/adam/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     * Outputs a goodbye message to the user.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"     * Checks if it is an exit command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"     * @return True as Bye is an exit command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        return true;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":41}},{"path":"src/main/java/adam/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":" * Represents a command that can be executed by the user.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"    public abstract String execute(TaskList manager) throws AdamException;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"        return false;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":20}},{"path":"src/main/java/adam/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.tasks.Task;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    /** The index of the task to delete */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    private int index;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     * Constructor for a delete command.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     * @param input The input to the command.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while creating the command.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    public DeleteCommand(String input) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        String[] inputParts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        return inputParts[0].equals(\"delete\") \u0026\u0026 inputParts.length \u003d\u003d 2;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     * Deletes the task from the task list and outputs the task to the user.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"            Task task \u003d manager.deleteTask(this.index);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"            return \"OK, I\u0027ve deleted this task:\\n \" + task;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"            return \"Task index out of bounds!\";","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":52}},{"path":"src/main/java/adam/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"    /** The index of the task to mark as done */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    private int index;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * @param input The input to the command.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while parsing the input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    public DoneCommand(String input) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"        String[] inputParts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        return inputParts[0].equals(\"mark\") \u0026\u0026 inputParts.length \u003d\u003d 2;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     * Marks the task as done and outputs the task to the user.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"            String taskText \u003d manager.markDone(this.index);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + taskText;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            return \"Task index out of bounds!\";","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":51}},{"path":"src/main/java/adam/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" * Represents a command to find tasks that match a given query.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" * This command will search through the task list for all tasks","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":" * that contain the specified query and print them to the user.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    private String query;","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        this.query \u003d input.substring(5);","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        return input.startsWith(\"find \");","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     * Finds all tasks that match the query and outputs them to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to search through.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while searching for tasks.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cString\u003e outputs \u003d manager.listMatches(this.query);","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"        for (String output : outputs) {","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            sb.append(output).append(\"\\n\");","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false}],"authorContributionMap":{"kai824":52}},{"path":"src/main/java/adam/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cString\u003e outputs \u003d manager.listAll();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        for (String output : outputs) {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"            sb.append(output).append(\"\\n\");","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":38}},{"path":"src/main/java/adam/command/ListOnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":" * Represents a command to list all tasks on a specific date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"public class ListOnCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    /** The date to list tasks on */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    private LocalDate date;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * Constructor for ListOnCommand.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while parsing the input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    public ListOnCommand(String input) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"        this.date \u003d Parser.parseInputDate(input.split(\" \")[1]);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"        String[] inputParts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        return inputParts[0].equals(\"listOn\") \u0026\u0026 inputParts.length \u003d\u003d 2;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     * Lists all tasks on the specified date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cString\u003e outputs \u003d manager.listAllOnDate(this.date);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        for (String output : outputs) {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"            sb.append(output).append(\"\\n\");","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":55}},{"path":"src/main/java/adam/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.TaskList;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"    /** The index of the task to unmark */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    private int index;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while parsing the input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    public UnmarkCommand(String input) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     * Checks if the input matches the command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * @param input The input to check.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     * @return True if the input matches the command, false otherwise.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    public static boolean isMatch(String input) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"        String[] inputParts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        return inputParts[0].equals(\"unmark\") \u0026\u0026 inputParts.length \u003d\u003d 2;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     * Unmarks the task as done and outputs the task to the user.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"     * @param manager The task list to add the task to.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * @return The output to show to the user.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If an error occurs while adding the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    public String execute(TaskList manager) throws AdamException {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"            String taskText \u003d manager.unmarkDone(this.index);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskText;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            return \"Task index out of bounds!\";","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false}],"authorContributionMap":{"kai824":51}},{"path":"src/main/java/adam/core/Adam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.core;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.command.Command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-04T14:36:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T22:16:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" * Represents the chatbot Adam.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"public class Adam {","lastModifiedDate":"2025-01-22T22:05:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    /** Name used in greeting */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    private static final String CHATBOT_NAME \u003d \"Adam\";","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    /** An instance of TaskList handling the information of current tasks */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    private TaskList manager;","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * Constructor for adam.core.Adam.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     * Initializes the chatbot with a new Ui and a new TaskList.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    public Adam() {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        this.manager \u003d new TaskList(new Storage());","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T22:37:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T22:37:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * Gets the greeting from the chatbot.","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * @return Greeting from the chatbot.","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        return \"Hello! I\u0027m \" + CHATBOT_NAME + \". What can I do for you today?\";","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     * Gets the response from the chatbot.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"            Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"            return c.execute(manager);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"            assert !e.getMessage().isEmpty() : \"Exception should have a message\";","lastModifiedDate":"2025-02-08T21:50:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"            return \"Oh no! \" + e;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T22:05:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"     * Checks if the user input is an exit command.","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"     * @return True if the user input is an exit command, false otherwise.","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"    public boolean checkIsExit(String input) {","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"            Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"            return c.isExit();","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"            return false;","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-22T22:05:59","isFullCredit":false}],"authorContributionMap":{"kai824":65}},{"path":"src/main/java/adam/core/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.core;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import adam.tasks.Task;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":" * Represents the storage of tasks.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"public class Storage {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    /** Default path of log file if none is specified */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    private static final String DEFAULT_PATH_FILE \u003d \"./data/adam_log.log\";","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    /** Path of log file */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"    private final String logPathFile;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"     * Constructor for Storage.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     * @param path Path of log file","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    public Storage(String path) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"        this.logPathFile \u003d path;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"     * Alternate constructor for Storage with default path.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"    Storage() {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        this.logPathFile \u003d Storage.DEFAULT_PATH_FILE;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     * Loads the log file. If any error occurs, an empty ArrayList is returned.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     * @return ArrayList of tasks from log file","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"    public ArrayList\u003cTask\u003e loadLog() {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"            File file \u003d new File(this.logPathFile);","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"                Task task \u003d Task.fromLog(line);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"                tasks.add(task);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"            scanner.close();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"            // No previous tasklist: do nothing","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"            System.out.println(\"Error loading task list from file: \" + e + \". Ignoring file.\");","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"        return tasks;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"     * Saves the log file.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"     * @param tasks Tasks to save","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"    public void saveLog(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"            File file \u003d new File(this.logPathFile);","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"                file.createNewFile();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"            FileWriter writer \u003d new FileWriter(this.logPathFile);","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"                writer.write(task.toLogString() + \"\\n\");","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"            writer.close();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"            System.out.println(\"Error saving task list to file: \" + e);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false}],"authorContributionMap":{"kai824":86}},{"path":"src/main/java/adam/core/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.core;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.tasks.Task;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" * Represents the list of tasks.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    /** List of tasks */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /** An instance of Storage to handle saving task list to file */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     * @param store An instance of Storage to handle saving task list to file.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    public TaskList(Storage store) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"        this.storage \u003d store;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"        this.tasks \u003d this.storage.loadLog();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"     * @return ArrayList of strings representing tasks","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    public ArrayList\u003cString\u003e listAll() {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"            outputs.add(String.format(\"%d. %s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        return outputs;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     * Lists all tasks on a given date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     * @param date The date to filter tasks by.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"     * @return ArrayList of strings representing tasks that occur on the date","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"    public ArrayList\u003cString\u003e listAllOnDate(LocalDate date) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"            if (task.isOn(date)) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"                outputs.add(String.format(\"%d. %s\", i + 1, task));","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"        return outputs;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"     * Lists all tasks that match a query.","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"     * @param query The query to match tasks against.","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"     * @return ArrayList of strings representing tasks that match the query.","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"    public ArrayList\u003cString\u003e listMatches(String query) {","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"        ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"            if (task.containsQuery(query)) {","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"                outputs.add(String.format(\"%d. %s\", i + 1, task));","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"        return outputs;","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"     * @param task","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"        this.storage.saveLog(this.tasks);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kai824"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kai824"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kai824"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kai824"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kai824"},"content":"        // may throw IndexOutOfBoundsException","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kai824"},"content":"        Task deletedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kai824"},"content":"        this.storage.saveLog(this.tasks);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kai824"},"content":"        return deletedTask;","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kai824"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kai824"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kai824"},"content":"     * @return A String representing the task that was marked.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kai824"},"content":"    public String markDone(int index) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kai824"},"content":"        // may throw IndexOutOfBoundsException","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kai824"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kai824"},"content":"        task.markDone();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kai824"},"content":"        this.storage.saveLog(this.tasks);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kai824"},"content":"        return task.toString();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kai824"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kai824"},"content":"     * @param index The index of the task to unmark as done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kai824"},"content":"     * @return a String representing the task that was unmarked","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kai824"},"content":"    public String unmarkDone(int index) {","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kai824"},"content":"        // may throw IndexOutOfBoundsException","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kai824"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kai824"},"content":"        task.unmarkDone();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kai824"},"content":"        this.storage.saveLog(this.tasks);","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kai824"},"content":"        return task.toString();","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T16:28:12","isFullCredit":false}],"authorContributionMap":{"kai824":131}},{"path":"src/main/java/adam/exceptions/AdamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":" * Represents exceptions specific to Adam.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"public class AdamException extends Exception {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"    public AdamException(String message) {","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"        super(message);","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false}],"authorContributionMap":{"kai824":10}},{"path":"src/main/java/adam/exceptions/EmptyDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":" * Represents an exception where the description is empty.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"public class EmptyDescription extends AdamException {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"    public EmptyDescription() {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"        super(\"Description is empty!\");","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false}],"authorContributionMap":{"kai824":10}},{"path":"src/main/java/adam/exceptions/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":" * Represents an exception where the command is not recognised.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"public class InvalidCommand extends AdamException {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"    private static String defaultErrorMsg \u003d","lastModifiedDate":"2025-01-24T12:40:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"            \"Command not recognised! Valid commands are: list, listOn, mark, unmark, \"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"            + \"todo, deadline, event, bye\";","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    public InvalidCommand() {","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"        super(InvalidCommand.defaultErrorMsg);","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false}],"authorContributionMap":{"kai824":14}},{"path":"src/main/java/adam/exceptions/InvalidDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":" * Represents an exception where the date format is invalid.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"public class InvalidDate extends AdamException {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    private static String defaultErrorMsg \u003d \"Date format is invalid! Please use the format \" + Parser.DATE_FORMAT_STRING","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"            + \".\";","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T15:29:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    public InvalidDate() {","lastModifiedDate":"2025-01-29T15:29:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"        super(InvalidDate.defaultErrorMsg);","lastModifiedDate":"2025-01-29T15:29:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T15:29:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T15:29:40","isFullCredit":false}],"authorContributionMap":{"kai824":15}},{"path":"src/main/java/adam/exceptions/InvalidDuration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":" * Represents an exception where the date format is invalid.","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"public class InvalidDuration extends AdamException {","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"    private static final String defaultErrorMsg \u003d","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"            \"Duration format is invalid. Please use the format: Xh Ym, such as 2h 3m\";","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"    public InvalidDuration() {","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"        super(InvalidDuration.defaultErrorMsg);","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false}],"authorContributionMap":{"kai824":13}},{"path":"src/main/java/adam/exceptions/InvalidLogFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":" * Represents an exception where the log file format is invalid.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"public class InvalidLogFile extends AdamException {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"    private static String defaultErrorMsg \u003d \"Log file format is invalid!\";","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    public InvalidLogFile() {","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"        super(InvalidLogFile.defaultErrorMsg);","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false}],"authorContributionMap":{"kai824":12}},{"path":"src/main/java/adam/exceptions/MissingArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.exceptions;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":" * Represents an exception where an argument is missing.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"public class MissingArgument extends AdamException {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"    public MissingArgument(String argumentName) {","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"        super(\"Argument \" + argumentName + \" is missing!\");","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-23T15:56:49","isFullCredit":false}],"authorContributionMap":{"kai824":10}},{"path":"src/main/java/adam/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.javafx;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":" * face","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * right.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    private void flip() {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"    public static DialogBox getAdamDialog(String text, Image img) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"        db.flip();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"        return db;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false}],"authorContributionMap":{"kai824":62}},{"path":"src/main/java/adam/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.javafx;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"public class Launcher {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"     * Launches the application.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"     * @param args Unused.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false}],"authorContributionMap":{"kai824":17}},{"path":"src/main/java/adam/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.javafx;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.core.Adam;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":" * A GUI for Adam using FXML.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    private Adam adam \u003d new Adam();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAdam(adam); // inject the Adam instance","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"            stage.show();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false}],"authorContributionMap":{"kai824":32}},{"path":"src/main/java/adam/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.javafx;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import adam.core.Adam;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    private Adam adam;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    private Image adamImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/adam.png\"));","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"    /** Injects the Adam instance */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    public void setAdam(Adam a) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"        adam \u003d a;","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        String greeting \u003d a.getGreeting();","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"        dialogContainer.getChildren().add(DialogBox.getAdamDialog(greeting, adamImage));","lastModifiedDate":"2025-02-08T11:44:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     * Adam\u0027s reply and then appends them to","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"    @FXML","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"        String response \u003d adam.getResponse(input);","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"                DialogBox.getAdamDialog(response, adamImage));","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"        if (adam.checkIsExit(input)) {","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"            stage.close();","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false}],"authorContributionMap":{"kai824":62}},{"path":"src/main/java/adam/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.parser;","lastModifiedDate":"2025-02-04T14:36:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.Duration;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import java.util.List;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import adam.command.AddCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import adam.command.ByeCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import adam.command.Command;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"import adam.command.DeleteCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"import adam.command.DoneCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"import adam.command.FindCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"import adam.command.ListCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"import adam.command.ListOnCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"import adam.command.UnmarkCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"import adam.exceptions.InvalidDate;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"import adam.exceptions.InvalidDuration;","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":" * Static methods to parse user input and create commands.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"public class Parser {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    /** String DateTime format for date to be read */","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"    public static final String DATE_FORMAT_STRING \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    /** DateTime Format for dates to be read and output */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_STRING);","lastModifiedDate":"2025-02-08T11:52:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d","lastModifiedDate":"2025-01-30T00:09:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-01-30T00:09:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"     * Parses the input string into a LocalDate object using the defined date format.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     * @param date The input string representing the date, expected in the format \"dd-MM-yyyy\".","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"     * @return A LocalDate object parsed from the input date string.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the input string does not match the expected date format.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    public static LocalDate parseInputDate(String date) throws AdamException {","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"            return LocalDate.parse(date, Parser.DATE_FORMAT);","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"            throw new InvalidDate();","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"     * Converts a LocalDate to a string in the format dd MMM yyyy.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"     * @param date The date to convert.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"     * @return The date as a string in the format dd MMM yyyy.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"    public static String formatOutputDate(LocalDate date) {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"        return date.format(Parser.OUTPUT_DATE_FORMAT);","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"     * Converts a LocalDate to a string in the format dd-MM-yyyy.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"     * @param date The date to convert.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"     * @return The date as a string in the format dd-MM-yyyy.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"    public static String formatLogDate(LocalDate date) {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"        return date.format(Parser.DATE_FORMAT);","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"     * Parses the input string into a Duration object.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"     * @param input The input string representing the duration in minutes.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"     * @return A Duration object parsed from the input duration string.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the input string is not valid.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"    public static Duration parseDuration(String input) throws AdamException {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"        List\u003cString\u003e parts \u003d List.of(input.split(\" \"));","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"        Duration result \u003d Duration.ZERO;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"            for (String part:parts) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"                if (part.endsWith(\"h\")) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"                    result \u003d result.plusHours(Long.parseLong(part.substring(0, part.length() - 1)));","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"                } else if (part.endsWith(\"m\")) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"                    result \u003d result.plusMinutes(Long.parseLong(part.substring(0, part.length() - 1)));","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"                } else {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"                    throw new InvalidDuration();","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kai824"},"content":"                }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kai824"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kai824"},"content":"            throw new InvalidDuration();","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kai824"},"content":"        return result;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kai824"},"content":"     * Converts a Duration to a string in the format \"xh ym\" (x hours, y minutes).","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kai824"},"content":"     * @param duration The duration to convert.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kai824"},"content":"     * @return The duration as a string in the format \"xh ym\".","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kai824"},"content":"    public static String formatDuration(Duration duration) {","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kai824"},"content":"        long hours \u003d duration.toHours();","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kai824"},"content":"        long mins \u003d duration.toMinutes() % 60;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kai824"},"content":"        if (mins \u003d\u003d 0) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kai824"},"content":"            return String.format(\"%dh\", hours);","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kai824"},"content":"        } else if (hours \u003d\u003d 0) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kai824"},"content":"            return String.format(\"%dm\", mins);","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kai824"},"content":"        } else {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kai824"},"content":"            return String.format(\"%dh %dm\", hours, mins);","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kai824"},"content":"     * Parses the input and returns the corresponding command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kai824"},"content":"     * @param input The input to parse.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kai824"},"content":"     * @return The corresponding command.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the input is invalid.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kai824"},"content":"    public static Command parseInput(String input) throws AdamException {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kai824"},"content":"        if (ByeCommand.isMatch(input)) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kai824"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kai824"},"content":"        } else if (ListCommand.isMatch(input)) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kai824"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kai824"},"content":"        } else if (ListOnCommand.isMatch(input)) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kai824"},"content":"            return new ListOnCommand(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kai824"},"content":"        } else if (DoneCommand.isMatch(input)) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kai824"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kai824"},"content":"        } else if (UnmarkCommand.isMatch(input)) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kai824"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kai824"},"content":"        } else if (DeleteCommand.isMatch(input)) {","lastModifiedDate":"2025-01-30T00:11:45","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kai824"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kai824"},"content":"        } else if (FindCommand.isMatch(input)) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kai824"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kai824"},"content":"        } else {","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kai824"},"content":"            // throws AdamException if invalid input","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kai824"},"content":"            return new AddCommand(input);","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T21:04:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false}],"authorContributionMap":{"kai824":140}},{"path":"src/main/java/adam/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-04T14:36:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * Constructs a Deadline object with a specified description and deadline.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     * @param deadline    The deadline date for the task.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the description is empty or invalid.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    public Deadline(String description, LocalDate deadline) throws AdamException {","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        super(description);","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     * Gets the deadline of the task as a String.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"                Parser.formatOutputDate(this.deadline));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * Gets the deadline of the task as a String for logging.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    public String toLogString() {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"        // Format back into the input format","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"        return String.format(\"D | %s | %s\", super.toLogString(),","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"                Parser.formatLogDate(this.deadline));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"     * Checks if the task is due on the specified date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"     * @param date The date to check against.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"     * @return True if the task is due on the specified date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"        return this.deadline.equals(date);","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false}],"authorContributionMap":{"kai824":58}},{"path":"src/main/java/adam/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-04T14:36:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" * Represents a task that occurs over a period of time.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"    /** The start date of the event. */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    private LocalDate from;","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    /** The end date of the event. */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    private LocalDate to;","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * Creates an Event with a description, start date, and end date.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the description is empty.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    public Event(String description, LocalDate from, LocalDate to) throws AdamException {","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"        super(description);","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"        assert(!this.from.isAfter(this.to)) : \"Start date should be before or equal to end date\";","lastModifiedDate":"2025-02-19T23:56:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"     * Gets the event as a String.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"     * @return The event as a String.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"                Parser.formatOutputDate(this.from), Parser.formatOutputDate(this.to));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * Gets the event as a String for logging.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"    public String toLogString() {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        // Format back into the input format","lastModifiedDate":"2025-01-29T15:15:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        return String.format(\"E | %s | %s | %s\", super.toLogString(),","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"                Parser.formatLogDate(this.from), Parser.formatLogDate(this.to));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"     * Checks if the event occurs on the specified date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"     * @param date The date to check against.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"     * @return True if the event occurs on the specified date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"        // this.from \u003c\u003d date \u003c\u003d this.to","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"        return (this.from.isBefore(date) || this.from.equals(date))","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"                \u0026\u0026 (this.to.isAfter(date) || this.to.equals(date));","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false}],"authorContributionMap":{"kai824":65}},{"path":"src/main/java/adam/tasks/FixedDuration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.Duration;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" * Represents a task that has a fixed duration.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"public class FixedDuration extends Task {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    /** Duration of the task */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"    private Duration duration;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * Constructor for adam.tasks.FixedDuration.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     * @param duration Duration of the task.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the description is empty.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"    public FixedDuration(String description, Duration duration) throws AdamException {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        super(description);","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     * Gets the task as a String.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    public String toString() {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        return String.format(\"[F] %s (Duration: %s)\", super.toString(), Parser.formatDuration(duration));","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     * Gets the task as a String for logging.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"    public String toLogString() {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"        return \"F | \" + super.toLogString() + \" | \" + Parser.formatDuration(duration);","lastModifiedDate":"2025-02-09T00:08:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * Checks if it is on the specified date.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"     * @param date The date to check against.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"     * @return False, as a FixedDuration task has no due date.","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"        return false;","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false}],"authorContributionMap":{"kai824":53}},{"path":"src/main/java/adam/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.util.List;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import adam.exceptions.EmptyDescription;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import adam.exceptions.InvalidCommand;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import adam.exceptions.InvalidLogFile;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import adam.exceptions.MissingArgument;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"import adam.parser.Parser;","lastModifiedDate":"2025-02-04T14:36:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    /** Represents if the task is done */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-29T12:57:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    /** String representing a description of the task */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"    private final String description;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"     * Constructs a Task object with a specified description.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the description is empty.","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    public Task(String description) throws AdamException {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"            throw new EmptyDescription();","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        assert !description.contains(\"|\") : \"Description should not contain |\";","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-29T12:57:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"     * Splits the input into a description and a list of delimiters.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"     * @param input A list of input parts to be split.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     * @param delimiters A list of delimiters to split the input by.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     * @return A list of strings representing the split input.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If a delimiter is missing.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    private static List\u003cString\u003e splitDescription(List\u003cString\u003e input, List\u003cString\u003e delimiters)","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"            throws AdamException {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        String cur \u003d \"\";","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        int delimiterIndex \u003d 0;","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"        List\u003cString\u003e results \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"            if (delimiterIndex \u003c delimiters.size()","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"                    \u0026\u0026 delimiters.get(delimiterIndex).equals(input.get(i))) {","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"                results.add(cur);","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"                cur \u003d \"\";","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"                delimiterIndex++;","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"            } else {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"                if (cur.length() \u003e 0) {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"                    cur +\u003d \" \";","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"                }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"                cur +\u003d input.get(i);","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"        results.add(cur);","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"        if (delimiterIndex \u003c delimiters.size()) {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"            throw new MissingArgument(delimiters.get(delimiterIndex));","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"        return results;","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"     * Creates a task from user input.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"     * @param userInput String representing the user input.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"     * @return A task object representing the user input.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the user input is invalid.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"    public static Task of(String userInput) throws AdamException {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"        List\u003cString\u003e parts \u003d List.of(userInput.split(\" \"));","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"        if (parts.get(0).equals(\"todo\")) {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"            List\u003cString\u003e split \u003d splitDescription(parts, List.of());","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kai824"},"content":"            return new ToDo(split.get(0));","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kai824"},"content":"        } else if (parts.get(0).equals(\"deadline\")) {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kai824"},"content":"            List\u003cString\u003e split \u003d splitDescription(parts, List.of(\"/by\"));","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kai824"},"content":"            return new Deadline(split.get(0), Parser.parseInputDate(split.get(1)));","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kai824"},"content":"        } else if (parts.get(0).equals(\"event\")) {","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kai824"},"content":"            List\u003cString\u003e split \u003d splitDescription(parts, List.of(\"/from\", \"/to\"));","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kai824"},"content":"            return new Event(split.get(0), Parser.parseInputDate(split.get(1)),","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kai824"},"content":"                    Parser.parseInputDate(split.get(2)));","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kai824"},"content":"        } else if (parts.get(0).equals(\"fixed\")) {","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kai824"},"content":"            List\u003cString\u003e split \u003d splitDescription(parts, List.of(\"/takes\"));","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kai824"},"content":"            return new FixedDuration(split.get(0), Parser.parseDuration(split.get(1)));","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-23T00:40:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kai824"},"content":"        throw new InvalidCommand();","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kai824"},"content":"     * Creates a task from a log file.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kai824"},"content":"     * @param logText The log text to create the task from.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kai824"},"content":"     * @return A task object representing the log text.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the log text is invalid.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kai824"},"content":"    public static Task fromLog(String logText) throws AdamException {","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kai824"},"content":"        // | is a special character in regex, so we need to escape it","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kai824"},"content":"        List\u003cString\u003e parts \u003d List.of(logText.split(\" \\\\| \"));","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kai824"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kai824"},"content":"            switch (parts.get(0)) {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kai824"},"content":"            case \"T\" -\u003e task \u003d new ToDo(parts.get(2));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kai824"},"content":"            case \"D\" -\u003e task \u003d new Deadline(parts.get(2), Parser.parseInputDate(parts.get(3)));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kai824"},"content":"            case \"E\" -\u003e task \u003d new Event(parts.get(2), Parser.parseInputDate(parts.get(3)),","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kai824"},"content":"                        Parser.parseInputDate(parts.get(4)));","lastModifiedDate":"2025-01-29T16:46:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kai824"},"content":"            case \"F\" -\u003e task \u003d new FixedDuration(parts.get(2), Parser.parseDuration(parts.get(3)));","lastModifiedDate":"2025-02-09T00:01:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kai824"},"content":"            default -\u003e throw new InvalidLogFile();","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kai824"},"content":"            }","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kai824"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kai824"},"content":"            throw new InvalidLogFile();","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kai824"},"content":"        assert (parts.get(1).equals(\"true\") || parts.get(1).equals(\"false\"))","lastModifiedDate":"2025-02-08T21:50:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kai824"},"content":"                : \"isDone should be true or false\";","lastModifiedDate":"2025-02-08T21:50:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kai824"},"content":"        if (parts.get(1).equals(\"true\")) {","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kai824"},"content":"            task.markDone();","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kai824"},"content":"        return task;","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T14:33:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kai824"},"content":"     * Marks the task as done","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kai824"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kai824"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-29T12:57:19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kai824"},"content":"     * Marks the task as not done","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kai824"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kai824"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-29T12:57:19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kai824"},"content":"     * Checks if the task contains a query string","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kai824"},"content":"     * @param query The query string to check for.","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kai824"},"content":"     * @return True if the task contains the query string, false otherwise.","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kai824"},"content":"    public boolean containsQuery(String query) {","lastModifiedDate":"2025-01-30T01:01:10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kai824"},"content":"        return this.description.contains(query);","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:43:03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kai824"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kai824"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-29T12:57:19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kai824"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kai824"},"content":"        } else {","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kai824"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kai824"},"content":"     * Gets the description of the task for logging.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kai824"},"content":"     * @return the description to be logged.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kai824"},"content":"    public String toLogString() {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kai824"},"content":"        return this.isDone + \" | \" + this.description;","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kai824"},"content":"    public abstract boolean isOn(LocalDate date);","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-22T22:59:46","isFullCredit":false}],"authorContributionMap":{"kai824":176}},{"path":"src/main/java/adam/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"    public ToDo(String description) throws AdamException {","lastModifiedDate":"2025-01-23T23:13:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"        super(description);","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * Gets the task as a String.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"     * Gets the task as a String for logging.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"    public String toLogString() {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"        return \"T | \" + super.toLogString();","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T13:42:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"     * Checks if it is on the specified date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"     * @param date The date to check against.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"     * @return False, as a ToDo task has no due date.","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:45:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        return false;","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T15:39:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-22T23:43:56","isFullCredit":false}],"authorContributionMap":{"kai824":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false}],"authorContributionMap":{"kai824":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"            fx:controller\u003d\"adam.javafx.MainWindow\"\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T11:41:08","isFullCredit":false}],"authorContributionMap":{"kai824":44}},{"path":"src/test/java/adam/core/TestTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.core;","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import adam.tasks.Task;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":" * Test class for TaskList.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"public class TestTaskList {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"     * Tests the listAll method.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"    public void testListAll() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"            TaskList manager \u003d new TaskList(new StubStorage());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"            Task task1 \u003d new StubTask(\"Test Task 1\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"            Task task2 \u003d new StubTask(\"Test Task 2\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"            Task task3 \u003d new StubTask(\"Test Task 3\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"            manager.addTask(task1);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"            manager.addTask(task2);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"            manager.addTask(task3);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"            assertEquals(3, manager.listAll().size());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"            ArrayList\u003cString\u003e outputs \u003d manager.listAll();","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"            assertEquals(\"1. \" + task1.toString(), outputs.get(0));","lastModifiedDate":"2025-01-30T00:09:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"            assertEquals(\"2. \" + task2.toString(), outputs.get(1));","lastModifiedDate":"2025-01-30T00:09:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"            assertEquals(\"3. \" + task3.toString(), outputs.get(2));","lastModifiedDate":"2025-01-30T00:09:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     * Tests the markDone method.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"    public void testMarkDone() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"            TaskList manager \u003d new TaskList(new StubStorage());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"            Task task1 \u003d new StubTask(\"Test Task 1\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"            Task task2 \u003d new StubTask(\"Test Task 2\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"            Task task3 \u003d new StubTask(\"Test Task 3\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"            manager.addTask(task1);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"            manager.addTask(task2);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"            manager.addTask(task3);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"            manager.markDone(0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"            manager.markDone(2);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[X] Test Task 1\", task1.toString());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[X] Test Task 3\", task3.toString());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"     * Tests the listAllOnDate method.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"    public void testListAllOnDate() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"            TaskList manager \u003d new TaskList(new StubStorage());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"            manager.addTask(new StubTask(\"On Date\"));","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"            manager.addTask(new StubTask(\"Not On Date\"));","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"            manager.addTask(new StubTask(\"On Date\"));","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"            manager.addTask(new StubTask(\"Not On Date\"));","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"            ArrayList\u003cString\u003e outputs \u003d manager.listAllOnDate(LocalDate.now());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"            assertEquals(2, outputs.size());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"            assertEquals(\"1. [ ] On Date\", outputs.get(0));","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"            assertEquals(\"3. [ ] On Date\", outputs.get(1));","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kai824"},"content":" * Stub class for Storage.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kai824"},"content":"class StubStorage extends Storage {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kai824"},"content":"    StubStorage() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kai824"},"content":"        super();","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kai824"},"content":"    public ArrayList\u003cTask\u003e loadLog() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kai824"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kai824"},"content":"    public void saveLog(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kai824"},"content":" * Stub class for Task.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kai824"},"content":"class StubTask extends Task {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kai824"},"content":"    private final String description;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kai824"},"content":"    StubTask(String description) throws AdamException {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kai824"},"content":"        super(description);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kai824"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kai824"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kai824"},"content":"        return super.toString();","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kai824"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kai824"},"content":"        return \"On Date\".equals(this.description);","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false}],"authorContributionMap":{"kai824":129}},{"path":"src/test/java/adam/parser/TestParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.parser;","lastModifiedDate":"2025-02-04T14:36:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import adam.command.AddCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"import adam.command.ByeCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import adam.command.DeleteCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"import adam.command.DoneCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"import adam.command.ListCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"import adam.command.ListOnCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"import adam.command.UnmarkCommand;","lastModifiedDate":"2025-02-08T21:59:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":" * Test class for Parser.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"public class TestParser {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"     * Tests the parseInputDate method.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    public void testParseInputDate() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"            assertEquals(\"2021-12-31\", Parser.parseInputDate(\"31-12-2021\").toString());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"     * Tests the formatOutputDate method.","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"    public void testFormatOutputDate() {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"            assertEquals(\"31 Dec 2021\", Parser.formatOutputDate(Parser.parseInputDate(\"31-12-2021\")));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"     * Tests the formatLogDate method.","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"    public void testFormatLogDate() {","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"            assertEquals(\"31-12-2021\", Parser.formatLogDate(Parser.parseInputDate(\"31-12-2021\")));","lastModifiedDate":"2025-02-08T22:14:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"     * Tests the parseInput method.","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-01-30T00:47:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"    public void testParseInput() {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"            assertEquals(AddCommand.class, Parser.parseInput(\"todo test\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"            assertEquals(AddCommand.class,","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"                    Parser.parseInput(\"deadline test /by 31-12-2021\").getClass());","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"            assertEquals(AddCommand.class,","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"                    Parser.parseInput(\"event test /from 15-12-2021 /to 25-12-2021\").getClass());","lastModifiedDate":"2025-02-04T13:41:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"            assertEquals(ListCommand.class, Parser.parseInput(\"list\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"            assertEquals(ListOnCommand.class, Parser.parseInput(\"listOn 31-12-2021\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"            assertEquals(DoneCommand.class, Parser.parseInput(\"mark 1\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"            assertEquals(UnmarkCommand.class, Parser.parseInput(\"unmark 1\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"            assertEquals(DeleteCommand.class, Parser.parseInput(\"delete 1\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"            assertEquals(ByeCommand.class, Parser.parseInput(\"bye\").getClass());","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"            Parser.parseInput(\"invalid command\");","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 1);","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-01-29T23:06:23","isFullCredit":false}],"authorContributionMap":{"kai824":84}},{"path":"src/test/java/adam/tasks/TestDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":" * Test class for Deadline.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"class TestDeadline {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * Tests the toString method of Deadline.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    void testToString() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"            Deadline d \u003d new Deadline(\"Test Deadline\", LocalDate.parse(\"2021-12-31\"));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[D][ ] Test Deadline (by: 31 Dec 2021)\", d.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * Tests the toLogString method of Deadline.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    void testToLogString() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"            Deadline d \u003d new Deadline(\"Test Deadline\", LocalDate.parse(\"2021-12-31\"));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"            assertEquals(\"D | false | Test Deadline | 31-12-2021\", d.toLogString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     * Tests the isOn method of Deadline.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"    void testIsOn() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"            LocalDate date \u003d LocalDate.parse(\"2021-12-31\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            LocalDate dayBefore \u003d LocalDate.parse(\"2021-12-30\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"            Deadline d \u003d new Deadline(\"Test Deadline\", date);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"            assertEquals(true, d.isOn(date));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"            assertEquals(false, d.isOn(dayBefore));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false}],"authorContributionMap":{"kai824":56}},{"path":"src/test/java/adam/tasks/TestEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":" * Test class for Event.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"class TestEvent {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * Tests the toString method of Event.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    void testToString() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"            Event e \u003d new Event(\"Test Event\", LocalDate.parse(\"2021-12-20\"), LocalDate.parse(\"2021-12-30\"));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[E][ ] Test Event (from: 20 Dec 2021 to: 30 Dec 2021)\", e.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * Tests the toLogString method of Event.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    void testToLogString() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"            Event e \u003d new Event(\"Test Event\", LocalDate.parse(\"2021-12-20\"), LocalDate.parse(\"2021-12-30\"));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"            assertEquals(\"E | false | Test Event | 20-12-2021 | 30-12-2021\", e.toLogString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"     * Tests the isOn method of Event.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"    void testIsOn() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"            LocalDate startDate \u003d LocalDate.parse(\"2021-12-20\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            LocalDate endDate \u003d LocalDate.parse(\"2021-12-30\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"            Event e \u003d new Event(\"Test Event\", startDate, endDate);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"            assertEquals(true, e.isOn(startDate));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"            assertEquals(true, e.isOn(endDate));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"            assertEquals(false, e.isOn(startDate.minusDays(1)));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"            assertEquals(false, e.isOn(endDate.plusDays(1)));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false}],"authorContributionMap":{"kai824":59}},{"path":"src/test/java/adam/tasks/TestTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":" * Test class for Task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"public class TestTask {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"     * Tests the constructor of Task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"    public void testTask() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"            Task task \u003d new StubTask(\"Test Task\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[ ] Test Task\", task.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"     * Tests the markDone method of Task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"    public void testMarkDone() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"            Task task \u003d new StubTask(\"Test Task\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"            task.markDone();","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[X] Test Task\", task.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kai824"},"content":"     * Tests the markUndone method of Task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kai824"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kai824"},"content":"            Task task \u003d new StubTask(\"Test Task\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kai824"},"content":"            task.markDone();","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[X] Test Task\", task.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kai824"},"content":"            task.unmarkDone();","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[ ] Test Task\", task.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kai824"},"content":"     * Tests the isOn method of Task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kai824"},"content":"    public void testIsOn() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kai824"},"content":"            Task task \u003d new StubTask(\"Test Task\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kai824"},"content":"            assertEquals(false, task.isOn(LocalDate.now()));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kai824"},"content":"     * Tests the containsQuery method of Task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kai824"},"content":"    public void testContainsQuery() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kai824"},"content":"            Task task \u003d new StubTask(\"Test Task\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kai824"},"content":"            assertEquals(true, task.containsQuery(\"Test\"));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kai824"},"content":"            assertEquals(false, task.containsQuery(\"Not\"));","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kai824"},"content":"            assertEquals(1, 0);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kai824"},"content":" * Stub class for Task, since Task class is abstract.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kai824"},"content":"class StubTask extends Task {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kai824"},"content":"     * Constructor for StubTask.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kai824"},"content":"     *","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kai824"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kai824"},"content":"     * @throws AdamException If the description is empty.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kai824"},"content":"    public StubTask(String description) throws AdamException {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kai824"},"content":"        super(description);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kai824"},"content":"    @Override","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kai824"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kai824"},"content":"        return false;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false}],"authorContributionMap":{"kai824":104}},{"path":"src/test/java/adam/tasks/TestToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"package adam.tasks;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"import adam.exceptions.AdamException;","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"/**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":" * Test class for ToDo.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":" */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"class TestToDo {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"     * Tests the toString method of ToDo.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"    void testToString() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"            ToDo t \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"            assertEquals(\"[T][ ] Test ToDo\", t.toString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"    /**","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kai824"},"content":"     * Tests the toLogString method of ToDo.","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"     */","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"    @Test","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kai824"},"content":"    void testToLogString() {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kai824"},"content":"        try {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kai824"},"content":"            ToDo t \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kai824"},"content":"            assertEquals(\"T | false | Test ToDo\", t.toLogString());","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kai824"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kai824"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kai824"},"content":"        }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kai824"},"content":"    }","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kai824"},"content":"}","lastModifiedDate":"2025-02-08T22:43:35","isFullCredit":false}],"authorContributionMap":{"kai824":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"todo borrow book","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"deadline return book /by 15-12-2025","lastModifiedDate":"2025-01-29T15:21:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"event recess week /from 22-02-2025 /to 02-03-2025","lastModifiedDate":"2025-01-29T15:21:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"mark 2","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"unmark 2","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"delete 2","lastModifiedDate":"2025-01-23T23:35:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-23T23:35:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"deadline another task /by 31-03-2025","lastModifiedDate":"2025-01-29T15:21:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"mark 3","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"invalid command","lastModifiedDate":"2025-01-23T23:28:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"mark 5","lastModifiedDate":"2025-01-23T23:28:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"unmark -1","lastModifiedDate":"2025-01-23T23:28:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"delete 0","lastModifiedDate":"2025-01-23T23:35:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"deadline /by 31-05-2025","lastModifiedDate":"2025-01-29T15:21:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"event missing argument /from 17-02-2025","lastModifiedDate":"2025-01-29T15:21:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"deadline misformatted date /by 351-456-13","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"bye","lastModifiedDate":"2025-01-23T13:35:55","isFullCredit":false}],"authorContributionMap":{"kai824":24}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kai824"},"content":"mark 1","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kai824"},"content":"mark 2","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kai824"},"content":"unmark 3","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kai824"},"content":"delete 1","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kai824"},"content":"todo test adding another task","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kai824"},"content":"event test event /from 15-02-2026 /to 25-02-2026","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kai824"},"content":"event test event2 /from 10-02-2026 /to 20-02-2026","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kai824"},"content":"deadline ddl1 /by 17-02-2026","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"deadline ddl2 /by 18-02-2026","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kai824"},"content":"list","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"listOn 17-02-2026","lastModifiedDate":"2025-01-29T15:43:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kai824"},"content":"find ddl","lastModifiedDate":"2025-01-29T23:45:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kai824"},"content":"find test","lastModifiedDate":"2025-01-29T23:45:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kai824"},"content":"bye","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false}],"authorContributionMap":{"kai824":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kai824"},"content":"java -classpath ..\\bin Adam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23T15:36:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"kai824":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kai824"},"content":"if ! javac -cp ../src/main/java/adam -Xlint:none -d ../bin ../src/main/java/adam/*/*.java","lastModifiedDate":"2025-01-29T21:49:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kai824"},"content":"# remove the log file to ensure a clean run","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kai824"},"content":"rm ./data/adam_log.log","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kai824"},"content":"","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kai824"},"content":"java -classpath ../bin adam.core.Adam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-29T23:45:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kai824"},"content":"# run with a second input file, but this time with the log file","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kai824"},"content":"java -classpath ../bin adam.core.Adam \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2025-01-29T23:45:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-29T14:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"kai824":7,"-":37}}]
