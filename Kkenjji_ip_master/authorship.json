[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"    mainClass.set(\"clank.Clank\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"checkstyle {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"    archiveFileName \u003d \"clank.jar\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"    // archiveBaseName \u003d \"duke\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"    // archiveClassifier \u003d null","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Kkenjji":9,"-":38}},{"path":"src/main/java/clank/Clank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.command.Command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.ClankException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Parser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":" * The main class for the Clank chatbot.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":" * Clank is a simple task management chatbot that allows users to add,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":" * delete, list, and mark tasks as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"public class Clank {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * Initializes the Clank chatbot with the specified file path for storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"    public Clank(String filePath) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"        } catch (ClankException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"     * Runs the Clank chatbot, processing user commands until exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"    public void run() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"            try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"            } catch (ClankException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"            } finally {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"     * The main entry point of the Clank chatbot.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"        new Clank(\"./data/clank.txt\").run();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"Kkenjji":64}},{"path":"src/main/java/clank/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.ClankException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.InvalidFormatException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Event;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Todo;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to add a new task (Todo, Deadline, or Event).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    private final Task task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * Constructs an {@code AddCommand} based on the user\u0027s input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * Determines the type of task (Todo, Deadline, or Event) and parses the input accordingly.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"     * @throws ClankException If an unknown task type is encountered.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"    public AddCommand(String input) throws InvalidFormatException, ClankException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"        String mainCommand \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"        String[] taskDetails \u003d parts.length \u003e 1 ? parts[1].split(\"/by | /from | /to \", 3) : new String[]{\"\"};","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"        String description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"        switch (mainCommand) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"            if (taskDetails.length !\u003d 1 || taskDetails[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"                throw new InvalidFormatException(\"todo \u003cdescription\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"            description \u003d taskDetails[0].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"I\u0027ve added \\\"\" + description + \"\\\" as a todo!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Check it out!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"            break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"            if (taskDetails.length !\u003d 2 || taskDetails[0].trim().isEmpty() || taskDetails[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"                throw new InvalidFormatException(\"deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"            description \u003d taskDetails[0].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"            String by \u003d taskDetails[1].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"I\u0027ve added \\\"\" + description + \"\\\" as a task with deadline!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"It is to be completed by \" + by + \".\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Check it out!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"            break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"        case \"event\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"            if (taskDetails.length !\u003d 3 || taskDetails[0].trim().isEmpty() || taskDetails[1].trim().isEmpty()","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"                    || taskDetails[2].trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"                throw new InvalidFormatException(\"event \u003cdescription\u003e /from d/M/yyyy HHmm /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"            description \u003d taskDetails[0].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"            String start \u003d taskDetails[1].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"            String end \u003d taskDetails[2].trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kkenjji"},"content":"            task \u003d new Event(description, start, end);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"I\u0027ve added \\\"\" + description + \"\\\" as an event!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"It is from \" + start + \" to \" + end + \".\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Check it out!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kkenjji"},"content":"            break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kkenjji"},"content":"        default:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kkenjji"},"content":"            throw new ClankException(\"Unknown task type.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kkenjji"},"content":"     * Executes the add command by adding the task to the task list and saving it to storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list to modify.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance to interact with the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system to save the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kkenjji"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kkenjji"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":88}},{"path":"src/main/java/clank/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Executes the bye command by displaying a goodbye message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list (not modified in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance to show the goodbye message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system (not modified in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"        ui.close();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"        ui.showByeMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"     * Indicates that this command is an exit command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"     * @return {@code true} since this command exits the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"        return true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":34}},{"path":"src/main/java/clank/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Executes the command, performing operations on the task list, UI, and storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * @param tasks The task list to modify.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance for user interaction.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system for saving/loading tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * Determines if the command should terminate the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     * @return {@code false} by default. Subclasses may override to return {@code true}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":29}},{"path":"src/main/java/clank/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.InvalidFormatException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    private int index;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    private boolean toDeleteAll \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a {@code DeleteCommand} from the user\u0027s input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * Parses whether a specific task should be deleted or if all tasks should be removed.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"    public DeleteCommand(String input) throws InvalidFormatException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"                throw new InvalidFormatException(\"delete \u003cindex\u003e or delete all\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"            if (parts[1].toLowerCase().equals(\"all\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"                toDeleteAll \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"            this.index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Oh no! That\u0027s not a number!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     * Executes the delete command by removing a task or clearing all tasks from the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list to modify.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance to interact with the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system to save the updated task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"            taskList.deleteTask(index, toDeleteAll);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Please specify a valid index!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":52}},{"path":"src/main/java/clank/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.InvalidFormatException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to find tasks that contain a specific keyword in their description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    private String keyword;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a {@code FindCommand} with the specified keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * @param input The raw user input containing the keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * @throws InvalidFormatException If the input format is incorrect or the keyword is missing.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"            throw new InvalidFormatException(\"find \u003ckeyword\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"        this.keyword \u003d parts[1].trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"     * Executes the find command, searching for tasks that contain the keyword","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"     * and displaying the results to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance to display the matching tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system (not modified in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Kkenjji":44}},{"path":"src/main/java/clank/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Executes the list command, displaying all tasks to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list containing tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance for user interaction.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system (not modified in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"        taskList.listTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":23}},{"path":"src/main/java/clank/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.InvalidFormatException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    private int index;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a {@code MarkCommand} with the specified task index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * @param input The raw input containing the task index to mark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     * @throws InvalidFormatException If the input does not contain a valid index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    public MarkCommand(String input) throws InvalidFormatException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"                throw new InvalidFormatException(\"mark \u003cindex\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"            this.index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Oh no! That\u0027s not a number!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"     * Executes the mark command, marking the specified task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list containing the task to mark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance for user interaction.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system (not modified in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"            taskList.mark(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Please specify a valid index!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":47}},{"path":"src/main/java/clank/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to save the current tasks to storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Executes the save command, saving all tasks to the storage file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list to save.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance (not used in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system to save the tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"All the tasks are saved!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":24}},{"path":"src/main/java/clank/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.InvalidFormatException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.utility.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    private int index;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     * @param input The raw input containing the task index to unmark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     * @throws InvalidFormatException If the input does not contain a valid index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    public UnmarkCommand(String input) throws InvalidFormatException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"                throw new InvalidFormatException(\"unmark \u003cindex\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"            this.index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Oh no! That\u0027s not a number!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"     * Executes the unmark command, setting the specified task as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The task list containing the task to unmark.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"     * @param ui The UI instance for user interaction.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"     * @param storage The storage system (not modified in this command).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"            taskList.unmark(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Please specify a valid index!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":47}},{"path":"src/main/java/clank/exception/ClankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.exception;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":" * Represents the base exception class for errors in the Clank chatbot.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"public class ClankException extends RuntimeException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a {@code ClankException} with a specified error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"     * @param message The detailed error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    public ClankException(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"        super(message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kkenjji":16}},{"path":"src/main/java/clank/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.exception;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":" * Exception thrown when a user inputs a command in an invalid format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"public class InvalidFormatException extends ClankException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"     * Constructs an {@code InvalidFormatException} with a detailed message about the correct format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"     * @param format The expected format for the command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    public InvalidFormatException(String format) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"        super(\"Oh no! The format is wrong!\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"                + \"The correct format for this command is: \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"                + format);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":18}},{"path":"src/main/java/clank/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.exception;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":" * Exception thrown when a user inputs an unrecognized command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"public class UnknownCommandException extends ClankException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"     * Constructs an {@code UnknownCommandException} with a message indicating the invalid command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"     * @param command The unrecognized command entered by the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"        super(\"Hmm, I have not seen \\\"\" + command + \"\\\" before! \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"                + \"Please try another command that I understand.\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kkenjji":17}},{"path":"src/main/java/clank/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.ClankException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mm a\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a new Deadline task with a description and deadline date/time.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @param by The deadline date/time as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     * @throws ClankException If the date format is invalid.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"            this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"            throw new ClankException(\"Error parsing deadline\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     * @param input The date-time string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     * @return The parsed {@code LocalDateTime} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"     * @throws DateTimeParseException If the input string is not in the expected format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"    private LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"        return LocalDateTime.parse(input, INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"     * Converts the Deadline task to a format suitable for saving to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"     * @return The formatted string for saving.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"        return \"D|\" + isDone + \"|\" + description + \"|\" + by.format(INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"     * Converts the Deadline task to a string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Kkenjji":65}},{"path":"src/main/java/clank/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.ClankException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":" * Represents an event with a start and end time.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mm a\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a new Event task with a description, start time, and end time.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     * @param start The start time as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"     * @param end The end time as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"     * @throws ClankException If the date format is invalid.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"            this.start \u003d parseDateTime(start);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"            this.end \u003d parseDateTime(end);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"            throw new ClankException(\"Error parsing event\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"     * @param input The date-time string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"     * @return The parsed {@code LocalDateTime} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"     * @throws DateTimeParseException If the input string is not in the expected format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"    private LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"        return LocalDateTime.parse(input, INPUT_FORMATTER);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"     * Converts the Event task to a format suitable for saving to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"     * @return The formatted string for saving.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"        return \"T|\" + isDone + \"|\" + description + \"|\" + start.format(INPUT_FORMATTER)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"                + \"|\" + end.format(INPUT_FORMATTER);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"     * Converts the Event task to a string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kkenjji"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kkenjji"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kkenjji"},"content":"                + \" to: \" + end.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Kkenjji":70}},{"path":"src/main/java/clank/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":" * Represents a task in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a new Task with a given description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @return \"X\" if the task is done, otherwise a space.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"        return description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"    public void mark() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"     * Unmarks the task, setting it as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"    public void unmark() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"     * Converts the task to a string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"     * Converts the task to a format suitable for saving to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"     * @return The formatted string for saving.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kkenjji"},"content":"    public static Task fromSavedFormat(String line) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kkenjji"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kkenjji"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Corrupted task.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kkenjji"},"content":"            return null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kkenjji"},"content":"            String taskType \u003d parts[0];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kkenjji"},"content":"            boolean isDone \u003d Boolean.parseBoolean(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kkenjji"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kkenjji"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kkenjji"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kkenjji"},"content":"            case \"T\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kkenjji"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kkenjji"},"content":"                break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kkenjji"},"content":"            case \"D\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kkenjji"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kkenjji"},"content":"                    System.out.println(\"Corrupted deadline task. Date is missing.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kkenjji"},"content":"                    return null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kkenjji"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kkenjji"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kkenjji"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kkenjji"},"content":"                break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kkenjji"},"content":"            case \"E\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kkenjji"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kkenjji"},"content":"                    System.out.println(\"Corrupted event task. Dates are missing.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kkenjji"},"content":"                    return null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kkenjji"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kkenjji"},"content":"                String start \u003d parts[3];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kkenjji"},"content":"                String end \u003d parts[4];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kkenjji"},"content":"                task \u003d new Event(description, start, end);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kkenjji"},"content":"                break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kkenjji"},"content":"            default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kkenjji"},"content":"                System.out.println(\"Unknown task type.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kkenjji"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kkenjji"},"content":"                task.mark();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kkenjji"},"content":"            return task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kkenjji"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Corrupted task.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kkenjji"},"content":"            return null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kkenjji"},"content":"     * Converts the task into a format suitable for saving to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kkenjji"},"content":"     * Subclasses must implement this method to define their own save format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kkenjji"},"content":"     * @return A formatted string representation of the task for storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kkenjji"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Kkenjji":124}},{"path":"src/main/java/clank/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.InvalidFormatException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class TaskList {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a TaskList with a given list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"        return tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"You currently have no task!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Here are your current tasks:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"                System.out.println(index + \".\" + task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kkenjji"},"content":"     * @param index The index of the task to mark as done (zero-based index).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kkenjji"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kkenjji"},"content":"    public void mark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kkenjji"},"content":"        if ((index \u003c 0) || (index \u003e (tasks.size() - 1))) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kkenjji"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kkenjji"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"Marked \" + (index + 1) + \" as done.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kkenjji"},"content":"     * Unmarks the task at the specified index, setting it as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kkenjji"},"content":"     * @param index The index of the task to unmark (zero-based index).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kkenjji"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kkenjji"},"content":"    public void unmark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kkenjji"},"content":"        if ((index \u003c 0) || (index \u003e (tasks.size() - 1))) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kkenjji"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kkenjji"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"Unmarked \" + (index + 1) + \".\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kkenjji"},"content":"     * Deletes a task from the task list at the specified index, or clears all tasks if specified.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kkenjji"},"content":"     * @param index The index of the task to delete (zero-based index).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kkenjji"},"content":"     * @param toDeleteAll If true, deletes all tasks in the list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kkenjji"},"content":"     * @throws InvalidFormatException If an invalid format is encountered.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kkenjji"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range when deleting a single task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kkenjji"},"content":"    public void deleteTask(int index, boolean toDeleteAll) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kkenjji"},"content":"        if (toDeleteAll) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kkenjji"},"content":"            tasks.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kkenjji"},"content":"        } else if ((index \u003c 0) || (index \u003e (tasks.size() - 1))) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kkenjji"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kkenjji"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"I\u0027ve successfully deleted task \" + (index + 1)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kkenjji"},"content":"                + \". Here are your remaining tasks.\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kkenjji"},"content":"        listTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kkenjji"},"content":"     * Finds and returns a list of tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kkenjji"},"content":"     * @param keywords The keyword to search for within task descriptions.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kkenjji"},"content":"     * @return An {@code ArrayList} of tasks that match the given keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kkenjji"},"content":"    public ArrayList\u003cTask\u003e findTasks(String... keywords) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kkenjji"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kkenjji"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kkenjji"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kkenjji"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kkenjji"},"content":"                if (description.contains(keyword)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kkenjji"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kkenjji"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kkenjji"},"content":"                break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kkenjji"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kkenjji":130}},{"path":"src/main/java/clank/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a new Todo task with a description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"     * Converts the Todo task to a format suitable for saving to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * @return The formatted string for saving.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"        return \"T|\" + isDone + \"|\" + description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"     * Converts the Todo task to a string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Kkenjji":36}},{"path":"src/main/java/clank/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.utility;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import clank.command.AddCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import clank.command.ByeCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import clank.command.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.command.DeleteCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import clank.command.FindCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import clank.command.ListCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"import clank.command.MarkCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"import clank.command.SaveCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"import clank.command.UnmarkCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.UnknownCommandException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":" * Parses user input and returns the corresponding command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"public class Parser {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * Parses the given input string and returns the appropriate command object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @return The corresponding {@code Command} object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     * @throws UnknownCommandException If the command is not recognized.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"    public static Command parse(String input) throws UnknownCommandException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"        String mainCommand \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"        switch (mainCommand) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"        case \"list\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"        case \"save\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"            return new SaveCommand();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"        case \"find\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"        case \"todo\", \"deadline\", \"event\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"            return new AddCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"        default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"            throw new UnknownCommandException(mainCommand);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":51}},{"path":"src/main/java/clank/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.utility;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.ClankException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"import clank.task.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":" * Handles loading and saving tasks to a file","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"public class Storage {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"     * Saves the given task list to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"     * @throws ClankException If an error occurs while saving.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    public void saveTasks(TaskList taskList) throws ClankException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"            if (directory !\u003d null \u0026\u0026 !directory.exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"                directory.mkdirs();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"                bw.write(task.toSaveFormat());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"                bw.newLine();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"            bw.close();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"            throw new ClankException(\"Failed to save tasks.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"     * Loads tasks from the file into an ArrayList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"     * @throws ClankException If an error occurs while loading tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws ClankException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kkenjji"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kkenjji"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kkenjji"},"content":"                return tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kkenjji"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kkenjji"},"content":"            String line;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kkenjji"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kkenjji"},"content":"                line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kkenjji"},"content":"                Task task \u003d Task.fromSavedFormat(line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kkenjji"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kkenjji"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kkenjji"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kkenjji"},"content":"            scanner.close();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kkenjji"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kkenjji"},"content":"            throw new ClankException(\"Failed to load tasks.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kkenjji"},"content":"        return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Kkenjji":86}},{"path":"src/main/java/clank/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.utility;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import clank.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" * Handles user interactions for the Clank chatbot.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"public class Ui {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"     * Constructs a new Ui instance and initializes the scanner.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"    public Ui() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"Greetings! I\u0027m Clank, and I\u0027m from Saturn!\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"                + \"I heard you need some help here.\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"                + \"How may I assist you?\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"     * Displays a horizontal line separator.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"    public void showByeMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(\"Oh no! I\u0027ve failed to load tasks from the file.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"     * Displays a custom error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kkenjji"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kkenjji"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kkenjji"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kkenjji"},"content":"     * Displays a list of tasks that match the search keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kkenjji"},"content":"     * If no tasks match, a message is displayed indicating no results were found.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kkenjji"},"content":"     * @param matchingTasks The list of tasks that contain the search keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kkenjji"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kkenjji"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Sorry, but I can\u0027t seem to find any task with this keyword!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kkenjji"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kkenjji"},"content":"            System.out.println(\"Here are the tasks I found in my database!\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kkenjji"},"content":"                    + \"Take a look!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kkenjji"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kkenjji"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kkenjji"},"content":"                Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kkenjji"},"content":"                System.out.println(index + \".\" + task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kkenjji"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kkenjji"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kkenjji"},"content":"     * Reads a command from user input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kkenjji"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kkenjji"},"content":"     * @return The user input as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kkenjji"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kkenjji"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kkenjji"},"content":"     * Closes the Scanner to free resources.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kkenjji"},"content":"    public void close() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kkenjji"},"content":"        scanner.close();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kkenjji":95}},{"path":"src/test/java/clank/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.ClankException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":" * Unit tests for the {@code AddCommand} class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"public class AddCommandTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"     * Tests the creation of a Todo task using AddCommand.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    public void testAddTodoCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"        AddCommand command \u003d new AddCommand(\"todo Read book\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"     * Tests that an invalid AddCommand input throws a {@code ClankException}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    public void testInvalidAddCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"        assertThrows(ClankException.class, () -\u003e new AddCommand(\"unknown task\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Kkenjji":31}},{"path":"src/test/java/clank/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Unit tests for the {@code Deadline} class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Tests the creation of a Deadline task and its string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"    public void testDeadlineCreation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"1/3/2025 1800\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"        assertEquals(\"[D][ ] Submit report (by: 1 March 2025, 6:00 pm)\", deadline.toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * Tests that the save format of a Deadline task is correctly formatted.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"1/3/2025 1800\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        assertEquals(\"D|false|Submit report|1/3/2025 1800\", deadline.toSaveFormat());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Kkenjji":29}},{"path":"src/test/java/clank/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Unit tests for the {@code Event} class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class EventTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Tests the creation of an Event task and its string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"    public void testEventCreation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"        Event event \u003d new Event(\"Team meeting\", \"1/3/2025 1000\", \"2/3/2025 1200\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"        assertEquals(\"[E][ ] Team meeting (from: 1 March 2025, 10:00 am to: 2 March 2025, 12:00 pm)\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"                event.toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     * Tests that the save format of an Event task is correctly formatted.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        Event event \u003d new Event(\"Team meeting\", \"1/3/2025 1000\", \"2/3/2025 1200\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"        assertEquals(\"T|false|Team meeting|1/3/2025 1000|2/3/2025 1200\", event.toSaveFormat());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Kkenjji":30}},{"path":"src/test/java/clank/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":" * Unit tests for the {@code Todo} class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"public class TodoTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"     * Tests the creation of a Todo task and its string representation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"     * Tests that the save format of a Todo task is correctly formatted.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"        assertEquals(\"T|false|Buy groceries\", todo.toSaveFormat());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Kkenjji":29}},{"path":"src/test/java/clank/utility/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"package clank.utility;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"import clank.command.AddCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"import clank.command.ByeCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"import clank.command.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"import clank.command.ListCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"import clank.exception.UnknownCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":" * Unit tests for the {@code Parser} class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"     * Tests that parsing \"bye\" returns a {@code ByeCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"    public void testParseByeCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kkenjji"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kkenjji"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kkenjji"},"content":"     * Tests that parsing \"list\" returns a {@code ListCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kkenjji"},"content":"    public void testParseListCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kkenjji"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kkenjji"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kkenjji"},"content":"     * Tests that parsing a valid \"todo\" command returns an {@code AddCommand}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kkenjji"},"content":"    public void testParseAddCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kkenjji"},"content":"        Command command \u003d Parser.parse(\"todo Read book\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kkenjji"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kkenjji"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kkenjji"},"content":"     * Tests that an unknown command throws an {@code UnknownCommandException}.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kkenjji"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kkenjji"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kkenjji"},"content":"    public void testParseUnknownCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kkenjji"},"content":"        assertThrows(UnknownCommandException.class, () -\u003e Parser.parse(\"unknownCommand\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kkenjji"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kkenjji"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Kkenjji":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kkenjji"},"content":"hi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kkenjji"},"content":"todo study","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kkenjji"},"content":"todo ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kkenjji"},"content":"mark 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kkenjji"},"content":"deadline assignment 1 /friday","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kkenjji"},"content":"mark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kkenjji"},"content":"unmark 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kkenjji"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kkenjji"},"content":"todo sleep","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kkenjji"},"content":"deadline assignment 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kkenjji"},"content":"deadline ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kkenjji"},"content":"event hangout /4pm /6pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kkenjji"},"content":"event dinner","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kkenjji"},"content":"event ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kkenjji"},"content":"mark 4","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kkenjji"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kkenjji"},"content":"mark 5","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kkenjji"},"content":"unmark 4","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kkenjji"},"content":"bye","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kkenjji"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kkenjji":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kkenjji"},"content":"java -classpath ../bin Clank \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Kkenjji":1,"-":37}}]
