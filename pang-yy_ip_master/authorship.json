[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    mainClass.set(\"fido.Fido\")","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"    archiveBaseName \u003d \"fido\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"pang-yy":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"# Fido User Guide","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":29,"pang-yy":1}},{"path":"src/main/java/fido/Fido.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import fido.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"import fido.task.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"import fido.ui.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":" * The main class for {@code Fido} chatbot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"public class Fido {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Fido} instance using the specified directory.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"     * This constructor may throw an {@link IOException} if it fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"     * to access or initialise necessary path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"     * @param dirName The directory name or path where the task file are located.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"     * @throws IOException If an error occurs while initialising the specified path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"    public Fido(String dirName) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"        this.storage \u003d new Storage(dirName);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"     * Runs the chatbot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"     * This method contains the primary chatbot loop.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"    public void run() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"        this.ui.hello();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"            TaskList tasklist \u003d new TaskList(this.storage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"            sc.useDelimiter(\"\\n\")","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"                    .tokens()","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"                    .takeWhile(line -\u003e !line.trim().equalsIgnoreCase(\"bye\"))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"                    .forEach(line -\u003e {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"                        try {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"                            this.ui.printMessage(tasklist.action(line.trim().split(\" \")));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"                        } catch (FidoException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"                            this.ui.printMessage(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"                        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"                    });","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"            sc.close();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"            this.ui.printMessage(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"        this.ui.bye();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"     * The entry point of the chatbot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"     * This method initialises a new {@code Fido} instance with a path to data file,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"     * and then calls {@link #run()} to start the cahtbot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"     * If an {@link IOException} occurs, it is caught here, and an error message","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"     * is printed and the program will terminates.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"            new Fido(\"data/task.txt\").run();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":1,"pang-yy":72}},{"path":"src/main/java/fido/exception/FidoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.exception;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":" * The {@code FidoException} class represents custom exceptions specific to the","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":" * Fido chatbot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":" * It encapsulates different types of errors that can occur within the application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"public class FidoException extends Exception {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"     * Represents the various types of errors that can occur in the Fido chatbot.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"    public enum ErrorType {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"        NOT_VALID_INDEX,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"        NOT_VALID_NUMBER,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"        EMPTY_DESCRIPTION,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"        DEADLINE_EMPTY_DESCRIPTION,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"        DEADLINE_EMPTY_DATE,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"        EVENT_EMPTY_DESCRIPTION,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"        EVENT_EMPTY_DATE,","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"        EVENT_MISSING_DATE,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"        NOT_VALID_DATE,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"        NOT_VALID_FILEPATH,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"        FILE_READ_ERROR,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"        FILE_WRITE_ERROR,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"    private final ErrorType eType;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code FidoException} with the specified {@link ErrorType}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"     * @patam errorType The type of error that occurred.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"    public FidoException(ErrorType eType) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"        this.eType \u003d eType;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"     * Returns error message associated with this exception based on its {@link ErrorType}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"     * @return A {@code String} describing the error.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"    public String getMessage() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"        switch (this.eType) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"        case NOT_VALID_INDEX:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"            return \"Error: The task is not on the list.\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"        case NOT_VALID_NUMBER:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"            return \"Error: Unfortunately, that\u0027s not a number.\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"        case EMPTY_DESCRIPTION:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"            return \"Error: No task provided.\\nType `help` for helps.\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"        case DEADLINE_EMPTY_DESCRIPTION:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"            return \"Error: No task provided.\\nUsage: deadline \u003ctask\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"        case DEADLINE_EMPTY_DATE:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"            return \"Error: No deadline provided.\\nUsage: deadline \u003ctask\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"        case EVENT_EMPTY_DESCRIPTION:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"            return \"Error: No task provided.\\nUsage: event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"        case EVENT_EMPTY_DATE:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"            return \"Error: No date provided.\\nUsage: event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"        case EVENT_MISSING_DATE:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"            return \"Error: Must provide start and end date.\\nUsage: event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"        case NOT_VALID_DATE:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"            return \"Error: Invalid date format.\\nFormat: YYYY-MM-DD\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"        case NOT_VALID_FILEPATH:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"            return \"Error: IOException\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"        case FILE_READ_ERROR:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"            return \"Error: Failed to read from task file.\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"        case FILE_WRITE_ERROR:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"            return \"Error: Failed to write to task file.\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"        default:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"            return \"Unknown error encountered!\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":76}},{"path":"src/main/java/fido/storage/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"import fido.task.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"import fido.task.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"import fido.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"import fido.task.Todo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":" * The {@code Parser} class is responsible for converting {@link Task} objects ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":" * to their string representations for file storage and ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":" * parsing stored strings back into {@link Task} objects.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"public class Parser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"    public static final String DIVIDER \u003d \";;\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"    public static final DateTimeFormatter DATE_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"     * Parses list of tasks into a string format suitable for file storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"     * @params tasks List of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"     * @return A {@code String} representating the tasks for file storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    public static String parseToFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"        return tasks.stream()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"                .map(task -\u003e task.fileFormat())","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"                .reduce(\"\", (x, y) -\u003e x + \"\\n\" + y)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"                .trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"     * Parses file content into list of {@code Task}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"     * @param content The content read from file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"     * @return List of {@code Task} objects.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"    public static List\u003cTask\u003e parseFromFile(String content) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"            return List.\u003cTask\u003eof();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"        return Arrays.asList(content.split(\"\\n\"))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"                .stream()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"                .map(line -\u003e line.split(Parser.DIVIDER))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"                .map(arr -\u003e arr[0].equals(\"T\")","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"                        ? (arr[1].equals(\"false\") ? (new Todo(arr[2])) : (new Todo(arr[2]).mark()))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"                        : (arr[0].equals(\"D\")","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"                                ? (arr[1].equals(\"false\") ? (new Deadline(arr[2], arr[3]))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"                                        : (new Deadline(arr[2], arr[3]).mark()))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"                                : (arr[1].equals(\"false\") ? (new Event(arr[2], arr[3], arr[4]))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"                                        : (new Event(arr[2], arr[3], arr[4]).mark()))))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"                .toList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"pang-yy":57}},{"path":"src/main/java/fido/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"    private final Path filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"    public Storage(String dirName) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"        this.filePath \u003d Storage.init(dirName);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"     * Ensures the given file path and its parent directories exist","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"     * by checking for their presence and creating any missing directories","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"     * or the file itself if they do not exist.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"     * The dirName argument must be in the form of \u0027\u003cpath 1\u003e/\u003cpath 2\u003e/\u003cfile name\u003e\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"     * @param dirName Relative file path to be checked.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"     * @return The path to the file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    public static Path init(String dirName) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"        String[] dirArray \u003d dirName.split(\"/\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"        String[] parentDir \u003d Arrays.copyOfRange(dirArray, 0, dirArray.length - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"            Files.createDirectories(Path.of(String.join(\"/\", parentDir)));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"            return Files.createFile(Path.of(dirName));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"            return Path.of(dirName);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"    public String readFromFile() throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"            return Files.readString(this.filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.FILE_READ_ERROR);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"    public void appendToFile(String line) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"            Files.write(this.filePath, (\"\\n\" + line).getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.FILE_WRITE_ERROR);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"    public void writeToFile(String lines) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"            Files.write(this.filePath, lines.getBytes(), StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.FILE_WRITE_ERROR);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"pang-yy":62}},{"path":"src/main/java/fido/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import fido.storage.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":" * The {@code Deadline} class represents a {@link Task} that has a specific deadline,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":" * it can be marked as done or not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":" * It extends the abstract {@link Task} class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Deadline} task with the specified name and due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"     * The date is provided as a {@link String} in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"     * format \"MMM dd yyy\" (e.g., \"May 20 2024\").","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"     * @param date The due date of the task as a {@code String} in \"MMM dd yyyy\" format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"    public Deadline(String name, String date) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"        super(name);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"        this.date \u003d LocalDate.parse(date, Parser.DATE_OUTPUT_FORMAT);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Deadline} task with the specified name and due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"     * The date is provided as a {@link LocalDate} in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"     * format \"yyyy-MM-dd\" (e.g., \"2024-05-20\").","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"     * @param date The due date of the task as a {@code LocalDate} in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"        super(name);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"    private Deadline(String name, boolean isDone, LocalDate date) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"     * Creates a new {@code Deadline} instance from raw input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"     * The raw input should include the task name, and due date in \"yyyy-MM-dd\" format,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"     * separated by \"/by\" (e.g., do assignment /by 2024-05-20).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"     * @param rawInput The raw input string containing the task name and due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"     *                 Expected format: \"Task name /by yyyy-MM-dd\".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Deadline} instance based on the provided raw input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"     * @throws FidoException If the raw input is malformed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.DEADLINE_EMPTY_DESCRIPTION}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"     *                                if the input is missing required parts.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.DEADLINE_EMPTY_DATE}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"     *                                if the due date is missing.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.NOT_VALID_DATE}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"     *                                if the due date format is invalid.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"    public static Deadline of(String rawInput) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"        String[] ins \u003d rawInput.split(\"/by\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"        if (ins.length \u003d\u003d 0) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.DEADLINE_EMPTY_DESCRIPTION);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"        } else if (ins.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.DEADLINE_EMPTY_DATE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"            return new Deadline(ins[0].trim(), LocalDate.parse(ins[1].trim()));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.NOT_VALID_DATE);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"     * Determine if this {@code Deadline} item is already past due or will be due in","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"     * 1 day.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"     * This method compares the current system date with the stored deadline date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pang-yy"},"content":"     * If the deadline has already elapsed, or is within 1 day from now, it returns","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pang-yy"},"content":"     * {@code true}. Otherwise, it returns {@code false}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pang-yy"},"content":"     * @return {@code true} If the deadline is overdue or will occur within 1 day;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pang-yy"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pang-yy"},"content":"    public boolean isDue() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pang-yy"},"content":"        return !super.getIsDone() \u0026\u0026 !LocalDate.now().isBefore(this.date.minusDays(1));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pang-yy"},"content":"     * Returns a string representation of this {@code Deadline} task in a format","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pang-yy"},"content":"     * suitable for file storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pang-yy"},"content":"     * The format includes the task type, task status, task name, and its due date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pang-yy"},"content":"     * @return A {@code String} representing the task in file format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pang-yy"},"content":"    public String fileFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pang-yy"},"content":"        return String.format(\"D%s%s%s%s%s%s\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pang-yy"},"content":"                Parser.DIVIDER, super.getIsDone(), Parser.DIVIDER, super.getName(),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pang-yy"},"content":"                Parser.DIVIDER, this.date.format(Parser.DATE_OUTPUT_FORMAT));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pang-yy"},"content":"     * Marks the {@code Deadline} task as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pang-yy"},"content":"     * This method returns a new {@code Deadline} instance with the updated status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Deadline} instance marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pang-yy"},"content":"    public Deadline mark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pang-yy"},"content":"        return new Deadline(super.getName(), true, this.date);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pang-yy"},"content":"     * Marks the {@code Deadline} task as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pang-yy"},"content":"     * This method returns a new {@code Deadline} instance with the updated status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Deadline} instance marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pang-yy"},"content":"    public Deadline unmark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pang-yy"},"content":"        return new Deadline(super.getName(), false, this.date);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pang-yy"},"content":"     * Returns a string representation of this {@code Deadline} task in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pang-yy"},"content":"     * format \"[D][ ] Task Name (by: MMM dd yyyy)\".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pang-yy"},"content":"     * - \"[D]\" denotes it is a {@code Deadline} task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pang-yy"},"content":"     * - \"[ ]\" or \"[X]\" indicates whether the task is not done or done respectively.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pang-yy"},"content":"     * @return A formatted {@code String} representing the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pang-yy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pang-yy"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pang-yy"},"content":"                + String.format(\" (by: %s)\", this.date.format(Parser.DATE_OUTPUT_FORMAT));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":143}},{"path":"src/main/java/fido/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import fido.storage.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":" * The {@code Event} class represents a {@link Task} that occurs over ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":" * a specific time period, it can be marked as done or not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":" * It extends the abstract {@link Task} class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Event} task with the specified name, start date,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"     * and end date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"     * The dates are provided as a {@link String} in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"     * format \"MMM dd yyy\" (e.g., \"May 20 2024\").","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"     * @param startDate The start date of the task as a {@code String} in \"MMM dd yyyy\" format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"     * @param endDate The start date of the task as a {@code String} in \"MMM dd yyyy\" format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    public Event(String name, String startDate, String endDate) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"        super(name);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"        this.startDate \u003d LocalDate.parse(startDate, Parser.DATE_OUTPUT_FORMAT);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"        this.endDate \u003d LocalDate.parse(endDate, Parser.DATE_OUTPUT_FORMAT);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Event} task with the specified name, start date,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"     * and end date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"     * The dates are provided as a {@link LocalDate} in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"     * format \"yyyy-MM-dd\" (e.g., \"2024-04-20\").","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"     * @param startDate The start date of the task as a {@code LocalDate} in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"     * @param endDate The start date of the task as a {@code LocalDate} in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"        super(name);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"    private Event(String name, boolean isDone, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"     * Creates a new {@code Event} instance from raw input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"     * The raw input should include the task name, and dates in \"yyyy-MM-dd\" format,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"     * separated by \"/from\" and \"to\" ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"     * (e.g., sales /from 2024-05-20 /to 2024-06-20).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"     * @param rawInput The raw input string containing the task name, start date, and end date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"     *                 Expected format: \"Task name /from yyyy-MM-dd /to yyyy-MM-dd\".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Event} instance based on the provided raw input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"     * @throws FidoException If the raw input is malformed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.EVENT_EMPTY_DESCRIPTION}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"     *                                if the input is missing required parts.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.EVENT_EMPTY_DATE}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"     *                                if the dates are missing.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.EVENT_MISSING_DATE}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"     *                                if only one date is provided.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"     *                       - {@link FidoException.ErrorType.NOT_VALID_DATE}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"     *                                if the dates format are invalid.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"    public static Event of(String rawInput) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"        String[] ins \u003d rawInput.split(\"(/from|/to)\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"        if (ins.length \u003d\u003d 0) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.EVENT_EMPTY_DESCRIPTION);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"        } else if (ins.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.EVENT_EMPTY_DATE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"        } else if (ins.length \u003c 3) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.EVENT_MISSING_DATE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pang-yy"},"content":"            return new Event(ins[0].trim(),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pang-yy"},"content":"                    LocalDate.parse(ins[1].trim()), LocalDate.parse(ins[2].trim()));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pang-yy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pang-yy"},"content":"            throw new FidoException(FidoException.ErrorType.NOT_VALID_DATE);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pang-yy"},"content":"     * Determine if the current date is after or equal to the starting date,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pang-yy"},"content":"     * or exactly one day before the starting date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pang-yy"},"content":"     * @return {@code true} if today\u0027s date is within one day before","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pang-yy"},"content":"     *         or on/after the starting date; {@code false} otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pang-yy"},"content":"    public boolean isDue() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pang-yy"},"content":"        return !super.getIsDone() \u0026\u0026 !LocalDate.now().isBefore(this.startDate.minusDays(1));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pang-yy"},"content":"     * Returns a string representation of this {@code Event} task in a format","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pang-yy"},"content":"     * suitable for file storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pang-yy"},"content":"     * The format includes the task type, task status, task name, start date, and end date.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pang-yy"},"content":"     * @return A {@code String} representing the task in file format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pang-yy"},"content":"    public String fileFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pang-yy"},"content":"        return String.format(\"E%s%s%s%s%s%s%s%s\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pang-yy"},"content":"                Parser.DIVIDER, super.getIsDone(), Parser.DIVIDER, super.getName(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pang-yy"},"content":"                Parser.DIVIDER, this.startDate.format(Parser.DATE_OUTPUT_FORMAT),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pang-yy"},"content":"                Parser.DIVIDER, this.endDate.format(Parser.DATE_OUTPUT_FORMAT));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pang-yy"},"content":"     * Marks the {@code Event} task as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pang-yy"},"content":"     * This method returns a new {@code Event} instance with the updated status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Event} instance marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pang-yy"},"content":"    public Event mark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pang-yy"},"content":"        return new Event(super.getName(), true, this.startDate, this.endDate);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pang-yy"},"content":"     * Marks the {@code Event} task as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pang-yy"},"content":"     * This method returns a new {@code Event} instance with the updated status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Event} instance marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pang-yy"},"content":"    public Event unmark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pang-yy"},"content":"        return new Event(super.getName(), false, this.startDate, this.endDate);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pang-yy"},"content":"     * Returns a string representation of this {@code Event} task in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pang-yy"},"content":"     * format \"[E][ ] Task Name (from: MMM dd yyyy to: MMM dd yyyy)\".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pang-yy"},"content":"     * - \"[E]\" denotes it is a {@code Event} task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pang-yy"},"content":"     * - \"[ ]\" or \"[X]\" indicates whether the task is not done or done respectively.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pang-yy"},"content":"     * @return A formatted {@code String} representing the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pang-yy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pang-yy"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pang-yy"},"content":"                + String.format(\" (from: %s to: %s)\",","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pang-yy"},"content":"                        this.startDate.format(Parser.DATE_OUTPUT_FORMAT),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pang-yy"},"content":"                        this.endDate.format(Parser.DATE_OUTPUT_FORMAT));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":156}},{"path":"src/main/java/fido/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"    private final String name;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"    private final boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"    protected Task(String name, boolean isDone) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    protected String getName() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"        return this.name;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"    protected boolean getIsDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"    public boolean contains(String str) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"        return this.name.contains(str);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"    public abstract boolean isDue();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    public abstract String fileFormat();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    public abstract Task mark();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"    public abstract Task unmark();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"        return \"[ ] \" + this.name;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":43}},{"path":"src/main/java/fido/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import java.util.List;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"import fido.storage.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"import fido.storage.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":" * The {@code TaskList} class manages a list of {@link Task} and handles user actions,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":" * by interacting with {@link Storage} instance.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":" * It perform actions based on user commands, and update both the in-memory task list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":" * and the task file in hark disk accordingly.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":" *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":" * This class encapsulates a {@code List\u003cTask\u003e} to store tasks and a {@code Storage}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":" * instance to handle file operations.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"public class TaskList {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code TaskList} with the specified {@link Storage} instance.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"     * This constructor attempts to load all existing tasks from the storage. If loading fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"     * due to reasons such as access issues or parsing issues, a {@link FidoException}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"     * is thrown to indicate the failure.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"     * @param storage The {@code Storage} instance responsible for file operations.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"     * @throws FidoException If an error occurs while loading tasks from the storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    public TaskList(Storage storage) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e(Parser.parseFromFile(this.storage.readFromFile()));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"            throw e;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"     * Executes an action based on the user command provided in the {@code inputs} array.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"     * The first element of the {@code inputs} array determines the type of action to perform.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"     * Depending on the command, this method may add, delete, update, or display tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"     * @param inputs An array of {@code String} representing the user command and its arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"     *               The command is expected to be in {@code inputs[0]}, followed by relevant arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"     * @return A {@code String} message indicating the result of the action, which can be displayed to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"     * @throws FidoException If the action fails due to reasons such as incorrect arguments, and invalid arguments.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"    public String action(String[] inputs) throws FidoException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"        String command \u003d inputs[0].toLowerCase();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"        switch (command) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"        case \"list\":","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"            return this.tasks.stream()","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"                .map(t -\u003e (this.tasks.indexOf(t) + 1) + \". \" + t.toString())","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"                .reduce(\"\", (x, y) -\u003e x + \"\\n\" + y);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"        case \"due\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"            return this.tasks.stream()","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"                .filter(t -\u003e t.isDue())","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"                .map(t -\u003e (this.tasks.indexOf(t) + 1) + \". \" + t.toString())","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"                .reduce(\"Here\u0027s the list of task that is due or will be due in 1 day:\",","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"                    (x, y) -\u003e x + \"\\n\" + y);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"        case \"find\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"                return this.tasks.stream()","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"                    .filter(t -\u003e t.contains(inputs[1]))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"                    .map(t -\u003e (this.tasks.indexOf(t) + 1) + \". \" + t.toString())","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"                    .reduce(\"Here\u0027s the list of tasks that contain \" + inputs[1],","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"                        (x, y) -\u003e x + \"\\n\" + y);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"                throw new FidoException(FidoException.ErrorType.NOT_VALID_INDEX);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"        case \"mark\": //Fallthrough","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"        case \"unmark\": //Fallthrough","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"            try {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"                int idx \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"                if (command.equals(\"mark\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"                    Task newTask \u003d this.tasks.get(idx).mark();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"                    this.tasks.set(idx, newTask);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pang-yy"},"content":"                    this.storage.writeToFile(Parser.parseToFile(this.tasks));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pang-yy"},"content":"                    return \"This task has been marked as done.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pang-yy"},"content":"                        + \"  \" + newTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pang-yy"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pang-yy"},"content":"                    Task newTask \u003d this.tasks.get(idx).unmark();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pang-yy"},"content":"                    this.tasks.set(idx, newTask);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pang-yy"},"content":"                    this.storage.writeToFile(Parser.parseToFile(this.tasks));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pang-yy"},"content":"                    return \"This task has been unmarked.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pang-yy"},"content":"                        + \"  \" + newTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pang-yy"},"content":"                } else { // delete","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pang-yy"},"content":"                    Task deletedTask \u003d this.tasks.remove(idx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pang-yy"},"content":"                    this.storage.writeToFile(Parser.parseToFile(this.tasks));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pang-yy"},"content":"                    return \"Following task has been removed.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pang-yy"},"content":"                        + \"  \" + deletedTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pang-yy"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pang-yy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pang-yy"},"content":"                throw new FidoException(FidoException.ErrorType.NOT_VALID_INDEX);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pang-yy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pang-yy"},"content":"                throw new FidoException(FidoException.ErrorType.NOT_VALID_NUMBER);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pang-yy"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pang-yy"},"content":"        case \"todo\": // Fallthrough","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pang-yy"},"content":"        case \"deadline\": // Fallthrough","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pang-yy"},"content":"        case \"event\":","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pang-yy"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pang-yy"},"content":"                throw new FidoException(FidoException.ErrorType.EMPTY_DESCRIPTION);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pang-yy"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pang-yy"},"content":"            Task task;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pang-yy"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pang-yy"},"content":"                task \u003d new Todo(String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length)));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pang-yy"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pang-yy"},"content":"                task \u003d Deadline.of(String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length)));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pang-yy"},"content":"            } else { // event","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pang-yy"},"content":"                task \u003d Event.of(String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length)));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pang-yy"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pang-yy"},"content":"            this.tasks.add(task);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pang-yy"},"content":"            this.storage.writeToFile(Parser.parseToFile(this.tasks));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pang-yy"},"content":"            if (this.tasks.size() \u003e\u003d 10) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pang-yy"},"content":"                return \"Wow you have so many things to do!\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pang-yy"},"content":"                    + \"added: \" + task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pang-yy"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pang-yy"},"content":"            return \"added: \" + task;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pang-yy"},"content":"        case \"help\":","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pang-yy"},"content":"            return this.menu();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pang-yy"},"content":"        default:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pang-yy"},"content":"            return \"Sorry it is too complicated.🥺\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pang-yy"},"content":"                + \"Want to see what I can do? Try `help`.\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pang-yy"},"content":"    private String menu() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pang-yy"},"content":"        return \"Here\u0027s the list of commands:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pang-yy"},"content":"                + \"todo \u003ctask\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pang-yy"},"content":"                + \"deadline \u003ctask\u003e /by \u003cdate\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pang-yy"},"content":"                + \"event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pang-yy"},"content":"                + \"list\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pang-yy"},"content":"                + \"find \u003ctask name\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pang-yy"},"content":"                + \"mark \u003ctask index\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pang-yy"},"content":"                + \"unmark \u003ctask index\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pang-yy"},"content":"                + \"delete \u003ctask index\u003e\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pang-yy"},"content":"                + \"due\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pang-yy"},"content":"                + \"bye\" + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pang-yy"},"content":"                + \"help\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":146}},{"path":"src/main/java/fido/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import fido.storage.Parser;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":" * The {@code Todo} class represents a simple {@link Task} with a name","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":" * that can be marked as done or not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":" * It extends the abstract {@link Task} class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Todo} task with the specified name.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"     * By default, the task is not marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"        super(name);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"    private Todo(String name, boolean isDone) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"     * Returns {@code true} if this {@code Todo} item is overdue or due within the next day.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"     * Because a {@code Todo} item does not have a specific deadline, it will never be","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"     * considered overdue. Consequently, this method always returns {@code false}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"     * @return {@code false} always.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"    public boolean isDue() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"     * Returns a string representation of this {@code Todo} task in a format","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"     * suitable for file storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"     * The format includes the task type, task status, and its name.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"     * @return A {@code String} representing the task in file format.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"    public String fileFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"        return String.format(\"T%s%s%s%s\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"                Parser.DIVIDER, super.getIsDone(), Parser.DIVIDER, super.getName());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"     * Marks the {@code Todo} task as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"     * This method returns a new {@code Todo} instance with the updated status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Todo} instance marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"    public Todo mark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"        return new Todo(super.getName(), true);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"     * Marks the {@code Todo} task as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"     * This method returns a new {@code Todo} instance with the updated status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"     * @return A new {@code Todo} instance marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"    public Todo unmark() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"        return new Todo(super.getName(), false);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"     * Returns a string representation of this {@code Todo} task in the ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"     * format \"[T][ ] Task Name\".","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"     * - \"[T]\" denotes it is a {@code Todo} task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"     * - \"[ ]\" or \"[X]\" indicates whether the task is not done or done respectively.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"     * @return A formatted {@code String} representing the task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pang-yy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":85}},{"path":"src/main/java/fido/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":" * The {@code Ui} class handles all user interface operations.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"public class Ui {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"    private static final String BYE_MESSAGE \u003d \"Have a nice day!\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"    private static final String GREET_MESSAGE \u003d \"Hello, I am\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"            + \" ________  ___   ________   ________     \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"            + \"|\\\\  _____\\\\|\\\\  \\\\ |\\\\   ___ \\\\ |\\\\   __  \\\\    \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"            + \"\\\\ \\\\  \\\\__/ \\\\ \\\\  \\\\\\\\ \\\\  \\\\_|\\\\ \\\\\\\\ \\\\  \\\\|\\\\  \\\\   \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"            + \" \\\\ \\\\   __\\\\ \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\\\\\ \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\  \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"            + \"  \\\\ \\\\  \\\\_|  \\\\ \\\\  \\\\\\\\ \\\\  \\\\_\\\\\\\\ \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"            + \"   \\\\ \\\\__\\\\    \\\\ \\\\__\\\\\\\\ \\\\_______\\\\\\\\ \\\\_______\\\\\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"            + \"    \\\\|__|     \\\\|__| \\\\|_______| \\\\|_______|\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"    private final String divider;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"    private final int outputIndentLevel;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"     * Constructs a default {@code Ui} instance.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"     * This constructor construct {@code Ui} instance with predifined divider,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"     * divider repeat count, and output indent level.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"     * Internally calls {@link #Ui(String, int, int)} with default values:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"     * {@code divider \u003d \"_\"}, {@code dividerRepeat \u003d 60}, and","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"     * {@outputIndentLevel \u003d 10}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"    public Ui() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"        this(\"_\", 60, 4);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"     * Constructs a new {@code Ui} instance.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"     * @param divider The string used as a divider.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"     * @param dividerRepeat The number of times the divider string is repeated.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"     * @param outputIndentLevel The number of spaces to indent output by.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"    public Ui(String divider, int dividerRepeat, int outputIndentLevel) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"        this.divider \u003d divider.repeat(dividerRepeat);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"        this.outputIndentLevel \u003d outputIndentLevel;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"    public void hello() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"        this.printMessage(Ui.GREET_MESSAGE);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"     * Prints a bye message to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"    public void bye() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"        this.printMessage(Ui.BYE_MESSAGE);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"     * Formats the given message according to the {@code Ui}\u0027s setting and","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"     * returns the formatted string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"     * @param out The raw message that needs to be formatted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"     * @return A formatted version of the specified {@code out}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"    public String formatMessage(String out) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"        return \" \".repeat(this.outputIndentLevel) + divider + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"                + \" \".repeat(outputIndentLevel)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"                + out.trim().replaceAll(\"\\n\", \"\\n\" + \" \".repeat(outputIndentLevel)) + \"\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"                + \" \".repeat(outputIndentLevel) + divider;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"     * Prints the specified message to the console, first formatting it by","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"     * calling {@link #formatMessage(String)}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"     * @param out The raw message that needs to be formatted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"    public void printMessage(String out) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"        System.out.println(this.formatMessage(out));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"pang-yy":82}},{"path":"src/test/java/fido/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    public void of_validInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /by 2025-01-01\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"        String expectedOutput \u003d \"[D][ ] do assignment (by: Jan 01 2025)\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"            assertEquals(expectedOutput, Deadline.of(input).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    public void of_emptyInput_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Deadline.of(\"\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    public void of_missingDate_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Deadline.of(\"do assignment\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"    public void of_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /by 1/2/2025\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Deadline.of(input));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"    public void isDue_notDueDeadline_false() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"        String dateNow \u003d LocalDate.now().plusDays(10).toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /by \" + dateNow;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"            assertEquals(false, Deadline.of(input).isDue());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"    public void isDue_dueDeadline_true() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"        String dateNow \u003d LocalDate.now().minusDays(1).toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /by \" + dateNow;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"            assertEquals(true, Deadline.of(input).isDue());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"    public void mark_deadlineTask_deadlineMarkAsDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /by 2025-01-01\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"            assertTrue(Deadline.of(input).mark().toString().contains(\"[X]\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"    public void unmark_deadlineTask_deadlineMarkAsNotDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /by 2025-01-01\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"            assertTrue(Deadline.of(input).mark().unmark().toString().contains(\"[ ]\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"pang-yy":84}},{"path":"src/test/java/fido/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"import fido.exception.FidoException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"public class EventTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    public void of_validInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"sales /from 2025-01-01 /to 2025-02-01\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"        String expectedOutput \u003d \"[E][ ] sales (from: Jan 01 2025 to: Feb 01 2025)\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"            assertEquals(expectedOutput, Event.of(input).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    public void of_emptyInput_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Event.of(\"\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    public void of_missingBothDates_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Event.of(\"sales\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"    public void of_missingStartDate_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Event.of(\"sales /to 2025-02-01\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pang-yy"},"content":"    public void of_missingEndDate_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, () -\u003e Event.of(\"sales /from 2025-01-01\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pang-yy"},"content":"    public void of_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pang-yy"},"content":"        assertThrows(FidoException.class, ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pang-yy"},"content":"            () -\u003e Event.of(\"sales /from 1/2/2025 /to 2025-02-01\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pang-yy"},"content":"    public void isDue_notDueEvent_false() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pang-yy"},"content":"        String startDate \u003d LocalDate.now().plusDays(5).toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pang-yy"},"content":"        String endDate \u003d LocalDate.now().plusDays(10).toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /from \" + startDate + \" /to \" + endDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pang-yy"},"content":"            assertEquals(false, Event.of(input).isDue());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pang-yy"},"content":"    public void isDue_dueEvent_true() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pang-yy"},"content":"        String startDate \u003d LocalDate.now().minusDays(1).toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pang-yy"},"content":"        String endDate \u003d LocalDate.now().plusDays(10).toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /from \" + startDate + \" /to \" + endDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pang-yy"},"content":"            assertEquals(true, Event.of(input).isDue());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pang-yy"},"content":"    public void mark_eventTask_eventMarkAsDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /from 2025-01-01 /to 2025-02-01\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pang-yy"},"content":"            assertTrue(Event.of(input).mark().toString().contains(\"[X]\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pang-yy"},"content":"    public void mark_eventTask_eventMarkAsNotDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"do assignment /from 2025-01-01 /to 2025-02-01\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pang-yy"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pang-yy"},"content":"            assertTrue(Event.of(input).mark().unmark().toString().contains(\"[ ]\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pang-yy"},"content":"        } catch (FidoException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pang-yy"},"content":"            fail();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pang-yy"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"pang-yy":96}},{"path":"src/test/java/fido/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"    public void constructor_validInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"drink water\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"        String expectedOutput \u003d \"[T][ ] drink water\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"        assertEquals(expectedOutput, new Todo(input).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"    public void constructor_emptyInput_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"        assertEquals(\"[T][ ] \", new Todo(\"\").toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"    public void isDue_todoTask_false() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"        assertEquals(false, new Todo(\"drink water\").isDue());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"    public void mark_todoTask_todoMarkAsDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"drink water\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"        assertTrue(new Todo(input).mark().toString().contains(\"[X]\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pang-yy"},"content":"    public void unmark_todoTask_todoMarkAsNotDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pang-yy"},"content":"        String input \u003d \"drink water\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pang-yy"},"content":"        assertTrue(new Todo(input).mark().unmark().toString().contains(\"[ ]\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"pang-yy":38}},{"path":"src/test/java/fido/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"package fido.ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"public class UiTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"    public void printMessage_singleLineMessage_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"        String message \u003d \"Hello World\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"        String divider \u003d \"\u003d\".repeat(40);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pang-yy"},"content":"        String indentation \u003d \" \".repeat(5);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pang-yy"},"content":"        assertEquals(indentation + divider + \"\\n\" + ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pang-yy"},"content":"                indentation + message + \"\\n\" +","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pang-yy"},"content":"                indentation + divider,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pang-yy"},"content":"            new Ui(\"\u003d\", 40, 5).formatMessage((message)));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pang-yy"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pang-yy"},"content":"    public void printMessage_multiLineMessage_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pang-yy"},"content":"        String message \u003d \"This \\nis a\\n multiline message.\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"        String divider \u003d \"\u003d\".repeat(60);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pang-yy"},"content":"        String indentation \u003d \" \".repeat(4);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pang-yy"},"content":"        assertEquals(indentation + divider + \"\\n\" + ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pang-yy"},"content":"                indentation + \"This \" + \"\\n\" +","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pang-yy"},"content":"                indentation + \"is a\" + \"\\n\" +","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pang-yy"},"content":"                indentation + \" multiline message.\" + \"\\n\" +","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pang-yy"},"content":"                indentation + divider,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pang-yy"},"content":"            new Ui(\"\u003d\", 60, 4).formatMessage((message)));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pang-yy"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pang-yy"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"pang-yy":32}},{"path":"text-ui-test/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"T;;1;;read novel","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"D;;0;;complete CS2106 assignment;;this Sunday","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"D;;0;;complete survey;;next Monday 2 pm","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"E;;0;;career fair;;Jan 22nd Wednesday;;Jan 23rd Thursdayfair;;Jan 22nd Wednesday;;Jan 23rd Thursday","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"pang-yy":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pang-yy"},"content":"todo read novel","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pang-yy"},"content":"deadline complete CS2103T assignment /by tonight","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pang-yy"},"content":"deadline complete CS2106 assignment /by this Sunday","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pang-yy"},"content":"deadline complete survey /by next Monday 2 pm","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pang-yy"},"content":"event career fair /from Jan 22nd Wednesday /to Jan 23rd Thursday","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pang-yy"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pang-yy"},"content":"mark 2","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"delete 2","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pang-yy"},"content":"mark 4","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pang-yy"},"content":"mark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pang-yy"},"content":"unmark 4","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pang-yy"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"pang-yy":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pang-yy"},"content":"if exist data\\ del data\\data.txt","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pang-yy"},"content":"java -classpath ..\\bin Fido \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"pang-yy":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pang-yy"},"content":"java -classpath ../bin Fido \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"pang-yy":1}}]
