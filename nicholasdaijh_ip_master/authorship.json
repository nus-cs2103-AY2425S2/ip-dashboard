[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.9.2\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"    mainClass.set(\"nicholas.ui.Nicholas\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"    archiveBaseName \u003d \"nicholas\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"nicholasdaijh":3}},{"path":"src/main/java/nicholas/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":" * Represents the base exception for the application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":" * All custom exceptions extend from this class.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs a DukeException with a specific error message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":16}},{"path":"src/main/java/nicholas/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":" * Represents an exception that is thrown when a user enters a command without a description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"public class EmptyCommandException extends DukeException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs an EmptyCommandException with a specific command type.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"     * @param commandType The type of command that is missing a description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"    public EmptyCommandException(String commandType) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"        super(\"OOPS!!! The description of a \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":15}},{"path":"src/main/java/nicholas/exception/NotTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.exception;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":" * Represents an exception that is thrown when an unrecognized command is entered.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"public class NotTaskException extends DukeException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs a NotTaskException with a default error message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"     * @param message The error message explaining the invalid command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"    public NotTaskException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":15}},{"path":"src/main/java/nicholas/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.ui.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":" * Represents a Deadline task that has a due date or time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":" * A Deadline task contains a description and a deadline date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"    private String by;  // Deadline date or time","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs a Deadline task with the given description and due date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"     * The due date is parsed into a formatted date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"     * @param by The due date in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"        super(description);  // Call parent constructor","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"        this.by \u003d parser.parseDate(by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"     * @return \"D\", representing a Deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"        return \"D\";  // \u0027D\u0027 for Deadline task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the string representation of the Deadline task,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"     * including its status, description, and due date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A formatted string of the Deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":45}},{"path":"src/main/java/nicholas/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.ui.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":" * Represents an Event task that has a start and end time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":" * The event task contains a description, a start time, and an end time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"    private String from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"    private String to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"     * The start and end times are parsed into a formatted date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"     * @param from The start time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"     * @param to The end time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"        super(description);  // Call parent constructor","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"        this.from \u003d parser.parseDate(from);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"        this.to \u003d parser.parseDate(to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"     * @return \"E\", representing an Event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"        return \"E\";  // \u0027E\u0027 for Event task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the string representation of the Event task,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"     * including its status, description, and time range.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A formatted string of the Event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"        return super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":48}},{"path":"src/main/java/nicholas/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":" * Represents a task that can be marked as done or not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":" * This is an abstract class that serves as a base for different types of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"    private String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"        this.isDone \u003d false;  // Tasks are initially not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"     * \"X\" if the task is done, otherwise an empty space.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A string representing the status of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"        return this.description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasdaijh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasdaijh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns a string representation of the task,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasdaijh"},"content":"     * including its type, status, and description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasdaijh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasdaijh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasdaijh"},"content":"        return \"[\" + getTaskType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasdaijh"},"content":"     * This method is abstract and must be implemented in subclasses.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A string representing the type of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasdaijh"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":72}},{"path":"src/main/java/nicholas/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":" * This class provides methods to add, remove, and update tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"     * Deletes a task from the task list based on the given index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"     * Marks a task as done based on the given index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasdaijh"},"content":"     * Marks a task as not done based on the given index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskIndex The index of the task to be marked as not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasdaijh"},"content":"    public void markTaskAsUndone(int taskIndex) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasdaijh"},"content":"        tasks.get(taskIndex).markAsUndone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasdaijh"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasdaijh"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasdaijh"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasdaijh"},"content":"    public int size() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasdaijh"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":75}},{"path":"src/main/java/nicholas/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":" * A Todo task is a basic task with only a description and no date or time constraints.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"        super(description);  // Call parent constructor","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"     * @return \"T\", representing a Todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"        return \"T\";  // \u0027T\u0027 for Todo task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":27}},{"path":"src/main/java/nicholas/ui/Nicholas.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.exception.NotTaskException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.exception.EmptyCommandException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":" * The main class for the Nicholas task manager application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":" * It initializes components, loads tasks, processes user input, and manages tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"public class Nicholas {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"     * The entry point of the application.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"     * It initializes components, loads tasks from file, and processes user commands in a loop.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws IOException If an error occurs while reading/writing the task file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"        // Initialize components","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"        Storage storage \u003d new Storage(\"tasks.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"        // Load tasks from file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"        for (Task task : loadedTasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"            taskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"        // Show greeting message","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"        ui.showGreeting();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"        // Main loop to process user commands","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"            try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"                String[] commandParts \u003d parser.parseCommand(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasdaijh"},"content":"                String command \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasdaijh"},"content":"                switch (command) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasdaijh"},"content":"                case \"mark\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 4) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasdaijh"},"content":"                    int markIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasdaijh"},"content":"                    taskList.markTaskAsDone(markIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskMarked(taskList.getTasks().get(markIndex));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasdaijh"},"content":"                case \"unmark\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 6) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasdaijh"},"content":"                    int unmarkIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasdaijh"},"content":"                    taskList.markTaskAsUndone(unmarkIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskUnmarked(taskList.getTasks().get(unmarkIndex));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasdaijh"},"content":"                case \"list\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskList(taskList.getTasks().toArray(new Task[0]), taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasdaijh"},"content":"                case \"delete\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 6) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasdaijh"},"content":"                    int deleteIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasdaijh"},"content":"                    Task taskToDelete \u003d taskList.getTasks().get(deleteIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasdaijh"},"content":"                    taskList.deleteTask(deleteIndex);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskDeleted(taskToDelete, taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasdaijh"},"content":"                case \"find\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 4) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskFind(taskList.getTasks().toArray(new Task[0]), commandParts[1], taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasdaijh"},"content":"                case \"todo\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 4) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasdaijh"},"content":"                    String todoDescription \u003d commandParts[1].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasdaijh"},"content":"                    Task todoTask \u003d new Todo(todoDescription);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasdaijh"},"content":"                    taskList.addTask(todoTask);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskAdded(todoTask, taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasdaijh"},"content":"                case \"deadline\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 8) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].split(\"/by\")[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasdaijh"},"content":"                    Task deadlineTask \u003d parser.parseDeadline(commandParts[1]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasdaijh"},"content":"                    taskList.addTask(deadlineTask);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskAdded(deadlineTask, taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasdaijh"},"content":"                case \"event\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasdaijh"},"content":"                    if ((userInput.length() \u003d\u003d 5) || commandParts.length \u003c 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasdaijh"},"content":"                            || commandParts[1].split(\"/from\")[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasdaijh"},"content":"                        throw new EmptyCommandException(command);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasdaijh"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasdaijh"},"content":"                    Task eventTask \u003d parser.parseEvent(commandParts[1]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasdaijh"},"content":"                    taskList.addTask(eventTask);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasdaijh"},"content":"                    ui.showTaskAdded(eventTask, taskList.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasdaijh"},"content":"                    break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasdaijh"},"content":"                default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasdaijh"},"content":"                    throw new NotTaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasdaijh"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasdaijh"},"content":"            } catch (NotTaskException | EmptyCommandException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasdaijh"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasdaijh"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasdaijh"},"content":"            storage.emptyFile(\"tasks.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasdaijh"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasdaijh"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasdaijh"},"content":"        // Save tasks to file before exiting","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasdaijh"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasdaijh"},"content":"        // Show goodbye message","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasdaijh"},"content":"        ui.showBye();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":145}},{"path":"src/main/java/nicholas/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":" * Handles parsing of user input into commands and tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"     * Parses user input into two parts: command and task description with date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"     * @param userInput The full input string from the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A string array containing the command and task description with date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"    public static String[] parseCommand(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"        return userInput.trim().split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"     * Parses a string representation of a task and converts it into a Task object.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"     * @param input The string representation of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A Task object (Todo, Deadline, or Event) parsed from the input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws IllegalArgumentException If the input format is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"    public Task parseTask(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"        String[] parts \u003d input.split(\"\\\\]\\\\[\", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"        String descriptionAndDate \u003d parts[1].substring(3).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"        switch (taskType) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"            case \"[T\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"                Task todoTask \u003d new Todo(descriptionAndDate);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"                if (input.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"                    todoTask.markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"                return todoTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"            case \"[D\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"                int deadlineBy \u003d descriptionAndDate.indexOf(\"by\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasdaijh"},"content":"                if (deadlineBy \u003d\u003d -1) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasdaijh"},"content":"                    throw new IllegalArgumentException(\"Invalid deadline format\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasdaijh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasdaijh"},"content":"                String deadlineDate \u003d descriptionAndDate.substring(deadlineBy + 4, descriptionAndDate.length() - 1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasdaijh"},"content":"                Task deadlineTask \u003d parseDeadline(descriptionAndDate.substring(0, deadlineBy - 2)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasdaijh"},"content":"                        + \" /by \" + reverseParseDate(deadlineDate));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasdaijh"},"content":"                if (input.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasdaijh"},"content":"                    deadlineTask.markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasdaijh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasdaijh"},"content":"                return deadlineTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasdaijh"},"content":"            case \"[E\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasdaijh"},"content":"                int eventStartIndexBegin \u003d descriptionAndDate.indexOf(\"from:\") + 6;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasdaijh"},"content":"                int eventStartIndexEnd \u003d descriptionAndDate.indexOf(\"to:\") - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasdaijh"},"content":"                int eventEndIndexBegin \u003d descriptionAndDate.indexOf(\"to:\") + 4;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasdaijh"},"content":"                int eventEndIndexEnd \u003d descriptionAndDate.length() - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasdaijh"},"content":"                if (eventStartIndexBegin \u003d\u003d -1 || eventStartIndexEnd \u003d\u003d -1 || eventEndIndexBegin \u003d\u003d -1) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasdaijh"},"content":"                    throw new IllegalArgumentException(\"Invalid event format\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasdaijh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasdaijh"},"content":"                String eventStart \u003d descriptionAndDate.substring(eventStartIndexBegin, eventStartIndexEnd).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasdaijh"},"content":"                String eventEnd \u003d descriptionAndDate.substring(eventEndIndexBegin, eventEndIndexEnd).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasdaijh"},"content":"                Task eventTask \u003d parseEvent(descriptionAndDate.substring(0, eventStartIndexBegin - 8)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasdaijh"},"content":"                        + \" /from \" + reverseParseDate(eventStart) + \" /to \" + reverseParseDate(eventEnd));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasdaijh"},"content":"                if (input.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasdaijh"},"content":"                    eventTask.markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasdaijh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasdaijh"},"content":"                return eventTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasdaijh"},"content":"            default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasdaijh"},"content":"                throw new IllegalArgumentException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasdaijh"},"content":"     * Parses a date string into a formatted date representation.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasdaijh"},"content":"     * @param by The date string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasdaijh"},"content":"     * @return The formatted date string in \"MMM dd yyyy HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws IllegalArgumentException If the date format is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasdaijh"},"content":"    public String parseDate(String by) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasdaijh"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasdaijh"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasdaijh"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasdaijh"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasdaijh"},"content":"            return dateTime.format(outputFormatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasdaijh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasdaijh"},"content":"            throw new IllegalArgumentException(\"Invalid date format. Expected: yyyy-MM-dd HHmm\", e);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasdaijh"},"content":"     * Converts a formatted date string back to the original format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasdaijh"},"content":"     * @param by The date string in \"MMM dd yyyy HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasdaijh"},"content":"     * @return The date string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws IllegalArgumentException If the date format is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasdaijh"},"content":"    public String reverseParseDate(String by) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasdaijh"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasdaijh"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasdaijh"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasdaijh"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasdaijh"},"content":"            return dateTime.format(outputFormatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasdaijh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasdaijh"},"content":"            throw new IllegalArgumentException(\"Invalid date format. Expected: MMM dd yyyy HHmm\", e);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasdaijh"},"content":"     * Parses a deadline task description with date and creates a Deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasdaijh"},"content":"     * @param input The input string containing the deadline task description and due date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A Deadline task object.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasdaijh"},"content":"    public static Task parseDeadline(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasdaijh"},"content":"        String[] parts \u003d input.split(\"/by\", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasdaijh"},"content":"        return new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasdaijh"},"content":"     * Parses an event task description with dates and creates an Event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasdaijh"},"content":"     * @param input The input string containing the event description, start time, and end time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasdaijh"},"content":"     * @return An Event task object.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasdaijh"},"content":"    public static Task parseEvent(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasdaijh"},"content":"        String[] parts \u003d input.split(\"/from\", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasdaijh"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasdaijh"},"content":"        parts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasdaijh"},"content":"        String from \u003d parts[0].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasdaijh"},"content":"        String to \u003d parts[1].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasdaijh"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":148}},{"path":"src/main/java/nicholas/ui/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":" * Handles loading and saving tasks to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"public class Storage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"    private String filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     * @param filePath The path of the file to store tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws FileNotFoundException If the file does not exist.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"    public List\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"            Parser taskParser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"            tasks.add(taskParser.parseTask(line));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"        scanner.close();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"     * Saves tasks to the specified file by appending to it.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasdaijh"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws FileNotFoundException If the file cannot be found.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasdaijh"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasdaijh"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasdaijh"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasdaijh"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasdaijh"},"content":"                fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasdaijh"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasdaijh"},"content":"            fw.close();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasdaijh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasdaijh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasdaijh"},"content":"     * Empties the contents of the specified file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasdaijh"},"content":"     * @param filePath The path of the file to be emptied.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasdaijh"},"content":"     * @throws IOException If an error occurs while emptying the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasdaijh"},"content":"    public static void emptyFile(String filePath) throws IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasdaijh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasdaijh"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasdaijh"},"content":"            writer.write(\"\"); // Writing an empty string to truncate the file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasdaijh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasdaijh"},"content":"            throw new IOException(\"Error occurred while emptying the file: \" + filePath, e);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":79}},{"path":"src/main/java/nicholas/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas.ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":" * Handles user interface interactions, including displaying messages and formatting output.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays the greeting message when the application starts.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Hello! I\u0027m Nicholas!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays the farewell message when the application exits.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"    public void showBye() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays a horizontal line separator.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasdaijh"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskCount The total number of tasks after adding the new task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasdaijh"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasdaijh"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasdaijh"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasdaijh"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasdaijh"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays the list of tasks currently stored.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasdaijh"},"content":"     * @param tasks An array of tasks to display.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskCount The total number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasdaijh"},"content":"    public void showTaskList(Task[] tasks, int taskCount) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasdaijh"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasdaijh"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasdaijh"},"content":"            System.out.println(index + \".\" + tasks[i].toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasdaijh"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskCount The total number of tasks remaining in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasdaijh"},"content":"    public void showTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays a list of tasks that contain a given prefix in their description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasdaijh"},"content":"     * @param tasks      An array of Task objects to search through.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskPrefix The prefix to search for in the task descriptions.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasdaijh"},"content":"     * @param taskCount  The total number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasdaijh"},"content":"    public void showTaskFind(Task[] tasks, String taskPrefix, int taskCount) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasdaijh"},"content":"        int matchTaskCount \u003d 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasdaijh"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasdaijh"},"content":"            if (tasks[i].toString().contains(taskPrefix)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasdaijh"},"content":"                System.out.println(matchTaskCount + \".\" + tasks[i].toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasdaijh"},"content":"                matchTaskCount++;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasdaijh"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasdaijh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasdaijh"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasdaijh"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasdaijh"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasdaijh"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasdaijh"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasdaijh"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasdaijh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":135}},{"path":"src/test/java/nicholas/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.ui.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"    void testParseCommand() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"        String[] commandParts \u003d parser.parseCommand(\"mark 12\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(commandParts[0], \"mark\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(commandParts[1], \"12\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"    void testParseTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"        Task eventTask \u003d parser.parseTask(\"[E][ ] something (from: Oct 10 2002 1600 to: Oct 11 2002 1600)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"        Task todoTask \u003d parser.parseTask(\"[T][ ] read books\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"        Task deadlineTask \u003d parser.parseTask(\"[D][ ] assignment (by: Oct 12 2002 1500)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(new Event(\"something\", \"2002-10-10 1600\", \"2002-10-11 1600\").toString(), eventTask.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(new Todo(\"read books\").toString(), todoTask.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(new Deadline(\"assignment\", \"2002-10-12 1500\").toString(), deadlineTask.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":35}},{"path":"src/test/java/nicholas/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"package nicholas;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"import nicholas.tasks.Todo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"    void testAddTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasdaijh"},"content":"        // Add a ToDo task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasdaijh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasdaijh"},"content":"        taskList.addTask(new Todo(\"read books\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(new Todo(\"read books\").toString(), taskList.getTasks().get(0).toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasdaijh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasdaijh"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasdaijh"},"content":"    void testDeleteTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasdaijh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"        taskList.addTask(new Todo(\"read books\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasdaijh"},"content":"        taskList.addTask(new Todo(\"borrow books\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasdaijh"},"content":"        assertEquals(new Todo(\"read books\").toString(), taskList.getTasks().get(0).toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasdaijh"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasdaijh"},"content":"        assertNotEquals(new Todo(\"read books\").toString(), taskList.getTasks().get(0).toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasdaijh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasdaijh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":29}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"[T][X] read books","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"[E][X] something (from: Oct 10 2002 1600 to: Oct 11 2002 1600)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"[D][X] anything (by: Oct 15 2003 1500)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"[T][ ] read books","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"[E][X] partying (from: Sep 29 2019 2000 to: Sep 30 2019 0300)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"[D][ ] assignment (by: Sep 09 2023 2359)","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasdaijh"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasdaijh"},"content":"event project meeting /from Mon 2pm /to Mon 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasdaijh"},"content":"deadline submit report /by Friday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasdaijh"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasdaijh"},"content":"event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasdaijh"},"content":"deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasdaijh"},"content":"blah","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasdaijh"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasdaijh"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasdaijh"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasdaijh"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasdaijh"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasdaijh"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"nicholasdaijh":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasdaijh"},"content":"java -classpath ../bin Nicholas \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"nicholasdaijh":1}}]
