[{"path":"data/wbb.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | ski | Monday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | ski | 2/12/2020 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"todo | false | eat laksa","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | ski | Monday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | ski | 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | ski | 12/12/2032","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2019 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2019 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return book | 2/12/2032 1930","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | return books | 2nd of december 2032, 7:30pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | find cats | 23rd of January 2025, 6:00PM","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":18}},{"path":"src/main/java/wbb/WinterBearBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.parser.Parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.Command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"public class WinterBearBot {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor to initialise new Ui, Storage, TaskList, Parser, and load Tasks from Storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public WinterBearBot() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        this.taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * Program to manage user\u0027s taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    public void manageTaskList() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"            try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"                Command c \u003d parser.parseCommand(command, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"                c.execute(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"            } catch (WBBException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"                ui.printErrorMsg(e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     * Run the WinterBearBot Program.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    public void runProgram() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        manageTaskList();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        ui.displayFarewellMessage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"     * The main method.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     * @param args The arguments for the main method.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        new WinterBearBot().runProgram();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":62}},{"path":"src/main/java/wbb/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.parser.Parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        addTask(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * To add task into the list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * Add item to list - Either \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"todo\": todo \u003ctaskName\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"deadline\": deadline \u003ctaskName\u003e /by \u003cwhen\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"event\": event \u003ctaskName\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * @param list The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    public void addTask(ArrayList\u003cTask\u003e list, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        String typeOfTask \u003d command.split(\" \")[0];  // \"todo\", \"deadline\", \"event\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        TaskType taskType \u003d TaskType.fromString(typeOfTask);  // enum of typeOfTask","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d validator.validateAndGetTaskName(command, typeOfTask, taskType);  // name of task","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        AddCommand addCommand \u003d new Parser().parseAddCommand(typeOfTask);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        addCommand.exec(taskName, taskType, list, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * To add task into list and save into storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * @param task The task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui instance.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage instance.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    protected void addAndSaveTask(Task task, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        ui.printAdditionSuccessfulMsg(taskList.size(), task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"     * Method for its subclasses to execute.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The taskType.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui instance.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException If it does not perform as expected.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    protected void exec(String taskName, TaskType taskType, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) throws WBBException {}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":65}},{"path":"src/main/java/wbb/command/AddNewDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.*;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.DateTimeUtility;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"public class AddNewDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and add/save new deadline task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing \"/by\", deadline or taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    public void exec(String taskName, TaskType taskType, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateTaskNameBy(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameBy \u003d validator.validateAndGetTaskNameBy(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        String deadline \u003d new DateTimeUtility().tryParseDateAndOrTime(taskNameBy[1].trim());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        Task task \u003d new Deadline(taskNameBy[0].trim(), deadline);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        super.addAndSaveTask(task, taskList, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":25}},{"path":"src/main/java/wbb/command/AddNewEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.*;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"public class AddNewEventCommand extends AddCommand {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and add/save new event task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing \"/from\" or \"/to\", \"/from\" comes after \"/to\", start date, end date, or taskName","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    public void exec(String taskName, TaskType taskType, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateFromTo(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameFromTo \u003d validator.validateAndGetTaskNameFromTo(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        String[] fromTo \u003d validator.validateAndGetFromTo(taskNameFromTo, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        Task task \u003d new Event(taskNameFromTo[0].trim(), fromTo[0].trim(), fromTo[1].trim());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        super.addAndSaveTask(task, taskList, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":24}},{"path":"src/main/java/wbb/command/AddNewTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.*;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"public class AddNewTodoCommand extends AddCommand {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and add/save new todo task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public void exec(String taskName, TaskType taskType, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        Task task \u003d new Todo(taskName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        super.addAndSaveTask(task, taskList, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":19}},{"path":"src/main/java/wbb/command/ChangeStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"public class ChangeStatusCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        changeItemStatus(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * To change item status to either \"Done\" or \"Undone\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public void changeItemStatus(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        // Validate itemIdx and taskList before continuing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx \u003d validator.validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateItemIdxForTaskList(taskList, itemIdx, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        // Validation passed, continue running main program logic (i.e. to change the item status)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        Task taskName \u003d taskList.get(itemIdx);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"            taskName.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"            ui.prettyPrint(\"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\" + taskName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"            taskName.setUndone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"            ui.prettyPrint(\"\\tOK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + taskName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":43}},{"path":"src/main/java/wbb/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.Validator;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    protected Validator validator;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    public Command() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        this.validator \u003d new Validator();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public abstract void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * Indicates whether the command is an Exit command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * @return True if the command is an Exit command, otherwise false.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":32}},{"path":"src/main/java/wbb/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        deleteTask(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * To delete tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command (e.g. delete 3)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if itemIdx is invalid (non-positive, non-integer, out of bounds) or taskList is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    public void deleteTask(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        // Validate itemIdx and taskList before continuing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx \u003d validator.validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateItemIdxForTaskList(taskList, itemIdx, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        // Validation passed, continue running main program logic (i.e. to delete the item)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        Task taskName \u003d taskList.get(itemIdx);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        taskList.remove(itemIdx);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        ui.printDeleteSuccessfulMsg(taskList.size(), taskName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":38}},{"path":"src/main/java/wbb/command/DisplayTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class DisplayTasksCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        displayTodayTasks(taskList, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * Displays all tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public void displayTodayTasks(ArrayList\u003cTask\u003e taskList, Ui ui) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e tasksDueToday \u003d getTasksDueToday(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        ui.printTasksDueToday(tasksDueToday);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * Retrieves tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * @param tasks The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * @return The task that is due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    public ArrayList\u003cTask\u003e getTasksDueToday(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e tasksDueToday \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        for (Task task : tasks)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"            if (task.isDueToday())","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"                tasksDueToday.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        return tasksDueToday;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":40}},{"path":"src/main/java/wbb/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * Indicates whether the command is an Exit command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @return True if the command is an Exit command, otherwise false.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        return true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":25}},{"path":"src/main/java/wbb/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        ui.printList(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":18}},{"path":"src/main/java/wbb/exception/WBBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.exception;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * WinterBearBot Exception Class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"public class WBBException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * To construct the desired error message","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * @param message The error message","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    public WBBException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":14}},{"path":"src/main/java/wbb/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.*;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"public class Parser {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    public Command parseCommand(String command, Ui ui) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"        String commandPrefix \u003d command.split(\" \")[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"            return switch (commandPrefix) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"                case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"                case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"                case \"mark\", \"unmark\" -\u003e new ChangeStatusCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"                case \"todo\", \"deadline\", \"event\" -\u003e new AddCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"                case \"delete\" -\u003e new DeleteCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"                case \"tasks\" -\u003e new DisplayTasksCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"                default -\u003e throw new WBBException(\"\\tERROR: Invalid command (valid commands are: list, todo, deadline, event, mark, unmark, delete, tasks, bye)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"            };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        } catch (WBBException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"            ui.prettyPrint(e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        return null; // Should not reach here","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public AddCommand parseAddCommand(String typeOfTask) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        if (typeOfTask.equalsIgnoreCase(\"todo\"))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"            return new AddNewTodoCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        else if (typeOfTask.equalsIgnoreCase(\"deadline\"))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            return new AddNewDeadlineCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        else","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"            return new AddNewEventCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":33}},{"path":"src/main/java/wbb/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.io.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":" * Handle loading and saving tasks from and to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"public class Storage {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    private static final String FILE_PATH \u003d \"./data/wbb.txt\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * Create the directory \"./data\" and/or the file \"./data/wbb.txt\" if it doesn\u0027t exist.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    public void setupFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * To save taskList into FILE_PATH.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"\\tERROR: Could not save tasks.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * To load contents of FILE_PATH into taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        setupFile();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"            String line;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"                try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"                    TaskType type \u003d TaskType.fromString(parts[0].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"                    Task task \u003d type.createTask(parts);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"                    task.isDone \u003d Boolean.parseBoolean(parts[1].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task type (only todo/deadline/event): \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task format (missing details): \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        return taskList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":71}},{"path":"src/main/java/wbb/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.DateTimeUtility;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"    protected String by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * Deadline which has a description and a deadline.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * @param by The deadline.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * Converts friendly print format to LocalDateTime/LocalDate, and returns the tasks that are due today.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @return The tasks that are due today.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        return new DateTimeUtility().isDueToday(by);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"deadline | %b | %s | %s\", isDone, description, by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":43}},{"path":"src/main/java/wbb/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    protected String from;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"    protected String to;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * Event which is has a description, start date/time and end date/time.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * @param from The start date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * @param to The end date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to \" + to + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"event | %b | %s | %s | %s\", isDone, description, from, to);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":37}},{"path":"src/main/java/wbb/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    protected String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * Provides the taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        return description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * Sets task to \"isDone\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * Unsets task from \"isDone\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    public void setUndone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     * Provides [ ] if task is not done, otherwise [X].","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"     * @return [ ] if task is not done, otherwise [X].","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     * For deadline class, which has a method for override, other tasks default to not having due date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     * @return False.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"        return false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":67}},{"path":"src/main/java/wbb/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    TODO(\"todo\", \"Please enter a task name (e.g., todo borrow book).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"            return new Todo(parts[2].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    },","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    DEADLINE(\"deadline\", \"Please enter a valid deadline (e.g., deadline return book /by Sunday).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"            return new Deadline(parts[2].trim(), parts[3].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    },","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    EVENT(\"event\", \"Please enter event details (e.g., event project meeting /from Mon 2pm /to 4pm).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"            return new Event(parts[2].trim(), parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    };","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    private final String type;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    private final String errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * @param type The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    TaskType(String type, String errorMessage) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * Provides the correct format to prevent future errors.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     * @return The correct format.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    public String getFormatExample() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        return errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * Get the taskType from a given String.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     * @param type The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskType (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    public static TaskType fromString(String type) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        TaskType taskType \u003d null;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        for (TaskType t : TaskType.values())","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"            if (t.type.equalsIgnoreCase(type))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"                taskType \u003d t;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        return taskType;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     * Create a task (e.g. Todo, Deadline, or Event)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     * @param parts The parts of the user input command (e.g. [\"deadline\", \"return book\", \"/by\", \"Sunday\"]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     * @return The Task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"    public abstract Task createTask(String[] parts);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":62}},{"path":"src/main/java/wbb/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"     * Todo which has a description only.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"todo | %b | %s\", isDone, description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":29}},{"path":"src/main/java/wbb/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"public class Ui {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    private static final String HORIZONTAL_LINE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * Print horizontal line with tabs, along with the given msg.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param msg The message to be prettyPrinted.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    public void prettyPrint(String msg) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * To display welcome message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(\"\\tHello! I\u0027m WinterBearBot\\n\\tWhat can I do for you?\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * Display message before the end of the program.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    public void displayFarewellMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * Reads user input command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * @return The user input command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * Pretty-prints error message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * @param errorMsg The error message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    public void printErrorMsg(String errorMsg) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(errorMsg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     * To print all items in the taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     * @param list The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    public void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"            Task item \u003d list.get(i);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"            System.out.printf(\"\\t%d. %s%n\", (i+1), item.toString());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     * Pretty-prints message indicating that task addition was successful.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskListSize The size of the taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"    public void printAdditionSuccessfulMsg(int taskListSize, Task taskName) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        String addTaskSuccessfulMsg \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        String totalTaskMsg \u003d \"\\n\\tNow you have \" + taskListSize + \" tasks in the list.\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint( addTaskSuccessfulMsg + taskName + totalTaskMsg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"     * Pretty-prints message indicating that task deletion was successful.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskListSize The size of the taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"    public void printDeleteSuccessfulMsg(int taskListSize, Task taskName) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        String deleteTaskSuccessfulMsg \u003d \"\\tNoted. I\u0027ve removed this task:\\n\\t\\t\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        String totalTaskMsg \u003d \"\\n\\tNow you have \" + taskListSize + \" tasks in the list.\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint( deleteTaskSuccessfulMsg + taskName + totalTaskMsg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"     * Prints all tasks that are due today, if any.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"     * @param tasksDueToday The tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"    public void printTasksDueToday(ArrayList\u003cTask\u003e tasksDueToday) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"        if (tasksDueToday.isEmpty())","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"No tasks are due today.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"Tasks due today:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"            for (Task task : tasksDueToday) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"                System.out.println(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":100}},{"path":"src/main/java/wbb/util/DateTimeUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.util;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"public class DateTimeUtility {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse deadline to either LocalDate or LocalDateTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param deadline The deadline.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @return The deadline, in LocalDate or LocalDateTime, if applicable.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseDateAndOrTime(String deadline) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        // Try date-time parsing and get formatted string","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        String result \u003d tryParseDateTime(deadline, dateTimeFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        if (result !\u003d null)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"            return result;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        // Try date-only parsing and get formatted string","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        result \u003d tryParseDate(deadline, dateFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        if (result !\u003d null)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"            return result;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        // Try time-only parsing and get formatted string","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        result \u003d tryParseTime(deadline, timeFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        if (result !\u003d null)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"            return result;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        return deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse String to LocalDateTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"     * @param dateTimeString The String to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"     * @param formatter The DateTimeFormatter.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"     * @return The parsed LocalDateTime, if possible, otherwise null.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseDateTime(String dateTimeString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"            if (dateTime.isBefore(LocalDateTime.now()))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"            return formatDateTime(dateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"            return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse String to LocalDate.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"     * @param dateString The String to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     * @param formatter The DateTimeFormatter.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     * @return The parsed LocalDate, if possible, otherwise null.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseDate(String dateString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"            LocalDate date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"            if (date.isBefore(LocalDate.now()))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"            return formatDate(date);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"            return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse String to LocalTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"     * @param timeString The String to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"     * @param formatter The DateTimeFormatter.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"     * @return The parsed LocalTime, if possible, otherwise null.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseTime(String timeString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"            LocalTime time \u003d LocalTime.parse(timeString, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.of(LocalDate.now(), time); // Default to today\u0027s date","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"            if (dateTime.isBefore(LocalDateTime.now()))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"            return formatDateTime(dateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"            return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"     * Converts a LocalDateTime to friendly print format, e.g., 15th of January 2025, 7:30pm.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"     * @param dateTime The LocalDateTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"     * @return A friendly print format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"    public String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy, h:mma\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"        return ordinalDay(dateTime.getDayOfMonth()) + \" of \" + dateTime.format(dateTimeFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"     * Converts a LocalDateTime to friendly print format, e.g., 15th of January 2025.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"     * @param date The LocalDate.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"     * @return A friendly print format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        return ordinalDay(date.getDayOfMonth()) + \" of \" + date.format(dateFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"     * Add \"st\", \"nd\", \"rd\", or \"th\" depending on the day, e.g. 1 -\u003e 1st.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"     * @param day The day in number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"     * @return The appended format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"    public String ordinalDay(int day) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"            return day + \"th\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"        return switch (day % 10) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"            case 1 -\u003e day + \"st\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"            case 2 -\u003e day + \"nd\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"            case 3 -\u003e day + \"rd\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"            default -\u003e day + \"th\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"     * Remove \"st\", \"nd\", \"rd\", or \"th\" depending on the day, e.g. 1 -\u003e 1st.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"     * @param day The day in number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"     * @return The un-appended format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"    public String removeOrdinalDay(String day) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        return day.replaceAll(\"(\\\\d+)(st|nd|rd|th)\", \"$1\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"     * Checks if a given deadline task is due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"     * @param by The deadline.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"     * @return True if the deadline is equals today, otherwise false.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDueToday(String by) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"        String normalizedDate \u003d removeOrdinalDay(by);  // e.g. \"23rd\" -\u003e \"23\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"        // List of possible date-time formats","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"        String[] possibleFormats \u003d {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"                \"d \u0027of\u0027 MMMM yyyy, h:mma\", // e.g., 23 of January 2025, 6:00pm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"                \"d \u0027of\u0027 MMMM yyyy\",        // e.g., 23 of January 2025","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"        // Iterate through the formats to parse the date","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"        for (String format : possibleFormats) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format, java.util.Locale.ENGLISH);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"                // If time is included in the format, use LocalDateTime","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"                if (format.contains(\"h:mma\") || format.contains(\"HHmm\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"                    LocalDateTime taskDateTime \u003d LocalDateTime.parse(normalizedDate, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"                    return taskDateTime.toLocalDate().equals(LocalDate.now());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"                } else { // Otherwise, use LocalDate","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"                    LocalDate taskDate \u003d LocalDate.parse(normalizedDate, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"                    return taskDate.equals(LocalDate.now());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"                // Try the next format","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"        // No format works","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WhiteBear82"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":170}},{"path":"src/main/java/wbb/util/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.util;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"public class Validator {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * To retrieve, validate and return the item (task) index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @return The item index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing index, non-positive index, or non-integer index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public int validateAndGetItemIdx(String command) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        String[] commandItemIdx \u003d command.split(\" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        if (commandItemIdx.length \u003c\u003d 1)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing item index.\\n\\tPlease provide a valid index (e.g. mark 2 / unmark 2)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"            itemIdx \u003d Integer.parseInt(commandItemIdx[1]) - 1; // -1 for array indexing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Index must be integers only (e.g. 1, 2, ...)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        if (itemIdx \u003c\u003d -1)  // Potential error input: \"mark 0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Index must be greater than or equal to 1\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        return itemIdx;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"     * To validate if item index supplied is out of the task list range, or verify if the task list is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * @param itemIdx The itemIdx.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if index is out of bounds, or task list is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public void validateItemIdxForTaskList(ArrayList\u003cTask\u003e taskList, int itemIdx, Ui ui) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        if (taskList.isEmpty())","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Task list is empty. Nothing to do.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        if (itemIdx \u003e\u003d taskList.size()) {  // Potential error input: \"mark 100\" when list only has 1 element","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"            ui.printList(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Invalid item index.\\n\\tItem index out of bounds. Please select a valid index in the list above\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and return task name from the user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"     * @param typeOfTask The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (Enum).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskName, if valid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if taskName is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    public String validateAndGetTaskName(String command, String typeOfTask, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d command.substring(typeOfTask.length()).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        if (taskName.isEmpty())","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing task name\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        return taskName;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"     * To validate taskName if it contains \"/by\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if taskName does not contain \"/by\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"    public void validateTaskNameBy(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        if (!taskName.contains(\"/by\")) // Potential error input: \"deadline borrow book\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing \u0027/by\u0027\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"     * To validate taskName and deadline and return both if valid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"     * @return taskNameBy, which contains taskName and deadline, if valid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing deadline or task name.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"    public String[] validateAndGetTaskNameBy(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameBy \u003d taskName.split(\"/by\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameBy.length !\u003d 2)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing deadline \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameBy[0].trim().isEmpty())  // Potential error input: \"deadline /by 2\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException((\"\\tERROR: Missing task name\\n\\t\" + taskType.getFormatExample()));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"        return taskNameBy;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"     * To validate \"/from\" and \"/to\" are present and in correct positions.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if either \"/from\" or \"/to\" is missing, or \"/from\" comes after \"/to\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"    public void validateFromTo(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"        if (!taskName.contains(\"/from\") || !taskName.contains(\"/to\"))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing \u0027/from\u0027 or \u0027/to\u0027\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        if (taskName.indexOf(\"/from\") \u003e taskName.indexOf(\"/to\"))","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: /from must come before /to\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"     * To further validate input and return taskName, start datetime, and end datetime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"     * @return taskName, start datetime, and end datetime, together in a String \"taskNameFromTo\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing start date or taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"    public String[] validateAndGetTaskNameFromTo(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameFromTo \u003d taskName.split(\"/from\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameFromTo.length !\u003d 2)  // Potential error input: \"event borrow /from\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"        else if (taskNameFromTo[0].trim().isEmpty())  // Potential error input: \"event /from /to 2pm\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing task name \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"        else","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        if ((taskNameFromTo[1].trim().split(\"/to\")).length \u003d\u003d 0)  // Potential error input: \"event borrow /from /to\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"        else if (taskNameFromTo[1].trim().split(\"/to\")[0].isEmpty())  // Potential error input: \"event borrow /from /to 2pm\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"        return taskNameFromTo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"     * To further validate input and return start datetime and end datetime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskNameFromTo The taskName, start datetime and end datetime in one String \"taskNameFromTo\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"     * @return start datetime and end datetime in one String \"fromTo\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing end date.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"    public String[] validateAndGetFromTo(String[] taskNameFromTo, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"        String[] fromTo \u003d taskNameFromTo[1].split(\"/to\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        if (fromTo.length !\u003d 2)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing end date \\n\\t\" + taskType.getFormatExample());  // Potential error input: \"event borrow /from 2pm /to\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"        return fromTo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":136}},{"path":"text-ui-test/data/wbb.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"todo | true | read book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"todo | false | buy pajamas","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | buy goggles | Sunday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"event | false | project meeting | Monday 2pm | 4pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | find cats | 30th of January 2025, 6:00PM","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | find dogs | 31st of January 2025","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"mark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"unmark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"mark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"unmark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"delete 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"delete -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"todo read book","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"mark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"unmark 2 ","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"todo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"todo buy pajamas","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"deadline /by","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"deadline /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"deadline buy goggles","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"deadline buy goggles /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"event","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"event /from /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"event /from Monday 2pm /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"event /from /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"event /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"event project meeting","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"mark 100","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"unmark 100","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"mark 3","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"unmark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"delete 3","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"delete 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"deadline find cats /by 30/1/2025 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"deadline find dogs /by 31/1/2025","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"tasks ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":51}},{"path":"text-ui-test/input_bak.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"todo read book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"unmark 2 ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/wbb/*.java","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"java -classpath ../bin WinterBearBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":2,"-":36}}]
