[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"    protected String by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"     * Deadline which has a description and a deadline.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * @param by The deadline.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"deadline | %b | %s | %s\", isDone, description, by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":34}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"    protected String from;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    protected String to;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"     * Event which is has a description, start date/time and end date/time.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * @param from The start date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * @param to The end date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to \" + to + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"event | %b | %s | %s | %s\", isDone, description, from, to);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":36}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"import java.io.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" * Handle loading and saving tasks from and to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class Storage {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    private static final String FILE_PATH \u003d \"./data/wbb.txt\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * Create the directory \"./data\" and/or the file \"./data/wbb.txt\" if it doesn\u0027t exist.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    public static void setupFile() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * To save taskList into FILE_PATH.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"\\tERROR: Could not save tasks.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"     * To load contents of FILE_PATH into taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        setupFile();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"            String line;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"                try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"                    TaskType type \u003d TaskType.fromString(parts[0].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"                    Task task \u003d type.createTask(parts);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"                    task.isDone \u003d Boolean.parseBoolean(parts[1].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task type (only todo/deadline/event): \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task format (missing details): \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        return taskList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":68}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"    protected String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * Provides the taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        return description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * Sets task to \"isDone\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * Unsets task from \"isDone\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    public void setUndone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     * Provides [ ] if task is not done, otherwise [X].","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     * @return [ ] if task is not done, otherwise [X].","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":54}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"    TODO(\"todo\", \"Please enter a task name (e.g., todo borrow book).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"            return new Todo(parts[2].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    },","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    DEADLINE(\"deadline\", \"Please enter a valid deadline (e.g., deadline return book /by Sunday).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"            return new Deadline(parts[2].trim(), parts[3].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    },","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    EVENT(\"event\", \"Please enter event details (e.g., event project meeting /from Mon 2pm /to 4pm).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"            return new Event(parts[2].trim(), parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    };","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    private final String type;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    private final String errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * @param type The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    TaskType(String type, String errorMessage) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * Provides the correct format to prevent future errors.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * @return The correct format.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public String getFormatExample() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        return errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * Get the taskType from a given String.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * @param type The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskType (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    public static TaskType fromString(String type) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        TaskType taskType \u003d null;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        for (TaskType t : TaskType.values())","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"            if (t.type.equalsIgnoreCase(type))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"                taskType \u003d t;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        return taskType;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    public abstract Task createTask(String[] parts);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":56}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"     * Todo which has a description only.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"todo | %b | %s\", isDone, description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":28}},{"path":"src/main/java/WBBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":" * WinterBearBot Exception Class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"public class WBBException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"     * To construct the desired error message","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * @param message The error message","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    public WBBException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":12}},{"path":"src/main/java/WinterBearBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"public class WinterBearBot {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"    /*","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"     * Core methods:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"     * 1. displayWelcomeMessage - the first message printed when the program starts, for Level-0 task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * 2. manageTaskList - to manage the taskList for Levels 1-4 tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    /*","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * Helper methods:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * 1. prettyPrint - to prettyPrint any given message.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * 2. displayFarewellMessage - to print the final message before the program ends.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * 3. printList - to print the tasks in the taskList.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * 4. changeItemStatus - either set a task to \"Done\" or \"Undone\".","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * 5. addTask - to add an item into taskList.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * 6. deleteTask - to delete an item from taskList.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * Other helper methods, e.g. 4a, 5b, 5b-1, are specific to 4, 5, and 5b respectively, mostly used for validation.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    /*","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * Legend: C1 \u003d Core Method 1, H1 \u003d Helper Method 1.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * Flow:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * The main() method calls:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * - displayWelcomeMessage() [C1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e prettyPrint() [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * - manageTaskList() [C2]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e Storage.loadTasks()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e printList() [H3]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e changeItemStatus() [H4]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e validateAndGetItemIdx() [H4a]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e validateItemIdxForTaskList() [H4b]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     *          ---\u003e prettyPrint() [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e prettyPrint() [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e Storage.saveTasks()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e addTask() [H5]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e validateAndGetTaskName() [H5a]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e newDeadlineTask() [H5b]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     *          ---\u003e validateTaskNameBy() [H5b-1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     *          ---\u003e validateAndGetTaskNameBy() [H5b-2]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e newEventTask() [H5c]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     *          ---\u003e validateFromTo() [H5c-1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     *          ---\u003e validateAndGetTaskNameFromTo() [H5c-2]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     *          ---\u003e validateAndGetFromTo() [H5c-3]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e prettyPrint [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e Storage.saveTasks()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e deleteTask() [H6]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e validateAndGetItemIdx() [H4a]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e validateItemIdxForTaskList() [H4b]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"     *          --\u003e prettyPrint() [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e prettyPrint() [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"     *      --\u003e Storage.saveTasks()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     * - displayFarewellMessage() [H2]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     *   -\u003e prettyPrint() [H1]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"    private static final String HORIZONTAL_LINE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 1 to print horizontal line with tabs, along with the given msg.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     * @param msg The message to be prettyPrinted.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"    public static void prettyPrint(String msg) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 2 to display message before the end of the program.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"    public static void displayFarewellMessage() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 3 to print all items in the taskList.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"     * @param list The taskList.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"            Task item \u003d list.get(i);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"            System.out.printf(\"\\t%d. %s%n\", (i+1), item.toString());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 4 to change item status to either \"Done\" or \"Undone\".","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    public static void changeItemStatus(ArrayList\u003cTask\u003e taskList, String command) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"        // Validate itemIdx and taskList before continuing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx \u003d validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        validateItemIdxForTaskList(taskList, itemIdx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"        // Validation passed, continue running main program logic (i.e. to change the item status)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"        Task taskName \u003d taskList.get(itemIdx);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"        if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"            taskName.setDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"            prettyPrint(\"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\" + taskName);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"        else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"            taskName.setUndone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"            prettyPrint(\"\\tOK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + taskName);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"        Storage.saveTasks(taskList);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 4a to retrieve, validate and return the item index.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"     * @return The item index.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing index, non-positive index, or non-integer index.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"    private static int validateAndGetItemIdx(String command) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"        String[] commandItemIdx \u003d command.split(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"        if (commandItemIdx.length \u003c\u003d 1)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing item index.\\n\\tPlease provide a valid index (e.g. mark 2 / unmark 2)\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"            itemIdx \u003d Integer.parseInt(commandItemIdx[1]) - 1; // -1 for array indexing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Index must be integers only (e.g. 1, 2, ...)\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"        if (itemIdx \u003c\u003d -1)  // Potential error input: \"mark 0\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Index must be greater than or equal to 1\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"        return itemIdx;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 4b to validate if item index supplied is out of the task list range, or verify if the task list is empty.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"     * @param itemIdx The itemIdx.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if index is out of bounds, or task list is empty.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"    private static void validateItemIdxForTaskList(ArrayList\u003cTask\u003e taskList, int itemIdx) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"        if (taskList.isEmpty())","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Task list is empty. Nothing to do.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"        if (itemIdx \u003e\u003d taskList.size()) {  // Potential error input: \"mark 100\" when list only has 1 element","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"            printList(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Invalid item index.\\n\\tItem index out of bounds. Please select a valid index in the list above\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5 to add task in list.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"     * Add item to list - Either \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"todo\": todo \u003ctaskName\u003e","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"deadline\": deadline \u003ctaskName\u003e /by \u003cwhen\u003e","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"event\": event \u003ctaskName\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"     * @param list The taskList.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WhiteBear82"},"content":"    public static void addTask(ArrayList\u003cTask\u003e list, String command) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WhiteBear82"},"content":"        String typeOfTask \u003d command.split(\" \")[0];  // \"todo\", \"deadline\", \"event\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WhiteBear82"},"content":"        TaskType taskType \u003d TaskType.fromString(typeOfTask);  // enum of typeOfTask","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d validateAndGetTaskName(command, typeOfTask, taskType);  // name of task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WhiteBear82"},"content":"        Task task;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"WhiteBear82"},"content":"        if (typeOfTask.equalsIgnoreCase(\"todo\"))","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"WhiteBear82"},"content":"            task \u003d new Todo(taskName);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"WhiteBear82"},"content":"        else if (typeOfTask.equalsIgnoreCase(\"deadline\"))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"WhiteBear82"},"content":"            task \u003d newDeadlineTask(taskName, taskType);  // Validate input and create new deadline task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"WhiteBear82"},"content":"        else","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"WhiteBear82"},"content":"            task \u003d newEventTask(taskName, taskType);  // Validate input and create new event task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"WhiteBear82"},"content":"        // After validation success, continue with main program logic (i.e. add new Task to taskList)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"WhiteBear82"},"content":"        list.add(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"WhiteBear82"},"content":"        Storage.saveTasks(list);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"WhiteBear82"},"content":"        String addTaskSuccessfulMsg \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"WhiteBear82"},"content":"        String totalTaskMsg \u003d \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint( addTaskSuccessfulMsg + task + totalTaskMsg);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5a to validate input and return task name from the user command.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"WhiteBear82"},"content":"     * @param typeOfTask The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (Enum).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskName, if valid.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if taskName is empty.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"WhiteBear82"},"content":"    private static String validateAndGetTaskName(String command, String typeOfTask, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d command.substring(typeOfTask.length()).trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"WhiteBear82"},"content":"        if (taskName.isEmpty())","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing task name\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"WhiteBear82"},"content":"        return taskName;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5b to validate input and return new deadline task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"WhiteBear82"},"content":"     * @return A new deadline task, if valid.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing \"/by\", deadline or taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"WhiteBear82"},"content":"    private static Task newDeadlineTask(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"WhiteBear82"},"content":"        validateTaskNameBy(taskName, taskType);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameBy \u003d validateAndGetTaskNameBy(taskName, taskType);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"WhiteBear82"},"content":"        return new Deadline(taskNameBy[0].trim(), taskNameBy[1].trim());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5b-1 to validate taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if taskName does not contain \"/by\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"WhiteBear82"},"content":"    private static void validateTaskNameBy(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"WhiteBear82"},"content":"        if (!taskName.contains(\"/by\")) // Potential error input: \"deadline borrow book\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing \u0027/by\u0027\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5b-2 to validate taskName and deadline and return both if valid.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"WhiteBear82"},"content":"     * @return taskNameBy, which contains taskName and deadline, if valid.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing deadline or task name.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"WhiteBear82"},"content":"    private static String[] validateAndGetTaskNameBy(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameBy \u003d taskName.split(\"/by\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameBy.length !\u003d 2)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing deadline \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameBy[0].trim().isEmpty())  // Potential error input: \"deadline /by 2\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException((\"\\tERROR: Missing task name\\n\\t\" + taskType.getFormatExample()));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"WhiteBear82"},"content":"        return taskNameBy;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5c to validate input and return new event task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"WhiteBear82"},"content":"     * @return A new event task, if valid.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing \"/from\" or \"/to\", \"/from\" comes after \"/to\", start date, end date, or taskName","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"WhiteBear82"},"content":"    private static Task newEventTask(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"WhiteBear82"},"content":"        validateFromTo(taskName, taskType);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameFromTo \u003d validateAndGetTaskNameFromTo(taskName, taskType);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"WhiteBear82"},"content":"        String[] fromTo \u003d validateAndGetFromTo(taskNameFromTo, taskType);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"WhiteBear82"},"content":"        return new Event(taskNameFromTo[0].trim(), fromTo[0].trim(), fromTo[1].trim());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5c-1 to validate \"/from\" and \"/to\" are present and in correct positions.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if either \"/from\" or \"/to\" is missing, or \"/from\" comes after \"/to\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"WhiteBear82"},"content":"    private static void validateFromTo(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"WhiteBear82"},"content":"        if (!taskName.contains(\"/from\") || !taskName.contains(\"/to\"))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing \u0027/from\u0027 or \u0027/to\u0027\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"WhiteBear82"},"content":"        if (taskName.indexOf(\"/from\") \u003e taskName.indexOf(\"/to\"))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: /from must come before /to\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5c-2 to further validate input and return taskName, start datetime, and end datetime.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"WhiteBear82"},"content":"     * @return taskName, start datetime, and end datetime, together in a String \"taskNameFromTo\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing start date or taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"WhiteBear82"},"content":"    private static String[] validateAndGetTaskNameFromTo(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameFromTo \u003d taskName.split(\"/from\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameFromTo.length !\u003d 2)  // Potential error input: \"event borrow /from\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"WhiteBear82"},"content":"        else if (taskNameFromTo[0].trim().isEmpty())  // Potential error input: \"event /from /to 2pm\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing task name \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"WhiteBear82"},"content":"        else","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"WhiteBear82"},"content":"            if ((taskNameFromTo[1].trim().split(\"/to\")).length \u003d\u003d 0)  // Potential error input: \"event borrow /from /to\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"WhiteBear82"},"content":"                throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"WhiteBear82"},"content":"            else if (taskNameFromTo[1].trim().split(\"/to\")[0].isEmpty())  // Potential error input: \"event borrow /from /to 2pm\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"WhiteBear82"},"content":"                throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"WhiteBear82"},"content":"        return taskNameFromTo;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 5c-3 to further validate input and return start datetime and end datetime.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskNameFromTo The taskName, start datetime and end datetime in one String \"taskNameFromTo\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"WhiteBear82"},"content":"     * @return start datetime and end datetime in one String \"fromTo\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing end date.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"WhiteBear82"},"content":"    private static String[] validateAndGetFromTo(String[] taskNameFromTo, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"WhiteBear82"},"content":"        String[] fromTo \u003d taskNameFromTo[1].split(\"/to\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"WhiteBear82"},"content":"        if (fromTo.length !\u003d 2)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing end date \\n\\t\" + taskType.getFormatExample());  // Potential error input: \"event borrow /from 2pm /to\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"WhiteBear82"},"content":"        return fromTo;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"WhiteBear82"},"content":"     * Helper method 6 to delete tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command (e.g. delete 3)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if itemIdx is invalid (non-positive, non-integer, out of bounds) or taskList is empty.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"WhiteBear82"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e taskList, String command) throws WBBException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"WhiteBear82"},"content":"        // Validate itemIdx and taskList before continuing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx \u003d validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"WhiteBear82"},"content":"        validateItemIdxForTaskList(taskList, itemIdx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"WhiteBear82"},"content":"        // Validation passed, continue running main program logic (i.e. to delete the item)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"WhiteBear82"},"content":"        Task taskName \u003d taskList.get(itemIdx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"WhiteBear82"},"content":"        taskList.remove(itemIdx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"WhiteBear82"},"content":"        String deleteTaskSuccessfulMsg \u003d \"\\tNoted. I\u0027ve removed this task:\\n\\t\\t\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"WhiteBear82"},"content":"        String totalTaskMsg \u003d \"\\n\\tNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint( deleteTaskSuccessfulMsg + taskName + totalTaskMsg);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"WhiteBear82"},"content":"        Storage.saveTasks(taskList);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"WhiteBear82"},"content":"     * Core method 1: to display welcome message for Level-0 task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"WhiteBear82"},"content":"     * Level-0: Displays welcome message.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"WhiteBear82"},"content":"    public static void displayWelcomeMessage() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(\"\\tHello! I\u0027m WinterBearBot\\n\\tWhat can I do for you?\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"WhiteBear82"},"content":"     * Core method 2: to manage the taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"WhiteBear82"},"content":"     * Level-1: Echo user commands (inputs).","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"WhiteBear82"},"content":"     * Level-2: Add inputs to list.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"WhiteBear82"},"content":"     * Level-3: Mark as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"WhiteBear82"},"content":"     * Level-4: ToDos, Events, Deadlines.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"WhiteBear82"},"content":"     * Level-5: Handle errors.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"WhiteBear82"},"content":"     * Level-6: Delete.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"WhiteBear82"},"content":"     * Level-7: Save.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"WhiteBear82"},"content":"    public static void manageTaskList() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"WhiteBear82"},"content":"        // Initialise variables","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"WhiteBear82"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d Storage.loadTasks();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"WhiteBear82"},"content":"        String command;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"WhiteBear82"},"content":"        String commandPrefix;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"WhiteBear82"},"content":"        program:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"WhiteBear82"},"content":"        while (true) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"WhiteBear82"},"content":"            // Get user command","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"WhiteBear82"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"WhiteBear82"},"content":"            commandPrefix \u003d command.split(\" \")[0];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"WhiteBear82"},"content":"            // Interpret Commands","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"WhiteBear82"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"WhiteBear82"},"content":"                switch (commandPrefix) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"WhiteBear82"},"content":"                    case \"list\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"WhiteBear82"},"content":"                        printList(taskList);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"WhiteBear82"},"content":"                        break;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"WhiteBear82"},"content":"                    case \"bye\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"WhiteBear82"},"content":"                        break program;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"WhiteBear82"},"content":"                    case \"mark\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"WhiteBear82"},"content":"                    case \"unmark\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"WhiteBear82"},"content":"                        changeItemStatus(taskList, command);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"WhiteBear82"},"content":"                        break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"WhiteBear82"},"content":"                    case \"todo\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"WhiteBear82"},"content":"                    case \"deadline\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"WhiteBear82"},"content":"                    case \"event\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"WhiteBear82"},"content":"                        addTask(taskList, command);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"WhiteBear82"},"content":"                        break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"WhiteBear82"},"content":"                    case \"delete\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"WhiteBear82"},"content":"                        deleteTask(taskList, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"WhiteBear82"},"content":"                        break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"WhiteBear82"},"content":"                    default:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"WhiteBear82"},"content":"                        throw new WBBException(\"\\tERROR: Invalid command (valid commands are: list, todo, deadline, event, mark, unmark, delete, bye)\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"WhiteBear82"},"content":"            } catch (WBBException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"WhiteBear82"},"content":"                prettyPrint(e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"WhiteBear82"},"content":"     * The main method","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"WhiteBear82"},"content":"     * @param args The arguments for the main method","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"WhiteBear82"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"WhiteBear82"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"WhiteBear82"},"content":"        manageTaskList();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"WhiteBear82"},"content":"        displayFarewellMessage();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":397}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"mark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"unmark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"mark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"unmark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"delete 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"delete -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"todo read book","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"mark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"unmark 2 ","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"todo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"todo buy pajamas","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"deadline /by","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"deadline /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"deadline buy goggles","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"deadline buy goggles /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"event","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"event /from /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"event /from Monday 2pm /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"event /from /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"event /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"event project meeting","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"mark 100","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"unmark 100","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"mark 3","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"unmark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"delete 3","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"delete 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":47}},{"path":"text-ui-test/input_bak.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"todo read book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"unmark 2 ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"java -classpath ../bin WinterBearBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":1,"-":37}}]
